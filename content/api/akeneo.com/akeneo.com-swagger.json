{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Akeneo PIM REST API",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://demo.akeneo.com/"
  } ],
  "paths" : {
    "/api/oauth/v1/token" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Get authentication token",
        "description" : "This endpoint allows you to get an authentication token. No need to be authenticated to use this endpoint.",
        "operationId" : "post_token",
        "parameters" : [ {
          "name" : "Content-type",
          "in" : "header",
          "description" : "Equal to 'application/json' or 'application/x-www-form-urlencoded', no other value allowed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Equal to 'Basic xx', where 'xx' is the base 64 encoding of the client id and secret. Find out how to generate them in the <a href=\"/documentation/authentication.html#client-idsecret-generation\">Client ID/secret generation</a> section.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "grant_type", "password", "username" ],
                "type" : "object",
                "properties" : {
                  "grant_type" : {
                    "type" : "string",
                    "description" : "Always equal to \"password\""
                  },
                  "password" : {
                    "type" : "string",
                    "description" : "Your PIM password"
                  },
                  "username" : {
                    "type" : "string",
                    "description" : "Your PIM username"
                  }
                },
                "example" : {
                  "grant_type" : "password",
                  "password" : "admin",
                  "username" : "admin"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Return an authentication token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "access_token" : {
                      "type" : "string",
                      "description" : "Authentication token that should be given in every authenticated request to the API"
                    },
                    "expires_in" : {
                      "type" : "integer",
                      "description" : "Validity of the token given in seconds, 3600s = 1h by default"
                    },
                    "refresh_token" : {
                      "type" : "string",
                      "description" : "Use this token when your access token has expired. See <a href=\"/documentation/authentication.html#refresh-an-expired-token\">Refresh an expired token</a> section for more details."
                    },
                    "scope" : {
                      "type" : "string",
                      "description" : "Unused, always equal to \"null\""
                    },
                    "token_type" : {
                      "type" : "string",
                      "description" : "Token type, always equal to \"bearer\""
                    }
                  }
                }
              },
              "access_token" : {
                "example" : "ZTZmYjU4ZmQxZWNmMzk1M2NlYzA5NmFhNmIzVjExMzE4NmJmODBkZGIyYTliYmQyNjk2ZDQwZThmNjdiZDQzOQ"
              },
              "expires_in" : {
                "example" : 3600
              },
              "refresh_token" : {
                "example" : "M2FlODI0OTE3ODMyNjViMzRiOWE5ODMyNWViMThkNDU5YzJjNjFiZjNkZWFjMzIyYjc4YTgzZWY1MjE5ZTY5Mw"
              },
              "scope" : null,
              "token_type" : {
                "example" : "bearer"
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1" : {
      "get" : {
        "tags" : [ "Overview" ],
        "summary" : "Get list of all endpoints",
        "description" : "This endpoint allows you to get the list of all the available endpoints. No need to be authenticated to use this endpoint.",
        "operationId" : "get_endpoints",
        "responses" : {
          "200" : {
            "description" : "Return the list of all available endpoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "authentication" : {
                      "type" : "object",
                      "description" : "Endpoint to get the authentication token"
                    },
                    "host" : {
                      "type" : "string",
                      "description" : "Host name"
                    },
                    "routes" : {
                      "type" : "object",
                      "description" : "All the availables endpoints"
                    }
                  }
                }
              },
              "authentication" : {
                "example" : {
                  "fos_oauth_server_token" : {
                    "methods" : [ "POST" ],
                    "route" : "/api/oauth/v1/token"
                  }
                }
              },
              "host" : {
                "example" : "https://demo.akeneo.com"
              },
              "routes" : {
                "example" : {
                  "pim_api_category_create" : {
                    "methods" : [ "POST" ],
                    "route" : "/api/rest/v1/categories"
                  },
                  "pim_api_category_get" : {
                    "methods" : [ "GET" ],
                    "route" : "/api/rest/v1/categories/{code}"
                  },
                  "pim_api_category_list" : {
                    "methods" : [ "GET" ],
                    "route" : "/api/rest/v1/categories"
                  },
                  "pim_api_category_partial_update" : {
                    "methods" : [ "PATCH" ],
                    "route" : "/api/rest/v1/categories/{code}"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-categories" : {
      "get" : {
        "tags" : [ "PAM asset category" ],
        "summary" : "Get list of PAM asset categories",
        "description" : "This endpoint allows you to get a list of PAM asset categories. PAM asset categories are paginated and sorted by `root/left`.",
        "operationId" : "get_asset_categories",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns PAM asset categories paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "PAM Asset Categories",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "PAM asset category code"
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "PAM asset category label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "PAM asset category labels for each locale"
                                  },
                                  "parent" : {
                                    "type" : "string",
                                    "description" : "PAM ssset category code of the parent's asset category",
                                    "default" : "null"
                                  }
                                },
                                "example" : {
                                  "code" : "front_views",
                                  "labels" : {
                                    "en_US" : "Front views",
                                    "fr_FR" : "Vues de face"
                                  },
                                  "parent" : "pictures"
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-categories/pictures"
                      }
                    },
                    "code" : "pictures",
                    "labels" : {
                      "de_DE" : "Bilder",
                      "en_US" : "Pictures",
                      "fr_FR" : "Images"
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-categories/front_views"
                      }
                    },
                    "code" : "front_views",
                    "labels" : {
                      "de_DE" : "Vorderansichten",
                      "en_US" : "Front views",
                      "fr_FR" : "Vues de face"
                    },
                    "parent" : "pictures"
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-categories/side_views"
                      }
                    },
                    "code" : "side_views",
                    "labels" : {
                      "de_DE" : "Profilansichten",
                      "en_US" : "Side views",
                      "fr_FR" : "Vues de profil"
                    },
                    "parent" : "pictures"
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-categories?page=1&limit=3"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-categories?page=3&limit=3"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-categories?page=1&limit=3"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-categories?page=2&limit=3"
                  }
                }
              },
              "current_page" : {
                "example" : 2
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PAM asset category" ],
        "summary" : "Create a new PAM asset category",
        "description" : "This endpoint allows you to create a new PAM asset category.",
        "operationId" : "post_asset_categories",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "PAM asset category code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "PAM asset category label for the locale `localeCode`"
                      }
                    },
                    "description" : "PAM asset category labels for each locale"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "PAM ssset category code of the parent's asset category",
                    "default" : "null"
                  }
                },
                "example" : {
                  "code" : "front_views",
                  "labels" : {
                    "en_US" : "Front views",
                    "fr_FR" : "Vues de face"
                  },
                  "parent" : "pictures"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PAM asset category" ],
        "summary" : "Update/create several PAM asset categories",
        "description" : "This endpoint allows you to update several PAM asset categories at once.",
        "operationId" : "patch_asset_categories",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "PAM asset category code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "PAM asset category label for the locale `localeCode`"
                      }
                    },
                    "description" : "PAM asset category labels for each locale"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "PAM ssset category code of the parent's asset category",
                    "default" : "null"
                  }
                },
                "example" : {
                  "code" : "front_views",
                  "labels" : {
                    "en_US" : "Front views",
                    "fr_FR" : "Vues de face"
                  },
                  "parent" : "pictures"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"spring_collection\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"front_views\",\"status_code\":422,\"message\":\"Asset category \"pitures\" does not exist.\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"other_views\",\"status_code\":204}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-categories/{code}" : {
      "get" : {
        "tags" : [ "PAM asset category" ],
        "summary" : "Get a PAM asset category",
        "description" : "This endpoint allows you to get the information about a given PAM asset category.",
        "operationId" : "get_asset_categories__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "PAM asset category code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "PAM asset category label for the locale `localeCode`"
                        }
                      },
                      "description" : "PAM asset category labels for each locale"
                    },
                    "parent" : {
                      "type" : "string",
                      "description" : "PAM ssset category code of the parent's asset category",
                      "default" : "null"
                    }
                  },
                  "example" : {
                    "code" : "front_views",
                    "labels" : {
                      "en_US" : "Front views",
                      "fr_FR" : "Vues de face"
                    },
                    "parent" : "pictures"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PAM asset category" ],
        "summary" : "Update/create a PAM asset category",
        "description" : "This endpoint allows you to update a given PAM asset category. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no category exists for the given code, it creates it.",
        "operationId" : "patch_asset_categories__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "PAM asset category code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "PAM asset category label for the locale `localeCode`"
                      }
                    },
                    "description" : "PAM asset category labels for each locale"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "PAM ssset category code of the parent's asset category",
                    "default" : "null"
                  }
                },
                "example" : {
                  "code" : "front_views",
                  "labels" : {
                    "en_US" : "Front views",
                    "fr_FR" : "Vues de face"
                  },
                  "parent" : "pictures"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-families" : {
      "get" : {
        "tags" : [ "Asset family" ],
        "summary" : "Get list of asset families",
        "description" : "This endpoint allows you to get a list of asset families. Asset families are paginated.",
        "operationId" : "get_asset_families",
        "parameters" : [ {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return asset families paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Asset families",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "attribute_as_main_media" : {
                                    "type" : "string",
                                    "description" : "Attribute code that is used as the main media of the asset family.",
                                    "default" : "First media file or media link attribute that was created"
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Asset family code"
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Asset family label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Asset family labels for each locale"
                                  },
                                  "naming_convention" : {
                                    "type" : "object",
                                    "properties" : {
                                      "abort_asset_creation_on_error" : {
                                        "type" : "boolean",
                                        "description" : "Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>."
                                      },
                                      "pattern" : {
                                        "type" : "string",
                                        "description" : "The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>."
                                      },
                                      "source" : {
                                        "type" : "object",
                                        "description" : "The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>."
                                      }
                                    },
                                    "description" : "The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>."
                                  },
                                  "product_link_rules" : {
                                    "type" : "array",
                                    "description" : "The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "assign_assets_to" : {
                                          "type" : "array",
                                          "description" : "The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.",
                                          "items" : {
                                            "required" : [ "attribute", "mode" ],
                                            "type" : "object",
                                            "properties" : {
                                              "attribute" : {
                                                "type" : "string"
                                              },
                                              "channel" : {
                                                "type" : "string"
                                              },
                                              "locale" : {
                                                "type" : "string"
                                              },
                                              "mode" : {
                                                "type" : "string"
                                              }
                                            }
                                          }
                                        },
                                        "product_selections" : {
                                          "type" : "array",
                                          "description" : "The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.",
                                          "items" : {
                                            "required" : [ "field", "operator", "value" ],
                                            "type" : "object",
                                            "properties" : {
                                              "channel" : {
                                                "type" : "string"
                                              },
                                              "field" : {
                                                "type" : "string"
                                              },
                                              "locale" : {
                                                "type" : "string"
                                              },
                                              "operator" : {
                                                "type" : "string"
                                              },
                                              "value" : {
                                                "type" : "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "transformations" : {
                                    "type" : "array",
                                    "description" : "The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.",
                                    "items" : {
                                      "required" : [ "label", "operations", "source", "target" ],
                                      "type" : "object",
                                      "properties" : {
                                        "filename_prefix" : {
                                          "type" : "string",
                                          "description" : "The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                                        },
                                        "filename_suffix" : {
                                          "type" : "string",
                                          "description" : "The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                                        },
                                        "label" : {
                                          "type" : "string",
                                          "description" : "The name of the transformation"
                                        },
                                        "operations" : {
                                          "type" : "object",
                                          "properties" : {
                                            "parameters" : {
                                              "type" : "object",
                                              "properties" : {
                                                "colorspace" : {
                                                  "type" : "string"
                                                },
                                                "height" : {
                                                  "type" : "integer"
                                                },
                                                "quality" : {
                                                  "type" : "integer"
                                                },
                                                "ratio" : {
                                                  "type" : "integer"
                                                },
                                                "resolution-unit" : {
                                                  "type" : "string"
                                                },
                                                "resolution-x" : {
                                                  "type" : "integer"
                                                },
                                                "resolution-y" : {
                                                  "type" : "integer"
                                                },
                                                "width" : {
                                                  "type" : "integer"
                                                }
                                              }
                                            },
                                            "type" : {
                                              "type" : "string"
                                            }
                                          },
                                          "description" : "The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>."
                                        },
                                        "source" : {
                                          "required" : [ "attribute", "channel", "locale" ],
                                          "type" : "object",
                                          "properties" : {
                                            "attribute" : {
                                              "type" : "string"
                                            },
                                            "channel" : {
                                              "type" : "string"
                                            },
                                            "locale" : {
                                              "type" : "string"
                                            }
                                          },
                                          "description" : "The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>."
                                        },
                                        "target" : {
                                          "required" : [ "attribute", "channel", "locale" ],
                                          "type" : "object",
                                          "properties" : {
                                            "attribute" : {
                                              "type" : "string"
                                            },
                                            "channel" : {
                                              "type" : "string"
                                            },
                                            "locale" : {
                                              "type" : "string"
                                            }
                                          },
                                          "description" : "The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>."
                                        }
                                      }
                                    }
                                  }
                                },
                                "example" : {
                                  "attribute_as_main_media" : "main_image",
                                  "code" : "model_pictures",
                                  "labels" : {
                                    "en_US" : "Model pictures",
                                    "fr_FR" : "Photographies en pied"
                                  },
                                  "naming_convention" : {
                                    "abort_asset_creation_on_error" : true,
                                    "pattern" : "/(?P<product_ref>.*)-.*/",
                                    "source" : {
                                      "property" : "code"
                                    }
                                  },
                                  "product_link_rules" : [ {
                                    "assign_assets_to" : [ {
                                      "attribute" : "model_pictures",
                                      "mode" : "replace"
                                    } ],
                                    "product_selections" : [ {
                                      "field" : "sku",
                                      "operator" : "EQUALS",
                                      "value" : "{{product_ref}}"
                                    } ]
                                  } ],
                                  "transformations" : [ {
                                    "filename_suffix" : "_thumbnailBW",
                                    "label" : "Thumbnail plus black and white transformation",
                                    "operations" : [ {
                                      "parameters" : {
                                        "height" : 150,
                                        "width" : 150
                                      },
                                      "type" : "thumbnail"
                                    }, {
                                      "parameters" : {
                                        "colorspace" : "grey"
                                      },
                                      "type" : "colorspace"
                                    } ],
                                    "source" : {
                                      "attribute" : "main_image"
                                    },
                                    "target" : {
                                      "attribute" : "thumbnail"
                                    }
                                  } ]
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "_items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-families/packshots"
                      }
                    },
                    "code" : "packshots",
                    "labels" : {
                      "en_US" : "Packshots",
                      "fr_FR" : "Plans produit"
                    },
                    "product_link_rules" : [ {
                      "assign_assets_to" : [ {
                        "attribute" : "{{my_product_attribute}}",
                        "mode" : "add"
                      } ],
                      "product_selections" : [ {
                        "field" : "sku",
                        "operator" : "=",
                        "value" : "{{product_ref}}"
                      } ]
                    } ],
                    "transformations" : [ {
                      "filename_suffix" : "_thumbnailBW",
                      "label" : "My transformation",
                      "operations" : [ {
                        "parameters" : {
                          "height" : 150,
                          "width" : 150
                        },
                        "type" : "thumbnail"
                      }, {
                        "parameters" : {
                          "colorspace" : "grey"
                        },
                        "type" : "colorspace"
                      } ],
                      "source" : {
                        "attribute" : "main_image"
                      },
                      "target" : {
                        "attribute" : "thumbnail"
                      }
                    } ],
                    "“naming_convention”" : {
                      "abort_asset_creation_on_error" : true,
                      "pattern" : "/(?P<product_ref>.*)\\.jpg/",
                      "source" : {
                        "property" : "code"
                      }
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-families/videos"
                      }
                    },
                    "code" : "videos",
                    "labels" : {
                      "en_US" : "Videos",
                      "fr_FR" : "Vidéos"
                    },
                    "product_link_rules" : [ {
                      "assign_assets_to" : [ {
                        "attribute" : "presentation_video",
                        "locale" : "{{locale}}",
                        "mode" : "replace"
                      } ],
                      "product_selections" : [ {
                        "field" : "categories",
                        "operator" : "IN",
                        "value" : [ "{{category}}" ]
                      } ]
                    } ]
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-families/user_guides"
                      }
                    },
                    "code" : "user_guides",
                    "labels" : {
                      "en_US" : "User guides",
                      "fr_FR" : "Guides utilisateur"
                    },
                    "product_link_rules" : [ {
                      "assign_assets_to" : [ {
                        "attribute" : "user_instructions",
                        "locale" : "{{locale}}",
                        "mode" : "replace"
                      } ],
                      "product_selections" : [ {
                        "field" : "sku",
                        "operator" : "=",
                        "value" : "{{product_ref}}"
                      } ]
                    } ]
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-families"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-families?search_after=2x055w%3D%3D"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-families"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-families/{asset_family_code}/assets" : {
      "get" : {
        "tags" : [ "Asset" ],
        "summary" : "Get the list of the assets of a given asset family",
        "description" : "This endpoint allows you to get a list of assets of a given asset family. Assets are paginated. This endpoint is case sensitive on the asset family code.",
        "operationId" : "get_assets",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter assets, for more details see the <a href=\"/documentation/filter.html#filter-assets\">Asset filters</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel",
          "in" : "query",
          "description" : "Filter asset values to return scopable asset attributes for the given channel as well as the non localizable/non scopable asset attributes, for more details see the <a href=\"/documentation/filter.html#asset-values-by-channel\">Filter asset values by channel</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locales",
          "in" : "query",
          "description" : "Filter asset values to return localizable attributes for the given locales as well as the non localizable/non scopable asset attributes, for more details see the <a href=\"/documentation/filter.html#asset-values-by-locale\">Filter asset values by locale</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the assets of the given asset family paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Asset",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "_items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Code of the asset"
                                  },
                                  "created" : {
                                    "type" : "string",
                                    "description" : "Date of creation",
                                    "format" : "dateTime"
                                  },
                                  "updated" : {
                                    "type" : "string",
                                    "description" : "Date of the last update",
                                    "format" : "dateTime"
                                  },
                                  "values" : {
                                    "type" : "object",
                                    "properties" : {
                                      "attributeCode" : {
                                        "type" : "array",
                                        "items" : {
                                          "type" : "object",
                                          "properties" : {
                                            "channel" : {
                                              "type" : "string",
                                              "description" : "Channel code of the asset attribute value"
                                            },
                                            "data" : {
                                              "type" : "object",
                                              "description" : "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                                            },
                                            "locale" : {
                                              "type" : "string",
                                              "description" : "Locale code of the asset attribute value"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details."
                                  }
                                },
                                "example" : {
                                  "code" : "sku_54628_picture1",
                                  "created" : "2021-05-31T09:23:34+00:00",
                                  "updated" : "2021-05-31T09:23:34+00:00",
                                  "values" : {
                                    "end_of_use_date" : [ {
                                      "data" : "02/03/2021"
                                    } ],
                                    "main_colors" : [ {
                                      "data" : [ "red", "purple" ]
                                    } ],
                                    "media_preview" : [ {
                                      "data" : "sku_54628_picture1.jpg"
                                    } ],
                                    "model_wears_size" : [ {
                                      "data" : "s"
                                    } ],
                                    "photographer" : [ {
                                      "data" : "ben_levy"
                                    } ]
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "_items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets/allie_jean_model_picture"
                      }
                    },
                    "code" : "allie_jean_model_picture",
                    "created" : "2021-05-31T09:23:34+00:00",
                    "updated" : "2021-05-31T09:23:34+00:00",
                    "values" : {
                      "media_link" : [ {
                        "data" : "allie_jean_model_picture.png"
                      } ],
                      "model_is_wearing_size" : [ {
                        "data" : "size_27"
                      } ],
                      "warning_mention" : [ {
                        "data" : "Photo not retouched",
                        "locale" : "en_US"
                      }, {
                        "data" : "Photo non retouchée",
                        "locale" : "fr_FR"
                      } ]
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets/amy_socks_model_picture"
                      }
                    },
                    "code" : "amy_socks_model_picture",
                    "created" : "2021-05-31T09:23:34+00:00",
                    "updated" : "2021-05-31T09:23:34+00:00",
                    "values" : {
                      "media_link" : [ {
                        "data" : "amy_socks_model_picture.png"
                      } ],
                      "model_is_wearing_size" : [ {
                        "data" : "unique_size"
                      } ],
                      "warning_mention" : [ {
                        "data" : "Photo not retouched",
                        "locale" : "en_US"
                      }, {
                        "data" : "Photo non retouchée",
                        "locale" : "fr_FR"
                      } ]
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets/alice_blouse_model_picture"
                      }
                    },
                    "code" : "alice_blouse_model_picture",
                    "created" : "2021-05-31T09:23:34+00:00",
                    "updated" : "2021-05-31T09:23:34+00:00",
                    "values" : {
                      "media_link" : [ {
                        "data" : "alice_blouse_model_picture.png"
                      } ],
                      "model_is_wearing_size" : [ {
                        "data" : "small"
                      } ],
                      "warning_mention" : [ {
                        "data" : "Photo retouched",
                        "locale" : "en_US"
                      }, {
                        "data" : "Photo non retouchée",
                        "locale" : "fr_FR"
                      } ]
                    }
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets?search_after=2x088w%3D%3D"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Asset" ],
        "summary" : "Update/create several assets",
        "description" : "This endpoint allows you to update and/or create several assets of one given asset family at once. Learn more about the <a href=\"/documentation/update.html#patch-asset-attribute-values\">Update behavior</a>. Note that if the asset does not already exist for the given asset family, it creates it. This endpoint is case sensitive on the asset family code.",
        "operationId" : "patch_assets",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "example" : [ {
                  "code" : "sku_54628_picture1",
                  "created" : "2021-05-31T09:23:34+00:00",
                  "updated" : "2021-05-31T09:23:34+00:00",
                  "values" : {
                    "end_of_use_date" : [ {
                      "data" : "02/03/2021"
                    } ],
                    "main_colors" : [ {
                      "data" : [ "red", "purple" ]
                    } ],
                    "media_preview" : [ {
                      "data" : "sku_54628_picture1.jpg"
                    } ],
                    "model_wears_size" : [ {
                      "data" : "s"
                    } ],
                    "photographer" : [ {
                      "data" : "ben_levy"
                    } ]
                  }
                }, {
                  "code" : "sku_54628_picture2",
                  "created" : "2021-05-31T09:23:34+00:00",
                  "updated" : "2021-05-31T09:23:34+00:00",
                  "values" : {
                    "end_of_use_date" : [ {
                      "data" : "02/03/2021"
                    } ],
                    "main_colors" : [ {
                      "data" : [ "blue", "white" ]
                    } ],
                    "media_preview" : [ {
                      "data" : "sku_54628_picture2.jpg"
                    } ],
                    "model_wears_size" : [ {
                      "data" : "s"
                    } ],
                    "photographer" : [ {
                      "data" : "ben_levy"
                    } ]
                  }
                }, {
                  "code" : "sku_54628_picture3",
                  "created" : "2021-05-31T09:23:34+00:00",
                  "updated" : "2021-05-31T09:23:34+00:00",
                  "values" : {
                    "end_of_use_date" : [ {
                      "data" : "02/03/2021"
                    } ],
                    "main_colors" : [ {
                      "data" : [ "purple" ]
                    } ],
                    "media_preview" : [ {
                      "data" : "sku_54628_picture3.jpg"
                    } ],
                    "model_wears_size" : [ {
                      "data" : "s"
                    } ],
                    "photographer" : [ {
                      "data" : "ben_levy"
                    } ]
                  }
                } ],
                "items" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Code of the asset"
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation",
                      "format" : "dateTime"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "channel" : {
                                "type" : "string",
                                "description" : "Channel code of the asset attribute value"
                              },
                              "data" : {
                                "type" : "object",
                                "description" : "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "Locale code of the asset attribute value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details."
                    }
                  },
                  "example" : {
                    "code" : "sku_54628_picture1",
                    "created" : "2021-05-31T09:23:34+00:00",
                    "updated" : "2021-05-31T09:23:34+00:00",
                    "values" : {
                      "end_of_use_date" : [ {
                        "channel" : null,
                        "data" : "02/03/2021",
                        "locale" : null
                      } ],
                      "main_colors" : [ {
                        "channel" : null,
                        "data" : [ "red", "purple" ],
                        "locale" : null
                      } ],
                      "media_preview" : [ {
                        "channel" : null,
                        "data" : "sku_54628_picture1.jpg",
                        "locale" : null
                      } ],
                      "model_wears_size" : [ {
                        "channel" : null,
                        "data" : "s",
                        "locale" : null
                      } ],
                      "photographer" : [ {
                        "channel" : null,
                        "data" : "ben_levy",
                        "locale" : null
                      } ]
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "string",
                        "description" : "Resource code"
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "Message explaining the error"
                      },
                      "status_code" : {
                        "type" : "integer",
                        "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-families/{asset_family_code}/assets/{code}" : {
      "get" : {
        "tags" : [ "Asset" ],
        "summary" : "Get an asset of a given asset family",
        "description" : "This endpoint allows you to get the information about a given asset for a given asset family. This endpoint is case sensitive on the asset family code.",
        "operationId" : "get_assets__code_",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Code of the asset"
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation",
                      "format" : "dateTime"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "channel" : {
                                "type" : "string",
                                "description" : "Channel code of the asset attribute value"
                              },
                              "data" : {
                                "type" : "object",
                                "description" : "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "Locale code of the asset attribute value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details."
                    }
                  },
                  "example" : {
                    "code" : "sku_54628_picture1",
                    "created" : "2021-05-31T09:23:34+00:00",
                    "updated" : "2021-05-31T09:23:34+00:00",
                    "values" : {
                      "end_of_use_date" : [ {
                        "data" : "02/03/2021"
                      } ],
                      "main_colors" : [ {
                        "data" : [ "red", "purple" ]
                      } ],
                      "media_preview" : [ {
                        "data" : "sku_54628_picture1.jpg"
                      } ],
                      "model_wears_size" : [ {
                        "data" : "s"
                      } ],
                      "photographer" : [ {
                        "data" : "ben_levy"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Asset" ],
        "summary" : "Delete an asset",
        "description" : "This endpoint allows you to delete a given asset. This endpoint is case sensitive on the asset family code.",
        "operationId" : "delete_assets__code_",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content to return"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Asset" ],
        "summary" : "Update/create an asset",
        "description" : "This endpoint allows you to update a given asset of a given asset family. Learn more about the <a href=\"/documentation/update.html#patch-asset-attribute-values\">Update behavior</a>. Note that if the asset does not already exist for the given asset family, it creates it. This endpoint is case sensitive on the asset family code.",
        "operationId" : "patch_asset__code_",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Code of the asset"
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "channel" : {
                              "type" : "string",
                              "description" : "Channel code of the asset attribute value"
                            },
                            "data" : {
                              "type" : "object",
                              "description" : "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "Locale code of the asset attribute value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details."
                  }
                },
                "example" : {
                  "code" : "sku_54628_picture1",
                  "created" : "2021-05-31T09:23:34+00:00",
                  "updated" : "2021-05-31T09:23:34+00:00",
                  "values" : {
                    "end_of_use_date" : [ {
                      "data" : "02/03/2021"
                    } ],
                    "main_colors" : [ {
                      "data" : [ "red", "purple" ]
                    } ],
                    "media_preview" : [ {
                      "data" : "sku_54628_picture1.jpg"
                    } ],
                    "model_wears_size" : [ {
                      "data" : "s"
                    } ],
                    "photographer" : [ {
                      "data" : "ben_levy"
                    } ]
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-families/{asset_family_code}/attributes" : {
      "get" : {
        "tags" : [ "Asset attribute" ],
        "summary" : "Get the list of attributes of a given asset family",
        "description" : "This endpoint allows you to get the list of attributes of a given asset family.",
        "operationId" : "get_asset_families__code__attributes",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the attributes of the given asset family",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "code", "media_type", "type" ],
                    "type" : "object",
                    "properties" : {
                      "allowed_extensions" : {
                        "type" : "array",
                        "description" : "Extensions allowed when the attribute type is `media_file`",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "code" : {
                        "type" : "string",
                        "description" : "Attribute code"
                      },
                      "decimals_allowed" : {
                        "type" : "boolean",
                        "description" : "Whether decimals are allowed when the attribute type is `number`",
                        "default" : false
                      },
                      "is_read_only" : {
                        "type" : "boolean",
                        "description" : "Whether the attribute should be in read only mode only in the UI, but you can still update it with the API",
                        "default" : false
                      },
                      "is_required_for_completeness" : {
                        "type" : "boolean",
                        "description" : "Whether the attribute should be part of the record's completeness calculation",
                        "default" : false
                      },
                      "is_rich_text_editor" : {
                        "type" : "boolean",
                        "description" : "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`"
                      },
                      "is_textarea" : {
                        "type" : "boolean",
                        "description" : "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                        "default" : false
                      },
                      "labels" : {
                        "type" : "object",
                        "properties" : {
                          "localeCode" : {
                            "type" : "string",
                            "description" : "Attribute label for the locale `localeCode`"
                          }
                        },
                        "description" : "Attribute labels for each locale"
                      },
                      "max_characters" : {
                        "type" : "integer",
                        "description" : "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`"
                      },
                      "max_file_size" : {
                        "type" : "string",
                        "description" : "Max file size in MB when the attribute type is `media_file`",
                        "default" : "null"
                      },
                      "max_value" : {
                        "type" : "string",
                        "description" : "Maximum value allowed when the attribute type is `number`",
                        "default" : "null"
                      },
                      "media_type" : {
                        "type" : "string",
                        "description" : "For the `media_link` attribute type, it is the type of the media behind the url, to allow its preview in the PIM. For the `media_file` attribute type, it is the type of the file.",
                        "enum" : [ "image", "pdf", "youtube", "vimeo", "other" ]
                      },
                      "min_value" : {
                        "type" : "string",
                        "description" : "Minimum value allowed when the attribute type is `number`",
                        "default" : "null"
                      },
                      "prefix" : {
                        "type" : "string",
                        "description" : "Prefix of the `media_link` attribute type. The common url root that prefixes the link to the media",
                        "default" : "null"
                      },
                      "suffix" : {
                        "type" : "string",
                        "description" : "Suffix of the `media_link` attribute type. The common url suffix for the media",
                        "default" : "null"
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Attribute type. See <a href='/concepts/asset-manager.html#asset-attribute'>type</a> section for more details.",
                        "enum" : [ "text", "media_link", "number", "media_file", "single_option", "multiple_options", "reference_entity_single_link", "reference_entity_multiple_links", "boolean" ]
                      },
                      "validation_regexp" : {
                        "type" : "string",
                        "description" : "Regexp expression used to validate the attribute value when the attribute type is `text`",
                        "default" : "null"
                      },
                      "validation_rule" : {
                        "type" : "string",
                        "description" : "Validation rule type used to validate the attribute value when the attribute type is `text`",
                        "default" : "none",
                        "enum" : [ "email", "url", "regexp", "none" ]
                      },
                      "value_per_channel" : {
                        "type" : "boolean",
                        "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                        "default" : false
                      },
                      "value_per_locale" : {
                        "type" : "boolean",
                        "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                        "default" : false
                      }
                    },
                    "example" : {
                      "code" : "model_is_wearing_size",
                      "is_required_for_completeness" : true,
                      "labels" : {
                        "en_US" : "Model is wearing size",
                        "fr_FR" : "Le mannequin porte la taille"
                      },
                      "type" : "single_option",
                      "value_per_channel" : false,
                      "value_per_locale" : false
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options" : {
      "get" : {
        "tags" : [ "Asset attribute option" ],
        "summary" : "Get a list of attribute options of a given attribute for a given asset family",
        "description" : "This endpoint allows you to get a list of attribute options for a given asset family.",
        "operationId" : "get_asset_family_attributes__attribute_code__options",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the options of the given attribute of the given asset family",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "code" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "string",
                        "description" : "Attribute's option code"
                      },
                      "labels" : {
                        "type" : "object",
                        "properties" : {
                          "localeCode" : {
                            "type" : "string",
                            "description" : "Attribute label for the locale `localeCode`"
                          }
                        },
                        "description" : "Attribute labels for each locale"
                      }
                    },
                    "example" : {
                      "code" : "small",
                      "labels" : {
                        "en_US" : "S",
                        "fr_FR" : "S"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}" : {
      "get" : {
        "tags" : [ "Asset attribute option" ],
        "summary" : "Get an attribute option for a given attribute of a given asset family",
        "description" : "This endpoint allows you to get the information about a given asset attribute option.",
        "operationId" : "get_asset_attributes__attribute_code__options__code_",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Attribute's option code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description" : "Attribute labels for each locale"
                    }
                  },
                  "example" : {
                    "code" : "small",
                    "labels" : {
                      "en_US" : "S",
                      "fr_FR" : "S"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Asset attribute option" ],
        "summary" : "Update/create an asset attribute option for a given asset family",
        "description" : "This endpoint allows you to update a given option for a given attribute and a given asset family. Learn more about the <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given asset family, it creates it.",
        "operationId" : "patch_asset_attributes__attribute_code__options__code_",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute's option code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute labels for each locale"
                  }
                },
                "example" : {
                  "code" : "small",
                  "labels" : {
                    "en_US" : "S",
                    "fr_FR" : "S"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-families/{asset_family_code}/attributes/{code}" : {
      "get" : {
        "tags" : [ "Asset attribute" ],
        "summary" : "Get an attribute of a given asset family",
        "description" : "This endpoint allows you to get the information about a given attribute for a given asset family.",
        "operationId" : "get_asset_family_attributes__code_",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code", "media_type", "type" ],
                  "type" : "object",
                  "properties" : {
                    "allowed_extensions" : {
                      "type" : "array",
                      "description" : "Extensions allowed when the attribute type is `media_file`",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Attribute code"
                    },
                    "decimals_allowed" : {
                      "type" : "boolean",
                      "description" : "Whether decimals are allowed when the attribute type is `number`",
                      "default" : false
                    },
                    "is_read_only" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute should be in read only mode only in the UI, but you can still update it with the API",
                      "default" : false
                    },
                    "is_required_for_completeness" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute should be part of the record's completeness calculation",
                      "default" : false
                    },
                    "is_rich_text_editor" : {
                      "type" : "boolean",
                      "description" : "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`"
                    },
                    "is_textarea" : {
                      "type" : "boolean",
                      "description" : "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                      "default" : false
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description" : "Attribute labels for each locale"
                    },
                    "max_characters" : {
                      "type" : "integer",
                      "description" : "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`"
                    },
                    "max_file_size" : {
                      "type" : "string",
                      "description" : "Max file size in MB when the attribute type is `media_file`",
                      "default" : "null"
                    },
                    "max_value" : {
                      "type" : "string",
                      "description" : "Maximum value allowed when the attribute type is `number`",
                      "default" : "null"
                    },
                    "media_type" : {
                      "type" : "string",
                      "description" : "For the `media_link` attribute type, it is the type of the media behind the url, to allow its preview in the PIM. For the `media_file` attribute type, it is the type of the file.",
                      "enum" : [ "image", "pdf", "youtube", "vimeo", "other" ]
                    },
                    "min_value" : {
                      "type" : "string",
                      "description" : "Minimum value allowed when the attribute type is `number`",
                      "default" : "null"
                    },
                    "prefix" : {
                      "type" : "string",
                      "description" : "Prefix of the `media_link` attribute type. The common url root that prefixes the link to the media",
                      "default" : "null"
                    },
                    "suffix" : {
                      "type" : "string",
                      "description" : "Suffix of the `media_link` attribute type. The common url suffix for the media",
                      "default" : "null"
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Attribute type. See <a href='/concepts/asset-manager.html#asset-attribute'>type</a> section for more details.",
                      "enum" : [ "text", "media_link", "number", "media_file", "single_option", "multiple_options", "reference_entity_single_link", "reference_entity_multiple_links", "boolean" ]
                    },
                    "validation_regexp" : {
                      "type" : "string",
                      "description" : "Regexp expression used to validate the attribute value when the attribute type is `text`",
                      "default" : "null"
                    },
                    "validation_rule" : {
                      "type" : "string",
                      "description" : "Validation rule type used to validate the attribute value when the attribute type is `text`",
                      "default" : "none",
                      "enum" : [ "email", "url", "regexp", "none" ]
                    },
                    "value_per_channel" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                      "default" : false
                    },
                    "value_per_locale" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                      "default" : false
                    }
                  },
                  "example" : {
                    "code" : "model_is_wearing_size",
                    "is_required_for_completeness" : true,
                    "labels" : {
                      "en_US" : "Model is wearing size",
                      "fr_FR" : "Le mannequin porte la taille"
                    },
                    "type" : "single_option",
                    "value_per_channel" : false,
                    "value_per_locale" : false
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Asset attribute" ],
        "summary" : "Update/create an attribute of a given asset family",
        "description" : "This endpoint allows you to update a given attribute for a given asset family. Note that if the attribute does not already exist for the given asset family, it creates it.",
        "operationId" : "patch_asset_family_attributes__code_",
        "parameters" : [ {
          "name" : "asset_family_code",
          "in" : "path",
          "description" : "Code of the asset family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "media_type", "type" ],
                "type" : "object",
                "properties" : {
                  "allowed_extensions" : {
                    "type" : "array",
                    "description" : "Extensions allowed when the attribute type is `media_file`",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute code"
                  },
                  "decimals_allowed" : {
                    "type" : "boolean",
                    "description" : "Whether decimals are allowed when the attribute type is `number`",
                    "default" : false
                  },
                  "is_read_only" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute should be in read only mode only in the UI, but you can still update it with the API",
                    "default" : false
                  },
                  "is_required_for_completeness" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute should be part of the record's completeness calculation",
                    "default" : false
                  },
                  "is_rich_text_editor" : {
                    "type" : "boolean",
                    "description" : "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`"
                  },
                  "is_textarea" : {
                    "type" : "boolean",
                    "description" : "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                    "default" : false
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute labels for each locale"
                  },
                  "max_characters" : {
                    "type" : "integer",
                    "description" : "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`"
                  },
                  "max_file_size" : {
                    "type" : "string",
                    "description" : "Max file size in MB when the attribute type is `media_file`",
                    "default" : "null"
                  },
                  "max_value" : {
                    "type" : "string",
                    "description" : "Maximum value allowed when the attribute type is `number`",
                    "default" : "null"
                  },
                  "media_type" : {
                    "type" : "string",
                    "description" : "For the `media_link` attribute type, it is the type of the media behind the url, to allow its preview in the PIM. For the `media_file` attribute type, it is the type of the file.",
                    "enum" : [ "image", "pdf", "youtube", "vimeo", "other" ]
                  },
                  "min_value" : {
                    "type" : "string",
                    "description" : "Minimum value allowed when the attribute type is `number`",
                    "default" : "null"
                  },
                  "prefix" : {
                    "type" : "string",
                    "description" : "Prefix of the `media_link` attribute type. The common url root that prefixes the link to the media",
                    "default" : "null"
                  },
                  "suffix" : {
                    "type" : "string",
                    "description" : "Suffix of the `media_link` attribute type. The common url suffix for the media",
                    "default" : "null"
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Attribute type. See <a href='/concepts/asset-manager.html#asset-attribute'>type</a> section for more details.",
                    "enum" : [ "text", "media_link", "number", "media_file", "single_option", "multiple_options", "reference_entity_single_link", "reference_entity_multiple_links", "boolean" ]
                  },
                  "validation_regexp" : {
                    "type" : "string",
                    "description" : "Regexp expression used to validate the attribute value when the attribute type is `text`",
                    "default" : "null"
                  },
                  "validation_rule" : {
                    "type" : "string",
                    "description" : "Validation rule type used to validate the attribute value when the attribute type is `text`",
                    "default" : "none",
                    "enum" : [ "email", "url", "regexp", "none" ]
                  },
                  "value_per_channel" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                    "default" : false
                  },
                  "value_per_locale" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                    "default" : false
                  }
                },
                "example" : {
                  "code" : "model_is_wearing_size",
                  "is_required_for_completeness" : true,
                  "labels" : {
                    "en_US" : "Model is wearing size",
                    "fr_FR" : "Le mannequin porte la taille"
                  },
                  "type" : "single_option",
                  "value_per_channel" : false,
                  "value_per_locale" : false
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-families/{code}" : {
      "get" : {
        "tags" : [ "Asset family" ],
        "summary" : "Get an asset family",
        "description" : "This endpoint allows you to get the information about a given asset family.",
        "operationId" : "get_asset_family__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "attribute_as_main_media" : {
                      "type" : "string",
                      "description" : "Attribute code that is used as the main media of the asset family.",
                      "default" : "First media file or media link attribute that was created"
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Asset family code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Asset family label for the locale `localeCode`"
                        }
                      },
                      "description" : "Asset family labels for each locale"
                    },
                    "naming_convention" : {
                      "type" : "object",
                      "properties" : {
                        "abort_asset_creation_on_error" : {
                          "type" : "boolean",
                          "description" : "Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>."
                        },
                        "pattern" : {
                          "type" : "string",
                          "description" : "The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>."
                        },
                        "source" : {
                          "type" : "object",
                          "description" : "The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>."
                        }
                      },
                      "description" : "The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>."
                    },
                    "product_link_rules" : {
                      "type" : "array",
                      "description" : "The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "assign_assets_to" : {
                            "type" : "array",
                            "description" : "The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.",
                            "items" : {
                              "required" : [ "attribute", "mode" ],
                              "type" : "object",
                              "properties" : {
                                "attribute" : {
                                  "type" : "string"
                                },
                                "channel" : {
                                  "type" : "string"
                                },
                                "locale" : {
                                  "type" : "string"
                                },
                                "mode" : {
                                  "type" : "string"
                                }
                              }
                            }
                          },
                          "product_selections" : {
                            "type" : "array",
                            "description" : "The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.",
                            "items" : {
                              "required" : [ "field", "operator", "value" ],
                              "type" : "object",
                              "properties" : {
                                "channel" : {
                                  "type" : "string"
                                },
                                "field" : {
                                  "type" : "string"
                                },
                                "locale" : {
                                  "type" : "string"
                                },
                                "operator" : {
                                  "type" : "string"
                                },
                                "value" : {
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "transformations" : {
                      "type" : "array",
                      "description" : "The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.",
                      "items" : {
                        "required" : [ "label", "operations", "source", "target" ],
                        "type" : "object",
                        "properties" : {
                          "filename_prefix" : {
                            "type" : "string",
                            "description" : "The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                          },
                          "filename_suffix" : {
                            "type" : "string",
                            "description" : "The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                          },
                          "label" : {
                            "type" : "string",
                            "description" : "The name of the transformation"
                          },
                          "operations" : {
                            "type" : "object",
                            "properties" : {
                              "parameters" : {
                                "type" : "object",
                                "properties" : {
                                  "colorspace" : {
                                    "type" : "string"
                                  },
                                  "height" : {
                                    "type" : "integer"
                                  },
                                  "quality" : {
                                    "type" : "integer"
                                  },
                                  "ratio" : {
                                    "type" : "integer"
                                  },
                                  "resolution-unit" : {
                                    "type" : "string"
                                  },
                                  "resolution-x" : {
                                    "type" : "integer"
                                  },
                                  "resolution-y" : {
                                    "type" : "integer"
                                  },
                                  "width" : {
                                    "type" : "integer"
                                  }
                                }
                              },
                              "type" : {
                                "type" : "string"
                              }
                            },
                            "description" : "The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>."
                          },
                          "source" : {
                            "required" : [ "attribute", "channel", "locale" ],
                            "type" : "object",
                            "properties" : {
                              "attribute" : {
                                "type" : "string"
                              },
                              "channel" : {
                                "type" : "string"
                              },
                              "locale" : {
                                "type" : "string"
                              }
                            },
                            "description" : "The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>."
                          },
                          "target" : {
                            "required" : [ "attribute", "channel", "locale" ],
                            "type" : "object",
                            "properties" : {
                              "attribute" : {
                                "type" : "string"
                              },
                              "channel" : {
                                "type" : "string"
                              },
                              "locale" : {
                                "type" : "string"
                              }
                            },
                            "description" : "The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>."
                          }
                        }
                      }
                    }
                  },
                  "example" : {
                    "attribute_as_main_media" : "main_image",
                    "code" : "model_pictures",
                    "labels" : {
                      "en_US" : "Model pictures",
                      "fr_FR" : "Photographies en pied"
                    },
                    "naming_convention" : {
                      "abort_asset_creation_on_error" : true,
                      "pattern" : "/(?P<product_ref>.*)-.*/",
                      "source" : {
                        "property" : "code"
                      }
                    },
                    "product_link_rules" : [ {
                      "assign_assets_to" : [ {
                        "attribute" : "model_pictures",
                        "mode" : "replace"
                      } ],
                      "product_selections" : [ {
                        "field" : "sku",
                        "operator" : "EQUALS",
                        "value" : "{{product_ref}}"
                      } ]
                    } ],
                    "transformations" : [ {
                      "filename_suffix" : "_thumbnailBW",
                      "label" : "Thumbnail plus black and white transformation",
                      "operations" : [ {
                        "parameters" : {
                          "height" : 150,
                          "width" : 150
                        },
                        "type" : "thumbnail"
                      }, {
                        "parameters" : {
                          "colorspace" : "grey"
                        },
                        "type" : "colorspace"
                      } ],
                      "source" : {
                        "attribute" : "main_image"
                      },
                      "target" : {
                        "attribute" : "thumbnail"
                      }
                    } ]
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Asset family" ],
        "summary" : "Update/create an asset family",
        "description" : "This endpoint allows you to update a given asset family. Note that if the asset family does not already exist, it creates it.",
        "operationId" : "patch_asset_family__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "attribute_as_main_media" : {
                    "type" : "string",
                    "description" : "Attribute code that is used as the main media of the asset family.",
                    "default" : "First media file or media link attribute that was created"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Asset family code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Asset family label for the locale `localeCode`"
                      }
                    },
                    "description" : "Asset family labels for each locale"
                  },
                  "naming_convention" : {
                    "type" : "object",
                    "properties" : {
                      "abort_asset_creation_on_error" : {
                        "type" : "boolean",
                        "description" : "Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>."
                      },
                      "pattern" : {
                        "type" : "string",
                        "description" : "The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>."
                      },
                      "source" : {
                        "type" : "object",
                        "description" : "The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>."
                      }
                    },
                    "description" : "The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>."
                  },
                  "product_link_rules" : {
                    "type" : "array",
                    "description" : "The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "assign_assets_to" : {
                          "type" : "array",
                          "description" : "The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.",
                          "items" : {
                            "required" : [ "attribute", "mode" ],
                            "type" : "object",
                            "properties" : {
                              "attribute" : {
                                "type" : "string"
                              },
                              "channel" : {
                                "type" : "string"
                              },
                              "locale" : {
                                "type" : "string"
                              },
                              "mode" : {
                                "type" : "string"
                              }
                            }
                          }
                        },
                        "product_selections" : {
                          "type" : "array",
                          "description" : "The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.",
                          "items" : {
                            "required" : [ "field", "operator", "value" ],
                            "type" : "object",
                            "properties" : {
                              "channel" : {
                                "type" : "string"
                              },
                              "field" : {
                                "type" : "string"
                              },
                              "locale" : {
                                "type" : "string"
                              },
                              "operator" : {
                                "type" : "string"
                              },
                              "value" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "transformations" : {
                    "type" : "array",
                    "description" : "The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.",
                    "items" : {
                      "required" : [ "label", "operations", "source", "target" ],
                      "type" : "object",
                      "properties" : {
                        "filename_prefix" : {
                          "type" : "string",
                          "description" : "The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                        },
                        "filename_suffix" : {
                          "type" : "string",
                          "description" : "The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                        },
                        "label" : {
                          "type" : "string",
                          "description" : "The name of the transformation"
                        },
                        "operations" : {
                          "type" : "object",
                          "properties" : {
                            "parameters" : {
                              "type" : "object",
                              "properties" : {
                                "colorspace" : {
                                  "type" : "string"
                                },
                                "height" : {
                                  "type" : "integer"
                                },
                                "quality" : {
                                  "type" : "integer"
                                },
                                "ratio" : {
                                  "type" : "integer"
                                },
                                "resolution-unit" : {
                                  "type" : "string"
                                },
                                "resolution-x" : {
                                  "type" : "integer"
                                },
                                "resolution-y" : {
                                  "type" : "integer"
                                },
                                "width" : {
                                  "type" : "integer"
                                }
                              }
                            },
                            "type" : {
                              "type" : "string"
                            }
                          },
                          "description" : "The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>."
                        },
                        "source" : {
                          "required" : [ "attribute", "channel", "locale" ],
                          "type" : "object",
                          "properties" : {
                            "attribute" : {
                              "type" : "string"
                            },
                            "channel" : {
                              "type" : "string"
                            },
                            "locale" : {
                              "type" : "string"
                            }
                          },
                          "description" : "The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>."
                        },
                        "target" : {
                          "required" : [ "attribute", "channel", "locale" ],
                          "type" : "object",
                          "properties" : {
                            "attribute" : {
                              "type" : "string"
                            },
                            "channel" : {
                              "type" : "string"
                            },
                            "locale" : {
                              "type" : "string"
                            }
                          },
                          "description" : "The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>."
                        }
                      }
                    }
                  }
                },
                "example" : {
                  "attribute_as_main_media" : "main_image",
                  "code" : "model_pictures",
                  "labels" : {
                    "en_US" : "Model pictures",
                    "fr_FR" : "Photographies en pied"
                  },
                  "naming_convention" : {
                    "abort_asset_creation_on_error" : true,
                    "pattern" : "/(?P<product_ref>.*)-.*/",
                    "source" : {
                      "property" : "code"
                    }
                  },
                  "product_link_rules" : [ {
                    "assign_assets_to" : [ {
                      "attribute" : "model_pictures",
                      "mode" : "replace"
                    } ],
                    "product_selections" : [ {
                      "field" : "sku",
                      "operator" : "EQUALS",
                      "value" : "{{product_ref}}"
                    } ]
                  } ],
                  "transformations" : [ {
                    "filename_suffix" : "_thumbnailBW",
                    "label" : "Thumbnail plus black and white transformation",
                    "operations" : [ {
                      "parameters" : {
                        "height" : 150,
                        "width" : 150
                      },
                      "type" : "thumbnail"
                    }, {
                      "parameters" : {
                        "colorspace" : "grey"
                      },
                      "type" : "colorspace"
                    } ],
                    "source" : {
                      "attribute" : "main_image"
                    },
                    "target" : {
                      "attribute" : "thumbnail"
                    }
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-media-files" : {
      "post" : {
        "tags" : [ "Asset media file" ],
        "summary" : "Create a new media file for an asset",
        "description" : "This endpoint allows you to create a new media file and associate it to a media file attribute value of an asset.",
        "operationId" : "post_asset_media_files",
        "parameters" : [ {
          "name" : "Content-type",
          "in" : "header",
          "description" : "Equal to 'multipart/form-data', no other value allowed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The binary of the media file",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Asset-media-file-code" : {
                "description" : "Code of the media file",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-media-files/{code}" : {
      "get" : {
        "tags" : [ "Asset media file" ],
        "summary" : "Download the media file associated to an asset",
        "description" : "This endpoint allows you to download a given media file that is associated with an asset.",
        "operationId" : "get_asset_media_files__code",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-tags" : {
      "get" : {
        "tags" : [ "PAM asset tag" ],
        "summary" : "Get list of PAM asset tags",
        "description" : "This endpoint allows you to get a list of PAM asset tags. PAM asset tags are paginated.",
        "operationId" : "get_asset_tags",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns PAM asset tags paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "PAM Asset Tags",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "PAM asset tag code"
                                  }
                                },
                                "example" : {
                                  "code" : "tshirt"
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-tags/tshirt"
                      }
                    },
                    "code" : "tshirt"
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-tags/belt"
                      }
                    },
                    "code" : "belt"
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/asset-tags/red"
                      }
                    },
                    "code" : "red"
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-tags?page=1&limit=3"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-tags?page=3&limit=3"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-tags?page=1&limit=3"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/asset-tags?page=2&limit=3"
                  }
                }
              },
              "current_page" : {
                "example" : 2
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/asset-tags/{code}" : {
      "get" : {
        "tags" : [ "PAM asset tag" ],
        "summary" : "Get a PAM asset tag",
        "description" : "This endpoint allows you to get the information about a given PAM asset tag.",
        "operationId" : "get_asset_tags__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "PAM asset tag code"
                    }
                  },
                  "example" : {
                    "code" : "tshirt"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PAM asset tag" ],
        "summary" : "Update/create a PAM asset tag",
        "description" : "This endpoint allows you to update a given PAM asset tag. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no tag exists for the given code, it creates it.",
        "operationId" : "patch_asset_tags__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "PAM asset tag code"
                  }
                },
                "example" : {
                  "code" : "tshirt"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/assets" : {
      "get" : {
        "tags" : [ "PAM asset" ],
        "summary" : "Get list of PAM assets",
        "description" : "This endpoint allows you to get a list of PAM assets. PAM assets are paginated.",
        "operationId" : "get_pam_assets",
        "parameters" : [ {
          "name" : "pagination_type",
          "in" : "query",
          "description" : "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "page",
            "enum" : [ "page", "search_after" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns PAM assets paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "PAM Assets",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "categories" : {
                                    "type" : "array",
                                    "description" : "Codes of the PAM asset categories in which the asset is classified",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "PAM asset code"
                                  },
                                  "description" : {
                                    "type" : "string",
                                    "description" : "Description of the PAM asset",
                                    "default" : "null"
                                  },
                                  "end_of_use" : {
                                    "type" : "string",
                                    "description" : "Date on which the PAM asset expire",
                                    "format" : "dateTime",
                                    "default" : "null"
                                  },
                                  "localizable" : {
                                    "type" : "boolean",
                                    "description" : "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                                    "default" : false
                                  },
                                  "reference_files" : {
                                    "type" : "array",
                                    "description" : "Reference files of the PAM asset",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "_link" : {
                                          "type" : "object",
                                          "properties" : {
                                            "download" : {
                                              "type" : "object",
                                              "properties" : {
                                                "href" : {
                                                  "type" : "string",
                                                  "description" : "URI to download the reference file"
                                                }
                                              }
                                            },
                                            "self" : {
                                              "type" : "object",
                                              "properties" : {
                                                "href" : {
                                                  "type" : "string",
                                                  "description" : "URI of the reference file entity"
                                                }
                                              }
                                            }
                                          },
                                          "description" : "Links to get and download the reference file"
                                        },
                                        "code" : {
                                          "type" : "string",
                                          "description" : "Code of the reference file"
                                        },
                                        "locale" : {
                                          "type" : "string",
                                          "description" : "Locale code of the reference file"
                                        }
                                      }
                                    }
                                  },
                                  "tags" : {
                                    "type" : "array",
                                    "description" : "Tags of the PAM asset",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "variation_files" : {
                                    "type" : "array",
                                    "description" : "Variations of the PAM asset",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "_link" : {
                                          "type" : "object",
                                          "properties" : {
                                            "download" : {
                                              "type" : "object",
                                              "properties" : {
                                                "href" : {
                                                  "type" : "string",
                                                  "description" : "URI to download the variation file"
                                                }
                                              }
                                            },
                                            "self" : {
                                              "type" : "object",
                                              "properties" : {
                                                "href" : {
                                                  "type" : "string",
                                                  "description" : "URI of the variation entity"
                                                }
                                              }
                                            }
                                          },
                                          "description" : "Links to get and download the variation file"
                                        },
                                        "code" : {
                                          "type" : "string",
                                          "description" : "Code of the variation"
                                        },
                                        "locale" : {
                                          "type" : "string",
                                          "description" : "Locale code of the variation"
                                        },
                                        "scope" : {
                                          "type" : "string",
                                          "description" : "Channel code of the variation"
                                        }
                                      }
                                    }
                                  }
                                },
                                "example" : {
                                  "categories" : [ "tshirts_assets" ],
                                  "code" : "tshirt_artemis_main_picture",
                                  "description" : "The main picture of the Artemis t-shirt",
                                  "end_of_use" : "2019-09-01T00:00:00+0200",
                                  "localizable" : false,
                                  "reference_files" : [ {
                                    "_link" : {
                                      "download" : {
                                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                                      },
                                      "self" : {
                                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                                      }
                                    },
                                    "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                                  } ],
                                  "tags" : [ "tshirts", "red", "summer" ],
                                  "variation_files" : [ {
                                    "_link" : {
                                      "download" : {
                                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                                      },
                                      "self" : {
                                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                                      }
                                    },
                                    "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
                                    "scope" : "e_commerce"
                                  }, {
                                    "_link" : {
                                      "download" : {
                                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                                      },
                                      "self" : {
                                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                                      }
                                    },
                                    "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg",
                                    "scope" : "print"
                                  } ]
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture"
                      }
                    },
                    "categories" : [ "tshirts_assets" ],
                    "code" : "tshirt_artemis_main_picture",
                    "description" : "The main picture of the Artemis t-shirt",
                    "end_of_use" : "2019-09-01T00:00:00+0200",
                    "localizable" : false,
                    "reference_files" : [ {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                        }
                      },
                      "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                    } ],
                    "tags" : [ "tshirts", "red", "summer" ],
                    "variation_files" : [ {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                        }
                      },
                      "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
                      "scope" : "e_commerce"
                    }, {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                        }
                      },
                      "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg",
                      "scope" : "print"
                    } ]
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture"
                      }
                    },
                    "categories" : [ "tshirts_assets" ],
                    "code" : "tshirt_artemis_profile_picture",
                    "description" : "The profile picture of the Artemis t-shirt",
                    "end_of_use" : "2019-09-01T00:00:00+0200",
                    "localizable" : false,
                    "reference_files" : [ {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/reference-files/no_locale/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/reference-files/no_locale"
                        }
                      },
                      "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_profile_picture.jpg"
                    } ],
                    "tags" : [ "tshirts", "red", "summer", "profile_views" ],
                    "variation_files" : [ {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/ecommerce/no_locale/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/ecommerce/no_locale"
                        }
                      },
                      "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_profile_picture_ecommerce.jpg",
                      "scope" : "e_commerce"
                    }, {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/print/no_locale/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/print/no_locale"
                        }
                      },
                      "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_profile_picture_print.jpg",
                      "scope" : "print"
                    } ]
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual"
                      }
                    },
                    "categories" : [ "tshirts_assets" ],
                    "code" : "tshirt_artemis_maintenance_manual",
                    "description" : "The maintenance manual of the Artemis t-shirt",
                    "localizable" : true,
                    "reference_files" : [ {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/en_US/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/en_US"
                        }
                      },
                      "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_maintenance_manual_en_US.pdf",
                      "locale" : "en_US"
                    }, {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/fr_FR/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/fr_FR"
                        }
                      },
                      "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_maintenance_manual_fr_FR.pdf",
                      "locale" : "fr_FR"
                    } ],
                    "tags" : [ "tshirts", "manuals" ],
                    "variation_files" : [ ]
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/assets?page=1&limit=3"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/assets?page=3&limit=3"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/assets?page=1&limit=3"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/assets?page=2&limit=3"
                  }
                }
              },
              "current_page" : {
                "example" : 2
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PAM asset" ],
        "summary" : "Create a new PAM asset",
        "description" : "This endpoint allows you to create a new PAM asset.",
        "operationId" : "post_pam_assets",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the PAM asset categories in which the asset is classified",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "PAM asset code"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Description of the PAM asset",
                    "default" : "null"
                  },
                  "end_of_use" : {
                    "type" : "string",
                    "description" : "Date on which the PAM asset expire",
                    "format" : "dateTime",
                    "default" : "null"
                  },
                  "localizable" : {
                    "type" : "boolean",
                    "description" : "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                    "default" : false
                  },
                  "reference_files" : {
                    "type" : "array",
                    "description" : "Reference files of the PAM asset",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "_link" : {
                          "type" : "object",
                          "properties" : {
                            "download" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI to download the reference file"
                                }
                              }
                            },
                            "self" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI of the reference file entity"
                                }
                              }
                            }
                          },
                          "description" : "Links to get and download the reference file"
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "Code of the reference file"
                        },
                        "locale" : {
                          "type" : "string",
                          "description" : "Locale code of the reference file"
                        }
                      }
                    }
                  },
                  "tags" : {
                    "type" : "array",
                    "description" : "Tags of the PAM asset",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "variation_files" : {
                    "type" : "array",
                    "description" : "Variations of the PAM asset",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "_link" : {
                          "type" : "object",
                          "properties" : {
                            "download" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI to download the variation file"
                                }
                              }
                            },
                            "self" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI of the variation entity"
                                }
                              }
                            }
                          },
                          "description" : "Links to get and download the variation file"
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "Code of the variation"
                        },
                        "locale" : {
                          "type" : "string",
                          "description" : "Locale code of the variation"
                        },
                        "scope" : {
                          "type" : "string",
                          "description" : "Channel code of the variation"
                        }
                      }
                    }
                  }
                },
                "example" : {
                  "categories" : [ "tshirts_assets" ],
                  "code" : "tshirt_artemis_main_picture",
                  "description" : "The main picture of the Artemis t-shirt",
                  "end_of_use" : "2019-09-01T00:00:00+0200",
                  "localizable" : false,
                  "reference_files" : [ {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                      }
                    },
                    "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                  } ],
                  "tags" : [ "tshirts", "red", "summer" ],
                  "variation_files" : [ {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                      }
                    },
                    "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
                    "scope" : "e_commerce"
                  }, {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                      }
                    },
                    "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg",
                    "scope" : "print"
                  } ]
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PAM asset" ],
        "summary" : "Update/create several PAM assets",
        "description" : "This endpoint allows you to update several PAM assets at once.",
        "operationId" : "patch_pam_assets",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the PAM asset categories in which the asset is classified",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "PAM asset code"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Description of the PAM asset",
                    "default" : "null"
                  },
                  "end_of_use" : {
                    "type" : "string",
                    "description" : "Date on which the PAM asset expire",
                    "format" : "dateTime",
                    "default" : "null"
                  },
                  "localizable" : {
                    "type" : "boolean",
                    "description" : "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                    "default" : false
                  },
                  "reference_files" : {
                    "type" : "array",
                    "description" : "Reference files of the PAM asset",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "_link" : {
                          "type" : "object",
                          "properties" : {
                            "download" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI to download the reference file"
                                }
                              }
                            },
                            "self" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI of the reference file entity"
                                }
                              }
                            }
                          },
                          "description" : "Links to get and download the reference file"
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "Code of the reference file"
                        },
                        "locale" : {
                          "type" : "string",
                          "description" : "Locale code of the reference file"
                        }
                      }
                    }
                  },
                  "tags" : {
                    "type" : "array",
                    "description" : "Tags of the PAM asset",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "variation_files" : {
                    "type" : "array",
                    "description" : "Variations of the PAM asset",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "_link" : {
                          "type" : "object",
                          "properties" : {
                            "download" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI to download the variation file"
                                }
                              }
                            },
                            "self" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI of the variation entity"
                                }
                              }
                            }
                          },
                          "description" : "Links to get and download the variation file"
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "Code of the variation"
                        },
                        "locale" : {
                          "type" : "string",
                          "description" : "Locale code of the variation"
                        },
                        "scope" : {
                          "type" : "string",
                          "description" : "Channel code of the variation"
                        }
                      }
                    }
                  }
                },
                "example" : {
                  "categories" : [ "tshirts_assets" ],
                  "code" : "tshirt_artemis_main_picture",
                  "description" : "The main picture of the Artemis t-shirt",
                  "end_of_use" : "2019-09-01T00:00:00+0200",
                  "localizable" : false,
                  "reference_files" : [ {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                      }
                    },
                    "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                  } ],
                  "tags" : [ "tshirts", "red", "summer" ],
                  "variation_files" : [ {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                      }
                    },
                    "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
                    "scope" : "e_commerce"
                  }, {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                      }
                    },
                    "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg",
                    "scope" : "print"
                  } ]
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"tshirt_aria_main_picture\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"tshirt_artemis_maintenance_manual\",\"status_code\":422,\"message\":\"Category \"short_sleeve\" does not exist.\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"tshirt_artemis_main_picture\",\"status_code\":204}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}" : {
      "get" : {
        "tags" : [ "PAM asset reference file" ],
        "summary" : "Get a reference file",
        "description" : "This endpoint allows you to get the information about a reference file of a given PAM asset.",
        "operationId" : "get_reference_files__locale_code_",
        "parameters" : [ {
          "name" : "asset_code",
          "in" : "path",
          "description" : "Code of the asset",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale_code",
          "in" : "path",
          "description" : "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "_link" : {
                      "type" : "object",
                      "properties" : {
                        "download" : {
                          "type" : "object",
                          "properties" : {
                            "href" : {
                              "type" : "string",
                              "description" : "URI to download the reference file"
                            }
                          }
                        }
                      },
                      "description" : "Links to get and download the reference file"
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Code of the PAM asset reference file"
                    },
                    "locale" : {
                      "type" : "string",
                      "description" : "Locale of the PAM asset reference file, equal to `null` if the asset is not localizable"
                    }
                  },
                  "example" : {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                      }
                    },
                    "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PAM asset reference file" ],
        "summary" : "Upload a new reference file",
        "description" : "This endpoint allows you to upload a new reference file for a given PAM asset and locale. It will also automatically generate all the variation files corresponding to this reference file.",
        "operationId" : "post_reference_files__locale_code_",
        "parameters" : [ {
          "name" : "asset_code",
          "in" : "path",
          "description" : "Code of the asset",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale_code",
          "in" : "path",
          "description" : "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Content-type",
          "in" : "header",
          "description" : "Equal to 'multipart/form-data', no other value allowed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The binaries of the file",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Uploaded",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errors" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "channel" : {
                            "type" : "string",
                            "description" : "Channel for which the variation file generation failed"
                          },
                          "locale" : {
                            "type" : "string",
                            "description" : "Locale for which the variation file generation failed"
                          },
                          "message" : {
                            "type" : "string",
                            "description" : "Message explaining why the variation file generation failed"
                          }
                        }
                      }
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the warning"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}/download" : {
      "get" : {
        "tags" : [ "PAM asset reference file" ],
        "summary" : "Download a reference file",
        "description" : "This endpoint allows you to download a given reference file.",
        "operationId" : "get_reference_files__channel_code__locale_code__download",
        "parameters" : [ {
          "name" : "asset_code",
          "in" : "path",
          "description" : "Code of the asset",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale_code",
          "in" : "path",
          "description" : "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}" : {
      "get" : {
        "tags" : [ "PAM asset variation file" ],
        "summary" : "Get a variation file",
        "description" : "This endpoint allows you to get the information about a variation file of a given PAM asset.",
        "operationId" : "get_variation_files__channel_code__locale_code",
        "parameters" : [ {
          "name" : "asset_code",
          "in" : "path",
          "description" : "Code of the asset",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel_code",
          "in" : "path",
          "description" : "Code of the channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale_code",
          "in" : "path",
          "description" : "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "_link" : {
                      "type" : "object",
                      "properties" : {
                        "download" : {
                          "type" : "object",
                          "properties" : {
                            "href" : {
                              "type" : "string",
                              "description" : "URI to download the variation file"
                            }
                          }
                        }
                      },
                      "description" : "Links to get and download the reference file"
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Code of the PAM asset variation file"
                    },
                    "locale" : {
                      "type" : "string",
                      "description" : "Locale of the PAM asset variation file, equal to `null` if the asset is not localizable"
                    },
                    "scope" : {
                      "type" : "string",
                      "description" : "Channel of the PAM asset variation file"
                    }
                  },
                  "example" : {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                      }
                    },
                    "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
                    "scope" : "ecommerce"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PAM asset variation file" ],
        "summary" : "Upload a new variation file",
        "description" : "This endpoint allows you to upload a new variation file for a given PAM asset, channel and locale.",
        "operationId" : "post_variation_files__channel_code__locale_code_",
        "parameters" : [ {
          "name" : "asset_code",
          "in" : "path",
          "description" : "Code of the asset",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel_code",
          "in" : "path",
          "description" : "Code of the channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale_code",
          "in" : "path",
          "description" : "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Content-type",
          "in" : "header",
          "description" : "Equal to 'multipart/form-data', no other value allowed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The binaries of the file",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}/download" : {
      "get" : {
        "tags" : [ "PAM asset variation file" ],
        "summary" : "Download a variation file",
        "description" : "This endpoint allows you to download a given variation file.",
        "operationId" : "get_variation_files__channel_code__locale_code__download",
        "parameters" : [ {
          "name" : "asset_code",
          "in" : "path",
          "description" : "Code of the asset",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel_code",
          "in" : "path",
          "description" : "Code of the channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale_code",
          "in" : "path",
          "description" : "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/assets/{code}" : {
      "get" : {
        "tags" : [ "PAM asset" ],
        "summary" : "Get a PAM asset",
        "description" : "This endpoint allows you to get the information about a given PAM asset.",
        "operationId" : "get_pam_assets__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "categories" : {
                      "type" : "array",
                      "description" : "Codes of the PAM asset categories in which the asset is classified",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "PAM asset code"
                    },
                    "description" : {
                      "type" : "string",
                      "description" : "Description of the PAM asset",
                      "default" : "null"
                    },
                    "end_of_use" : {
                      "type" : "string",
                      "description" : "Date on which the PAM asset expire",
                      "format" : "dateTime",
                      "default" : "null"
                    },
                    "localizable" : {
                      "type" : "boolean",
                      "description" : "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                      "default" : false
                    },
                    "reference_files" : {
                      "type" : "array",
                      "description" : "Reference files of the PAM asset",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "_link" : {
                            "type" : "object",
                            "properties" : {
                              "download" : {
                                "type" : "object",
                                "properties" : {
                                  "href" : {
                                    "type" : "string",
                                    "description" : "URI to download the reference file"
                                  }
                                }
                              },
                              "self" : {
                                "type" : "object",
                                "properties" : {
                                  "href" : {
                                    "type" : "string",
                                    "description" : "URI of the reference file entity"
                                  }
                                }
                              }
                            },
                            "description" : "Links to get and download the reference file"
                          },
                          "code" : {
                            "type" : "string",
                            "description" : "Code of the reference file"
                          },
                          "locale" : {
                            "type" : "string",
                            "description" : "Locale code of the reference file"
                          }
                        }
                      }
                    },
                    "tags" : {
                      "type" : "array",
                      "description" : "Tags of the PAM asset",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "variation_files" : {
                      "type" : "array",
                      "description" : "Variations of the PAM asset",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "_link" : {
                            "type" : "object",
                            "properties" : {
                              "download" : {
                                "type" : "object",
                                "properties" : {
                                  "href" : {
                                    "type" : "string",
                                    "description" : "URI to download the variation file"
                                  }
                                }
                              },
                              "self" : {
                                "type" : "object",
                                "properties" : {
                                  "href" : {
                                    "type" : "string",
                                    "description" : "URI of the variation entity"
                                  }
                                }
                              }
                            },
                            "description" : "Links to get and download the variation file"
                          },
                          "code" : {
                            "type" : "string",
                            "description" : "Code of the variation"
                          },
                          "locale" : {
                            "type" : "string",
                            "description" : "Locale code of the variation"
                          },
                          "scope" : {
                            "type" : "string",
                            "description" : "Channel code of the variation"
                          }
                        }
                      }
                    }
                  },
                  "example" : {
                    "categories" : [ "tshirts_assets" ],
                    "code" : "tshirt_artemis_main_picture",
                    "description" : "The main picture of the Artemis t-shirt",
                    "end_of_use" : "2019-09-01T00:00:00+0200",
                    "localizable" : false,
                    "reference_files" : [ {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                        }
                      },
                      "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                    } ],
                    "tags" : [ "tshirts", "red", "summer" ],
                    "variation_files" : [ {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                        }
                      },
                      "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
                      "scope" : "e_commerce"
                    }, {
                      "_link" : {
                        "download" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                        },
                        "self" : {
                          "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                        }
                      },
                      "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg",
                      "scope" : "print"
                    } ]
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PAM asset" ],
        "summary" : "Update/create a PAM asset",
        "description" : "This endpoint allows you to update a given PAM asset. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no asset exists for the given code, it creates it.",
        "operationId" : "patch_pam_assets__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the PAM asset categories in which the asset is classified",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "PAM asset code"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Description of the PAM asset",
                    "default" : "null"
                  },
                  "end_of_use" : {
                    "type" : "string",
                    "description" : "Date on which the PAM asset expire",
                    "format" : "dateTime",
                    "default" : "null"
                  },
                  "localizable" : {
                    "type" : "boolean",
                    "description" : "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                    "default" : false
                  },
                  "reference_files" : {
                    "type" : "array",
                    "description" : "Reference files of the PAM asset",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "_link" : {
                          "type" : "object",
                          "properties" : {
                            "download" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI to download the reference file"
                                }
                              }
                            },
                            "self" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI of the reference file entity"
                                }
                              }
                            }
                          },
                          "description" : "Links to get and download the reference file"
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "Code of the reference file"
                        },
                        "locale" : {
                          "type" : "string",
                          "description" : "Locale code of the reference file"
                        }
                      }
                    }
                  },
                  "tags" : {
                    "type" : "array",
                    "description" : "Tags of the PAM asset",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "variation_files" : {
                    "type" : "array",
                    "description" : "Variations of the PAM asset",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "_link" : {
                          "type" : "object",
                          "properties" : {
                            "download" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI to download the variation file"
                                }
                              }
                            },
                            "self" : {
                              "type" : "object",
                              "properties" : {
                                "href" : {
                                  "type" : "string",
                                  "description" : "URI of the variation entity"
                                }
                              }
                            }
                          },
                          "description" : "Links to get and download the variation file"
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "Code of the variation"
                        },
                        "locale" : {
                          "type" : "string",
                          "description" : "Locale code of the variation"
                        },
                        "scope" : {
                          "type" : "string",
                          "description" : "Channel code of the variation"
                        }
                      }
                    }
                  }
                },
                "example" : {
                  "categories" : [ "tshirts_assets" ],
                  "code" : "tshirt_artemis_main_picture",
                  "description" : "The main picture of the Artemis t-shirt",
                  "end_of_use" : "2019-09-01T00:00:00+0200",
                  "localizable" : false,
                  "reference_files" : [ {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                      }
                    },
                    "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                  } ],
                  "tags" : [ "tshirts", "red", "summer" ],
                  "variation_files" : [ {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                      }
                    },
                    "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
                    "scope" : "e_commerce"
                  }, {
                    "_link" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                      }
                    },
                    "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg",
                    "scope" : "print"
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/association-types" : {
      "get" : {
        "tags" : [ "Association type" ],
        "summary" : "Get a list of association types",
        "description" : "This endpoint allows you to get a list of association types. Association types are paginated and sorted by code.",
        "operationId" : "association_types_get_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return association types paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Association types",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Association type code"
                                  },
                                  "is_quantified" : {
                                    "type" : "boolean",
                                    "description" : "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                                    "default" : false
                                  },
                                  "is_two_way" : {
                                    "type" : "boolean",
                                    "description" : "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                                    "default" : false
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Association type label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Association type labels for each locale"
                                  }
                                },
                                "example" : {
                                  "code" : "upsell",
                                  "is_quantified" : false,
                                  "is_two_way" : false,
                                  "labels" : {
                                    "en_US" : "Upsell",
                                    "fr_FR" : "Vente incitative"
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/association-types/X_SELL"
                      }
                    },
                    "code" : "X_SELL",
                    "is_quantified" : false,
                    "is_two_way" : false,
                    "labels" : {
                      "en_US" : "Cross sell",
                      "fr_FR" : "Vente croisée"
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/association-types/UPSELL"
                      }
                    },
                    "code" : "UPSELL",
                    "is_quantified" : false,
                    "is_two_way" : false,
                    "labels" : {
                      "en_US" : "Upsell",
                      "fr_FR" : "Vente incitative"
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/association-types/SUBSTITUTION"
                      }
                    },
                    "code" : "SUBSTITUTION",
                    "is_quantified" : false,
                    "is_two_way" : false,
                    "labels" : {
                      "en_US" : "Substitution",
                      "fr_FR" : "Remplacement"
                    }
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/association-types?page=1&limit=3"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/association-types?page=1&limit=3"
                  }
                }
              },
              "current_page" : {
                "example" : 1
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Association type" ],
        "summary" : "Create a new association type",
        "description" : "This endpoint allows you to create a new association type.",
        "operationId" : "association_types_post",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Association type code"
                  },
                  "is_quantified" : {
                    "type" : "boolean",
                    "description" : "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                    "default" : false
                  },
                  "is_two_way" : {
                    "type" : "boolean",
                    "description" : "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                    "default" : false
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Association type label for the locale `localeCode`"
                      }
                    },
                    "description" : "Association type labels for each locale"
                  }
                },
                "example" : {
                  "code" : "upsell",
                  "is_quantified" : false,
                  "is_two_way" : false,
                  "labels" : {
                    "en_US" : "Upsell",
                    "fr_FR" : "Vente incitative"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Association type" ],
        "summary" : "Update/create several association types",
        "description" : "This endpoint allows you to update and/or create several association types at once.",
        "operationId" : "several_association_types_patch",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Association type code"
                  },
                  "is_quantified" : {
                    "type" : "boolean",
                    "description" : "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                    "default" : false
                  },
                  "is_two_way" : {
                    "type" : "boolean",
                    "description" : "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                    "default" : false
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Association type label for the locale `localeCode`"
                      }
                    },
                    "description" : "Association type labels for each locale"
                  }
                },
                "example" : {
                  "code" : "upsell",
                  "is_quantified" : false,
                  "is_two_way" : false,
                  "labels" : {
                    "en_US" : "Upsell",
                    "fr_FR" : "Vente incitative"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"new_sell\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"substitution\",\"status_code\":422,\"message\":\"Property \\\"type\\\" does not exist. Check the standard format documentation.\",\"_links\":{\"documentation\":{\"href\":\"http:\\/\\/api.akeneo.com\\/api-reference.html#patch_association_types__code_\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"x_cross_sell\",\"status_code\":204}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/association-types/{code}" : {
      "get" : {
        "tags" : [ "Association type" ],
        "summary" : "Get an association type",
        "description" : "This endpoint allows you to get the information about a given association type.",
        "operationId" : "association_types_get",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Association type code"
                    },
                    "is_quantified" : {
                      "type" : "boolean",
                      "description" : "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                      "default" : false
                    },
                    "is_two_way" : {
                      "type" : "boolean",
                      "description" : "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                      "default" : false
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Association type label for the locale `localeCode`"
                        }
                      },
                      "description" : "Association type labels for each locale"
                    }
                  },
                  "example" : {
                    "code" : "upsell",
                    "is_quantified" : false,
                    "is_two_way" : false,
                    "labels" : {
                      "en_US" : "Upsell",
                      "fr_FR" : "Vente incitative"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Association type" ],
        "summary" : "Update/create an association type",
        "description" : "This endpoint allows you to update a given association type. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no association type exists for the given code, it creates it.",
        "operationId" : "association_types_patch",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Association type code"
                  },
                  "is_quantified" : {
                    "type" : "boolean",
                    "description" : "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                    "default" : false
                  },
                  "is_two_way" : {
                    "type" : "boolean",
                    "description" : "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                    "default" : false
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Association type label for the locale `localeCode`"
                      }
                    },
                    "description" : "Association type labels for each locale"
                  }
                },
                "example" : {
                  "code" : "upsell",
                  "is_quantified" : false,
                  "is_two_way" : false,
                  "labels" : {
                    "en_US" : "Upsell",
                    "fr_FR" : "Vente incitative"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/attribute-groups" : {
      "get" : {
        "tags" : [ "Attribute group" ],
        "summary" : "Get list of attribute groups",
        "description" : "This endpoint allows you to get a list of attribute groups. Attribute groups are paginated and sorted by code.",
        "operationId" : "attribute_groups_get_list",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter attribute groups, for more details see the <a href=\"/documentation/filter.html#filter-attribute-groups\">Filters</a> section.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return attribute groups paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Attribute groups",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "attributes" : {
                                    "type" : "array",
                                    "description" : "Attribute codes that compose the attribute group",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Attribute group code"
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Attribute group label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Attribute group labels for each locale"
                                  },
                                  "sort_order" : {
                                    "type" : "integer",
                                    "description" : "Attribute group order among other attribute groups"
                                  }
                                },
                                "example" : {
                                  "attributes" : [ "sku", "name", "description", "response_time", "release_date", "price" ],
                                  "code" : "marketing",
                                  "labels" : {
                                    "en_US" : "Marketing",
                                    "fr_FR" : "Marketing"
                                  },
                                  "sort_order" : 4
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/attribute-groups/marketing"
                      }
                    },
                    "attributes" : [ "sku", "name", "description", "response_time", "release_date", "price" ],
                    "code" : "marketing",
                    "labels" : {
                      "en_US" : "Marketing",
                      "fr_FR" : "Marketing"
                    },
                    "sort_order" : 4
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/attribute-groups/technical"
                      }
                    },
                    "attributes" : [ "weight", "maximum_scan_size", "color_scanning", "power_requirements", "maximum_print_size", "sensor_type", "total_megapixels", "optical_zoom", "camera_type" ],
                    "code" : "technical",
                    "labels" : {
                      "en_US" : "Technical",
                      "fr_FR" : "Technique"
                    },
                    "sort_order" : 5
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attribute-groups?page=1&limit=2"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attribute-groups?page=4&limit=2"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attribute-groups?page=2&limit=2"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attribute-groups?page=3&limit=2"
                  }
                }
              },
              "current_page" : {
                "example" : 3
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Attribute group" ],
        "summary" : "Create a new attribute group",
        "description" : "This endpoint allows you to create a new attribute group.",
        "operationId" : "attribute_groups_post",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "attributes" : {
                    "type" : "array",
                    "description" : "Attribute codes that compose the attribute group",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute group code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute group label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute group labels for each locale"
                  },
                  "sort_order" : {
                    "type" : "integer",
                    "description" : "Attribute group order among other attribute groups"
                  }
                },
                "example" : {
                  "attributes" : [ "sku", "name", "description", "response_time", "release_date", "price" ],
                  "code" : "marketing",
                  "labels" : {
                    "en_US" : "Marketing",
                    "fr_FR" : "Marketing"
                  },
                  "sort_order" : 4
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Attribute group" ],
        "summary" : "Update/create several attribute groups",
        "description" : "This endpoint allows you to update and/or create several attribute groups at once.",
        "operationId" : "several_attribute_groups_patch",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "attributes" : {
                    "type" : "array",
                    "description" : "Attribute codes that compose the attribute group",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute group code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute group label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute group labels for each locale"
                  },
                  "sort_order" : {
                    "type" : "integer",
                    "description" : "Attribute group order among other attribute groups"
                  }
                },
                "example" : {
                  "attributes" : [ "sku", "name", "description", "response_time", "release_date", "price" ],
                  "code" : "marketing",
                  "labels" : {
                    "en_US" : "Marketing",
                    "fr_FR" : "Marketing"
                  },
                  "sort_order" : 4
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"technical\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"marketing\",\"status_code\":422,\"message\":\"Property \\\"type\\\" does not exist. Check the standard format documentation.\",\"_links\":{\"documentation\":{\"href\":\"http:\\/\\/api.akeneo.com\\/api-reference.html#patch_attribute_groups__code_\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"design\",\"status_code\":204}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/attribute-groups/{code}" : {
      "get" : {
        "tags" : [ "Attribute group" ],
        "summary" : "Get an attribute group",
        "description" : "This endpoint allows you to get the information about a given attribute group.",
        "operationId" : "attribute_groups_get",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "attributes" : {
                      "type" : "array",
                      "description" : "Attribute codes that compose the attribute group",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Attribute group code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Attribute group label for the locale `localeCode`"
                        }
                      },
                      "description" : "Attribute group labels for each locale"
                    },
                    "sort_order" : {
                      "type" : "integer",
                      "description" : "Attribute group order among other attribute groups"
                    }
                  },
                  "example" : {
                    "attributes" : [ "sku", "name", "description", "response_time", "release_date", "price" ],
                    "code" : "marketing",
                    "labels" : {
                      "en_US" : "Marketing",
                      "fr_FR" : "Marketing"
                    },
                    "sort_order" : 4
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Attribute group" ],
        "summary" : "Update/create an attribute group",
        "description" : "This endpoint allows you to update a given attribute group. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no attribute group exists for the given code, it creates it.",
        "operationId" : "attribute_groups_patch",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "attributes" : {
                    "type" : "array",
                    "description" : "Attribute codes that compose the attribute group",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute group code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute group label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute group labels for each locale"
                  },
                  "sort_order" : {
                    "type" : "integer",
                    "description" : "Attribute group order among other attribute groups"
                  }
                },
                "example" : {
                  "attributes" : [ "sku", "name", "description", "response_time", "release_date", "price" ],
                  "code" : "marketing",
                  "labels" : {
                    "en_US" : "Marketing",
                    "fr_FR" : "Marketing"
                  },
                  "sort_order" : 4
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/attributes" : {
      "get" : {
        "tags" : [ "Attribute" ],
        "summary" : "Get list of attributes",
        "description" : "This endpoint allows you to get a list of attributes. Attributes are paginated and sorted by code.",
        "operationId" : "get_attributes",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter attributes, for more details see the <a href=\"/documentation/filter.html#filter-attributes\">Filters</a> section.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_table_select_options",
          "in" : "query",
          "description" : "Return the options of 'select' column types (of a table attribute) in the response. (Only available since the 7.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return attributes paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Attributes",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code", "group", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "allowed_extensions" : {
                                    "type" : "array",
                                    "description" : "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "available_locales" : {
                                    "type" : "array",
                                    "description" : "To make the attribute locale specfic, specify here for which locales it is specific",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Attribute code"
                                  },
                                  "date_max" : {
                                    "type" : "string",
                                    "description" : "Maximum date allowed when the attribute type is `pim_catalog_date`",
                                    "format" : "date-time"
                                  },
                                  "date_min" : {
                                    "type" : "string",
                                    "description" : "Minimum date allowed when the attribute type is `pim_catalog_date`",
                                    "format" : "date-time"
                                  },
                                  "decimals_allowed" : {
                                    "type" : "boolean",
                                    "description" : "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                                  },
                                  "default_metric_unit" : {
                                    "type" : "string",
                                    "description" : "Default metric unit when the attribute type is `pim_catalog_metric`"
                                  },
                                  "default_value" : {
                                    "type" : "boolean",
                                    "description" : "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)"
                                  },
                                  "group" : {
                                    "type" : "string",
                                    "description" : "Attribute group"
                                  },
                                  "group_labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Group label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Group labels for each locale"
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Attribute label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Attribute labels for each locale"
                                  },
                                  "localizable" : {
                                    "type" : "boolean",
                                    "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                                    "default" : false
                                  },
                                  "max_characters" : {
                                    "type" : "integer",
                                    "description" : "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`"
                                  },
                                  "max_file_size" : {
                                    "type" : "string",
                                    "description" : "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`"
                                  },
                                  "metric_family" : {
                                    "type" : "string",
                                    "description" : "Metric family when the attribute type is `pim_catalog_metric`"
                                  },
                                  "negative_allowed" : {
                                    "type" : "boolean",
                                    "description" : "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`"
                                  },
                                  "number_max" : {
                                    "type" : "string",
                                    "description" : "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                                  },
                                  "number_min" : {
                                    "type" : "string",
                                    "description" : "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                                  },
                                  "reference_data_name" : {
                                    "type" : "string",
                                    "description" : "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`"
                                  },
                                  "scopable" : {
                                    "type" : "boolean",
                                    "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                                    "default" : false
                                  },
                                  "sort_order" : {
                                    "type" : "integer",
                                    "description" : "Order of the attribute in its group"
                                  },
                                  "table_configuration" : {
                                    "type" : "array",
                                    "description" : "Configuration of the Table attribute (columns)",
                                    "items" : {
                                      "required" : [ "code", "data_type" ],
                                      "type" : "object",
                                      "properties" : {
                                        "code" : {
                                          "type" : "string",
                                          "description" : "Column code"
                                        },
                                        "data_type" : {
                                          "type" : "string",
                                          "description" : "Column data type",
                                          "enum" : [ "select", "text", "number", "boolean" ]
                                        },
                                        "is_required_for_completeness" : {
                                          "type" : "boolean",
                                          "description" : "Defines if the column should be entirely filled for the attribute to be considered complete",
                                          "default" : false
                                        },
                                        "labels" : {
                                          "type" : "object",
                                          "properties" : {
                                            "localeCode" : {
                                              "type" : "string",
                                              "description" : "Column label for the locale `localeCode`"
                                            }
                                          },
                                          "description" : "Column labels for each locale"
                                        },
                                        "validations" : {
                                          "type" : "object",
                                          "properties" : {
                                            "decimals_allowed" : {
                                              "type" : "boolean",
                                              "description" : "whether the value of a numeric cell can hold a decimal part"
                                            },
                                            "max" : {
                                              "type" : "number",
                                              "description" : "maximum value of a numeric cell"
                                            },
                                            "max_length" : {
                                              "type" : "number",
                                              "description" : "maximum length of a text cell"
                                            },
                                            "min" : {
                                              "type" : "number",
                                              "description" : "minimum value of a numeric cell"
                                            }
                                          },
                                          "description" : "User defined validation constraints on the cell content"
                                        }
                                      }
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                                    "enum" : [ "pim_catalog_identifier", "pim_catalog_metric", "pim_catalog_number", "pim_catalog_reference_data_multi_select", "pim_catalog_reference_data_simple_select", "pim_catalog_simpleselect", "pim_catalog_multiselect", "pim_catalog_date", "pim_catalog_textarea", "pim_catalog_text", "pim_catalog_file", "pim_catalog_image", "pim_catalog_price_collection", "pim_catalog_boolean", "akeneo_reference_entity", "akeneo_reference_entity_collection", "pim_catalog_asset_collection" ]
                                  },
                                  "unique" : {
                                    "type" : "boolean",
                                    "description" : "Whether two values for the attribute cannot be the same"
                                  },
                                  "useable_as_grid_filter" : {
                                    "type" : "boolean",
                                    "description" : "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                                  },
                                  "validation_regexp" : {
                                    "type" : "string",
                                    "description" : "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                                  },
                                  "validation_rule" : {
                                    "type" : "string",
                                    "description" : "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                                  },
                                  "wysiwyg_enabled" : {
                                    "type" : "boolean",
                                    "description" : "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`"
                                  }
                                },
                                "example" : {
                                  "allowed_extensions" : [ ],
                                  "available_locales" : [ ],
                                  "code" : "release_date",
                                  "date_max" : "2017-08-08T22:00:00",
                                  "date_min" : "2017-06-28T08:00:00",
                                  "group" : "marketing",
                                  "group_labels" : {
                                    "en_US" : "Marketing",
                                    "fr_FR" : "Marketing"
                                  },
                                  "labels" : {
                                    "en_US" : "Sale date",
                                    "fr_FR" : "Date des soldes"
                                  },
                                  "localizable" : false,
                                  "scopable" : false,
                                  "sort_order" : 1,
                                  "type" : "pim_catalog_date",
                                  "unique" : false,
                                  "useable_as_grid_filter" : true
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/attributes/sku"
                      }
                    },
                    "allowed_extensions" : [ ],
                    "available_locales" : [ ],
                    "code" : "sku",
                    "decimals_allowed" : false,
                    "group" : "other",
                    "group_labels" : {
                      "en_US" : "Other",
                      "fr_FR" : "Autre"
                    },
                    "labels" : {
                      "en_US" : "Identifier",
                      "fr_FR" : "Identifiant"
                    },
                    "localizable" : false,
                    "negative_allowed" : false,
                    "scopable" : false,
                    "sort_order" : 1,
                    "type" : "pim_catalog_identifier",
                    "unique" : true,
                    "useable_as_grid_filter" : true,
                    "wysiwyg_enabled" : false
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/attributes/release_date"
                      }
                    },
                    "allowed_extensions" : [ ],
                    "available_locales" : [ ],
                    "code" : "release_date",
                    "date_max" : "2017-08-08T22:00:00",
                    "date_min" : "2017-06-28T08:00:00",
                    "decimals_allowed" : false,
                    "group" : "marketing",
                    "labels" : {
                      "en_US" : "Sale date",
                      "fr_FR" : "Date des soldes"
                    },
                    "localizable" : false,
                    "negative_allowed" : false,
                    "scopable" : false,
                    "sort_order" : 1,
                    "type" : "pim_catalog_date",
                    "unique" : false,
                    "useable_as_grid_filter" : true,
                    "wysiwyg_enabled" : false
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "http://localhost:8080/api/rest/v1/attributes/food_composition"
                      }
                    },
                    "allowed_extensions" : [ ],
                    "available_locales" : [ ],
                    "code" : "food_composition",
                    "group" : "product",
                    "guidelines" : { },
                    "labels" : {
                      "en_US" : "Composition",
                      "fr_FR" : "Composition"
                    },
                    "localizable" : false,
                    "scopable" : false,
                    "sort_order" : 0,
                    "table_configuration" : [ {
                      "code" : "ingredient",
                      "data_type" : "select",
                      "is_required_for_completeness" : true,
                      "labels" : {
                        "en_US" : "Ingredient",
                        "fr_FR" : "Ingrédient"
                      },
                      "validations" : { }
                    }, {
                      "code" : "percentage",
                      "data_type" : "number",
                      "is_required_for_completeness" : true,
                      "labels" : {
                        "en_US" : "%",
                        "fr_FR" : "%"
                      },
                      "validations" : {
                        "decimals_allowed" : true,
                        "max" : 100,
                        "min" : 0
                      }
                    }, {
                      "code" : "allergen",
                      "data_type" : "boolean",
                      "is_required_for_completeness" : false,
                      "labels" : {
                        "en_US" : "Allergen",
                        "fr_FR" : "Allergène"
                      },
                      "validations" : { }
                    } ],
                    "type" : "pim_catalog_table",
                    "unique" : false,
                    "useable_as_grid_filter" : false
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attributes?page=1&limit=3"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attributes?page=4&limit=3"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attributes?page=2&limit=3"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attributes?page=3&limit=3"
                  }
                }
              },
              "current_page" : {
                "example" : 3
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Attribute" ],
        "summary" : "Create a new attribute",
        "description" : "This endpoint allows you to create a new attribute.",
        "operationId" : "post_attributes",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "group", "type" ],
                "type" : "object",
                "properties" : {
                  "allowed_extensions" : {
                    "type" : "array",
                    "description" : "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "available_locales" : {
                    "type" : "array",
                    "description" : "To make the attribute locale specfic, specify here for which locales it is specific",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute code"
                  },
                  "date_max" : {
                    "type" : "string",
                    "description" : "Maximum date allowed when the attribute type is `pim_catalog_date`",
                    "format" : "date-time"
                  },
                  "date_min" : {
                    "type" : "string",
                    "description" : "Minimum date allowed when the attribute type is `pim_catalog_date`",
                    "format" : "date-time"
                  },
                  "decimals_allowed" : {
                    "type" : "boolean",
                    "description" : "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                  },
                  "default_metric_unit" : {
                    "type" : "string",
                    "description" : "Default metric unit when the attribute type is `pim_catalog_metric`"
                  },
                  "default_value" : {
                    "type" : "boolean",
                    "description" : "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)"
                  },
                  "group" : {
                    "type" : "string",
                    "description" : "Attribute group"
                  },
                  "group_labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Group label for the locale `localeCode`"
                      }
                    },
                    "description" : "Group labels for each locale"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute labels for each locale"
                  },
                  "localizable" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                    "default" : false
                  },
                  "max_characters" : {
                    "type" : "integer",
                    "description" : "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`"
                  },
                  "max_file_size" : {
                    "type" : "string",
                    "description" : "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`"
                  },
                  "metric_family" : {
                    "type" : "string",
                    "description" : "Metric family when the attribute type is `pim_catalog_metric`"
                  },
                  "negative_allowed" : {
                    "type" : "boolean",
                    "description" : "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`"
                  },
                  "number_max" : {
                    "type" : "string",
                    "description" : "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                  },
                  "number_min" : {
                    "type" : "string",
                    "description" : "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                  },
                  "reference_data_name" : {
                    "type" : "string",
                    "description" : "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`"
                  },
                  "scopable" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                    "default" : false
                  },
                  "sort_order" : {
                    "type" : "integer",
                    "description" : "Order of the attribute in its group"
                  },
                  "table_configuration" : {
                    "type" : "array",
                    "description" : "Configuration of the Table attribute (columns)",
                    "items" : {
                      "required" : [ "code", "data_type" ],
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Column code"
                        },
                        "data_type" : {
                          "type" : "string",
                          "description" : "Column data type",
                          "enum" : [ "select", "text", "number", "boolean" ]
                        },
                        "is_required_for_completeness" : {
                          "type" : "boolean",
                          "description" : "Defines if the column should be entirely filled for the attribute to be considered complete",
                          "default" : false
                        },
                        "labels" : {
                          "type" : "object",
                          "properties" : {
                            "localeCode" : {
                              "type" : "string",
                              "description" : "Column label for the locale `localeCode`"
                            }
                          },
                          "description" : "Column labels for each locale"
                        },
                        "validations" : {
                          "type" : "object",
                          "properties" : {
                            "decimals_allowed" : {
                              "type" : "boolean",
                              "description" : "whether the value of a numeric cell can hold a decimal part"
                            },
                            "max" : {
                              "type" : "number",
                              "description" : "maximum value of a numeric cell"
                            },
                            "max_length" : {
                              "type" : "number",
                              "description" : "maximum length of a text cell"
                            },
                            "min" : {
                              "type" : "number",
                              "description" : "minimum value of a numeric cell"
                            }
                          },
                          "description" : "User defined validation constraints on the cell content"
                        }
                      }
                    }
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                    "enum" : [ "pim_catalog_identifier", "pim_catalog_metric", "pim_catalog_number", "pim_catalog_reference_data_multi_select", "pim_catalog_reference_data_simple_select", "pim_catalog_simpleselect", "pim_catalog_multiselect", "pim_catalog_date", "pim_catalog_textarea", "pim_catalog_text", "pim_catalog_file", "pim_catalog_image", "pim_catalog_price_collection", "pim_catalog_boolean", "akeneo_reference_entity", "akeneo_reference_entity_collection", "pim_catalog_asset_collection" ]
                  },
                  "unique" : {
                    "type" : "boolean",
                    "description" : "Whether two values for the attribute cannot be the same"
                  },
                  "useable_as_grid_filter" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                  },
                  "validation_regexp" : {
                    "type" : "string",
                    "description" : "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                  },
                  "validation_rule" : {
                    "type" : "string",
                    "description" : "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                  },
                  "wysiwyg_enabled" : {
                    "type" : "boolean",
                    "description" : "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`"
                  }
                },
                "example" : {
                  "allowed_extensions" : [ ],
                  "available_locales" : [ ],
                  "code" : "release_date",
                  "date_max" : "2017-08-08T22:00:00",
                  "date_min" : "2017-06-28T08:00:00",
                  "group" : "marketing",
                  "group_labels" : {
                    "en_US" : "Marketing",
                    "fr_FR" : "Marketing"
                  },
                  "labels" : {
                    "en_US" : "Sale date",
                    "fr_FR" : "Date des soldes"
                  },
                  "localizable" : false,
                  "scopable" : false,
                  "sort_order" : 1,
                  "type" : "pim_catalog_date",
                  "unique" : false,
                  "useable_as_grid_filter" : true
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Attribute" ],
        "summary" : "Update/create several attributes",
        "description" : "This endpoint allows you to update and/or create several attributes at once.",
        "operationId" : "patch_attributes",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "group", "type" ],
                "type" : "object",
                "properties" : {
                  "allowed_extensions" : {
                    "type" : "array",
                    "description" : "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "available_locales" : {
                    "type" : "array",
                    "description" : "To make the attribute locale specfic, specify here for which locales it is specific",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute code"
                  },
                  "date_max" : {
                    "type" : "string",
                    "description" : "Maximum date allowed when the attribute type is `pim_catalog_date`",
                    "format" : "date-time"
                  },
                  "date_min" : {
                    "type" : "string",
                    "description" : "Minimum date allowed when the attribute type is `pim_catalog_date`",
                    "format" : "date-time"
                  },
                  "decimals_allowed" : {
                    "type" : "boolean",
                    "description" : "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                  },
                  "default_metric_unit" : {
                    "type" : "string",
                    "description" : "Default metric unit when the attribute type is `pim_catalog_metric`"
                  },
                  "default_value" : {
                    "type" : "boolean",
                    "description" : "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)"
                  },
                  "group" : {
                    "type" : "string",
                    "description" : "Attribute group"
                  },
                  "group_labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Group label for the locale `localeCode`"
                      }
                    },
                    "description" : "Group labels for each locale"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute labels for each locale"
                  },
                  "localizable" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                    "default" : false
                  },
                  "max_characters" : {
                    "type" : "integer",
                    "description" : "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`"
                  },
                  "max_file_size" : {
                    "type" : "string",
                    "description" : "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`"
                  },
                  "metric_family" : {
                    "type" : "string",
                    "description" : "Metric family when the attribute type is `pim_catalog_metric`"
                  },
                  "negative_allowed" : {
                    "type" : "boolean",
                    "description" : "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`"
                  },
                  "number_max" : {
                    "type" : "string",
                    "description" : "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                  },
                  "number_min" : {
                    "type" : "string",
                    "description" : "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                  },
                  "reference_data_name" : {
                    "type" : "string",
                    "description" : "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`"
                  },
                  "scopable" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                    "default" : false
                  },
                  "sort_order" : {
                    "type" : "integer",
                    "description" : "Order of the attribute in its group"
                  },
                  "table_configuration" : {
                    "type" : "array",
                    "description" : "Configuration of the Table attribute (columns)",
                    "items" : {
                      "required" : [ "code", "data_type" ],
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Column code"
                        },
                        "data_type" : {
                          "type" : "string",
                          "description" : "Column data type",
                          "enum" : [ "select", "text", "number", "boolean" ]
                        },
                        "is_required_for_completeness" : {
                          "type" : "boolean",
                          "description" : "Defines if the column should be entirely filled for the attribute to be considered complete",
                          "default" : false
                        },
                        "labels" : {
                          "type" : "object",
                          "properties" : {
                            "localeCode" : {
                              "type" : "string",
                              "description" : "Column label for the locale `localeCode`"
                            }
                          },
                          "description" : "Column labels for each locale"
                        },
                        "validations" : {
                          "type" : "object",
                          "properties" : {
                            "decimals_allowed" : {
                              "type" : "boolean",
                              "description" : "whether the value of a numeric cell can hold a decimal part"
                            },
                            "max" : {
                              "type" : "number",
                              "description" : "maximum value of a numeric cell"
                            },
                            "max_length" : {
                              "type" : "number",
                              "description" : "maximum length of a text cell"
                            },
                            "min" : {
                              "type" : "number",
                              "description" : "minimum value of a numeric cell"
                            }
                          },
                          "description" : "User defined validation constraints on the cell content"
                        }
                      }
                    }
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                    "enum" : [ "pim_catalog_identifier", "pim_catalog_metric", "pim_catalog_number", "pim_catalog_reference_data_multi_select", "pim_catalog_reference_data_simple_select", "pim_catalog_simpleselect", "pim_catalog_multiselect", "pim_catalog_date", "pim_catalog_textarea", "pim_catalog_text", "pim_catalog_file", "pim_catalog_image", "pim_catalog_price_collection", "pim_catalog_boolean", "akeneo_reference_entity", "akeneo_reference_entity_collection", "pim_catalog_asset_collection" ]
                  },
                  "unique" : {
                    "type" : "boolean",
                    "description" : "Whether two values for the attribute cannot be the same"
                  },
                  "useable_as_grid_filter" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                  },
                  "validation_regexp" : {
                    "type" : "string",
                    "description" : "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                  },
                  "validation_rule" : {
                    "type" : "string",
                    "description" : "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                  },
                  "wysiwyg_enabled" : {
                    "type" : "boolean",
                    "description" : "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`"
                  }
                },
                "example" : {
                  "allowed_extensions" : [ ],
                  "available_locales" : [ ],
                  "code" : "release_date",
                  "date_max" : "2017-08-08T22:00:00",
                  "date_min" : "2017-06-28T08:00:00",
                  "group" : "marketing",
                  "group_labels" : {
                    "en_US" : "Marketing",
                    "fr_FR" : "Marketing"
                  },
                  "labels" : {
                    "en_US" : "Sale date",
                    "fr_FR" : "Date des soldes"
                  },
                  "localizable" : false,
                  "scopable" : false,
                  "sort_order" : 1,
                  "type" : "pim_catalog_date",
                  "unique" : false,
                  "useable_as_grid_filter" : true
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"description\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"short_description\",\"status_code\":422,\"message\":\"Group \"marketig\" does not exist.\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"release_date\",\"status_code\":204}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/attributes/{attribute_code}/options" : {
      "get" : {
        "tags" : [ "Attribute option" ],
        "summary" : "Get list of attribute options",
        "description" : "This endpoint allows you to get a list of attribute options. Attribute options are paginated and sorted by code.",
        "operationId" : "get_attributes__attribute_code__options",
        "parameters" : [ {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return attribute options paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Attribute Options",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "attribute" : {
                                    "type" : "string",
                                    "description" : "Code of attribute related to the attribute option"
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Code of option"
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Attribute option label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Attribute option labels for each locale"
                                  },
                                  "sort_order" : {
                                    "type" : "integer",
                                    "description" : "Order of attribute option"
                                  }
                                },
                                "example" : {
                                  "attribute" : "a_simple_select",
                                  "code" : "black",
                                  "labels" : {
                                    "en_US" : "Black",
                                    "fr_FR" : "Noir"
                                  },
                                  "sort_order" : 2
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/attributes/color/options/red"
                      }
                    },
                    "attribute" : "a_simple_select",
                    "code" : "red",
                    "labels" : {
                      "en_US" : "Red",
                      "fr_FR" : "Rouge"
                    },
                    "sort_order" : 1
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/attributes/color/options/black"
                      }
                    },
                    "attribute" : "a_simple_select",
                    "code" : "black",
                    "labels" : {
                      "en_US" : "Black",
                      "fr_FR" : "Noir"
                    },
                    "sort_order" : 2
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/attributes/color/options/purple"
                      }
                    },
                    "attribute" : "a_simple_select",
                    "code" : "purple",
                    "labels" : {
                      "en_US" : "Purple",
                      "fr_FR" : "Violet"
                    },
                    "sort_order" : 3
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=1&limit=3"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=4&limit=3"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=2&limit=3"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=3&limit=3"
                  }
                }
              },
              "current_page" : {
                "example" : 3
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Attribute option" ],
        "summary" : "Create a new attribute option",
        "description" : "This endpoint allows you to create a new attribute option.",
        "operationId" : "post_attributes__attribute_code__options",
        "parameters" : [ {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "attribute" : {
                    "type" : "string",
                    "description" : "Code of attribute related to the attribute option"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Code of option"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute option label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute option labels for each locale"
                  },
                  "sort_order" : {
                    "type" : "integer",
                    "description" : "Order of attribute option"
                  }
                },
                "example" : {
                  "attribute" : "a_simple_select",
                  "code" : "black",
                  "labels" : {
                    "en_US" : "Black",
                    "fr_FR" : "Noir"
                  },
                  "sort_order" : 2
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Attribute option" ],
        "summary" : "Update/create several attribute options",
        "description" : "This endpoint allows you to update several attribute options at once.",
        "operationId" : "patch_attributes__attribute_code__options",
        "parameters" : [ {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "attribute" : {
                    "type" : "string",
                    "description" : "Code of attribute related to the attribute option"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Code of option"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute option label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute option labels for each locale"
                  },
                  "sort_order" : {
                    "type" : "integer",
                    "description" : "Order of attribute option"
                  }
                },
                "example" : {
                  "attribute" : "a_simple_select",
                  "code" : "black",
                  "labels" : {
                    "en_US" : "Black",
                    "fr_FR" : "Noir"
                  },
                  "sort_order" : 2
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"black\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"red\",\"status_code\":422,\"message\":\"Property \"label\" does not exist. Check the API format documentation.\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"yellow\",\"status_code\":204}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/attributes/{attribute_code}/options/{code}" : {
      "get" : {
        "tags" : [ "Attribute option" ],
        "summary" : "Get an attribute option",
        "description" : "This endpoint allows you to get the information about a given attribute option.",
        "operationId" : "get_attributes__attribute_code__options__code_",
        "parameters" : [ {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "attribute" : {
                      "type" : "string",
                      "description" : "Code of attribute related to the attribute option"
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Code of option"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Attribute option label for the locale `localeCode`"
                        }
                      },
                      "description" : "Attribute option labels for each locale"
                    },
                    "sort_order" : {
                      "type" : "integer",
                      "description" : "Order of attribute option"
                    }
                  },
                  "example" : {
                    "attribute" : "a_simple_select",
                    "code" : "black",
                    "labels" : {
                      "en_US" : "Black",
                      "fr_FR" : "Noir"
                    },
                    "sort_order" : 2
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Attribute option" ],
        "summary" : "Update/create an attribute option",
        "description" : "This endpoint allows you to update a given attribute option. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no attribute option exists for the given code, it creates it.",
        "operationId" : "patch_attributes__attribute_code__options__code_",
        "parameters" : [ {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "attribute" : {
                    "type" : "string",
                    "description" : "Code of attribute related to the attribute option"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Code of option"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute option label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute option labels for each locale"
                  },
                  "sort_order" : {
                    "type" : "integer",
                    "description" : "Order of attribute option"
                  }
                },
                "example" : {
                  "attribute" : "a_simple_select",
                  "code" : "black",
                  "labels" : {
                    "en_US" : "Black",
                    "fr_FR" : "Noir"
                  },
                  "sort_order" : 2
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/attributes/{code}" : {
      "get" : {
        "tags" : [ "Attribute" ],
        "summary" : "Get an attribute",
        "description" : "This endpoint allows you to get the information about a given attribute.",
        "operationId" : "get_attributes__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "with_table_select_options",
          "in" : "query",
          "description" : "Return the options of 'select' column types (of a table attribute) in the response. (Only available since the 7.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code", "group", "type" ],
                  "type" : "object",
                  "properties" : {
                    "allowed_extensions" : {
                      "type" : "array",
                      "description" : "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "available_locales" : {
                      "type" : "array",
                      "description" : "To make the attribute locale specfic, specify here for which locales it is specific",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Attribute code"
                    },
                    "date_max" : {
                      "type" : "string",
                      "description" : "Maximum date allowed when the attribute type is `pim_catalog_date`",
                      "format" : "date-time"
                    },
                    "date_min" : {
                      "type" : "string",
                      "description" : "Minimum date allowed when the attribute type is `pim_catalog_date`",
                      "format" : "date-time"
                    },
                    "decimals_allowed" : {
                      "type" : "boolean",
                      "description" : "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                    },
                    "default_metric_unit" : {
                      "type" : "string",
                      "description" : "Default metric unit when the attribute type is `pim_catalog_metric`"
                    },
                    "default_value" : {
                      "type" : "boolean",
                      "description" : "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)"
                    },
                    "group" : {
                      "type" : "string",
                      "description" : "Attribute group"
                    },
                    "group_labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Group label for the locale `localeCode`"
                        }
                      },
                      "description" : "Group labels for each locale"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description" : "Attribute labels for each locale"
                    },
                    "localizable" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                      "default" : false
                    },
                    "max_characters" : {
                      "type" : "integer",
                      "description" : "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`"
                    },
                    "max_file_size" : {
                      "type" : "string",
                      "description" : "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`"
                    },
                    "metric_family" : {
                      "type" : "string",
                      "description" : "Metric family when the attribute type is `pim_catalog_metric`"
                    },
                    "negative_allowed" : {
                      "type" : "boolean",
                      "description" : "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`"
                    },
                    "number_max" : {
                      "type" : "string",
                      "description" : "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                    },
                    "number_min" : {
                      "type" : "string",
                      "description" : "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                    },
                    "reference_data_name" : {
                      "type" : "string",
                      "description" : "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`"
                    },
                    "scopable" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                      "default" : false
                    },
                    "sort_order" : {
                      "type" : "integer",
                      "description" : "Order of the attribute in its group"
                    },
                    "table_configuration" : {
                      "type" : "array",
                      "description" : "Configuration of the Table attribute (columns)",
                      "items" : {
                        "required" : [ "code", "data_type" ],
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string",
                            "description" : "Column code"
                          },
                          "data_type" : {
                            "type" : "string",
                            "description" : "Column data type",
                            "enum" : [ "select", "text", "number", "boolean" ]
                          },
                          "is_required_for_completeness" : {
                            "type" : "boolean",
                            "description" : "Defines if the column should be entirely filled for the attribute to be considered complete",
                            "default" : false
                          },
                          "labels" : {
                            "type" : "object",
                            "properties" : {
                              "localeCode" : {
                                "type" : "string",
                                "description" : "Column label for the locale `localeCode`"
                              }
                            },
                            "description" : "Column labels for each locale"
                          },
                          "validations" : {
                            "type" : "object",
                            "properties" : {
                              "decimals_allowed" : {
                                "type" : "boolean",
                                "description" : "whether the value of a numeric cell can hold a decimal part"
                              },
                              "max" : {
                                "type" : "number",
                                "description" : "maximum value of a numeric cell"
                              },
                              "max_length" : {
                                "type" : "number",
                                "description" : "maximum length of a text cell"
                              },
                              "min" : {
                                "type" : "number",
                                "description" : "minimum value of a numeric cell"
                              }
                            },
                            "description" : "User defined validation constraints on the cell content"
                          }
                        }
                      }
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                      "enum" : [ "pim_catalog_identifier", "pim_catalog_metric", "pim_catalog_number", "pim_catalog_reference_data_multi_select", "pim_catalog_reference_data_simple_select", "pim_catalog_simpleselect", "pim_catalog_multiselect", "pim_catalog_date", "pim_catalog_textarea", "pim_catalog_text", "pim_catalog_file", "pim_catalog_image", "pim_catalog_price_collection", "pim_catalog_boolean", "akeneo_reference_entity", "akeneo_reference_entity_collection", "pim_catalog_asset_collection" ]
                    },
                    "unique" : {
                      "type" : "boolean",
                      "description" : "Whether two values for the attribute cannot be the same"
                    },
                    "useable_as_grid_filter" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                    },
                    "validation_regexp" : {
                      "type" : "string",
                      "description" : "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                    },
                    "validation_rule" : {
                      "type" : "string",
                      "description" : "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                    },
                    "wysiwyg_enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`"
                    }
                  },
                  "example" : {
                    "allowed_extensions" : [ ],
                    "available_locales" : [ ],
                    "code" : "release_date",
                    "date_max" : "2017-08-08T22:00:00",
                    "date_min" : "2017-06-28T08:00:00",
                    "group" : "marketing",
                    "group_labels" : {
                      "en_US" : "Marketing",
                      "fr_FR" : "Marketing"
                    },
                    "labels" : {
                      "en_US" : "Sale date",
                      "fr_FR" : "Date des soldes"
                    },
                    "localizable" : false,
                    "scopable" : false,
                    "sort_order" : 1,
                    "type" : "pim_catalog_date",
                    "unique" : false,
                    "useable_as_grid_filter" : true
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Attribute" ],
        "summary" : "Update/create an attribute",
        "description" : "This endpoint allows you to update a given attribute. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no attribute exists for the given code, it creates it.",
        "operationId" : "patch_attributes__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "group", "type" ],
                "type" : "object",
                "properties" : {
                  "allowed_extensions" : {
                    "type" : "array",
                    "description" : "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "available_locales" : {
                    "type" : "array",
                    "description" : "To make the attribute locale specfic, specify here for which locales it is specific",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute code"
                  },
                  "date_max" : {
                    "type" : "string",
                    "description" : "Maximum date allowed when the attribute type is `pim_catalog_date`",
                    "format" : "date-time"
                  },
                  "date_min" : {
                    "type" : "string",
                    "description" : "Minimum date allowed when the attribute type is `pim_catalog_date`",
                    "format" : "date-time"
                  },
                  "decimals_allowed" : {
                    "type" : "boolean",
                    "description" : "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                  },
                  "default_metric_unit" : {
                    "type" : "string",
                    "description" : "Default metric unit when the attribute type is `pim_catalog_metric`"
                  },
                  "default_value" : {
                    "type" : "boolean",
                    "description" : "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)"
                  },
                  "group" : {
                    "type" : "string",
                    "description" : "Attribute group"
                  },
                  "group_labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Group label for the locale `localeCode`"
                      }
                    },
                    "description" : "Group labels for each locale"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute labels for each locale"
                  },
                  "localizable" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                    "default" : false
                  },
                  "max_characters" : {
                    "type" : "integer",
                    "description" : "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`"
                  },
                  "max_file_size" : {
                    "type" : "string",
                    "description" : "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`"
                  },
                  "metric_family" : {
                    "type" : "string",
                    "description" : "Metric family when the attribute type is `pim_catalog_metric`"
                  },
                  "negative_allowed" : {
                    "type" : "boolean",
                    "description" : "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`"
                  },
                  "number_max" : {
                    "type" : "string",
                    "description" : "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                  },
                  "number_min" : {
                    "type" : "string",
                    "description" : "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
                  },
                  "reference_data_name" : {
                    "type" : "string",
                    "description" : "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`"
                  },
                  "scopable" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                    "default" : false
                  },
                  "sort_order" : {
                    "type" : "integer",
                    "description" : "Order of the attribute in its group"
                  },
                  "table_configuration" : {
                    "type" : "array",
                    "description" : "Configuration of the Table attribute (columns)",
                    "items" : {
                      "required" : [ "code", "data_type" ],
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Column code"
                        },
                        "data_type" : {
                          "type" : "string",
                          "description" : "Column data type",
                          "enum" : [ "select", "text", "number", "boolean" ]
                        },
                        "is_required_for_completeness" : {
                          "type" : "boolean",
                          "description" : "Defines if the column should be entirely filled for the attribute to be considered complete",
                          "default" : false
                        },
                        "labels" : {
                          "type" : "object",
                          "properties" : {
                            "localeCode" : {
                              "type" : "string",
                              "description" : "Column label for the locale `localeCode`"
                            }
                          },
                          "description" : "Column labels for each locale"
                        },
                        "validations" : {
                          "type" : "object",
                          "properties" : {
                            "decimals_allowed" : {
                              "type" : "boolean",
                              "description" : "whether the value of a numeric cell can hold a decimal part"
                            },
                            "max" : {
                              "type" : "number",
                              "description" : "maximum value of a numeric cell"
                            },
                            "max_length" : {
                              "type" : "number",
                              "description" : "maximum length of a text cell"
                            },
                            "min" : {
                              "type" : "number",
                              "description" : "minimum value of a numeric cell"
                            }
                          },
                          "description" : "User defined validation constraints on the cell content"
                        }
                      }
                    }
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                    "enum" : [ "pim_catalog_identifier", "pim_catalog_metric", "pim_catalog_number", "pim_catalog_reference_data_multi_select", "pim_catalog_reference_data_simple_select", "pim_catalog_simpleselect", "pim_catalog_multiselect", "pim_catalog_date", "pim_catalog_textarea", "pim_catalog_text", "pim_catalog_file", "pim_catalog_image", "pim_catalog_price_collection", "pim_catalog_boolean", "akeneo_reference_entity", "akeneo_reference_entity_collection", "pim_catalog_asset_collection" ]
                  },
                  "unique" : {
                    "type" : "boolean",
                    "description" : "Whether two values for the attribute cannot be the same"
                  },
                  "useable_as_grid_filter" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                  },
                  "validation_regexp" : {
                    "type" : "string",
                    "description" : "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                  },
                  "validation_rule" : {
                    "type" : "string",
                    "description" : "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
                  },
                  "wysiwyg_enabled" : {
                    "type" : "boolean",
                    "description" : "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`"
                  }
                },
                "example" : {
                  "allowed_extensions" : [ ],
                  "available_locales" : [ ],
                  "code" : "release_date",
                  "date_max" : "2017-08-08T22:00:00",
                  "date_min" : "2017-06-28T08:00:00",
                  "group" : "marketing",
                  "group_labels" : {
                    "en_US" : "Marketing",
                    "fr_FR" : "Marketing"
                  },
                  "labels" : {
                    "en_US" : "Sale date",
                    "fr_FR" : "Date des soldes"
                  },
                  "localizable" : false,
                  "scopable" : false,
                  "sort_order" : 1,
                  "type" : "pim_catalog_date",
                  "unique" : false,
                  "useable_as_grid_filter" : true
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/catalogs" : {
      "get" : {
        "tags" : [ "Catalogs" ],
        "summary" : "Get the list of owned catalogs",
        "description" : "This endpoint allows you to get the list of catalogs you owned.",
        "operationId" : "get_app_catalogs",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the paginated catalogs owned by the user making the request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Catalogs",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "type" : "object",
                                "properties" : {
                                  "enabled" : {
                                    "type" : "boolean",
                                    "description" : "Whether the catalog is enabled or not",
                                    "default" : false
                                  },
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Catalog id"
                                  },
                                  "name" : {
                                    "type" : "string",
                                    "description" : "Catalog name"
                                  }
                                },
                                "example" : {
                                  "enabled" : false,
                                  "id" : "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
                                  "name" : "My app catalog"
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list catalogs."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Catalogs" ],
        "summary" : "Create a new catalog",
        "description" : "This endpoint allows you to create a new catalog.",
        "operationId" : "post_app_catalog",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "name" ],
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Catalog name"
                  }
                },
                "example" : {
                  "name" : "My app catalog"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the catalog is enabled or not",
                      "default" : false
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "Catalog id"
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Catalog name"
                    }
                  },
                  "example" : {
                    "enabled" : false,
                    "id" : "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
                    "name" : "My app catalog"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list catalogs."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/catalogs/{id}" : {
      "get" : {
        "tags" : [ "Catalogs" ],
        "summary" : "Get a catalog",
        "description" : "This endpoint allows you to get the information about a catalog.",
        "operationId" : "get_app_catalog",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Catalog ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the catalog",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the catalog is enabled or not",
                      "default" : false
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "Catalog id"
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Catalog name"
                    }
                  },
                  "example" : {
                    "enabled" : false,
                    "id" : "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
                    "name" : "My app catalog"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list catalogs."
              }
            }
          },
          "404" : {
            "description" : "Catalog not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Catalogs" ],
        "summary" : "Delete a catalog",
        "description" : "This endpoint allows you to delete a catalog.",
        "operationId" : "delete_app_catalog",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Catalog ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list catalogs."
              }
            }
          },
          "404" : {
            "description" : "Catalog not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Catalogs" ],
        "summary" : "Update a catalog",
        "description" : "This endpoint allows you to update a catalog.",
        "operationId" : "patch_app_catalog",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Catalog ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "name" ],
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Catalog name"
                  }
                },
                "example" : {
                  "name" : "My app catalog"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the catalog is enabled or not",
                      "default" : false
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "Catalog id"
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Catalog name"
                    }
                  },
                  "example" : {
                    "enabled" : false,
                    "id" : "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
                    "name" : "My app catalog"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list catalogs."
              }
            }
          },
          "404" : {
            "description" : "Catalog not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/catalogs/{id}/product-uuids" : {
      "get" : {
        "tags" : [ "Catalog products" ],
        "summary" : "Get the list of product uuids",
        "description" : "This endpoint allows you to get the list of uuids of products contained in a catalog. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a> section.",
        "operationId" : "get_app_catalog_product_uuids",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the catalog",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "default" : 100
          }
        }, {
          "name" : "updated_before",
          "in" : "query",
          "description" : "Filter products that have been updated BEFORE the provided date (Only available on Catalogs endpoints)",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "updated_after",
          "in" : "query",
          "description" : "Filter products that have been updated AFTER the provided date (Only available on Catalogs endpoints)",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the paginated product uuids",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Product uuids",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string",
                              "format" : "uuid"
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list catalogs."
              }
            }
          },
          "404" : {
            "description" : "Catalog not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/catalogs/{id}/products" : {
      "get" : {
        "tags" : [ "Catalog products" ],
        "summary" : "Get the list of products related to a catalog",
        "description" : "This endpoint allows you to get the list of products related to a catalog. Products are paginated and they can be filtered. In the Enterprise Edition, permissions based on your app settings are applied to the set of products you request. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a> section.",
        "operationId" : "get_app_catalog_products",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Catalog ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "default" : 100
          }
        }, {
          "name" : "updated_before",
          "in" : "query",
          "description" : "Filter products that have been updated BEFORE the provided date (Only available on Catalogs endpoints)",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "updated_after",
          "in" : "query",
          "description" : "Filter products that have been updated AFTER the provided date (Only available on Catalogs endpoints)",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the paginated products",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Products",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string",
                              "format" : "uuid"
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list catalogs."
              }
            }
          },
          "404" : {
            "description" : "Catalog not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/catalogs/{id}/products/{uuid}" : {
      "get" : {
        "tags" : [ "Catalog products" ],
        "summary" : "Get a product related to a catalog",
        "description" : "This endpoint allows you to get a specific product related to a catalog. In the Enterprise Edition, permissions based on your app settings are applied on the product you request. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a> section.",
        "operationId" : "get_app_catalog_products_uuid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Catalog ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Product UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the product"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list catalogs."
              }
            }
          },
          "404" : {
            "description" : "Catalog not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/categories" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Get list of categories",
        "description" : "This endpoint allows you to get a list of categories. Categories are paginated and sorted by `root/left`.",
        "operationId" : "get_categories",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter categories, for more details see the <a href=\"/documentation/filter.html#filter-categories\">Filters</a> section.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_position",
          "in" : "query",
          "description" : "Return information about category position into its category tree (only available since the 7.0 version)",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "with_enriched_attributes",
          "in" : "query",
          "description" : "Return attribute values of the category (only available on SaaS platforms)",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return categories paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Categories",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Category code"
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Category label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Category labels for each locale"
                                  },
                                  "parent" : {
                                    "type" : "string",
                                    "description" : "Category code of the parent's category",
                                    "default" : "null"
                                  },
                                  "position" : {
                                    "type" : "integer",
                                    "description" : "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")"
                                  },
                                  "updated" : {
                                    "type" : "string",
                                    "description" : "Date of the last update",
                                    "format" : "dateTime"
                                  },
                                  "values" : {
                                    "type" : "object",
                                    "properties" : {
                                      "attributeCode|attributeUuid|channelCode|localeCode" : {
                                        "type" : "array",
                                        "items" : {
                                          "type" : "object",
                                          "properties" : {
                                            "attribute_code" : {
                                              "type" : "string",
                                              "description" : "The attribute code with its uuid (attributeCode|attributeUuid)"
                                            },
                                            "channel" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                                            },
                                            "data" : {
                                              "type" : "object",
                                              "description" : "Attribute value"
                                            },
                                            "locale" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                                            },
                                            "type" : {
                                              "type" : "string",
                                              "description" : "The attribute type"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Attribute values"
                                  }
                                },
                                "example" : {
                                  "code" : "winter_collection",
                                  "labels" : {
                                    "en_US" : "Winter collection",
                                    "fr_FR" : "Collection hiver"
                                  },
                                  "position" : 1,
                                  "updated" : "2021-05-22T12:48:00+02:00",
                                  "values" : {
                                    "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US" : {
                                      "attribute_code" : "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26",
                                      "channel" : "ecommerce",
                                      "data" : "<p>Winter collection description</p>\n",
                                      "locale" : "en_US",
                                      "type" : "textarea"
                                    }
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/categories/winter_collection"
                      }
                    },
                    "code" : "winter_collection",
                    "labels" : {
                      "de_DE" : "Winter-Kollektion",
                      "en_US" : "Winter collection",
                      "fr_FR" : "Collection hiver"
                    },
                    "position" : 1,
                    "updated" : "2021-05-21T11:32:00+02:00",
                    "values" : {
                      "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US" : {
                        "attribute_code" : "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26",
                        "channel" : "ecommerce",
                        "data" : "<p>Winter collection description</p>\n",
                        "locale" : "en_US",
                        "type" : "textarea"
                      }
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/categories/woman"
                      }
                    },
                    "code" : "woman",
                    "labels" : {
                      "de_DE" : "Damen",
                      "en_US" : "Woman",
                      "fr_FR" : "Femme"
                    },
                    "parent" : "winter_collection",
                    "position" : 1,
                    "updated" : "2021-04-21T10:41:02+02:00",
                    "values" : { }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/categories/man"
                      }
                    },
                    "code" : "man",
                    "labels" : {
                      "de_DE" : "Herren",
                      "en_US" : "Man",
                      "fr_FR" : "Homme"
                    },
                    "parent" : "winter_collection",
                    "position" : 2,
                    "updated" : "2021-03-02T12:59:59+02:00",
                    "values" : { }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/categories/kids"
                      }
                    },
                    "code" : "kids",
                    "labels" : {
                      "de_DE" : "Kinder",
                      "en_US" : "Kids",
                      "fr_FR" : "Enfant"
                    },
                    "parent" : "winter_collection",
                    "position" : 3,
                    "updated" : "2021-01-03T12:40:00+02:00",
                    "values" : { }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/categories/summer_collection"
                      }
                    },
                    "code" : "summer_collection",
                    "labels" : {
                      "de_DE" : "Sommer-Kollektion",
                      "en_US" : "Summer collection",
                      "fr_FR" : "Collection été"
                    },
                    "position" : 1,
                    "updated" : "2021-04-04T09:42:00+02:00",
                    "values" : { }
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/categories?page=1&limit=5"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/categories?page=3&limit=5"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/categories?page=1&limit=5"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/categories?page=2&limit=5"
                  }
                }
              },
              "current_page" : {
                "example" : 2
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "Create a new category",
        "description" : "This endpoint allows you to create a new category.",
        "operationId" : "post_categories",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Category code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Category label for the locale `localeCode`"
                      }
                    },
                    "description" : "Category labels for each locale"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Category code of the parent's category",
                    "default" : "null"
                  },
                  "position" : {
                    "type" : "integer",
                    "description" : "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode|attributeUuid|channelCode|localeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "attribute_code" : {
                              "type" : "string",
                              "description" : "The attribute code with its uuid (attributeCode|attributeUuid)"
                            },
                            "channel" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                            },
                            "data" : {
                              "type" : "object",
                              "description" : "Attribute value"
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "The attribute type"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Attribute values"
                  }
                },
                "example" : {
                  "code" : "winter_collection",
                  "labels" : {
                    "en_US" : "Winter collection",
                    "fr_FR" : "Collection hiver"
                  },
                  "position" : 1,
                  "updated" : "2021-05-22T12:48:00+02:00",
                  "values" : {
                    "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US" : {
                      "attribute_code" : "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26",
                      "channel" : "ecommerce",
                      "data" : "<p>Winter collection description</p>\n",
                      "locale" : "en_US",
                      "type" : "textarea"
                    }
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Category" ],
        "summary" : "Update/create several categories",
        "description" : "This endpoint allows you to update several categories at once.",
        "operationId" : "patch_categories",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Category code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Category label for the locale `localeCode`"
                      }
                    },
                    "description" : "Category labels for each locale"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Category code of the parent's category",
                    "default" : "null"
                  },
                  "position" : {
                    "type" : "integer",
                    "description" : "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode|attributeUuid|channelCode|localeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "attribute_code" : {
                              "type" : "string",
                              "description" : "The attribute code with its uuid (attributeCode|attributeUuid)"
                            },
                            "channel" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                            },
                            "data" : {
                              "type" : "object",
                              "description" : "Attribute value"
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "The attribute type"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Attribute values"
                  }
                },
                "example" : {
                  "code" : "winter_collection",
                  "labels" : {
                    "en_US" : "Winter collection",
                    "fr_FR" : "Collection hiver"
                  },
                  "position" : 1,
                  "updated" : "2021-05-22T12:48:00+02:00",
                  "values" : {
                    "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US" : {
                      "attribute_code" : "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26",
                      "channel" : "ecommerce",
                      "data" : "<p>Winter collection description</p>\n",
                      "locale" : "en_US",
                      "type" : "textarea"
                    }
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"spring_collection\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"woman\",\"status_code\":422,\"message\":\"Category \"spring_collectionn\" does not exist.\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"man\",\"status_code\":204}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/categories/{code}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Get a category",
        "description" : "This endpoint allows you to get the information about a given category.",
        "operationId" : "get_categories__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "with_position",
          "in" : "query",
          "description" : "Return information about category position into its category tree (only available since the 7.0 version)",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "with_enriched_attributes",
          "in" : "query",
          "description" : "Return attribute values of the category (only available on SaaS platforms) <strong>[COMING SOON]<strong>",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Category code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Category label for the locale `localeCode`"
                        }
                      },
                      "description" : "Category labels for each locale"
                    },
                    "parent" : {
                      "type" : "string",
                      "description" : "Category code of the parent's category",
                      "default" : "null"
                    },
                    "position" : {
                      "type" : "integer",
                      "description" : "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode|attributeUuid|channelCode|localeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "attribute_code" : {
                                "type" : "string",
                                "description" : "The attribute code with its uuid (attributeCode|attributeUuid)"
                              },
                              "channel" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                              },
                              "data" : {
                                "type" : "object",
                                "description" : "Attribute value"
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                              },
                              "type" : {
                                "type" : "string",
                                "description" : "The attribute type"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Attribute values"
                    }
                  },
                  "example" : {
                    "code" : "winter_collection",
                    "labels" : {
                      "en_US" : "Winter collection",
                      "fr_FR" : "Collection hiver"
                    },
                    "position" : 1,
                    "updated" : "2021-05-22T12:48:00+02:00",
                    "values" : {
                      "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US" : {
                        "attribute_code" : "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26",
                        "channel" : "ecommerce",
                        "data" : "<p>Winter collection description</p>\n",
                        "locale" : "en_US",
                        "type" : "textarea"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Category" ],
        "summary" : "Update/create a category",
        "description" : "This endpoint allows you to update a given category. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no category exists for the given code, it creates it.",
        "operationId" : "patch_categories__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Category code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Category label for the locale `localeCode`"
                      }
                    },
                    "description" : "Category labels for each locale"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Category code of the parent's category",
                    "default" : "null"
                  },
                  "position" : {
                    "type" : "integer",
                    "description" : "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode|attributeUuid|channelCode|localeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "attribute_code" : {
                              "type" : "string",
                              "description" : "The attribute code with its uuid (attributeCode|attributeUuid)"
                            },
                            "channel" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                            },
                            "data" : {
                              "type" : "object",
                              "description" : "Attribute value"
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "The attribute type"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Attribute values"
                  }
                },
                "example" : {
                  "code" : "winter_collection",
                  "labels" : {
                    "en_US" : "Winter collection",
                    "fr_FR" : "Collection hiver"
                  },
                  "position" : 1,
                  "updated" : "2021-05-22T12:48:00+02:00",
                  "values" : {
                    "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US" : {
                      "attribute_code" : "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26",
                      "channel" : "ecommerce",
                      "data" : "<p>Winter collection description</p>\n",
                      "locale" : "en_US",
                      "type" : "textarea"
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/category-media-files/{code}/download" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Download a category media file [COMING SOON]",
        "description" : "This endpoint allows you to download a given media file that is used as an attribute value of a enriched category.",
        "operationId" : "get_category_media_files__code__download",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/channels" : {
      "get" : {
        "tags" : [ "Channel" ],
        "summary" : "Get a list of channels",
        "description" : "This endpoint allows you to get a list of channels. Channels are paginated and sorted by code.",
        "operationId" : "get_channels",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return channels paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Channels",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "category_tree", "code", "currencies", "locales" ],
                                "type" : "object",
                                "properties" : {
                                  "category_tree" : {
                                    "type" : "string",
                                    "description" : "Code of the category tree linked to the channel"
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Channel code"
                                  },
                                  "conversion_units" : {
                                    "type" : "object",
                                    "properties" : {
                                      "attributeCode" : {
                                        "type" : "string",
                                        "description" : "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                                      }
                                    },
                                    "description" : "Units to which the given metric attributes should be converted when exporting products"
                                  },
                                  "currencies" : {
                                    "type" : "array",
                                    "description" : "Codes of activated currencies for the channel",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Channel label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Channel labels for each locale"
                                  },
                                  "locales" : {
                                    "type" : "array",
                                    "description" : "Codes of activated locales for the channel",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  }
                                },
                                "example" : {
                                  "category_tree" : "master",
                                  "code" : "ecommerce",
                                  "conversion_units" : {
                                    "weight" : "KILOGRAM"
                                  },
                                  "currencies" : [ "USD", "EUR" ],
                                  "labels" : {
                                    "de_DE" : "Ecommerce",
                                    "en_US" : "Ecommerce",
                                    "fr_FR" : "Ecommerce"
                                  },
                                  "locales" : [ "de_DE", "en_US", "fr_FR" ]
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/channels/ecommerce"
                      }
                    },
                    "category_tree" : "master",
                    "code" : "ecommerce",
                    "conversion_units" : {
                      "a_metric" : "KILOWATT",
                      "a_metric_negative" : "CELSIUS"
                    },
                    "currencies" : [ "USD", "EUR" ],
                    "labels" : {
                      "de_DE" : "E-commerce",
                      "en_US" : "Ecommerce",
                      "fr_FR" : "E-commerce"
                    },
                    "locales" : [ "en_US", "fr_FR", "de_DE" ]
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/channels/mobile"
                      }
                    },
                    "category_tree" : "master",
                    "code" : "mobile",
                    "conversion_units" : {
                      "a_metric" : "KILOWATT",
                      "a_metric_negative" : "CELSIUS"
                    },
                    "currencies" : [ "USD", "EUR" ],
                    "labels" : {
                      "de_DE" : "Mobile",
                      "en_US" : "Mobile",
                      "fr_FR" : "Mobile"
                    },
                    "locales" : [ "en_US", "fr_FR", "de_DE" ]
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/channels/print"
                      }
                    },
                    "category_tree" : "master",
                    "code" : "print",
                    "conversion_units" : { },
                    "currencies" : [ "USD", "EUR" ],
                    "labels" : {
                      "de_DE" : "Print",
                      "en_US" : "Print",
                      "fr_FR" : "Print"
                    },
                    "locales" : [ "en_US", "fr_FR", "de_DE" ]
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/channels?page=1&limit=3"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/channels?page=1&limit=3"
                  }
                }
              },
              "current_page" : {
                "example" : 1
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Channel" ],
        "summary" : "Create a new channel",
        "description" : "This endpoint allows you to create a new channel.",
        "operationId" : "channels_post",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "category_tree", "code", "currencies", "locales" ],
                "type" : "object",
                "properties" : {
                  "category_tree" : {
                    "type" : "string",
                    "description" : "Code of the category tree linked to the channel"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Channel code"
                  },
                  "conversion_units" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "string",
                        "description" : "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                      }
                    },
                    "description" : "Units to which the given metric attributes should be converted when exporting products"
                  },
                  "currencies" : {
                    "type" : "array",
                    "description" : "Codes of activated currencies for the channel",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Channel label for the locale `localeCode`"
                      }
                    },
                    "description" : "Channel labels for each locale"
                  },
                  "locales" : {
                    "type" : "array",
                    "description" : "Codes of activated locales for the channel",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "example" : {
                  "category_tree" : "master",
                  "code" : "ecommerce",
                  "conversion_units" : {
                    "weight" : "KILOGRAM"
                  },
                  "currencies" : [ "USD", "EUR" ],
                  "labels" : {
                    "de_DE" : "Ecommerce",
                    "en_US" : "Ecommerce",
                    "fr_FR" : "Ecommerce"
                  },
                  "locales" : [ "de_DE", "en_US", "fr_FR" ]
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Channel" ],
        "summary" : "Update/create several channels",
        "description" : "This endpoint allows you to update and/or create several channels at once.",
        "operationId" : "several_channels_patch",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "category_tree", "code", "currencies", "locales" ],
                "type" : "object",
                "properties" : {
                  "category_tree" : {
                    "type" : "string",
                    "description" : "Code of the category tree linked to the channel"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Channel code"
                  },
                  "conversion_units" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "string",
                        "description" : "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                      }
                    },
                    "description" : "Units to which the given metric attributes should be converted when exporting products"
                  },
                  "currencies" : {
                    "type" : "array",
                    "description" : "Codes of activated currencies for the channel",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Channel label for the locale `localeCode`"
                      }
                    },
                    "description" : "Channel labels for each locale"
                  },
                  "locales" : {
                    "type" : "array",
                    "description" : "Codes of activated locales for the channel",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "example" : {
                  "category_tree" : "master",
                  "code" : "ecommerce",
                  "conversion_units" : {
                    "weight" : "KILOGRAM"
                  },
                  "currencies" : [ "USD", "EUR" ],
                  "labels" : {
                    "de_DE" : "Ecommerce",
                    "en_US" : "Ecommerce",
                    "fr_FR" : "Ecommerce"
                  },
                  "locales" : [ "de_DE", "en_US", "fr_FR" ]
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"ecommerce_fr\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"ecommerce_ch\",\"status_code\":422,\"message\":\"Property \\\"type\\\" does not exist. Check the standard format documentation.\",\"_links\":{\"documentation\":{\"href\":\"http:\\/\\/api.akeneo.com\\/api-reference.html#patch_channels__code_\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"tablet\",\"status_code\":204}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/channels/{code}" : {
      "get" : {
        "tags" : [ "Channel" ],
        "summary" : "Get a channel",
        "description" : "This endpoint allows you to get the information about a given channel.",
        "operationId" : "get_channels__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "category_tree", "code", "currencies", "locales" ],
                  "type" : "object",
                  "properties" : {
                    "category_tree" : {
                      "type" : "string",
                      "description" : "Code of the category tree linked to the channel"
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Channel code"
                    },
                    "conversion_units" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "string",
                          "description" : "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                        }
                      },
                      "description" : "Units to which the given metric attributes should be converted when exporting products"
                    },
                    "currencies" : {
                      "type" : "array",
                      "description" : "Codes of activated currencies for the channel",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Channel label for the locale `localeCode`"
                        }
                      },
                      "description" : "Channel labels for each locale"
                    },
                    "locales" : {
                      "type" : "array",
                      "description" : "Codes of activated locales for the channel",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  },
                  "example" : {
                    "category_tree" : "master",
                    "code" : "ecommerce",
                    "conversion_units" : {
                      "weight" : "KILOGRAM"
                    },
                    "currencies" : [ "USD", "EUR" ],
                    "labels" : {
                      "de_DE" : "Ecommerce",
                      "en_US" : "Ecommerce",
                      "fr_FR" : "Ecommerce"
                    },
                    "locales" : [ "de_DE", "en_US", "fr_FR" ]
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Channel" ],
        "summary" : "Update/create a channel",
        "description" : "This endpoint allows you to update a given channel. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no channel exists for the given code, it creates it.",
        "operationId" : "channels_patch",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "category_tree", "code", "currencies", "locales" ],
                "type" : "object",
                "properties" : {
                  "category_tree" : {
                    "type" : "string",
                    "description" : "Code of the category tree linked to the channel"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Channel code"
                  },
                  "conversion_units" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "string",
                        "description" : "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                      }
                    },
                    "description" : "Units to which the given metric attributes should be converted when exporting products"
                  },
                  "currencies" : {
                    "type" : "array",
                    "description" : "Codes of activated currencies for the channel",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Channel label for the locale `localeCode`"
                      }
                    },
                    "description" : "Channel labels for each locale"
                  },
                  "locales" : {
                    "type" : "array",
                    "description" : "Codes of activated locales for the channel",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "example" : {
                  "category_tree" : "master",
                  "code" : "ecommerce",
                  "conversion_units" : {
                    "weight" : "KILOGRAM"
                  },
                  "currencies" : [ "USD", "EUR" ],
                  "labels" : {
                    "de_DE" : "Ecommerce",
                    "en_US" : "Ecommerce",
                    "fr_FR" : "Ecommerce"
                  },
                  "locales" : [ "de_DE", "en_US", "fr_FR" ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/currencies" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Get a list of currencies",
        "description" : "This endpoint allows you to get a list of currencies. Currencies are paginated and sorted by code.",
        "operationId" : "currencies_get_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return currencies paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Currencies",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Currency code"
                                  },
                                  "enabled" : {
                                    "type" : "boolean",
                                    "description" : "Whether the currency is enabled"
                                  }
                                },
                                "example" : {
                                  "code" : "EUR",
                                  "enabled" : true
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/currencies/ADP"
                      }
                    },
                    "code" : "ADP",
                    "enabled" : true
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/currencies/AED"
                      }
                    },
                    "code" : "AED",
                    "enabled" : true
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/currencies/AFA"
                      }
                    },
                    "code" : "AFA",
                    "enabled" : false
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/currencies?page=1&limit=3"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/currencies?page=1&limit=3"
                  }
                }
              },
              "current_page" : {
                "example" : 1
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/currencies/{code}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Get a currency",
        "description" : "This endpoint allows you to get the information about a given currency.",
        "operationId" : "currencies_get",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Currency code"
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the currency is enabled"
                    }
                  },
                  "example" : {
                    "code" : "EUR",
                    "enabled" : true
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/families" : {
      "get" : {
        "tags" : [ "Family" ],
        "summary" : "Get list of families",
        "description" : "This endpoint allows you to get a list of families. Families are paginated and sorted by code.",
        "operationId" : "get_families",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter families, for more details see the <a href=\"/documentation/filter.html#filter-families\">Filters</a> section.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return families paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Families",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "attribute_as_label", "code" ],
                                "type" : "object",
                                "properties" : {
                                  "attribute_as_image" : {
                                    "type" : "string",
                                    "description" : "Attribute code used as the main picture in the user interface (only since v2.0)",
                                    "default" : "null"
                                  },
                                  "attribute_as_label" : {
                                    "type" : "string",
                                    "description" : "Attribute code used as label"
                                  },
                                  "attribute_requirements" : {
                                    "type" : "object",
                                    "properties" : {
                                      "channelCode" : {
                                        "type" : "array",
                                        "items" : {
                                          "type" : "string",
                                          "description" : "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                                        }
                                      }
                                    },
                                    "description" : "Attributes codes of the family that are required for the completeness calculation for each channel"
                                  },
                                  "attributes" : {
                                    "type" : "array",
                                    "description" : "Attributes codes that compose the family",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Family code"
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Family label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Family labels for each locale"
                                  }
                                },
                                "example" : {
                                  "attribute_as_image" : "picture",
                                  "attribute_as_label" : "name",
                                  "attribute_requirements" : {
                                    "ecommerce" : [ "sku", "name", "description", "price", "color" ],
                                    "tablet" : [ "sku", "name", "description", "price" ]
                                  },
                                  "attributes" : [ "sku", "name", "description", "price", "color", "picture" ],
                                  "code" : "caps",
                                  "labels" : {
                                    "en_US" : "Caps",
                                    "fr_FR" : "Casquettes"
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/families/tshirt"
                      }
                    },
                    "attribute_as_image" : "picture",
                    "attribute_as_label" : "name",
                    "attribute_requirements" : {
                      "ecommerce" : [ "sku", "name", "description", "price", "size", "color" ],
                      "tablet" : [ "sku", "name", "description", "price" ]
                    },
                    "attributes" : [ "sku", "name", "description", "price", "size", "color", "picture" ],
                    "code" : "tshirt",
                    "labels" : {
                      "en_US" : "Tshirt",
                      "fr_FR" : "Tshirt"
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/families/caps"
                      }
                    },
                    "attribute_as_image" : "picture",
                    "attribute_as_label" : "name",
                    "attribute_requirements" : {
                      "ecommerce" : [ "sku", "name", "description", "price", "color" ],
                      "tablet" : [ "sku", "name", "description", "price" ]
                    },
                    "attributes" : [ "sku", "name", "description", "price", "color", "picture" ],
                    "code" : "caps",
                    "labels" : {
                      "en_US" : "Caps",
                      "fr_FR" : "Casquettes"
                    }
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/families?page=1&limit=2"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/families?page=3&limit=2"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/families?page=1&limit=2"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/families?page=2&limit=2"
                  }
                }
              },
              "current_page" : {
                "example" : 2
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Family" ],
        "summary" : "Create a new family",
        "description" : "This endpoint allows you to create a new family.",
        "operationId" : "post_families",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "attribute_as_label", "code" ],
                "type" : "object",
                "properties" : {
                  "attribute_as_image" : {
                    "type" : "string",
                    "description" : "Attribute code used as the main picture in the user interface (only since v2.0)",
                    "default" : "null"
                  },
                  "attribute_as_label" : {
                    "type" : "string",
                    "description" : "Attribute code used as label"
                  },
                  "attribute_requirements" : {
                    "type" : "object",
                    "properties" : {
                      "channelCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "description" : "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                        }
                      }
                    },
                    "description" : "Attributes codes of the family that are required for the completeness calculation for each channel"
                  },
                  "attributes" : {
                    "type" : "array",
                    "description" : "Attributes codes that compose the family",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Family code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Family label for the locale `localeCode`"
                      }
                    },
                    "description" : "Family labels for each locale"
                  }
                },
                "example" : {
                  "attribute_as_image" : "picture",
                  "attribute_as_label" : "name",
                  "attribute_requirements" : {
                    "ecommerce" : [ "sku", "name", "description", "price", "color" ],
                    "tablet" : [ "sku", "name", "description", "price" ]
                  },
                  "attributes" : [ "sku", "name", "description", "price", "color", "picture" ],
                  "code" : "caps",
                  "labels" : {
                    "en_US" : "Caps",
                    "fr_FR" : "Casquettes"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Family" ],
        "summary" : "Update/create several families",
        "description" : "This endpoint allows you to update and/or create several families at once.",
        "operationId" : "patch_families",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "attribute_as_label", "code" ],
                "type" : "object",
                "properties" : {
                  "attribute_as_image" : {
                    "type" : "string",
                    "description" : "Attribute code used as the main picture in the user interface (only since v2.0)",
                    "default" : "null"
                  },
                  "attribute_as_label" : {
                    "type" : "string",
                    "description" : "Attribute code used as label"
                  },
                  "attribute_requirements" : {
                    "type" : "object",
                    "properties" : {
                      "channelCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "description" : "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                        }
                      }
                    },
                    "description" : "Attributes codes of the family that are required for the completeness calculation for each channel"
                  },
                  "attributes" : {
                    "type" : "array",
                    "description" : "Attributes codes that compose the family",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Family code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Family label for the locale `localeCode`"
                      }
                    },
                    "description" : "Family labels for each locale"
                  }
                },
                "example" : {
                  "attribute_as_image" : "picture",
                  "attribute_as_label" : "name",
                  "attribute_requirements" : {
                    "ecommerce" : [ "sku", "name", "description", "price", "color" ],
                    "tablet" : [ "sku", "name", "description", "price" ]
                  },
                  "attributes" : [ "sku", "name", "description", "price", "color", "picture" ],
                  "code" : "caps",
                  "labels" : {
                    "en_US" : "Caps",
                    "fr_FR" : "Casquettes"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"tshirt\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"cap\",\"status_code\":422,\"message\":\"Attribute \"descripion\" does not exist.\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"mug\",\"status_code\":204}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/families/{code}" : {
      "get" : {
        "tags" : [ "Family" ],
        "summary" : "Get a family",
        "description" : "This endpoint allows you to get the information about a given family.",
        "operationId" : "get_families__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "attribute_as_label", "code" ],
                  "type" : "object",
                  "properties" : {
                    "attribute_as_image" : {
                      "type" : "string",
                      "description" : "Attribute code used as the main picture in the user interface (only since v2.0)",
                      "default" : "null"
                    },
                    "attribute_as_label" : {
                      "type" : "string",
                      "description" : "Attribute code used as label"
                    },
                    "attribute_requirements" : {
                      "type" : "object",
                      "properties" : {
                        "channelCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "description" : "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                          }
                        }
                      },
                      "description" : "Attributes codes of the family that are required for the completeness calculation for each channel"
                    },
                    "attributes" : {
                      "type" : "array",
                      "description" : "Attributes codes that compose the family",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Family code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Family label for the locale `localeCode`"
                        }
                      },
                      "description" : "Family labels for each locale"
                    }
                  },
                  "example" : {
                    "attribute_as_image" : "picture",
                    "attribute_as_label" : "name",
                    "attribute_requirements" : {
                      "ecommerce" : [ "sku", "name", "description", "price", "color" ],
                      "tablet" : [ "sku", "name", "description", "price" ]
                    },
                    "attributes" : [ "sku", "name", "description", "price", "color", "picture" ],
                    "code" : "caps",
                    "labels" : {
                      "en_US" : "Caps",
                      "fr_FR" : "Casquettes"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Family" ],
        "summary" : "Update/create a family",
        "description" : "This endpoint allows you to update a given family. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no family exists for the given code, it creates it.",
        "operationId" : "patch_families__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "attribute_as_label", "code" ],
                "type" : "object",
                "properties" : {
                  "attribute_as_image" : {
                    "type" : "string",
                    "description" : "Attribute code used as the main picture in the user interface (only since v2.0)",
                    "default" : "null"
                  },
                  "attribute_as_label" : {
                    "type" : "string",
                    "description" : "Attribute code used as label"
                  },
                  "attribute_requirements" : {
                    "type" : "object",
                    "properties" : {
                      "channelCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "description" : "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                        }
                      }
                    },
                    "description" : "Attributes codes of the family that are required for the completeness calculation for each channel"
                  },
                  "attributes" : {
                    "type" : "array",
                    "description" : "Attributes codes that compose the family",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Family code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Family label for the locale `localeCode`"
                      }
                    },
                    "description" : "Family labels for each locale"
                  }
                },
                "example" : {
                  "attribute_as_image" : "picture",
                  "attribute_as_label" : "name",
                  "attribute_requirements" : {
                    "ecommerce" : [ "sku", "name", "description", "price", "color" ],
                    "tablet" : [ "sku", "name", "description", "price" ]
                  },
                  "attributes" : [ "sku", "name", "description", "price", "color", "picture" ],
                  "code" : "caps",
                  "labels" : {
                    "en_US" : "Caps",
                    "fr_FR" : "Casquettes"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/families/{family_code}/variants" : {
      "get" : {
        "tags" : [ "Family variant" ],
        "summary" : "Get list of family variants",
        "description" : "This endpoint allows you to get a list of family variants. Family variants are paginated and sorted by code.",
        "operationId" : "get_families__family_code__variants",
        "parameters" : [ {
          "name" : "family_code",
          "in" : "path",
          "description" : "Code of the family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return family variants paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Family Variants",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code", "variant_attribute_sets" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Family variant code"
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Family variant label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Family variant labels for each locale"
                                  },
                                  "variant_attribute_sets" : {
                                    "type" : "array",
                                    "description" : "Attributes distribution according to the enrichment level",
                                    "items" : {
                                      "required" : [ "axes", "level" ],
                                      "type" : "object",
                                      "properties" : {
                                        "attributes" : {
                                          "type" : "array",
                                          "description" : "Codes of attributes bind to this enrichment level",
                                          "items" : {
                                            "type" : "string"
                                          }
                                        },
                                        "axes" : {
                                          "type" : "array",
                                          "description" : "Codes of attributes used as variant axes",
                                          "items" : {
                                            "type" : "string"
                                          }
                                        },
                                        "level" : {
                                          "type" : "integer",
                                          "description" : "Enrichment level"
                                        }
                                      },
                                      "description" : "Enrichment level"
                                    }
                                  }
                                },
                                "example" : {
                                  "code" : "shoesVariant",
                                  "labels" : {
                                    "en_US" : "Shoes variant",
                                    "fr_FR" : "Variante de chaussures"
                                  },
                                  "variant_attribute_sets" : [ {
                                    "attributes" : [ "color", "material" ],
                                    "axes" : [ "color" ],
                                    "level" : 1
                                  }, {
                                    "attributes" : [ "sku", "size" ],
                                    "axes" : [ "size" ],
                                    "level" : 2
                                  } ]
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "code" : {
                "example" : "shoesVariant"
              },
              "labels" : {
                "example" : {
                  "en_US" : "Shoes variant",
                  "fr_FR" : "Variante de chaussures"
                }
              },
              "variant_attribute_sets" : {
                "example" : [ {
                  "attributes" : [ "color", "material" ],
                  "axes" : [ "color" ],
                  "level" : 1
                }, {
                  "attributes" : [ "sku", "size" ],
                  "axes" : [ "size" ],
                  "level" : 2
                } ]
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Family" ],
        "summary" : "Create a new family variant",
        "description" : "This endpoint allows you to create a family variant.",
        "operationId" : "post_families__family_code__variants",
        "parameters" : [ {
          "name" : "family_code",
          "in" : "path",
          "description" : "Code of the family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "variant_attribute_sets" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Family variant code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Family variant label for the locale `localeCode`"
                      }
                    },
                    "description" : "Family variant labels for each locale"
                  },
                  "variant_attribute_sets" : {
                    "type" : "array",
                    "description" : "Attributes distribution according to the enrichment level",
                    "items" : {
                      "required" : [ "axes", "level" ],
                      "type" : "object",
                      "properties" : {
                        "attributes" : {
                          "type" : "array",
                          "description" : "Codes of attributes bind to this enrichment level",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "axes" : {
                          "type" : "array",
                          "description" : "Codes of attributes used as variant axes",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "level" : {
                          "type" : "integer",
                          "description" : "Enrichment level"
                        }
                      },
                      "description" : "Enrichment level"
                    }
                  }
                },
                "example" : {
                  "code" : "shoesVariant",
                  "labels" : {
                    "en_US" : "Shoes variant",
                    "fr_FR" : "Variante de chaussures"
                  },
                  "variant_attribute_sets" : [ {
                    "attributes" : [ "color", "material" ],
                    "axes" : [ "color" ],
                    "level" : 1
                  }, {
                    "attributes" : [ "sku", "size" ],
                    "axes" : [ "size" ],
                    "level" : 2
                  } ]
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Family variant" ],
        "summary" : "Update/create several family variants",
        "description" : "This endpoint allows you to update and/or create several family variants at once, for a given family.",
        "operationId" : "patch_families__family_code__variants",
        "parameters" : [ {
          "name" : "family_code",
          "in" : "path",
          "description" : "Code of the family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "variant_attribute_sets" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Family variant code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Family variant label for the locale `localeCode`"
                      }
                    },
                    "description" : "Family variant labels for each locale"
                  },
                  "variant_attribute_sets" : {
                    "type" : "array",
                    "description" : "Attributes distribution according to the enrichment level",
                    "items" : {
                      "required" : [ "axes", "level" ],
                      "type" : "object",
                      "properties" : {
                        "attributes" : {
                          "type" : "array",
                          "description" : "Codes of attributes bind to this enrichment level",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "axes" : {
                          "type" : "array",
                          "description" : "Codes of attributes used as variant axes",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "level" : {
                          "type" : "integer",
                          "description" : "Enrichment level"
                        }
                      },
                      "description" : "Enrichment level"
                    }
                  }
                },
                "example" : {
                  "code" : "shoesVariant",
                  "labels" : {
                    "en_US" : "Shoes variant",
                    "fr_FR" : "Variante de chaussures"
                  },
                  "variant_attribute_sets" : [ {
                    "attributes" : [ "color", "material" ],
                    "axes" : [ "color" ],
                    "level" : 1
                  }, {
                    "attributes" : [ "sku", "size" ],
                    "axes" : [ "size" ],
                    "level" : 2
                  } ]
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"shoes_by_size\",\"status_code\":201}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"shoes_by_color\",\"status_code\":204}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"mug\",\"status_code\":422, \"message\":\"There should be at least one attribute defined as axis for the attribute set for level \"1\"\"}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/families/{family_code}/variants/{code}" : {
      "get" : {
        "tags" : [ "Family variant" ],
        "summary" : "Get a family variant",
        "description" : "This endpoint allows you to get the information about a given family variant.",
        "operationId" : "get_families__family_code__variants__code__",
        "parameters" : [ {
          "name" : "family_code",
          "in" : "path",
          "description" : "Code of the family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code", "variant_attribute_sets" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Family variant code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Family variant label for the locale `localeCode`"
                        }
                      },
                      "description" : "Family variant labels for each locale"
                    },
                    "variant_attribute_sets" : {
                      "type" : "array",
                      "description" : "Attributes distribution according to the enrichment level",
                      "items" : {
                        "required" : [ "axes", "level" ],
                        "type" : "object",
                        "properties" : {
                          "attributes" : {
                            "type" : "array",
                            "description" : "Codes of attributes bind to this enrichment level",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "axes" : {
                            "type" : "array",
                            "description" : "Codes of attributes used as variant axes",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "level" : {
                            "type" : "integer",
                            "description" : "Enrichment level"
                          }
                        },
                        "description" : "Enrichment level"
                      }
                    }
                  },
                  "example" : {
                    "code" : "shoesVariant",
                    "labels" : {
                      "en_US" : "Shoes variant",
                      "fr_FR" : "Variante de chaussures"
                    },
                    "variant_attribute_sets" : [ {
                      "attributes" : [ "color", "material" ],
                      "axes" : [ "color" ],
                      "level" : 1
                    }, {
                      "attributes" : [ "sku", "size" ],
                      "axes" : [ "size" ],
                      "level" : 2
                    } ]
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Family variant" ],
        "summary" : "Update/create a family variant",
        "description" : "This endpoint allows you to update a given family variant. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no family variant exists for the given code, it creates it.",
        "operationId" : "patch_families__family_code__variants__code__",
        "parameters" : [ {
          "name" : "family_code",
          "in" : "path",
          "description" : "Code of the family",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "variant_attribute_sets" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Family variant code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Family variant label for the locale `localeCode`"
                      }
                    },
                    "description" : "Family variant labels for each locale"
                  },
                  "variant_attribute_sets" : {
                    "type" : "array",
                    "description" : "Attributes distribution according to the enrichment level",
                    "items" : {
                      "required" : [ "axes", "level" ],
                      "type" : "object",
                      "properties" : {
                        "attributes" : {
                          "type" : "array",
                          "description" : "Codes of attributes bind to this enrichment level",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "axes" : {
                          "type" : "array",
                          "description" : "Codes of attributes used as variant axes",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "level" : {
                          "type" : "integer",
                          "description" : "Enrichment level"
                        }
                      },
                      "description" : "Enrichment level"
                    }
                  }
                },
                "example" : {
                  "code" : "shoesVariant",
                  "labels" : {
                    "en_US" : "Shoes variant",
                    "fr_FR" : "Variante de chaussures"
                  },
                  "variant_attribute_sets" : [ {
                    "attributes" : [ "color", "material" ],
                    "axes" : [ "color" ],
                    "level" : 1
                  }, {
                    "attributes" : [ "sku", "size" ],
                    "axes" : [ "size" ],
                    "level" : 2
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/locales" : {
      "get" : {
        "tags" : [ "Locale" ],
        "summary" : "Get a list of locales",
        "description" : "This endpoint allows you to get a list of locales. Locales are paginated and sorted by code.",
        "operationId" : "get_locales",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter locales, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return locales paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Locales",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Locale code"
                                  },
                                  "enabled" : {
                                    "type" : "boolean",
                                    "description" : "Whether the locale is enabled",
                                    "default" : false
                                  }
                                },
                                "example" : {
                                  "code" : "en_US",
                                  "enable" : true
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/locales/en_US"
                      }
                    },
                    "code" : "en_US",
                    "enabled" : true
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/locales/fr_FR"
                      }
                    },
                    "code" : "fr_FR",
                    "enabled" : true
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/locales/de_DE"
                      }
                    },
                    "code" : "de_DE",
                    "enabled" : true
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/locales/af_ZA"
                      }
                    },
                    "code" : "af_ZA",
                    "enabled" : false
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/locales?page=1&limit=4"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/locales?page=2&limit=4"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/locales?page=1&limit=4"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/locales?page=2&limit=4"
                  }
                }
              },
              "current_page" : {
                "example" : 2
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/locales/{code}" : {
      "get" : {
        "tags" : [ "Locale" ],
        "summary" : "Get a locale",
        "description" : "This endpoint allows you to get the information about a given locale.",
        "operationId" : "get_locales__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Locale code"
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the locale is enabled",
                      "default" : false
                    }
                  },
                  "example" : {
                    "code" : "en_US",
                    "enable" : true
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/measure-families" : {
      "get" : {
        "tags" : [ "Measure family" ],
        "summary" : "Get list of measure familiy",
        "description" : "This endpoint allows you to get a list of measure families. Measure families are paginated and sorted by code.",
        "operationId" : "measure_families_get_list",
        "responses" : {
          "200" : {
            "description" : "Return measure families paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Measure Families",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Measure family code"
                                  },
                                  "standard" : {
                                    "type" : "string",
                                    "description" : "Measure family standard"
                                  },
                                  "units" : {
                                    "type" : "array",
                                    "description" : "Family units",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "code" : {
                                          "type" : "string",
                                          "description" : "Measure code"
                                        },
                                        "convert" : {
                                          "type" : "object",
                                          "description" : "Mathematic operation to convert the unit into the standard unit"
                                        },
                                        "symbol" : {
                                          "type" : "string",
                                          "description" : "Measure symbol"
                                        }
                                      }
                                    }
                                  }
                                },
                                "example" : {
                                  "code" : "Area",
                                  "standard" : "SQUARE_METER",
                                  "units" : [ {
                                    "code" : "SQUARE_MILLIMETER",
                                    "convert" : {
                                      "mul" : "0.001"
                                    },
                                    "symbol" : "mm²"
                                  }, {
                                    "code" : "SQUARE_CENTIMETER",
                                    "convert" : {
                                      "mul" : "0.001"
                                    },
                                    "symbol" : "cm²"
                                  } ]
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/measure-families/Area"
                      }
                    },
                    "code" : "Area",
                    "standard" : "SQUARE_METER",
                    "units" : [ {
                      "code" : "SQUARE_MILLIMETER",
                      "convert" : {
                        "mul" : "0.000001"
                      },
                      "symbol" : "mm²"
                    }, {
                      "code" : "SQUARE_CENTIMETER",
                      "convert" : {
                        "mul" : "0.0001"
                      },
                      "symbol" : "cm²"
                    }, {
                      "code" : "SQUARE_DECIMETER",
                      "convert" : {
                        "mul" : "0.01"
                      },
                      "symbol" : "dm²"
                    }, {
                      "code" : "SQUARE_METER",
                      "convert" : {
                        "mul" : "1"
                      },
                      "symbol" : "m²"
                    }, {
                      "code" : "CENTIARE",
                      "convert" : {
                        "mul" : "1"
                      },
                      "symbol" : "ca"
                    }, {
                      "code" : "SQUARE_DEKAMETER",
                      "convert" : {
                        "mul" : "100"
                      },
                      "symbol" : "dam²"
                    }, {
                      "code" : "ARE",
                      "convert" : {
                        "mul" : "100"
                      },
                      "symbol" : "a"
                    }, {
                      "code" : "SQUARE_HECTOMETER",
                      "convert" : {
                        "mul" : "10000"
                      },
                      "symbol" : "hm²"
                    } ]
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/measure-families?page=1&limit=1"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/measure-families?page=1&limit=1"
                  }
                }
              },
              "current_page" : {
                "example" : 1
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/measure-families/{code}" : {
      "get" : {
        "tags" : [ "Measure family" ],
        "summary" : "Get a measure family",
        "description" : "This endpoint allows you to get the information about a given measure family.",
        "operationId" : "measure_families_get",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Measure family code"
                    },
                    "standard" : {
                      "type" : "string",
                      "description" : "Measure family standard"
                    },
                    "units" : {
                      "type" : "array",
                      "description" : "Family units",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string",
                            "description" : "Measure code"
                          },
                          "convert" : {
                            "type" : "object",
                            "description" : "Mathematic operation to convert the unit into the standard unit"
                          },
                          "symbol" : {
                            "type" : "string",
                            "description" : "Measure symbol"
                          }
                        }
                      }
                    }
                  },
                  "example" : {
                    "code" : "Area",
                    "standard" : "SQUARE_METER",
                    "units" : [ {
                      "code" : "SQUARE_MILLIMETER",
                      "convert" : {
                        "mul" : "0.001"
                      },
                      "symbol" : "mm²"
                    }, {
                      "code" : "SQUARE_CENTIMETER",
                      "convert" : {
                        "mul" : "0.001"
                      },
                      "symbol" : "cm²"
                    } ]
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/measurement-families" : {
      "get" : {
        "tags" : [ "Measurement family" ],
        "summary" : "Get list of measurement families",
        "description" : "This endpoint allows you to get a list of measurement families.",
        "operationId" : "measurement_families_get_list",
        "responses" : {
          "200" : {
            "description" : "Return the measurement families",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code", "standard_unit_code", "units" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Measurement family code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Measurement family label for the locale `localeCode`"
                        }
                      },
                      "description" : "Measurement family labels for each locale"
                    },
                    "standard_unit_code" : {
                      "type" : "string",
                      "description" : "Unit code used as the standard unit for this measurement family"
                    },
                    "units" : {
                      "type" : "object",
                      "properties" : {
                        "unitCode" : {
                          "type" : "object",
                          "properties" : {
                            "code" : {
                              "type" : "string",
                              "description" : "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                            },
                            "convert_from_standard" : {
                              "type" : "array",
                              "description" : "Calculation to convert the unit from the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "operator" : {
                                    "type" : "string",
                                    "description" : "Operator for a conversion operation to convert the unit in the standard unit",
                                    "enum" : [ "mul", "div", "add", "sub" ]
                                  },
                                  "value" : {
                                    "type" : "string",
                                    "description" : "Value for a conversion operation to convert the unit in the standard unit"
                                  }
                                }
                              }
                            },
                            "labels" : {
                              "type" : "object",
                              "properties" : {
                                "localeCode" : {
                                  "type" : "string",
                                  "description" : "Unit label for the locale `localeCode`"
                                }
                              },
                              "description" : "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                            },
                            "symbol" : {
                              "type" : "string",
                              "description" : "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                            }
                          }
                        }
                      },
                      "description" : "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                    }
                  },
                  "example" : {
                    "code" : "AREA",
                    "labels" : {
                      "en_US" : "Area",
                      "fr_FR" : "Surface"
                    },
                    "standard_unit_code" : "SQUARE_METER",
                    "units" : {
                      "SQUARE_CENTIMETER" : {
                        "code" : "SQUARE_CENTIMETER",
                        "convert_from_standard" : [ {
                          "operator" : "mul",
                          "value" : "0.0001"
                        } ],
                        "labels" : {
                          "en_US" : "Square centimeter",
                          "fr_FR" : "Centimètre carré"
                        },
                        "symbol" : "cm²"
                      },
                      "SQUARE_METER" : {
                        "code" : "SQUARE_METER",
                        "convert_from_standard" : [ {
                          "operator" : "mul",
                          "value" : "1"
                        } ],
                        "labels" : {
                          "en_US" : "Square meter",
                          "fr_FR" : "Mètre carré"
                        },
                        "symbol" : "m²"
                      },
                      "SQUARE_MILLIMETER" : {
                        "code" : "SQUARE_MILLIMETER",
                        "convert_from_standard" : [ {
                          "operator" : "mul",
                          "value" : "0.000001"
                        } ],
                        "labels" : {
                          "en_US" : "Square millimeter",
                          "fr_FR" : "Millimètre carré"
                        },
                        "symbol" : "mm²"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Measurement family" ],
        "summary" : "Update/create several measurement families",
        "description" : "This endpoint allows you to update and/or create several measurement families at once.",
        "operationId" : "patch_measurement_families",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "example" : [ {
                  "code" : "AREA",
                  "labels" : {
                    "en_US" : "Area",
                    "fr_FR" : "Surface"
                  },
                  "standard_unit_code" : "SQUARE_METER",
                  "units" : {
                    "SQUARE_CENTIMETER" : {
                      "code" : "SQUARE_CENTIMETER",
                      "convert_from_standard" : [ {
                        "operator" : "mul",
                        "value" : "0.0001"
                      } ],
                      "labels" : {
                        "en_US" : "Square centimeter",
                        "fr_FR" : "Centimètre carré"
                      },
                      "symbol" : "cm²"
                    },
                    "SQUARE_METER" : {
                      "code" : "SQUARE_METER",
                      "convert_from_standard" : [ {
                        "operator" : "mul",
                        "value" : "1"
                      } ],
                      "labels" : {
                        "en_US" : "Square meter",
                        "fr_FR" : "Mètre carré"
                      },
                      "symbol" : "m²"
                    },
                    "SQUARE_MILLIMETER" : {
                      "code" : "SQUARE_MILLIMETER",
                      "convert_from_standard" : [ {
                        "operator" : "mul",
                        "value" : "0.000001"
                      } ],
                      "labels" : {
                        "en_US" : "Square millimeter",
                        "fr_FR" : "Millimètre carré"
                      },
                      "symbol" : "mm²"
                    }
                  }
                } ],
                "items" : {
                  "required" : [ "code", "standard_unit_code", "units" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Measurement family code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Measurement family label for the locale `localeCode`"
                        }
                      },
                      "description" : "Measurement family labels for each locale"
                    },
                    "standard_unit_code" : {
                      "type" : "string",
                      "description" : "Unit code used as the standard unit for this measurement family"
                    },
                    "units" : {
                      "type" : "object",
                      "properties" : {
                        "unitCode" : {
                          "type" : "object",
                          "properties" : {
                            "code" : {
                              "type" : "string",
                              "description" : "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                            },
                            "convert_from_standard" : {
                              "type" : "array",
                              "description" : "Calculation to convert the unit from the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "operator" : {
                                    "type" : "string",
                                    "description" : "Operator for a conversion operation to convert the unit in the standard unit",
                                    "enum" : [ "mul", "div", "add", "sub" ]
                                  },
                                  "value" : {
                                    "type" : "string",
                                    "description" : "Value for a conversion operation to convert the unit in the standard unit"
                                  }
                                }
                              }
                            },
                            "labels" : {
                              "type" : "object",
                              "properties" : {
                                "localeCode" : {
                                  "type" : "string",
                                  "description" : "Unit label for the locale `localeCode`"
                                }
                              },
                              "description" : "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                            },
                            "symbol" : {
                              "type" : "string",
                              "description" : "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                            }
                          }
                        }
                      },
                      "description" : "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                    }
                  },
                  "example" : {
                    "code" : "AREA",
                    "labels" : {
                      "en_US" : "Area",
                      "fr_FR" : "Surface"
                    },
                    "standard_unit_code" : "SQUARE_METER",
                    "units" : {
                      "SQUARE_CENTIMETER" : {
                        "code" : "SQUARE_CENTIMETER",
                        "convert_from_standard" : [ {
                          "operator" : "mul",
                          "value" : "0.0001"
                        } ],
                        "labels" : {
                          "en_US" : "Square centimeter",
                          "fr_FR" : "Centimètre carré"
                        },
                        "symbol" : "cm²"
                      },
                      "SQUARE_METER" : {
                        "code" : "SQUARE_METER",
                        "convert_from_standard" : [ {
                          "operator" : "mul",
                          "value" : "1"
                        } ],
                        "labels" : {
                          "en_US" : "Square meter",
                          "fr_FR" : "Mètre carré"
                        },
                        "symbol" : "m²"
                      },
                      "SQUARE_MILLIMETER" : {
                        "code" : "SQUARE_MILLIMETER",
                        "convert_from_standard" : [ {
                          "operator" : "mul",
                          "value" : "0.000001"
                        } ],
                        "labels" : {
                          "en_US" : "Square millimeter",
                          "fr_FR" : "Millimètre carré"
                        },
                        "symbol" : "mm²"
                      }
                    }
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "string",
                        "description" : "Resource code"
                      },
                      "errors" : {
                        "type" : "array",
                        "description" : "List of errors",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "message" : {
                              "type" : "string"
                            },
                            "property" : {
                              "type" : "string"
                            }
                          }
                        }
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "Message explaining the error"
                      },
                      "status_code" : {
                        "type" : "integer",
                        "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/media-files" : {
      "get" : {
        "tags" : [ "Product media file" ],
        "summary" : "Get a list of product media files",
        "description" : "This endpoint allows you to get a list of media files that are used as attribute values in products or product models.",
        "operationId" : "get_media_files",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return media files paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "MediaFiles",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "download" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI to download the binaries of the media file"
                                          }
                                        }
                                      },
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI to get the metadata of the media file"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Media file code"
                                  },
                                  "extension" : {
                                    "type" : "string",
                                    "description" : "Extension of the media file"
                                  },
                                  "mime_type" : {
                                    "type" : "string",
                                    "description" : "Mime type of the media file"
                                  },
                                  "original_filename" : {
                                    "type" : "string",
                                    "description" : "Original filename of the media file"
                                  },
                                  "size" : {
                                    "type" : "integer",
                                    "description" : "Size of the media file"
                                  }
                                },
                                "example" : {
                                  "code" : "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                                  "extension" : "jpg",
                                  "mime_type" : "image/jpeg",
                                  "original_filename" : "10806799-1356.jpg",
                                  "size" : 16070
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg"
                      }
                    },
                    "code" : "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                    "extension" : "jpg",
                    "mime_type" : "image/jpeg",
                    "original_filename" : "10806799-1356.jpg",
                    "size" : 16070
                  }, {
                    "_links" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/media-files/d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/media-files/d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg"
                      }
                    },
                    "code" : "d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg",
                    "extension" : "jpg",
                    "mime_type" : "image/jpeg",
                    "original_filename" : "10734346-1480.jpg",
                    "size" : 16454
                  }, {
                    "_links" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/media-files/5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/media-files/5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg"
                      }
                    },
                    "code" : "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg",
                    "extension" : "jpg",
                    "mime_type" : "image/jpeg",
                    "original_filename" : "12431976-8797.jpg",
                    "size" : 19725
                  }, {
                    "_links" : {
                      "download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/media-files/0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg/download"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/media-files/0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg"
                      }
                    },
                    "code" : "0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg",
                    "extension" : "jpg",
                    "mime_type" : "image/jpeg",
                    "original_filename" : "107406-9841.jpg",
                    "size" : 17639
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/media-files?page=1&limit=4"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/media-files?page=2&limit=4"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/media-files?page=1&limit=4"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/media-files?page=2&limit=4"
                  }
                }
              },
              "current_page" : {
                "example" : 2
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Product media file" ],
        "summary" : "Create a new product media file",
        "description" : "This endpoint allows you to create a new media file and associate it to an attribute value of a given product or product model.",
        "operationId" : "post_media_files",
        "parameters" : [ {
          "name" : "Content-type",
          "in" : "header",
          "description" : "Equal to 'multipart/form-data', no other value allowed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The binaries of the file",
                    "format" : "binary"
                  },
                  "product" : {
                    "type" : "string",
                    "description" : "The product to which the media file will be associated. It is a JSON string that follows this format '{\"identifier\":\"product_identifier\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product_model` field, but not both at the same time."
                  },
                  "product_model" : {
                    "type" : "string",
                    "description" : "The product model to which the media file will be associated. It is a JSON string that follows this format '{\"code\":\"product_model_code\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product` field, but not both at the same time."
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/media-files/{code}" : {
      "get" : {
        "tags" : [ "Product media file" ],
        "summary" : "Get a product media file",
        "description" : "This endpoint allows you to get the information about a given media file that is used as an attribute value of a product or a product model.",
        "operationId" : "get_media_files__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "download" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI to download the binaries of the media file"
                              }
                            }
                          }
                        }
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "string",
                        "description" : "Media file code"
                      },
                      "extension" : {
                        "type" : "string",
                        "description" : "Extension of the media file"
                      },
                      "mime_type" : {
                        "type" : "string",
                        "description" : "Mime type of the media file"
                      },
                      "original_filename" : {
                        "type" : "string",
                        "description" : "Original filename of the media file"
                      },
                      "size" : {
                        "type" : "integer",
                        "description" : "Size of the media file"
                      }
                    },
                    "example" : {
                      "code" : "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                      "extension" : "jpg",
                      "mime_type" : "image/jpeg",
                      "original_filename" : "10806799-1356.jpg",
                      "size" : 16070
                    }
                  } ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/media-files/{code}/download" : {
      "get" : {
        "tags" : [ "Product media file" ],
        "summary" : "Download a product media file",
        "description" : "This endpoint allows you to download a given media file that is used as an attribute value of a product or a product model.",
        "operationId" : "get_media_files__code__download",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/product-models" : {
      "get" : {
        "tags" : [ "Product model" ],
        "summary" : "Get list of product models",
        "description" : "This endpoint allows you to get a list of product models. Product models are paginated. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the set of products you request.",
        "operationId" : "get_product_models",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter product models, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-channel\">Filter product values via channel</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locales",
          "in" : "query",
          "description" : "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-locale\">Filter product values via locale</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section and the <a href=\"/documentation/filter.html#filter-on-product-model-properties\">Filter on product model properties</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pagination_type",
          "in" : "query",
          "description" : "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "page",
            "enum" : [ "page", "search_after" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_quality_scores",
          "in" : "query",
          "description" : "Return product model quality scores in the response. <strong>(Only available since the 6.0 version)</strong>",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return product models paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Product Models",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code", "family_variant" ],
                                "type" : "object",
                                "properties" : {
                                  "associations" : {
                                    "type" : "object",
                                    "properties" : {
                                      "associationTypeCode" : {
                                        "type" : "object",
                                        "properties" : {
                                          "groups" : {
                                            "type" : "array",
                                            "description" : "Array of groups codes with which the product is in relation",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          },
                                          "product_models" : {
                                            "type" : "array",
                                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          },
                                          "products" : {
                                            "type" : "array",
                                            "description" : "Array of product identifiers with which the product is in relation",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Several associations related to groups, product and/or other product models, grouped by association types"
                                  },
                                  "categories" : {
                                    "type" : "array",
                                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Product model code"
                                  },
                                  "created" : {
                                    "type" : "string",
                                    "description" : "Date of creation",
                                    "format" : "dateTime"
                                  },
                                  "family" : {
                                    "type" : "string",
                                    "description" : "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)"
                                  },
                                  "family_variant" : {
                                    "type" : "string",
                                    "description" : "Family variant code from which the product model inherits its attributes and variant attributes"
                                  },
                                  "metadata" : {
                                    "type" : "object",
                                    "properties" : {
                                      "workflow_status" : {
                                        "type" : "string",
                                        "description" : "Status of the product model regarding the user permissions",
                                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                                      }
                                    },
                                    "description" : "More information around the product model (only available since the v2.3 in the Enterprise Edition)"
                                  },
                                  "parent" : {
                                    "type" : "string",
                                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                                    "default" : "null"
                                  },
                                  "quality_scores" : {
                                    "type" : "object",
                                    "description" : "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")"
                                  },
                                  "quantified_associations" : {
                                    "type" : "object",
                                    "properties" : {
                                      "quantifiedAssociationTypeCode" : {
                                        "type" : "object",
                                        "properties" : {
                                          "product_models" : {
                                            "type" : "array",
                                            "description" : "Array of objects containing product model codes and quantities with which the product model is in relation",
                                            "items" : {
                                              "type" : "object",
                                              "properties" : {
                                                "code" : {
                                                  "type" : "string"
                                                },
                                                "quantity" : {
                                                  "type" : "integer"
                                                }
                                              }
                                            }
                                          },
                                          "products" : {
                                            "type" : "array",
                                            "description" : "Array of objects containing product identifiers and quantities with which the product model is in relation",
                                            "items" : {
                                              "type" : "object",
                                              "properties" : {
                                                "identifier" : {
                                                  "type" : "string"
                                                },
                                                "quantity" : {
                                                  "type" : "integer"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                                  },
                                  "updated" : {
                                    "type" : "string",
                                    "description" : "Date of the last update",
                                    "format" : "dateTime"
                                  },
                                  "values" : {
                                    "type" : "object",
                                    "properties" : {
                                      "attributeCode" : {
                                        "type" : "array",
                                        "items" : {
                                          "type" : "object",
                                          "properties" : {
                                            "data" : {
                                              "type" : "object",
                                              "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                                            },
                                            "locale" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                                            },
                                            "scope" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                                  }
                                },
                                "example" : {
                                  "associations" : {
                                    "PACK" : {
                                      "groups" : [ ],
                                      "product_models" : [ ],
                                      "products" : [ "sunglass" ]
                                    }
                                  },
                                  "categories" : [ "summer_collection" ],
                                  "code" : "model-biker-jacket-leather",
                                  "created" : "2017-10-02T15:03:55+02:00",
                                  "family" : "clothing",
                                  "family_variant" : "clothing_material_size",
                                  "parent" : "model-biker-jacket",
                                  "quality_scores" : [ {
                                    "data" : "A",
                                    "locale" : "en_US",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : "B",
                                    "locale" : "fr_FR",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : "D",
                                    "locale" : "en_US",
                                    "scope" : "tablet"
                                  }, {
                                    "data" : "E",
                                    "locale" : "fr_FR",
                                    "scope" : "tablet"
                                  } ],
                                  "quantified_associations" : {
                                    "PRODUCT_SET" : {
                                      "product_models" : [ {
                                        "code" : "model-biker-jacket-leather",
                                        "quantity" : 2
                                      } ],
                                      "products" : [ {
                                        "identifier" : "top",
                                        "quantity" : 2
                                      }, {
                                        "identifier" : "cap",
                                        "quantity" : 1
                                      } ]
                                    }
                                  },
                                  "updated" : "2017-10-02T15:03:55+02:00",
                                  "values" : {
                                    "collection" : [ {
                                      "data" : [ "summer_2017" ]
                                    } ],
                                    "color" : [ {
                                      "data" : "antique_white"
                                    } ],
                                    "description" : [ {
                                      "data" : "Biker jacket",
                                      "locale" : "en_US",
                                      "scope" : "ecommerce"
                                    } ],
                                    "material" : [ {
                                      "data" : "leather"
                                    } ],
                                    "name" : [ {
                                      "data" : "Biker jacket",
                                      "locale" : "en_US"
                                    } ],
                                    "variation_name" : [ {
                                      "data" : "Biker jacket leather",
                                      "locale" : "en_US"
                                    } ]
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "http://demo.akeneo.com/api/rest/v1/product-models/amarisshoe"
                      }
                    },
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglasses" ]
                      }
                    },
                    "categories" : [ "clothing", "shoes" ],
                    "code" : "amarisshoe",
                    "created" : "2017-10-04T18:04:10+02:00",
                    "family" : "shoes",
                    "family_variant" : "shoes_VariantA1",
                    "quality_scores" : [ {
                      "data" : "A",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "B",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "D",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "E",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "quantified_associations" : {
                      "PRODUCT_SET" : {
                        "product_models" : [ {
                          "identifier" : "model-biker-jacket-leather",
                          "quantity" : 2
                        } ],
                        "products" : [ {
                          "identifier" : "cap",
                          "quantity" : 2
                        }, {
                          "identifier" : "shoes",
                          "quantity" : 1
                        } ]
                      }
                    },
                    "updated" : "2017-10-04T18:04:10+02:00",
                    "values" : {
                      "description" : [ {
                        "data" : "I like shoes!",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "50.00",
                          "currency" : "EUR"
                        } ]
                      } ]
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "http://demo.akeneo.com/api/rest/v1/product-models/Abiloitshirt"
                      }
                    },
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglasses" ]
                      }
                    },
                    "categories" : [ "clothing", "tshirt" ],
                    "code" : "Abiloitshirt",
                    "created" : "2017-10-04T18:04:10+02:00",
                    "family" : "clothing",
                    "family_variant" : "clothing_VariantA1",
                    "quality_scores" : [ {
                      "data" : "A",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "B",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "D",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "E",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "quantified_associations" : {
                      "PRODUCT_SET" : {
                        "product_models" : [ ],
                        "products" : [ {
                          "identifier" : "cap",
                          "quantity" : 2
                        } ]
                      }
                    },
                    "updated" : "2017-10-04T18:04:10+02:00",
                    "values" : {
                      "description" : [ {
                        "data" : "I like tshirt!",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "50.00",
                          "currency" : "EUR"
                        } ]
                      } ]
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "http://demo.akeneo.com/api/rest/v1/product-models/Astertrousers"
                      }
                    },
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglasses" ]
                      }
                    },
                    "categories" : [ "clothing", "trousers" ],
                    "code" : "Astertrousers",
                    "created" : "2017-10-04T18:04:10+02:00",
                    "family" : "clothing",
                    "family_variant" : "clothing_VariantA1",
                    "quantified_associations" : { },
                    "updated" : "2017-10-04T18:04:10+02:00",
                    "values" : {
                      "description" : [ {
                        "data" : "I like trousers!",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "50.00",
                          "currency" : "EUR"
                        } ]
                      } ]
                    }
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3"
                  },
                  "next" : {
                    "href" : "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=rw%3D%3D"
                  },
                  "self" : {
                    "href" : "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=qg%3D%3D"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Product model" ],
        "summary" : "Create a new product model",
        "description" : "This endpoint allows you to create a new product model. In the Enterprise Edition, since the v2.3, permissions based on your user groups are applied to the product model you try to create.",
        "operationId" : "post_product_models",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "family_variant" ],
                "type" : "object",
                "properties" : {
                  "associations" : {
                    "type" : "object",
                    "properties" : {
                      "associationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "groups" : {
                            "type" : "array",
                            "description" : "Array of groups codes with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of product identifiers with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several associations related to groups, product and/or other product models, grouped by association types"
                  },
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Product model code"
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "family" : {
                    "type" : "string",
                    "description" : "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)"
                  },
                  "family_variant" : {
                    "type" : "string",
                    "description" : "Family variant code from which the product model inherits its attributes and variant attributes"
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "workflow_status" : {
                        "type" : "string",
                        "description" : "Status of the product model regarding the user permissions",
                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                      }
                    },
                    "description" : "More information around the product model (only available since the v2.3 in the Enterprise Edition)"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                    "default" : "null"
                  },
                  "quality_scores" : {
                    "type" : "object",
                    "description" : "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")"
                  },
                  "quantified_associations" : {
                    "type" : "object",
                    "properties" : {
                      "quantifiedAssociationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of objects containing product model codes and quantities with which the product model is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of objects containing product identifiers and quantities with which the product model is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "identifier" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "data" : {
                              "type" : "object",
                              "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "scope" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                  }
                },
                "example" : {
                  "associations" : {
                    "PACK" : {
                      "groups" : [ ],
                      "product_models" : [ ],
                      "products" : [ "sunglass" ]
                    }
                  },
                  "categories" : [ "summer_collection" ],
                  "code" : "model-biker-jacket-leather",
                  "created" : "2017-10-02T15:03:55+02:00",
                  "family" : "clothing",
                  "family_variant" : "clothing_material_size",
                  "parent" : "model-biker-jacket",
                  "quality_scores" : [ {
                    "data" : "A",
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "B",
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "D",
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : "E",
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "quantified_associations" : {
                    "PRODUCT_SET" : {
                      "product_models" : [ {
                        "code" : "model-biker-jacket-leather",
                        "quantity" : 2
                      } ],
                      "products" : [ {
                        "identifier" : "top",
                        "quantity" : 2
                      }, {
                        "identifier" : "cap",
                        "quantity" : 1
                      } ]
                    }
                  },
                  "updated" : "2017-10-02T15:03:55+02:00",
                  "values" : {
                    "collection" : [ {
                      "data" : [ "summer_2017" ]
                    } ],
                    "color" : [ {
                      "data" : "antique_white"
                    } ],
                    "description" : [ {
                      "data" : "Biker jacket",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    } ],
                    "material" : [ {
                      "data" : "leather"
                    } ],
                    "name" : [ {
                      "data" : "Biker jacket",
                      "locale" : "en_US"
                    } ],
                    "variation_name" : [ {
                      "data" : "Biker jacket leather",
                      "locale" : "en_US"
                    } ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product model" ],
        "summary" : "Update/create several product models",
        "description" : "This endpoint allows you to update and/or create several product models at once. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product models exists for the given code, it creates it. In the Enterprise Edition, since the v2.3, permissions based on your user groups are applied to the product models you try to update. It may result in the creation of drafts if you only have edit rights through the product model's categories.",
        "operationId" : "patch_product_models",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "family_variant" ],
                "type" : "object",
                "properties" : {
                  "associations" : {
                    "type" : "object",
                    "properties" : {
                      "associationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "groups" : {
                            "type" : "array",
                            "description" : "Array of groups codes with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of product identifiers with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several associations related to groups, product and/or other product models, grouped by association types"
                  },
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Product model code"
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "family" : {
                    "type" : "string",
                    "description" : "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)"
                  },
                  "family_variant" : {
                    "type" : "string",
                    "description" : "Family variant code from which the product model inherits its attributes and variant attributes"
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "workflow_status" : {
                        "type" : "string",
                        "description" : "Status of the product model regarding the user permissions",
                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                      }
                    },
                    "description" : "More information around the product model (only available since the v2.3 in the Enterprise Edition)"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                    "default" : "null"
                  },
                  "quality_scores" : {
                    "type" : "object",
                    "description" : "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")"
                  },
                  "quantified_associations" : {
                    "type" : "object",
                    "properties" : {
                      "quantifiedAssociationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of objects containing product model codes and quantities with which the product model is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of objects containing product identifiers and quantities with which the product model is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "identifier" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "data" : {
                              "type" : "object",
                              "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "scope" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                  }
                },
                "example" : {
                  "associations" : {
                    "PACK" : {
                      "groups" : [ ],
                      "product_models" : [ ],
                      "products" : [ "sunglass" ]
                    }
                  },
                  "categories" : [ "summer_collection" ],
                  "code" : "model-biker-jacket-leather",
                  "created" : "2017-10-02T15:03:55+02:00",
                  "family" : "clothing",
                  "family_variant" : "clothing_material_size",
                  "parent" : "model-biker-jacket",
                  "quality_scores" : [ {
                    "data" : "A",
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "B",
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "D",
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : "E",
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "quantified_associations" : {
                    "PRODUCT_SET" : {
                      "product_models" : [ {
                        "code" : "model-biker-jacket-leather",
                        "quantity" : 2
                      } ],
                      "products" : [ {
                        "identifier" : "top",
                        "quantity" : 2
                      }, {
                        "identifier" : "cap",
                        "quantity" : 1
                      } ]
                    }
                  },
                  "updated" : "2017-10-02T15:03:55+02:00",
                  "values" : {
                    "collection" : [ {
                      "data" : [ "summer_2017" ]
                    } ],
                    "color" : [ {
                      "data" : "antique_white"
                    } ],
                    "description" : [ {
                      "data" : "Biker jacket",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    } ],
                    "material" : [ {
                      "data" : "leather"
                    } ],
                    "name" : [ {
                      "data" : "Biker jacket",
                      "locale" : "en_US"
                    } ],
                    "variation_name" : [ {
                      "data" : "Biker jacket leather",
                      "locale" : "en_US"
                    } ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"code\":\"sub_sweat_option_a\",\"status_code\":204}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"code\":\"sub_sweat_option_b\",\"status_code\":422,\"message\":\"Validation failed.\",\"errors\":[{\"property\":\"attribute\",\"message\":\"Cannot set value \\\"Option A\\\" for the attribute axis \\\"a_simple_select\\\", as another sibling entity already has this value\"}]}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"code\":\"tshirt\",\"status_code\":201}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/product-models/{code}" : {
      "get" : {
        "tags" : [ "Product model" ],
        "summary" : "Get a product model",
        "description" : "This endpoint allows you to get the information about a given product model. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product model you request.",
        "operationId" : "get_product_models__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "with_quality_scores",
          "in" : "query",
          "description" : "Return product model quality scores in the response. <strong>(Only available since the 6.0 version)</strong>",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code", "family_variant" ],
                  "type" : "object",
                  "properties" : {
                    "associations" : {
                      "type" : "object",
                      "properties" : {
                        "associationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "groups" : {
                              "type" : "array",
                              "description" : "Array of groups codes with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of product identifiers with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several associations related to groups, product and/or other product models, grouped by association types"
                    },
                    "categories" : {
                      "type" : "array",
                      "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Product model code"
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation",
                      "format" : "dateTime"
                    },
                    "family" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)"
                    },
                    "family_variant" : {
                      "type" : "string",
                      "description" : "Family variant code from which the product model inherits its attributes and variant attributes"
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "workflow_status" : {
                          "type" : "string",
                          "description" : "Status of the product model regarding the user permissions",
                          "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                        }
                      },
                      "description" : "More information around the product model (only available since the v2.3 in the Enterprise Edition)"
                    },
                    "parent" : {
                      "type" : "string",
                      "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                      "default" : "null"
                    },
                    "quality_scores" : {
                      "type" : "object",
                      "description" : "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")"
                    },
                    "quantified_associations" : {
                      "type" : "object",
                      "properties" : {
                        "quantifiedAssociationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of objects containing product model codes and quantities with which the product model is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of objects containing product identifiers and quantities with which the product model is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "identifier" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "data" : {
                                "type" : "object",
                                "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "scope" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                    }
                  },
                  "example" : {
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglass" ]
                      }
                    },
                    "categories" : [ "summer_collection" ],
                    "code" : "model-biker-jacket-leather",
                    "created" : "2017-10-02T15:03:55+02:00",
                    "family" : "clothing",
                    "family_variant" : "clothing_material_size",
                    "parent" : "model-biker-jacket",
                    "quality_scores" : [ {
                      "data" : "A",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "B",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "D",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "E",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "quantified_associations" : {
                      "PRODUCT_SET" : {
                        "product_models" : [ {
                          "code" : "model-biker-jacket-leather",
                          "quantity" : 2
                        } ],
                        "products" : [ {
                          "identifier" : "top",
                          "quantity" : 2
                        }, {
                          "identifier" : "cap",
                          "quantity" : 1
                        } ]
                      }
                    },
                    "updated" : "2017-10-02T15:03:55+02:00",
                    "values" : {
                      "collection" : [ {
                        "data" : [ "summer_2017" ]
                      } ],
                      "color" : [ {
                        "data" : "antique_white"
                      } ],
                      "description" : [ {
                        "data" : "Biker jacket",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      } ],
                      "material" : [ {
                        "data" : "leather"
                      } ],
                      "name" : [ {
                        "data" : "Biker jacket",
                        "locale" : "en_US"
                      } ],
                      "variation_name" : [ {
                        "data" : "Biker jacket leather",
                        "locale" : "en_US"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Product model" ],
        "summary" : "Delete a product model",
        "description" : "This endpoint allows you to delete a given product model. All its children, product models and variant products, will be also deleted. In the Enterprise Edition, the permissions based on your connection user group are applied to the product model you try to delete.",
        "operationId" : "delete_product_models__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content to return"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product model" ],
        "summary" : "Update/create a product model",
        "description" : "This endpoint allows you to update a given product model. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product model exists for the given code, it creates it. In the Enterprise Edition PIM since the 2.3, permissions based on your user groups are applied to the product model you try to update. It may result in the creation of a draft if you only have edit rights through the product model's categories.",
        "operationId" : "patch_product_models__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "family_variant" ],
                "type" : "object",
                "properties" : {
                  "associations" : {
                    "type" : "object",
                    "properties" : {
                      "associationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "groups" : {
                            "type" : "array",
                            "description" : "Array of groups codes with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of product identifiers with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several associations related to groups, product and/or other product models, grouped by association types"
                  },
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Product model code"
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "family" : {
                    "type" : "string",
                    "description" : "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)"
                  },
                  "family_variant" : {
                    "type" : "string",
                    "description" : "Family variant code from which the product model inherits its attributes and variant attributes"
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "workflow_status" : {
                        "type" : "string",
                        "description" : "Status of the product model regarding the user permissions",
                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                      }
                    },
                    "description" : "More information around the product model (only available since the v2.3 in the Enterprise Edition)"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                    "default" : "null"
                  },
                  "quality_scores" : {
                    "type" : "object",
                    "description" : "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")"
                  },
                  "quantified_associations" : {
                    "type" : "object",
                    "properties" : {
                      "quantifiedAssociationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of objects containing product model codes and quantities with which the product model is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of objects containing product identifiers and quantities with which the product model is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "identifier" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "data" : {
                              "type" : "object",
                              "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "scope" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                  }
                },
                "example" : {
                  "associations" : {
                    "PACK" : {
                      "groups" : [ ],
                      "product_models" : [ ],
                      "products" : [ "sunglass" ]
                    }
                  },
                  "categories" : [ "summer_collection" ],
                  "code" : "model-biker-jacket-leather",
                  "created" : "2017-10-02T15:03:55+02:00",
                  "family" : "clothing",
                  "family_variant" : "clothing_material_size",
                  "parent" : "model-biker-jacket",
                  "quality_scores" : [ {
                    "data" : "A",
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "B",
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "D",
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : "E",
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "quantified_associations" : {
                    "PRODUCT_SET" : {
                      "product_models" : [ {
                        "code" : "model-biker-jacket-leather",
                        "quantity" : 2
                      } ],
                      "products" : [ {
                        "identifier" : "top",
                        "quantity" : 2
                      }, {
                        "identifier" : "cap",
                        "quantity" : 1
                      } ]
                    }
                  },
                  "updated" : "2017-10-02T15:03:55+02:00",
                  "values" : {
                    "collection" : [ {
                      "data" : [ "summer_2017" ]
                    } ],
                    "color" : [ {
                      "data" : "antique_white"
                    } ],
                    "description" : [ {
                      "data" : "Biker jacket",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    } ],
                    "material" : [ {
                      "data" : "leather"
                    } ],
                    "name" : [ {
                      "data" : "Biker jacket",
                      "locale" : "en_US"
                    } ],
                    "variation_name" : [ {
                      "data" : "Biker jacket leather",
                      "locale" : "en_US"
                    } ]
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/product-models/{code}/draft" : {
      "get" : {
        "tags" : [ "Product model" ],
        "summary" : "Get a draft",
        "description" : "This endpoint allows you to get the information about a given product model draft.",
        "operationId" : "get_product_model_draft__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code", "family_variant" ],
                  "type" : "object",
                  "properties" : {
                    "associations" : {
                      "type" : "object",
                      "properties" : {
                        "associationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "groups" : {
                              "type" : "array",
                              "description" : "Array of groups codes with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of product identifiers with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several associations related to groups, product and/or other product models, grouped by association types"
                    },
                    "categories" : {
                      "type" : "array",
                      "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Product model code"
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation",
                      "format" : "dateTime"
                    },
                    "family" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)"
                    },
                    "family_variant" : {
                      "type" : "string",
                      "description" : "Family variant code from which the product model inherits its attributes and variant attributes"
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "workflow_status" : {
                          "type" : "string",
                          "description" : "Status of the product model regarding the user permissions",
                          "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                        }
                      },
                      "description" : "More information around the product model (only available since the v2.3 in the Enterprise Edition)"
                    },
                    "parent" : {
                      "type" : "string",
                      "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                      "default" : "null"
                    },
                    "quality_scores" : {
                      "type" : "object",
                      "description" : "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")"
                    },
                    "quantified_associations" : {
                      "type" : "object",
                      "properties" : {
                        "quantifiedAssociationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of objects containing product model codes and quantities with which the product model is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of objects containing product identifiers and quantities with which the product model is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "identifier" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "data" : {
                                "type" : "object",
                                "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "scope" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                    }
                  },
                  "example" : {
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglass" ]
                      }
                    },
                    "categories" : [ "summer_collection" ],
                    "code" : "model-biker-jacket-leather",
                    "created" : "2017-10-02T15:03:55+02:00",
                    "family" : "clothing",
                    "family_variant" : "clothing_material_size",
                    "parent" : "model-biker-jacket",
                    "quality_scores" : [ {
                      "data" : "A",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "B",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "D",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "E",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "quantified_associations" : {
                      "PRODUCT_SET" : {
                        "product_models" : [ {
                          "code" : "model-biker-jacket-leather",
                          "quantity" : 2
                        } ],
                        "products" : [ {
                          "identifier" : "top",
                          "quantity" : 2
                        }, {
                          "identifier" : "cap",
                          "quantity" : 1
                        } ]
                      }
                    },
                    "updated" : "2017-10-02T15:03:55+02:00",
                    "values" : {
                      "collection" : [ {
                        "data" : [ "summer_2017" ]
                      } ],
                      "color" : [ {
                        "data" : "antique_white"
                      } ],
                      "description" : [ {
                        "data" : "Biker jacket",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      } ],
                      "material" : [ {
                        "data" : "leather"
                      } ],
                      "name" : [ {
                        "data" : "Biker jacket",
                        "locale" : "en_US"
                      } ],
                      "variation_name" : [ {
                        "data" : "Biker jacket leather",
                        "locale" : "en_US"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/product-models/{code}/proposal" : {
      "post" : {
        "tags" : [ "Product model" ],
        "summary" : "Submit a draft for approval",
        "description" : "This endpoint allows you to submit a product model draft for approval.",
        "operationId" : "post_product_model_proposal",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Submitted",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/products" : {
      "get" : {
        "tags" : [ "Product [identifier]" ],
        "summary" : "Get list of products",
        "description" : "This endpoint allows you to get a list of products. Products are paginated and they can be filtered. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the set of products you request.",
        "operationId" : "get_products",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-channel\">Filter product values via channel</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locales",
          "in" : "query",
          "description" : "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-locale\">Filter product values via locale</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pagination_type",
          "in" : "query",
          "description" : "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "page",
            "enum" : [ "page", "search_after" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_attribute_options",
          "in" : "query",
          "description" : "Return labels of attribute options in the response. (Only available since the 5.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_quality_scores",
          "in" : "query",
          "description" : "Return product quality scores in the response. (Only available since the 5.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_completenesses",
          "in" : "query",
          "description" : "Return product completenesses in the response. (Only available since the 6.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return products paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Products",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "identifier" ],
                                "type" : "object",
                                "properties" : {
                                  "associations" : {
                                    "type" : "object",
                                    "properties" : {
                                      "associationTypeCode" : {
                                        "type" : "object",
                                        "properties" : {
                                          "groups" : {
                                            "type" : "array",
                                            "description" : "Array of groups codes with which the product is in relation",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          },
                                          "product_models" : {
                                            "type" : "array",
                                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          },
                                          "products" : {
                                            "type" : "array",
                                            "description" : "Array of product identifiers with which the product is in relation",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                                  },
                                  "categories" : {
                                    "type" : "array",
                                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "completenesses" : {
                                    "type" : "array",
                                    "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "data" : {
                                          "type" : "integer"
                                        },
                                        "locale" : {
                                          "type" : "string"
                                        },
                                        "scope" : {
                                          "type" : "string"
                                        }
                                      }
                                    }
                                  },
                                  "created" : {
                                    "type" : "string",
                                    "description" : "Date of creation",
                                    "format" : "dateTime"
                                  },
                                  "enabled" : {
                                    "type" : "boolean",
                                    "description" : "Whether the product is enabled",
                                    "default" : true
                                  },
                                  "family" : {
                                    "type" : "string",
                                    "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                                    "default" : "null only in the case of a non variant product"
                                  },
                                  "groups" : {
                                    "type" : "array",
                                    "description" : "Codes of the groups to which the product belong",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "identifier" : {
                                    "type" : "string",
                                    "description" : "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                                  },
                                  "metadata" : {
                                    "type" : "object",
                                    "properties" : {
                                      "workflow_status" : {
                                        "type" : "string",
                                        "description" : "Status of the product regarding the user permissions",
                                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                                      }
                                    },
                                    "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                                  },
                                  "parent" : {
                                    "type" : "string",
                                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                                    "default" : "null"
                                  },
                                  "quality_scores" : {
                                    "type" : "object",
                                    "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                                  },
                                  "quantified_associations" : {
                                    "type" : "object",
                                    "properties" : {
                                      "quantifiedAssociationTypeCode" : {
                                        "type" : "object",
                                        "properties" : {
                                          "product_models" : {
                                            "type" : "array",
                                            "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                                            "items" : {
                                              "type" : "object",
                                              "properties" : {
                                                "code" : {
                                                  "type" : "string"
                                                },
                                                "quantity" : {
                                                  "type" : "integer"
                                                }
                                              }
                                            }
                                          },
                                          "products" : {
                                            "type" : "array",
                                            "description" : "Array of objects containing product identifiers and quantities with which the product is in relation",
                                            "items" : {
                                              "type" : "object",
                                              "properties" : {
                                                "identifier" : {
                                                  "type" : "string"
                                                },
                                                "quantity" : {
                                                  "type" : "integer"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                                  },
                                  "updated" : {
                                    "type" : "string",
                                    "description" : "Date of the last update",
                                    "format" : "dateTime"
                                  },
                                  "uuid" : {
                                    "type" : "string",
                                    "description" : "Product UUID"
                                  },
                                  "values" : {
                                    "type" : "object",
                                    "properties" : {
                                      "attributeCode" : {
                                        "type" : "array",
                                        "items" : {
                                          "type" : "object",
                                          "properties" : {
                                            "data" : {
                                              "type" : "object",
                                              "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                                            },
                                            "linked_data" : {
                                              "type" : "object",
                                              "properties" : {
                                                "attribute" : {
                                                  "type" : "string"
                                                },
                                                "code" : {
                                                  "type" : "string"
                                                },
                                                "labels" : {
                                                  "type" : "object"
                                                }
                                              },
                                              "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                                            },
                                            "locale" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                                            },
                                            "scope" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                                  }
                                },
                                "example" : {
                                  "associations" : {
                                    "PACK" : {
                                      "groups" : [ ],
                                      "product_models" : [ ],
                                      "products" : [ "sunglass" ]
                                    }
                                  },
                                  "categories" : [ "summer_collection" ],
                                  "completenesses" : [ {
                                    "data" : 10,
                                    "locale" : "en_US",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : 20,
                                    "locale" : "fr_FR",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : 30,
                                    "locale" : "en_US",
                                    "scope" : "tablet"
                                  }, {
                                    "data" : 40,
                                    "locale" : "fr_FR",
                                    "scope" : "tablet"
                                  } ],
                                  "created" : "2016-06-23T18:24:44+02:00",
                                  "enabled" : true,
                                  "family" : "tshirt",
                                  "groups" : [ ],
                                  "identifier" : "top",
                                  "quality_scores" : [ {
                                    "data" : "A",
                                    "locale" : "en_US",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : "B",
                                    "locale" : "fr_FR",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : "D",
                                    "locale" : "en_US",
                                    "scope" : "tablet"
                                  }, {
                                    "data" : "E",
                                    "locale" : "fr_FR",
                                    "scope" : "tablet"
                                  } ],
                                  "quantified_associations" : {
                                    "PRODUCT_SET" : {
                                      "product_models" : [ {
                                        "identifier" : "model-biker-jacket-leather",
                                        "quantity" : 2
                                      } ],
                                      "products" : [ {
                                        "identifier" : "cap",
                                        "quantity" : 2
                                      }, {
                                        "identifier" : "shoes",
                                        "quantity" : 1
                                      } ]
                                    }
                                  },
                                  "updated" : "2016-06-25T17:56:12+02:00",
                                  "values" : {
                                    "collection" : [ {
                                      "data" : [ "winter_2016" ],
                                      "linked_data" : {
                                        "winter_2016" : {
                                          "attribute" : "collection",
                                          "code" : "winter_2016",
                                          "labels" : {
                                            "en_US" : "Winter 2016",
                                            "fr_FR" : "Hiver 2016"
                                          }
                                        }
                                      }
                                    } ],
                                    "color" : [ {
                                      "data" : "black",
                                      "linked_data" : {
                                        "attribute" : "color",
                                        "code" : "black",
                                        "labels" : {
                                          "en_US" : "Black",
                                          "fr_FR" : "Noir"
                                        }
                                      }
                                    } ],
                                    "description" : [ {
                                      "data" : "Summer top",
                                      "locale" : "en_US",
                                      "scope" : "ecommerce"
                                    }, {
                                      "data" : "Top",
                                      "locale" : "en_US",
                                      "scope" : "tablet"
                                    }, {
                                      "data" : "Débardeur pour l'été",
                                      "locale" : "fr_FR",
                                      "scope" : "ecommerce"
                                    }, {
                                      "data" : "Débardeur",
                                      "locale" : "fr_FR",
                                      "scope" : "tablet"
                                    } ],
                                    "name" : [ {
                                      "data" : "Top",
                                      "locale" : "en_US"
                                    }, {
                                      "data" : "Débardeur",
                                      "locale" : "fr_FR"
                                    } ],
                                    "price" : [ {
                                      "data" : [ {
                                        "amount" : "15.5",
                                        "currency" : "EUR"
                                      }, {
                                        "amount" : "15",
                                        "currency" : "USD"
                                      } ]
                                    } ],
                                    "size" : [ {
                                      "data" : "m",
                                      "linked_data" : {
                                        "attribute" : "size",
                                        "code" : "m",
                                        "labels" : {
                                          "en_US" : "M",
                                          "fr_FR" : "M"
                                        }
                                      }
                                    } ]
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Product [identifier]" ],
        "summary" : "Create a new product",
        "description" : "This endpoint allows you to create a new product. In the Enterprise Edition, since the v2.0, permissions based on your user groups are applied to the product you try to create.",
        "operationId" : "post_products",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "identifier" ],
                "type" : "object",
                "properties" : {
                  "associations" : {
                    "type" : "object",
                    "properties" : {
                      "associationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "groups" : {
                            "type" : "array",
                            "description" : "Array of groups codes with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of product identifiers with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                  },
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "completenesses" : {
                    "type" : "array",
                    "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "data" : {
                          "type" : "integer"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "scope" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "enabled" : {
                    "type" : "boolean",
                    "description" : "Whether the product is enabled",
                    "default" : true
                  },
                  "family" : {
                    "type" : "string",
                    "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                    "default" : "null only in the case of a non variant product"
                  },
                  "groups" : {
                    "type" : "array",
                    "description" : "Codes of the groups to which the product belong",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "identifier" : {
                    "type" : "string",
                    "description" : "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "workflow_status" : {
                        "type" : "string",
                        "description" : "Status of the product regarding the user permissions",
                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                      }
                    },
                    "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "default" : "null"
                  },
                  "quality_scores" : {
                    "type" : "object",
                    "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                  },
                  "quantified_associations" : {
                    "type" : "object",
                    "properties" : {
                      "quantifiedAssociationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of objects containing product identifiers and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "identifier" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "uuid" : {
                    "type" : "string",
                    "description" : "Product UUID"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "data" : {
                              "type" : "object",
                              "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data" : {
                              "type" : "object",
                              "properties" : {
                                "attribute" : {
                                  "type" : "string"
                                },
                                "code" : {
                                  "type" : "string"
                                },
                                "labels" : {
                                  "type" : "object"
                                }
                              },
                              "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "scope" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                  }
                },
                "example" : {
                  "associations" : {
                    "PACK" : {
                      "groups" : [ ],
                      "product_models" : [ ],
                      "products" : [ "sunglass" ]
                    }
                  },
                  "categories" : [ "summer_collection" ],
                  "completenesses" : [ {
                    "data" : 10,
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 20,
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 30,
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : 40,
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "created" : "2016-06-23T18:24:44+02:00",
                  "enabled" : true,
                  "family" : "tshirt",
                  "groups" : [ ],
                  "identifier" : "top",
                  "quality_scores" : [ {
                    "data" : "A",
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "B",
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "D",
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : "E",
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "quantified_associations" : {
                    "PRODUCT_SET" : {
                      "product_models" : [ {
                        "identifier" : "model-biker-jacket-leather",
                        "quantity" : 2
                      } ],
                      "products" : [ {
                        "identifier" : "cap",
                        "quantity" : 2
                      }, {
                        "identifier" : "shoes",
                        "quantity" : 1
                      } ]
                    }
                  },
                  "updated" : "2016-06-25T17:56:12+02:00",
                  "values" : {
                    "collection" : [ {
                      "data" : [ "winter_2016" ],
                      "linked_data" : {
                        "winter_2016" : {
                          "attribute" : "collection",
                          "code" : "winter_2016",
                          "labels" : {
                            "en_US" : "Winter 2016",
                            "fr_FR" : "Hiver 2016"
                          }
                        }
                      }
                    } ],
                    "color" : [ {
                      "data" : "black",
                      "linked_data" : {
                        "attribute" : "color",
                        "code" : "black",
                        "labels" : {
                          "en_US" : "Black",
                          "fr_FR" : "Noir"
                        }
                      }
                    } ],
                    "description" : [ {
                      "data" : "Summer top",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Top",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "Débardeur pour l'été",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "name" : [ {
                      "data" : "Top",
                      "locale" : "en_US"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR"
                    } ],
                    "price" : [ {
                      "data" : [ {
                        "amount" : "15.5",
                        "currency" : "EUR"
                      }, {
                        "amount" : "15",
                        "currency" : "USD"
                      } ]
                    } ],
                    "size" : [ {
                      "data" : "m",
                      "linked_data" : {
                        "attribute" : "size",
                        "code" : "m",
                        "labels" : {
                          "en_US" : "M",
                          "fr_FR" : "M"
                        }
                      }
                    } ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product [identifier]" ],
        "summary" : "Update/create several products",
        "description" : "This endpoint allows you to update and/or create several products at once. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given identifier, it creates it. In the Enterprise Edition, since the v2.0, permissions based on your user groups are applied to the products you try to update. It may result in the creation of drafts if you only have edit rights through the product's categories.",
        "operationId" : "patch_products",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "identifier" ],
                "type" : "object",
                "properties" : {
                  "associations" : {
                    "type" : "object",
                    "properties" : {
                      "associationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "groups" : {
                            "type" : "array",
                            "description" : "Array of groups codes with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of product identifiers with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                  },
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "completenesses" : {
                    "type" : "array",
                    "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "data" : {
                          "type" : "integer"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "scope" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "enabled" : {
                    "type" : "boolean",
                    "description" : "Whether the product is enabled",
                    "default" : true
                  },
                  "family" : {
                    "type" : "string",
                    "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                    "default" : "null only in the case of a non variant product"
                  },
                  "groups" : {
                    "type" : "array",
                    "description" : "Codes of the groups to which the product belong",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "identifier" : {
                    "type" : "string",
                    "description" : "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "workflow_status" : {
                        "type" : "string",
                        "description" : "Status of the product regarding the user permissions",
                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                      }
                    },
                    "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "default" : "null"
                  },
                  "quality_scores" : {
                    "type" : "object",
                    "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                  },
                  "quantified_associations" : {
                    "type" : "object",
                    "properties" : {
                      "quantifiedAssociationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of objects containing product identifiers and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "identifier" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "uuid" : {
                    "type" : "string",
                    "description" : "Product UUID"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "data" : {
                              "type" : "object",
                              "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data" : {
                              "type" : "object",
                              "properties" : {
                                "attribute" : {
                                  "type" : "string"
                                },
                                "code" : {
                                  "type" : "string"
                                },
                                "labels" : {
                                  "type" : "object"
                                }
                              },
                              "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "scope" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                  }
                },
                "example" : {
                  "associations" : {
                    "PACK" : {
                      "groups" : [ ],
                      "product_models" : [ ],
                      "products" : [ "sunglass" ]
                    }
                  },
                  "categories" : [ "summer_collection" ],
                  "completenesses" : [ {
                    "data" : 10,
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 20,
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 30,
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : 40,
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "created" : "2016-06-23T18:24:44+02:00",
                  "enabled" : true,
                  "family" : "tshirt",
                  "groups" : [ ],
                  "identifier" : "top",
                  "quality_scores" : [ {
                    "data" : "A",
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "B",
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "D",
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : "E",
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "quantified_associations" : {
                    "PRODUCT_SET" : {
                      "product_models" : [ {
                        "identifier" : "model-biker-jacket-leather",
                        "quantity" : 2
                      } ],
                      "products" : [ {
                        "identifier" : "cap",
                        "quantity" : 2
                      }, {
                        "identifier" : "shoes",
                        "quantity" : 1
                      } ]
                    }
                  },
                  "updated" : "2016-06-25T17:56:12+02:00",
                  "values" : {
                    "collection" : [ {
                      "data" : [ "winter_2016" ],
                      "linked_data" : {
                        "winter_2016" : {
                          "attribute" : "collection",
                          "code" : "winter_2016",
                          "labels" : {
                            "en_US" : "Winter 2016",
                            "fr_FR" : "Hiver 2016"
                          }
                        }
                      }
                    } ],
                    "color" : [ {
                      "data" : "black",
                      "linked_data" : {
                        "attribute" : "color",
                        "code" : "black",
                        "labels" : {
                          "en_US" : "Black",
                          "fr_FR" : "Noir"
                        }
                      }
                    } ],
                    "description" : [ {
                      "data" : "Summer top",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Top",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "Débardeur pour l'été",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "name" : [ {
                      "data" : "Top",
                      "locale" : "en_US"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR"
                    } ],
                    "price" : [ {
                      "data" : [ {
                        "amount" : "15.5",
                        "currency" : "EUR"
                      }, {
                        "amount" : "15",
                        "currency" : "USD"
                      } ]
                    } ],
                    "size" : [ {
                      "data" : "m",
                      "linked_data" : {
                        "attribute" : "size",
                        "code" : "m",
                        "labels" : {
                          "en_US" : "M",
                          "fr_FR" : "M"
                        }
                      }
                    } ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Resource code, only filled when the resource is not a product"
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Resource identifier, only filled when the resource is a product"
                    },
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"identifier\":\"cap\",\"status_code\":204}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"identifier\":\"mug\",\"status_code\":422,\"message\":\"Property \"group\" does not exist.\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"identifier\":\"tshirt\",\"status_code\":201}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/products-uuid" : {
      "get" : {
        "tags" : [ "Product [uuid]" ],
        "summary" : "Get list of products",
        "description" : "This endpoint allows you to get a list of products. Products are paginated and they can be filtered. In the Enterprise Edition, permissions based on your user groups are applied to the set of products you request.",
        "operationId" : "get_products_uuid",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-channel\">Filter product values via channel</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locales",
          "in" : "query",
          "description" : "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-locale\">Filter product values via locale</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pagination_type",
          "in" : "query",
          "description" : "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "page",
            "enum" : [ "page", "search_after" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_attribute_options",
          "in" : "query",
          "description" : "Return labels of attribute options in the response. (Only available since the 5.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_quality_scores",
          "in" : "query",
          "description" : "Return product quality scores in the response. (Only available since the 5.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_completenesses",
          "in" : "query",
          "description" : "Return product completenesses in the response. (Only available since the 6.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return products paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Products",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "type" : "object",
                                "properties" : {
                                  "associations" : {
                                    "type" : "object",
                                    "properties" : {
                                      "associationTypeCode" : {
                                        "type" : "object",
                                        "properties" : {
                                          "groups" : {
                                            "type" : "array",
                                            "description" : "Array of groups codes with which the product is in relation",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          },
                                          "product_models" : {
                                            "type" : "array",
                                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          },
                                          "products" : {
                                            "type" : "array",
                                            "description" : "Array of product uuids with which the product is in relation",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                                  },
                                  "categories" : {
                                    "type" : "array",
                                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "completenesses" : {
                                    "type" : "array",
                                    "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "data" : {
                                          "type" : "integer"
                                        },
                                        "locale" : {
                                          "type" : "string"
                                        },
                                        "scope" : {
                                          "type" : "string"
                                        }
                                      }
                                    }
                                  },
                                  "created" : {
                                    "type" : "string",
                                    "description" : "Date of creation",
                                    "format" : "dateTime"
                                  },
                                  "enabled" : {
                                    "type" : "boolean",
                                    "description" : "Whether the product is enabled",
                                    "default" : true
                                  },
                                  "family" : {
                                    "type" : "string",
                                    "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                                    "default" : "null only in the case of a non variant product"
                                  },
                                  "groups" : {
                                    "type" : "array",
                                    "description" : "Codes of the groups to which the product belong",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "metadata" : {
                                    "type" : "object",
                                    "properties" : {
                                      "workflow_status" : {
                                        "type" : "string",
                                        "description" : "Status of the product regarding the user permissions",
                                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                                      }
                                    },
                                    "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                                  },
                                  "parent" : {
                                    "type" : "string",
                                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                                    "default" : "null"
                                  },
                                  "quality_scores" : {
                                    "type" : "object",
                                    "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                                  },
                                  "quantified_associations" : {
                                    "type" : "object",
                                    "properties" : {
                                      "quantifiedAssociationTypeCode" : {
                                        "type" : "object",
                                        "properties" : {
                                          "product_models" : {
                                            "type" : "array",
                                            "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                                            "items" : {
                                              "type" : "object",
                                              "properties" : {
                                                "code" : {
                                                  "type" : "string"
                                                },
                                                "quantity" : {
                                                  "type" : "integer"
                                                }
                                              }
                                            }
                                          },
                                          "products" : {
                                            "type" : "array",
                                            "description" : "Array of objects containing product uuids and quantities with which the product is in relation",
                                            "items" : {
                                              "type" : "object",
                                              "properties" : {
                                                "quantity" : {
                                                  "type" : "integer"
                                                },
                                                "uuid" : {
                                                  "type" : "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                                  },
                                  "updated" : {
                                    "type" : "string",
                                    "description" : "Date of the last update",
                                    "format" : "dateTime"
                                  },
                                  "uuid" : {
                                    "type" : "string",
                                    "description" : "Product uuid"
                                  },
                                  "values" : {
                                    "type" : "object",
                                    "properties" : {
                                      "attributeCode" : {
                                        "type" : "array",
                                        "items" : {
                                          "type" : "object",
                                          "properties" : {
                                            "data" : {
                                              "type" : "object",
                                              "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                                            },
                                            "linked_data" : {
                                              "type" : "object",
                                              "properties" : {
                                                "attribute" : {
                                                  "type" : "string"
                                                },
                                                "code" : {
                                                  "type" : "string"
                                                },
                                                "labels" : {
                                                  "type" : "object"
                                                }
                                              },
                                              "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                                            },
                                            "locale" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                                            },
                                            "scope" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                                  }
                                },
                                "example" : {
                                  "associations" : {
                                    "PACK" : {
                                      "groups" : [ ],
                                      "product_models" : [ ],
                                      "products" : [ "d055527c-0698-4967-8f16-8a5f23f4e5cf" ]
                                    }
                                  },
                                  "categories" : [ "summer_collection" ],
                                  "completenesses" : [ {
                                    "data" : 10,
                                    "locale" : "en_US",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : 20,
                                    "locale" : "fr_FR",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : 30,
                                    "locale" : "en_US",
                                    "scope" : "tablet"
                                  }, {
                                    "data" : 40,
                                    "locale" : "fr_FR",
                                    "scope" : "tablet"
                                  } ],
                                  "created" : "2016-06-23T18:24:44+02:00",
                                  "enabled" : true,
                                  "family" : "tshirt",
                                  "groups" : [ ],
                                  "quality_scores" : [ {
                                    "data" : "A",
                                    "locale" : "en_US",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : "B",
                                    "locale" : "fr_FR",
                                    "scope" : "ecommerce"
                                  }, {
                                    "data" : "D",
                                    "locale" : "en_US",
                                    "scope" : "tablet"
                                  }, {
                                    "data" : "E",
                                    "locale" : "fr_FR",
                                    "scope" : "tablet"
                                  } ],
                                  "quantified_associations" : {
                                    "PRODUCT_SET" : {
                                      "product_models" : [ {
                                        "identifier" : "model-biker-jacket-leather",
                                        "quantity" : 2
                                      } ],
                                      "products" : [ {
                                        "quantity" : 2,
                                        "uuid" : "fc24e6c3-933c-4a93-8a81-e5c703d134d5"
                                      }, {
                                        "quantity" : 1,
                                        "uuid" : "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc"
                                      } ]
                                    }
                                  },
                                  "updated" : "2016-06-25T17:56:12+02:00",
                                  "uuid" : "25566245-55c3-42ce-86d9-8610ac459fa8",
                                  "values" : {
                                    "collection" : [ {
                                      "data" : [ "winter_2016" ],
                                      "linked_data" : {
                                        "winter_2016" : {
                                          "attribute" : "collection",
                                          "code" : "winter_2016",
                                          "labels" : {
                                            "en_US" : "Winter 2016",
                                            "fr_FR" : "Hiver 2016"
                                          }
                                        }
                                      }
                                    } ],
                                    "color" : [ {
                                      "data" : "black",
                                      "linked_data" : {
                                        "attribute" : "color",
                                        "code" : "black",
                                        "labels" : {
                                          "en_US" : "Black",
                                          "fr_FR" : "Noir"
                                        }
                                      }
                                    } ],
                                    "description" : [ {
                                      "data" : "Summer top",
                                      "locale" : "en_US",
                                      "scope" : "ecommerce"
                                    }, {
                                      "data" : "Top",
                                      "locale" : "en_US",
                                      "scope" : "tablet"
                                    }, {
                                      "data" : "Débardeur pour l'été",
                                      "locale" : "fr_FR",
                                      "scope" : "ecommerce"
                                    }, {
                                      "data" : "Débardeur",
                                      "locale" : "fr_FR",
                                      "scope" : "tablet"
                                    } ],
                                    "name" : [ {
                                      "data" : "Top",
                                      "locale" : "en_US"
                                    }, {
                                      "data" : "Débardeur",
                                      "locale" : "fr_FR"
                                    } ],
                                    "price" : [ {
                                      "data" : [ {
                                        "amount" : "15.5",
                                        "currency" : "EUR"
                                      }, {
                                        "amount" : "15",
                                        "currency" : "USD"
                                      } ]
                                    } ],
                                    "size" : [ {
                                      "data" : "m",
                                      "linked_data" : {
                                        "attribute" : "size",
                                        "code" : "m",
                                        "labels" : {
                                          "en_US" : "M",
                                          "fr_FR" : "M"
                                        }
                                      }
                                    } ],
                                    "sku" : [ {
                                      "data" : "top"
                                    } ]
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Product [uuid]" ],
        "summary" : "Create a new product",
        "description" : "This endpoint allows you to create a new product. In the Enterprise Edition, permissions based on your user groups are applied to the product you try to create. If no uuid is provided, the PIM will generate one for you.",
        "operationId" : "post_products_uuid",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "associations" : {
                    "type" : "object",
                    "properties" : {
                      "associationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "groups" : {
                            "type" : "array",
                            "description" : "Array of groups codes with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of product uuids with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                  },
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "completenesses" : {
                    "type" : "array",
                    "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "data" : {
                          "type" : "integer"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "scope" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "enabled" : {
                    "type" : "boolean",
                    "description" : "Whether the product is enabled",
                    "default" : true
                  },
                  "family" : {
                    "type" : "string",
                    "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                    "default" : "null only in the case of a non variant product"
                  },
                  "groups" : {
                    "type" : "array",
                    "description" : "Codes of the groups to which the product belong",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "workflow_status" : {
                        "type" : "string",
                        "description" : "Status of the product regarding the user permissions",
                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                      }
                    },
                    "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "default" : "null"
                  },
                  "quality_scores" : {
                    "type" : "object",
                    "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                  },
                  "quantified_associations" : {
                    "type" : "object",
                    "properties" : {
                      "quantifiedAssociationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of objects containing product uuids and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "quantity" : {
                                  "type" : "integer"
                                },
                                "uuid" : {
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "uuid" : {
                    "type" : "string",
                    "description" : "Product uuid"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "data" : {
                              "type" : "object",
                              "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data" : {
                              "type" : "object",
                              "properties" : {
                                "attribute" : {
                                  "type" : "string"
                                },
                                "code" : {
                                  "type" : "string"
                                },
                                "labels" : {
                                  "type" : "object"
                                }
                              },
                              "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "scope" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                  }
                },
                "example" : {
                  "associations" : {
                    "PACK" : {
                      "groups" : [ ],
                      "product_models" : [ ],
                      "products" : [ "d055527c-0698-4967-8f16-8a5f23f4e5cf" ]
                    }
                  },
                  "categories" : [ "summer_collection" ],
                  "completenesses" : [ {
                    "data" : 10,
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 20,
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 30,
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : 40,
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "created" : "2016-06-23T18:24:44+02:00",
                  "enabled" : true,
                  "family" : "tshirt",
                  "groups" : [ ],
                  "quality_scores" : [ {
                    "data" : "A",
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "B",
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "D",
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : "E",
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "quantified_associations" : {
                    "PRODUCT_SET" : {
                      "product_models" : [ {
                        "identifier" : "model-biker-jacket-leather",
                        "quantity" : 2
                      } ],
                      "products" : [ {
                        "quantity" : 2,
                        "uuid" : "fc24e6c3-933c-4a93-8a81-e5c703d134d5"
                      }, {
                        "quantity" : 1,
                        "uuid" : "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc"
                      } ]
                    }
                  },
                  "updated" : "2016-06-25T17:56:12+02:00",
                  "uuid" : "25566245-55c3-42ce-86d9-8610ac459fa8",
                  "values" : {
                    "collection" : [ {
                      "data" : [ "winter_2016" ],
                      "linked_data" : {
                        "winter_2016" : {
                          "attribute" : "collection",
                          "code" : "winter_2016",
                          "labels" : {
                            "en_US" : "Winter 2016",
                            "fr_FR" : "Hiver 2016"
                          }
                        }
                      }
                    } ],
                    "color" : [ {
                      "data" : "black",
                      "linked_data" : {
                        "attribute" : "color",
                        "code" : "black",
                        "labels" : {
                          "en_US" : "Black",
                          "fr_FR" : "Noir"
                        }
                      }
                    } ],
                    "description" : [ {
                      "data" : "Summer top",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Top",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "Débardeur pour l'été",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "name" : [ {
                      "data" : "Top",
                      "locale" : "en_US"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR"
                    } ],
                    "price" : [ {
                      "data" : [ {
                        "amount" : "15.5",
                        "currency" : "EUR"
                      }, {
                        "amount" : "15",
                        "currency" : "USD"
                      } ]
                    } ],
                    "size" : [ {
                      "data" : "m",
                      "linked_data" : {
                        "attribute" : "size",
                        "code" : "m",
                        "labels" : {
                          "en_US" : "M",
                          "fr_FR" : "M"
                        }
                      }
                    } ],
                    "sku" : [ {
                      "data" : "top"
                    } ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product [uuid]" ],
        "summary" : "Update/create several products",
        "description" : "This endpoint allows you to update and/or create several products at once. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given uuid, it creates it. In the Enterprise Edition, permissions based on your user groups are applied to the products you try to update. It may result in the creation of drafts if you only have edit rights through the product's categories.",
        "operationId" : "patch_products_uuid",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "uuid" ],
                "type" : "object",
                "properties" : {
                  "associations" : {
                    "type" : "object",
                    "properties" : {
                      "associationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "groups" : {
                            "type" : "array",
                            "description" : "Array of groups codes with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of product uuids with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                  },
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "completenesses" : {
                    "type" : "array",
                    "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "data" : {
                          "type" : "integer"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "scope" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "enabled" : {
                    "type" : "boolean",
                    "description" : "Whether the product is enabled",
                    "default" : true
                  },
                  "family" : {
                    "type" : "string",
                    "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                    "default" : "null only in the case of a non variant product"
                  },
                  "groups" : {
                    "type" : "array",
                    "description" : "Codes of the groups to which the product belong",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "workflow_status" : {
                        "type" : "string",
                        "description" : "Status of the product regarding the user permissions",
                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                      }
                    },
                    "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "default" : "null"
                  },
                  "quality_scores" : {
                    "type" : "object",
                    "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                  },
                  "quantified_associations" : {
                    "type" : "object",
                    "properties" : {
                      "quantifiedAssociationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of objects containing product uuids and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "quantity" : {
                                  "type" : "integer"
                                },
                                "uuid" : {
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "uuid" : {
                    "type" : "string",
                    "description" : "Product uuid"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "data" : {
                              "type" : "object",
                              "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data" : {
                              "type" : "object",
                              "properties" : {
                                "attribute" : {
                                  "type" : "string"
                                },
                                "code" : {
                                  "type" : "string"
                                },
                                "labels" : {
                                  "type" : "object"
                                }
                              },
                              "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "scope" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                  }
                },
                "example" : {
                  "associations" : {
                    "PACK" : {
                      "groups" : [ ],
                      "product_models" : [ ],
                      "products" : [ "d055527c-0698-4967-8f16-8a5f23f4e5cf" ]
                    }
                  },
                  "categories" : [ "summer_collection" ],
                  "completenesses" : [ {
                    "data" : 10,
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 20,
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 30,
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : 40,
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "created" : "2016-06-23T18:24:44+02:00",
                  "enabled" : true,
                  "family" : "tshirt",
                  "groups" : [ ],
                  "quality_scores" : [ {
                    "data" : "A",
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "B",
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "D",
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : "E",
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "quantified_associations" : {
                    "PRODUCT_SET" : {
                      "product_models" : [ {
                        "identifier" : "model-biker-jacket-leather",
                        "quantity" : 2
                      } ],
                      "products" : [ {
                        "quantity" : 2,
                        "uuid" : "fc24e6c3-933c-4a93-8a81-e5c703d134d5"
                      }, {
                        "quantity" : 1,
                        "uuid" : "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc"
                      } ]
                    }
                  },
                  "updated" : "2016-06-25T17:56:12+02:00",
                  "uuid" : "25566245-55c3-42ce-86d9-8610ac459fa8",
                  "values" : {
                    "collection" : [ {
                      "data" : [ "winter_2016" ],
                      "linked_data" : {
                        "winter_2016" : {
                          "attribute" : "collection",
                          "code" : "winter_2016",
                          "labels" : {
                            "en_US" : "Winter 2016",
                            "fr_FR" : "Hiver 2016"
                          }
                        }
                      }
                    } ],
                    "color" : [ {
                      "data" : "black",
                      "linked_data" : {
                        "attribute" : "color",
                        "code" : "black",
                        "labels" : {
                          "en_US" : "Black",
                          "fr_FR" : "Noir"
                        }
                      }
                    } ],
                    "description" : [ {
                      "data" : "Summer top",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Top",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "Débardeur pour l'été",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "name" : [ {
                      "data" : "Top",
                      "locale" : "en_US"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR"
                    } ],
                    "price" : [ {
                      "data" : [ {
                        "amount" : "15.5",
                        "currency" : "EUR"
                      }, {
                        "amount" : "15",
                        "currency" : "USD"
                      } ]
                    } ],
                    "size" : [ {
                      "data" : "m",
                      "linked_data" : {
                        "attribute" : "size",
                        "code" : "m",
                        "labels" : {
                          "en_US" : "M",
                          "fr_FR" : "M"
                        }
                      }
                    } ],
                    "sku" : [ {
                      "data" : "top"
                    } ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "line" : {
                      "type" : "integer",
                      "description" : "Line number"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    },
                    "status_code" : {
                      "type" : "integer",
                      "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                    },
                    "uuid" : {
                      "type" : "string",
                      "description" : "Product uuid"
                    }
                  }
                }
              },
              "x-example-1" : {
                "example" : "{\"line\":1,\"uuid\":\"fc24e6c3-933c-4a93-8a81-e5c703d134d5\",\"status_code\":204}"
              },
              "x-example-2" : {
                "example" : "{\"line\":2,\"uuid\":\"573dd613-0c7f-4143-83d5-63cc5e535966\",\"status_code\":422,\"message\":\"Property \"group\" does not exist.\"}"
              },
              "x-example-3" : {
                "example" : "{\"line\":3,\"uuid\":\"25566245-55c3-42ce-86d9-8610ac459fa8\",\"status_code\":201}"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/products-uuid/{uuid}" : {
      "get" : {
        "tags" : [ "Product [uuid]" ],
        "summary" : "Get a product",
        "description" : "This endpoint allows you to get the information about a given product. In the Entreprise Edition, permissions based on your user groups are applied to the product you request.",
        "operationId" : "get_products_uuid__uuid_",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "with_attribute_options",
          "in" : "query",
          "description" : "Return labels of attribute options in the response. (Only available since the 5.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_quality_scores",
          "in" : "query",
          "description" : "Return product quality scores in the response. (Only available since the 5.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_completenesses",
          "in" : "query",
          "description" : "Return product completenesses in the response. (Only available since the 6.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "associations" : {
                      "type" : "object",
                      "properties" : {
                        "associationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "groups" : {
                              "type" : "array",
                              "description" : "Array of groups codes with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of product uuids with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                    },
                    "categories" : {
                      "type" : "array",
                      "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "completenesses" : {
                      "type" : "array",
                      "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "data" : {
                            "type" : "integer"
                          },
                          "locale" : {
                            "type" : "string"
                          },
                          "scope" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation",
                      "format" : "dateTime"
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the product is enabled",
                      "default" : true
                    },
                    "family" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default" : "null only in the case of a non variant product"
                    },
                    "groups" : {
                      "type" : "array",
                      "description" : "Codes of the groups to which the product belong",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "workflow_status" : {
                          "type" : "string",
                          "description" : "Status of the product regarding the user permissions",
                          "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                        }
                      },
                      "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                    },
                    "parent" : {
                      "type" : "string",
                      "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default" : "null"
                    },
                    "quality_scores" : {
                      "type" : "object",
                      "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                    },
                    "quantified_associations" : {
                      "type" : "object",
                      "properties" : {
                        "quantifiedAssociationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of objects containing product uuids and quantities with which the product is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "quantity" : {
                                    "type" : "integer"
                                  },
                                  "uuid" : {
                                    "type" : "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "uuid" : {
                      "type" : "string",
                      "description" : "Product uuid"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "data" : {
                                "type" : "object",
                                "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "linked_data" : {
                                "type" : "object",
                                "properties" : {
                                  "attribute" : {
                                    "type" : "string"
                                  },
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "labels" : {
                                    "type" : "object"
                                  }
                                },
                                "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "scope" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                    }
                  },
                  "example" : {
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "d055527c-0698-4967-8f16-8a5f23f4e5cf" ]
                      }
                    },
                    "categories" : [ "summer_collection" ],
                    "completenesses" : [ {
                      "data" : 10,
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : 20,
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : 30,
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : 40,
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "created" : "2016-06-23T18:24:44+02:00",
                    "enabled" : true,
                    "family" : "tshirt",
                    "groups" : [ ],
                    "quality_scores" : [ {
                      "data" : "A",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "B",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "D",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "E",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "quantified_associations" : {
                      "PRODUCT_SET" : {
                        "product_models" : [ {
                          "identifier" : "model-biker-jacket-leather",
                          "quantity" : 2
                        } ],
                        "products" : [ {
                          "quantity" : 2,
                          "uuid" : "fc24e6c3-933c-4a93-8a81-e5c703d134d5"
                        }, {
                          "quantity" : 1,
                          "uuid" : "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc"
                        } ]
                      }
                    },
                    "updated" : "2016-06-25T17:56:12+02:00",
                    "uuid" : "25566245-55c3-42ce-86d9-8610ac459fa8",
                    "values" : {
                      "collection" : [ {
                        "data" : [ "winter_2016" ],
                        "linked_data" : {
                          "winter_2016" : {
                            "attribute" : "collection",
                            "code" : "winter_2016",
                            "labels" : {
                              "en_US" : "Winter 2016",
                              "fr_FR" : "Hiver 2016"
                            }
                          }
                        }
                      } ],
                      "color" : [ {
                        "data" : "black",
                        "linked_data" : {
                          "attribute" : "color",
                          "code" : "black",
                          "labels" : {
                            "en_US" : "Black",
                            "fr_FR" : "Noir"
                          }
                        }
                      } ],
                      "description" : [ {
                        "data" : "Summer top",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Top",
                        "locale" : "en_US",
                        "scope" : "tablet"
                      }, {
                        "data" : "Débardeur pour l'été",
                        "locale" : "fr_FR",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR",
                        "scope" : "tablet"
                      } ],
                      "name" : [ {
                        "data" : "Top",
                        "locale" : "en_US"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "15.5",
                          "currency" : "EUR"
                        }, {
                          "amount" : "15",
                          "currency" : "USD"
                        } ]
                      } ],
                      "size" : [ {
                        "data" : "m",
                        "linked_data" : {
                          "attribute" : "size",
                          "code" : "m",
                          "labels" : {
                            "en_US" : "M",
                            "fr_FR" : "M"
                          }
                        }
                      } ],
                      "sku" : [ {
                        "data" : "top"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Product [uuid]" ],
        "summary" : "Delete a product",
        "description" : "This endpoint allows you to delete a given product. In the Enterprise Edition, permissions based on your user groups are applied to the product you try to delete.",
        "operationId" : "delete_products_uuid__uuid_",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content to return"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product [uuid]" ],
        "summary" : "Update/create a product",
        "description" : "This endpoint allows you to update a given product. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given uuid, it creates it. In the Entreprise Edition, permissions based on your user groups are applied to the product you try to update. It may result in the creation of a draft if you only have edit rights through the product's categories.",
        "operationId" : "patch_products_uuid__uuid_",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "associations" : {
                    "type" : "object",
                    "properties" : {
                      "associationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "groups" : {
                            "type" : "array",
                            "description" : "Array of groups codes with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of product uuids with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                  },
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "completenesses" : {
                    "type" : "array",
                    "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "data" : {
                          "type" : "integer"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "scope" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "enabled" : {
                    "type" : "boolean",
                    "description" : "Whether the product is enabled",
                    "default" : true
                  },
                  "family" : {
                    "type" : "string",
                    "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                    "default" : "null only in the case of a non variant product"
                  },
                  "groups" : {
                    "type" : "array",
                    "description" : "Codes of the groups to which the product belong",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "workflow_status" : {
                        "type" : "string",
                        "description" : "Status of the product regarding the user permissions",
                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                      }
                    },
                    "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "default" : "null"
                  },
                  "quality_scores" : {
                    "type" : "object",
                    "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                  },
                  "quantified_associations" : {
                    "type" : "object",
                    "properties" : {
                      "quantifiedAssociationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of objects containing product uuids and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "quantity" : {
                                  "type" : "integer"
                                },
                                "uuid" : {
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "uuid" : {
                    "type" : "string",
                    "description" : "Product uuid"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "data" : {
                              "type" : "object",
                              "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data" : {
                              "type" : "object",
                              "properties" : {
                                "attribute" : {
                                  "type" : "string"
                                },
                                "code" : {
                                  "type" : "string"
                                },
                                "labels" : {
                                  "type" : "object"
                                }
                              },
                              "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "scope" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                  }
                },
                "example" : {
                  "associations" : {
                    "PACK" : {
                      "groups" : [ ],
                      "product_models" : [ ],
                      "products" : [ "d055527c-0698-4967-8f16-8a5f23f4e5cf" ]
                    }
                  },
                  "categories" : [ "summer_collection" ],
                  "completenesses" : [ {
                    "data" : 10,
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 20,
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 30,
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : 40,
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "created" : "2016-06-23T18:24:44+02:00",
                  "enabled" : true,
                  "family" : "tshirt",
                  "groups" : [ ],
                  "quality_scores" : [ {
                    "data" : "A",
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "B",
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "D",
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : "E",
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "quantified_associations" : {
                    "PRODUCT_SET" : {
                      "product_models" : [ {
                        "identifier" : "model-biker-jacket-leather",
                        "quantity" : 2
                      } ],
                      "products" : [ {
                        "quantity" : 2,
                        "uuid" : "fc24e6c3-933c-4a93-8a81-e5c703d134d5"
                      }, {
                        "quantity" : 1,
                        "uuid" : "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc"
                      } ]
                    }
                  },
                  "updated" : "2016-06-25T17:56:12+02:00",
                  "uuid" : "25566245-55c3-42ce-86d9-8610ac459fa8",
                  "values" : {
                    "collection" : [ {
                      "data" : [ "winter_2016" ],
                      "linked_data" : {
                        "winter_2016" : {
                          "attribute" : "collection",
                          "code" : "winter_2016",
                          "labels" : {
                            "en_US" : "Winter 2016",
                            "fr_FR" : "Hiver 2016"
                          }
                        }
                      }
                    } ],
                    "color" : [ {
                      "data" : "black",
                      "linked_data" : {
                        "attribute" : "color",
                        "code" : "black",
                        "labels" : {
                          "en_US" : "Black",
                          "fr_FR" : "Noir"
                        }
                      }
                    } ],
                    "description" : [ {
                      "data" : "Summer top",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Top",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "Débardeur pour l'été",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "name" : [ {
                      "data" : "Top",
                      "locale" : "en_US"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR"
                    } ],
                    "price" : [ {
                      "data" : [ {
                        "amount" : "15.5",
                        "currency" : "EUR"
                      }, {
                        "amount" : "15",
                        "currency" : "USD"
                      } ]
                    } ],
                    "size" : [ {
                      "data" : "m",
                      "linked_data" : {
                        "attribute" : "size",
                        "code" : "m",
                        "labels" : {
                          "en_US" : "M",
                          "fr_FR" : "M"
                        }
                      }
                    } ],
                    "sku" : [ {
                      "data" : "top"
                    } ]
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/products-uuid/{uuid}/draft" : {
      "get" : {
        "tags" : [ "Product [uuid]" ],
        "summary" : "Get a draft",
        "description" : "This endpoint allows you to get the information about a given draft.",
        "operationId" : "get_draft_uuid__uuid_",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "associations" : {
                      "type" : "object",
                      "properties" : {
                        "associationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "groups" : {
                              "type" : "array",
                              "description" : "Array of groups codes with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of product uuids with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                    },
                    "categories" : {
                      "type" : "array",
                      "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "completenesses" : {
                      "type" : "array",
                      "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "data" : {
                            "type" : "integer"
                          },
                          "locale" : {
                            "type" : "string"
                          },
                          "scope" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation",
                      "format" : "dateTime"
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the product is enabled",
                      "default" : true
                    },
                    "family" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default" : "null only in the case of a non variant product"
                    },
                    "groups" : {
                      "type" : "array",
                      "description" : "Codes of the groups to which the product belong",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "workflow_status" : {
                          "type" : "string",
                          "description" : "Status of the product regarding the user permissions",
                          "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                        }
                      },
                      "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                    },
                    "parent" : {
                      "type" : "string",
                      "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default" : "null"
                    },
                    "quality_scores" : {
                      "type" : "object",
                      "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                    },
                    "quantified_associations" : {
                      "type" : "object",
                      "properties" : {
                        "quantifiedAssociationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of objects containing product uuids and quantities with which the product is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "quantity" : {
                                    "type" : "integer"
                                  },
                                  "uuid" : {
                                    "type" : "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "uuid" : {
                      "type" : "string",
                      "description" : "Product uuid"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "data" : {
                                "type" : "object",
                                "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "linked_data" : {
                                "type" : "object",
                                "properties" : {
                                  "attribute" : {
                                    "type" : "string"
                                  },
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "labels" : {
                                    "type" : "object"
                                  }
                                },
                                "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "scope" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                    }
                  },
                  "example" : {
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "d055527c-0698-4967-8f16-8a5f23f4e5cf" ]
                      }
                    },
                    "categories" : [ "summer_collection" ],
                    "completenesses" : [ {
                      "data" : 10,
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : 20,
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : 30,
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : 40,
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "created" : "2016-06-23T18:24:44+02:00",
                    "enabled" : true,
                    "family" : "tshirt",
                    "groups" : [ ],
                    "quality_scores" : [ {
                      "data" : "A",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "B",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "D",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "E",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "quantified_associations" : {
                      "PRODUCT_SET" : {
                        "product_models" : [ {
                          "identifier" : "model-biker-jacket-leather",
                          "quantity" : 2
                        } ],
                        "products" : [ {
                          "quantity" : 2,
                          "uuid" : "fc24e6c3-933c-4a93-8a81-e5c703d134d5"
                        }, {
                          "quantity" : 1,
                          "uuid" : "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc"
                        } ]
                      }
                    },
                    "updated" : "2016-06-25T17:56:12+02:00",
                    "uuid" : "25566245-55c3-42ce-86d9-8610ac459fa8",
                    "values" : {
                      "collection" : [ {
                        "data" : [ "winter_2016" ],
                        "linked_data" : {
                          "winter_2016" : {
                            "attribute" : "collection",
                            "code" : "winter_2016",
                            "labels" : {
                              "en_US" : "Winter 2016",
                              "fr_FR" : "Hiver 2016"
                            }
                          }
                        }
                      } ],
                      "color" : [ {
                        "data" : "black",
                        "linked_data" : {
                          "attribute" : "color",
                          "code" : "black",
                          "labels" : {
                            "en_US" : "Black",
                            "fr_FR" : "Noir"
                          }
                        }
                      } ],
                      "description" : [ {
                        "data" : "Summer top",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Top",
                        "locale" : "en_US",
                        "scope" : "tablet"
                      }, {
                        "data" : "Débardeur pour l'été",
                        "locale" : "fr_FR",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR",
                        "scope" : "tablet"
                      } ],
                      "name" : [ {
                        "data" : "Top",
                        "locale" : "en_US"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "15.5",
                          "currency" : "EUR"
                        }, {
                          "amount" : "15",
                          "currency" : "USD"
                        } ]
                      } ],
                      "size" : [ {
                        "data" : "m",
                        "linked_data" : {
                          "attribute" : "size",
                          "code" : "m",
                          "labels" : {
                            "en_US" : "M",
                            "fr_FR" : "M"
                          }
                        }
                      } ],
                      "sku" : [ {
                        "data" : "top"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/products-uuid/{uuid}/proposal" : {
      "post" : {
        "tags" : [ "Product [uuid]" ],
        "summary" : "Submit a draft for approval",
        "description" : "This endpoint allows you to submit a draft for approval.",
        "operationId" : "post_proposal_uuid",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Submitted",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/products/{code}" : {
      "get" : {
        "tags" : [ "Product [identifier]" ],
        "summary" : "Get a product",
        "description" : "This endpoint allows you to get the information about a given product. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product you request.",
        "operationId" : "get_products__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "with_attribute_options",
          "in" : "query",
          "description" : "Return labels of attribute options in the response. (Only available since the 5.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_quality_scores",
          "in" : "query",
          "description" : "Return product quality scores in the response. (Only available since the 5.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "with_completenesses",
          "in" : "query",
          "description" : "Return product completenesses in the response. (Only available since the 6.0 version)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "identifier" ],
                  "type" : "object",
                  "properties" : {
                    "associations" : {
                      "type" : "object",
                      "properties" : {
                        "associationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "groups" : {
                              "type" : "array",
                              "description" : "Array of groups codes with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of product identifiers with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                    },
                    "categories" : {
                      "type" : "array",
                      "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "completenesses" : {
                      "type" : "array",
                      "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "data" : {
                            "type" : "integer"
                          },
                          "locale" : {
                            "type" : "string"
                          },
                          "scope" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation",
                      "format" : "dateTime"
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the product is enabled",
                      "default" : true
                    },
                    "family" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default" : "null only in the case of a non variant product"
                    },
                    "groups" : {
                      "type" : "array",
                      "description" : "Codes of the groups to which the product belong",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "workflow_status" : {
                          "type" : "string",
                          "description" : "Status of the product regarding the user permissions",
                          "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                        }
                      },
                      "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                    },
                    "parent" : {
                      "type" : "string",
                      "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default" : "null"
                    },
                    "quality_scores" : {
                      "type" : "object",
                      "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                    },
                    "quantified_associations" : {
                      "type" : "object",
                      "properties" : {
                        "quantifiedAssociationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of objects containing product identifiers and quantities with which the product is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "identifier" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "uuid" : {
                      "type" : "string",
                      "description" : "Product UUID"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "data" : {
                                "type" : "object",
                                "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "linked_data" : {
                                "type" : "object",
                                "properties" : {
                                  "attribute" : {
                                    "type" : "string"
                                  },
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "labels" : {
                                    "type" : "object"
                                  }
                                },
                                "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "scope" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                    }
                  },
                  "example" : {
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglass" ]
                      }
                    },
                    "categories" : [ "summer_collection" ],
                    "completenesses" : [ {
                      "data" : 10,
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : 20,
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : 30,
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : 40,
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "created" : "2016-06-23T18:24:44+02:00",
                    "enabled" : true,
                    "family" : "tshirt",
                    "groups" : [ ],
                    "identifier" : "top",
                    "quality_scores" : [ {
                      "data" : "A",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "B",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "D",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "E",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "quantified_associations" : {
                      "PRODUCT_SET" : {
                        "product_models" : [ {
                          "identifier" : "model-biker-jacket-leather",
                          "quantity" : 2
                        } ],
                        "products" : [ {
                          "identifier" : "cap",
                          "quantity" : 2
                        }, {
                          "identifier" : "shoes",
                          "quantity" : 1
                        } ]
                      }
                    },
                    "updated" : "2016-06-25T17:56:12+02:00",
                    "values" : {
                      "collection" : [ {
                        "data" : [ "winter_2016" ],
                        "linked_data" : {
                          "winter_2016" : {
                            "attribute" : "collection",
                            "code" : "winter_2016",
                            "labels" : {
                              "en_US" : "Winter 2016",
                              "fr_FR" : "Hiver 2016"
                            }
                          }
                        }
                      } ],
                      "color" : [ {
                        "data" : "black",
                        "linked_data" : {
                          "attribute" : "color",
                          "code" : "black",
                          "labels" : {
                            "en_US" : "Black",
                            "fr_FR" : "Noir"
                          }
                        }
                      } ],
                      "description" : [ {
                        "data" : "Summer top",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Top",
                        "locale" : "en_US",
                        "scope" : "tablet"
                      }, {
                        "data" : "Débardeur pour l'été",
                        "locale" : "fr_FR",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR",
                        "scope" : "tablet"
                      } ],
                      "name" : [ {
                        "data" : "Top",
                        "locale" : "en_US"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "15.5",
                          "currency" : "EUR"
                        }, {
                          "amount" : "15",
                          "currency" : "USD"
                        } ]
                      } ],
                      "size" : [ {
                        "data" : "m",
                        "linked_data" : {
                          "attribute" : "size",
                          "code" : "m",
                          "labels" : {
                            "en_US" : "M",
                            "fr_FR" : "M"
                          }
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Product [identifier]" ],
        "summary" : "Delete a product",
        "description" : "This endpoint allows you to delete a given product. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the product you try to delete.",
        "operationId" : "delete_products__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content to return"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product [identifier]" ],
        "summary" : "Update/create a product",
        "description" : "This endpoint allows you to update a given product. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given identifier, it creates it. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product you try to update. It may result in the creation of a draft if you only have edit rights through the product's categories.",
        "operationId" : "patch_products__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "identifier" ],
                "type" : "object",
                "properties" : {
                  "associations" : {
                    "type" : "object",
                    "properties" : {
                      "associationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "groups" : {
                            "type" : "array",
                            "description" : "Array of groups codes with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of product identifiers with which the product is in relation",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                  },
                  "categories" : {
                    "type" : "array",
                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "completenesses" : {
                    "type" : "array",
                    "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "data" : {
                          "type" : "integer"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "scope" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation",
                    "format" : "dateTime"
                  },
                  "enabled" : {
                    "type" : "boolean",
                    "description" : "Whether the product is enabled",
                    "default" : true
                  },
                  "family" : {
                    "type" : "string",
                    "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                    "default" : "null only in the case of a non variant product"
                  },
                  "groups" : {
                    "type" : "array",
                    "description" : "Codes of the groups to which the product belong",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "identifier" : {
                    "type" : "string",
                    "description" : "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "workflow_status" : {
                        "type" : "string",
                        "description" : "Status of the product regarding the user permissions",
                        "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                      }
                    },
                    "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                  },
                  "parent" : {
                    "type" : "string",
                    "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "default" : "null"
                  },
                  "quality_scores" : {
                    "type" : "object",
                    "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                  },
                  "quantified_associations" : {
                    "type" : "object",
                    "properties" : {
                      "quantifiedAssociationTypeCode" : {
                        "type" : "object",
                        "properties" : {
                          "product_models" : {
                            "type" : "array",
                            "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          },
                          "products" : {
                            "type" : "array",
                            "description" : "Array of objects containing product identifiers and quantities with which the product is in relation",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "identifier" : {
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "type" : "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update",
                    "format" : "dateTime"
                  },
                  "uuid" : {
                    "type" : "string",
                    "description" : "Product UUID"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "data" : {
                              "type" : "object",
                              "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data" : {
                              "type" : "object",
                              "properties" : {
                                "attribute" : {
                                  "type" : "string"
                                },
                                "code" : {
                                  "type" : "string"
                                },
                                "labels" : {
                                  "type" : "object"
                                }
                              },
                              "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "scope" : {
                              "type" : "string",
                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                  }
                },
                "example" : {
                  "associations" : {
                    "PACK" : {
                      "groups" : [ ],
                      "product_models" : [ ],
                      "products" : [ "sunglass" ]
                    }
                  },
                  "categories" : [ "summer_collection" ],
                  "completenesses" : [ {
                    "data" : 10,
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 20,
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : 30,
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : 40,
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "created" : "2016-06-23T18:24:44+02:00",
                  "enabled" : true,
                  "family" : "tshirt",
                  "groups" : [ ],
                  "identifier" : "top",
                  "quality_scores" : [ {
                    "data" : "A",
                    "locale" : "en_US",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "B",
                    "locale" : "fr_FR",
                    "scope" : "ecommerce"
                  }, {
                    "data" : "D",
                    "locale" : "en_US",
                    "scope" : "tablet"
                  }, {
                    "data" : "E",
                    "locale" : "fr_FR",
                    "scope" : "tablet"
                  } ],
                  "quantified_associations" : {
                    "PRODUCT_SET" : {
                      "product_models" : [ {
                        "identifier" : "model-biker-jacket-leather",
                        "quantity" : 2
                      } ],
                      "products" : [ {
                        "identifier" : "cap",
                        "quantity" : 2
                      }, {
                        "identifier" : "shoes",
                        "quantity" : 1
                      } ]
                    }
                  },
                  "updated" : "2016-06-25T17:56:12+02:00",
                  "values" : {
                    "collection" : [ {
                      "data" : [ "winter_2016" ],
                      "linked_data" : {
                        "winter_2016" : {
                          "attribute" : "collection",
                          "code" : "winter_2016",
                          "labels" : {
                            "en_US" : "Winter 2016",
                            "fr_FR" : "Hiver 2016"
                          }
                        }
                      }
                    } ],
                    "color" : [ {
                      "data" : "black",
                      "linked_data" : {
                        "attribute" : "color",
                        "code" : "black",
                        "labels" : {
                          "en_US" : "Black",
                          "fr_FR" : "Noir"
                        }
                      }
                    } ],
                    "description" : [ {
                      "data" : "Summer top",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Top",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "Débardeur pour l'été",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "name" : [ {
                      "data" : "Top",
                      "locale" : "en_US"
                    }, {
                      "data" : "Débardeur",
                      "locale" : "fr_FR"
                    } ],
                    "price" : [ {
                      "data" : [ {
                        "amount" : "15.5",
                        "currency" : "EUR"
                      }, {
                        "amount" : "15",
                        "currency" : "USD"
                      } ]
                    } ],
                    "size" : [ {
                      "data" : "m",
                      "linked_data" : {
                        "attribute" : "size",
                        "code" : "m",
                        "labels" : {
                          "en_US" : "M",
                          "fr_FR" : "M"
                        }
                      }
                    } ]
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/products/{code}/draft" : {
      "get" : {
        "tags" : [ "Product [identifier]" ],
        "summary" : "Get a draft",
        "description" : "This endpoint allows you to get the information about a given draft.",
        "operationId" : "get_draft__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "identifier" ],
                  "type" : "object",
                  "properties" : {
                    "associations" : {
                      "type" : "object",
                      "properties" : {
                        "associationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "groups" : {
                              "type" : "array",
                              "description" : "Array of groups codes with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of product identifiers with which the product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
                    },
                    "categories" : {
                      "type" : "array",
                      "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "completenesses" : {
                      "type" : "array",
                      "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "data" : {
                            "type" : "integer"
                          },
                          "locale" : {
                            "type" : "string"
                          },
                          "scope" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation",
                      "format" : "dateTime"
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the product is enabled",
                      "default" : true
                    },
                    "family" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default" : "null only in the case of a non variant product"
                    },
                    "groups" : {
                      "type" : "array",
                      "description" : "Codes of the groups to which the product belong",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "workflow_status" : {
                          "type" : "string",
                          "description" : "Status of the product regarding the user permissions",
                          "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                        }
                      },
                      "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
                    },
                    "parent" : {
                      "type" : "string",
                      "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default" : "null"
                    },
                    "quality_scores" : {
                      "type" : "object",
                      "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
                    },
                    "quantified_associations" : {
                      "type" : "object",
                      "properties" : {
                        "quantifiedAssociationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of objects containing product identifiers and quantities with which the product is in relation",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "identifier" : {
                                    "type" : "string"
                                  },
                                  "quantity" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "uuid" : {
                      "type" : "string",
                      "description" : "Product UUID"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "data" : {
                                "type" : "object",
                                "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "linked_data" : {
                                "type" : "object",
                                "properties" : {
                                  "attribute" : {
                                    "type" : "string"
                                  },
                                  "code" : {
                                    "type" : "string"
                                  },
                                  "labels" : {
                                    "type" : "object"
                                  }
                                },
                                "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "scope" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                    }
                  },
                  "example" : {
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglass" ]
                      }
                    },
                    "categories" : [ "summer_collection" ],
                    "completenesses" : [ {
                      "data" : 10,
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : 20,
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : 30,
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : 40,
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "created" : "2016-06-23T18:24:44+02:00",
                    "enabled" : true,
                    "family" : "tshirt",
                    "groups" : [ ],
                    "identifier" : "top",
                    "quality_scores" : [ {
                      "data" : "A",
                      "locale" : "en_US",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "B",
                      "locale" : "fr_FR",
                      "scope" : "ecommerce"
                    }, {
                      "data" : "D",
                      "locale" : "en_US",
                      "scope" : "tablet"
                    }, {
                      "data" : "E",
                      "locale" : "fr_FR",
                      "scope" : "tablet"
                    } ],
                    "quantified_associations" : {
                      "PRODUCT_SET" : {
                        "product_models" : [ {
                          "identifier" : "model-biker-jacket-leather",
                          "quantity" : 2
                        } ],
                        "products" : [ {
                          "identifier" : "cap",
                          "quantity" : 2
                        }, {
                          "identifier" : "shoes",
                          "quantity" : 1
                        } ]
                      }
                    },
                    "updated" : "2016-06-25T17:56:12+02:00",
                    "values" : {
                      "collection" : [ {
                        "data" : [ "winter_2016" ],
                        "linked_data" : {
                          "winter_2016" : {
                            "attribute" : "collection",
                            "code" : "winter_2016",
                            "labels" : {
                              "en_US" : "Winter 2016",
                              "fr_FR" : "Hiver 2016"
                            }
                          }
                        }
                      } ],
                      "color" : [ {
                        "data" : "black",
                        "linked_data" : {
                          "attribute" : "color",
                          "code" : "black",
                          "labels" : {
                            "en_US" : "Black",
                            "fr_FR" : "Noir"
                          }
                        }
                      } ],
                      "description" : [ {
                        "data" : "Summer top",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Top",
                        "locale" : "en_US",
                        "scope" : "tablet"
                      }, {
                        "data" : "Débardeur pour l'été",
                        "locale" : "fr_FR",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR",
                        "scope" : "tablet"
                      } ],
                      "name" : [ {
                        "data" : "Top",
                        "locale" : "en_US"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "15.5",
                          "currency" : "EUR"
                        }, {
                          "amount" : "15",
                          "currency" : "USD"
                        } ]
                      } ],
                      "size" : [ {
                        "data" : "m",
                        "linked_data" : {
                          "attribute" : "size",
                          "code" : "m",
                          "labels" : {
                            "en_US" : "M",
                            "fr_FR" : "M"
                          }
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/products/{code}/proposal" : {
      "post" : {
        "tags" : [ "Product [identifier]" ],
        "summary" : "Submit a draft for approval",
        "description" : "This endpoint allows you to submit a draft for approval.",
        "operationId" : "post_proposal",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Submitted",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/published-products" : {
      "get" : {
        "tags" : [ "Published product" ],
        "summary" : "Get list of published products",
        "description" : "This endpoint allows you to get a list of published products. Published products are paginated and they can be filtered.",
        "operationId" : "get_published_products",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter published products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Filter published product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-published-product-values\">Filter on published product values</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locales",
          "in" : "query",
          "description" : "Filter published product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-published-product-values\">Filter on published product values</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "Filter published product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pagination_type",
          "in" : "query",
          "description" : "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "page",
            "enum" : [ "page", "search_after" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "with_count",
          "in" : "query",
          "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return published products paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Published products",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "previous" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the previous page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page" : {
                        "type" : "integer",
                        "description" : "Current page number"
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "identifier" ],
                                "type" : "object",
                                "properties" : {
                                  "associations" : {
                                    "type" : "object",
                                    "properties" : {
                                      "associationTypeCode" : {
                                        "type" : "object",
                                        "properties" : {
                                          "groups" : {
                                            "type" : "array",
                                            "description" : "Array of groups codes with which the published product is in relation",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          },
                                          "product_models" : {
                                            "type" : "array",
                                            "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          },
                                          "products" : {
                                            "type" : "array",
                                            "description" : "Array of published product identifiers with which the published product is in relation",
                                            "items" : {
                                              "type" : "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Several associations related to groups and/or other published products, grouped by association types"
                                  },
                                  "categories" : {
                                    "type" : "array",
                                    "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the published product is classified",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "created" : {
                                    "type" : "string",
                                    "description" : "Date of creation",
                                    "format" : "dateTime"
                                  },
                                  "enabled" : {
                                    "type" : "boolean",
                                    "description" : "Whether the published product is enable",
                                    "default" : true
                                  },
                                  "family" : {
                                    "type" : "string",
                                    "description" : "<a href='api-reference.html#Family'>Family</a> code from which the published product inherits its attributes and attributes requirements",
                                    "default" : "null"
                                  },
                                  "groups" : {
                                    "type" : "array",
                                    "description" : "Codes of the groups to which the published product belong",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "identifier" : {
                                    "type" : "string",
                                    "description" : "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                                  },
                                  "quantified_associations" : {
                                    "type" : "object",
                                    "description" : "Warning: associations with quantities are not compatible with the published products. The response will always be empty."
                                  },
                                  "updated" : {
                                    "type" : "string",
                                    "description" : "Date of the last update",
                                    "format" : "dateTime"
                                  },
                                  "values" : {
                                    "type" : "object",
                                    "properties" : {
                                      "attributeCode" : {
                                        "type" : "array",
                                        "items" : {
                                          "type" : "object",
                                          "properties" : {
                                            "data" : {
                                              "type" : "object",
                                              "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                                            },
                                            "locale" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                                            },
                                            "scope" : {
                                              "type" : "string",
                                              "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                                  }
                                },
                                "example" : {
                                  "associations" : {
                                    "PACK" : {
                                      "groups" : [ ],
                                      "product_models" : [ ],
                                      "products" : [ "sunglass" ]
                                    }
                                  },
                                  "categories" : [ "summer_collection" ],
                                  "created" : "2016-06-23T18:24:44+02:00",
                                  "enabled" : true,
                                  "family" : "tshirt",
                                  "groups" : [ ],
                                  "identifier" : "top",
                                  "updated" : "2016-06-25T17:56:12+02:00",
                                  "values" : {
                                    "color" : [ {
                                      "data" : "black"
                                    } ],
                                    "description" : [ {
                                      "data" : "Summer top",
                                      "locale" : "en_US",
                                      "scope" : "ecommerce"
                                    }, {
                                      "data" : "Top",
                                      "locale" : "en_US",
                                      "scope" : "tablet"
                                    }, {
                                      "data" : "Débardeur pour l'été",
                                      "locale" : "fr_FR",
                                      "scope" : "ecommerce"
                                    }, {
                                      "data" : "Débardeur",
                                      "locale" : "fr_FR",
                                      "scope" : "tablet"
                                    } ],
                                    "name" : [ {
                                      "data" : "Top",
                                      "locale" : "en_US"
                                    }, {
                                      "data" : "Débardeur",
                                      "locale" : "fr_FR"
                                    } ],
                                    "price" : [ {
                                      "data" : [ {
                                        "amount" : "15.5",
                                        "currency" : "EUR"
                                      }, {
                                        "amount" : "15",
                                        "currency" : "USD"
                                      } ]
                                    } ],
                                    "size" : [ {
                                      "data" : "m"
                                    } ]
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/published-products/top"
                      }
                    },
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglasses" ]
                      }
                    },
                    "categories" : [ "summer_collection" ],
                    "created" : "2016-06-23T18:24:44+02:00",
                    "enabled" : true,
                    "family" : "tshirt",
                    "groups" : [ ],
                    "identifier" : "top",
                    "updated" : "2016-06-25T17:56:12+02:00",
                    "values" : {
                      "color" : [ {
                        "data" : "black"
                      } ],
                      "description" : [ {
                        "data" : "Summer top",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Top",
                        "locale" : "en_US",
                        "scope" : "tablet"
                      }, {
                        "data" : "Débardeur pour l'été",
                        "locale" : "fr_FR",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR",
                        "scope" : "tablet"
                      } ],
                      "name" : [ {
                        "data" : "Top",
                        "locale" : "en_US"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "15.5",
                          "currency" : "EUR"
                        }, {
                          "amount" : "15",
                          "currency" : "USD"
                        } ]
                      } ],
                      "size" : [ {
                        "data" : "m"
                      } ]
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/published-products/cap"
                      }
                    },
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglasses" ]
                      }
                    },
                    "categories" : [ "summer_collection" ],
                    "created" : "2016-06-23T18:24:44+02:00",
                    "enabled" : true,
                    "family" : "caps",
                    "groups" : [ ],
                    "identifier" : "cap",
                    "updated" : "2016-06-25T17:56:12+02:00",
                    "values" : {
                      "color" : [ {
                        "data" : "black"
                      } ],
                      "description" : [ {
                        "data" : "Cap unisex",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Cap unisex",
                        "locale" : "en_US",
                        "scope" : "tablet"
                      }, {
                        "data" : "Casquette unisexe",
                        "locale" : "fr_FR",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Casquette unisexe",
                        "locale" : "fr_FR",
                        "scope" : "tablet"
                      } ],
                      "name" : [ {
                        "data" : "Cap",
                        "locale" : "en_US"
                      }, {
                        "data" : "Casquette",
                        "locale" : "fr_FR"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "20",
                          "currency" : "EUR"
                        }, {
                          "amount" : "20",
                          "currency" : "USD"
                        } ]
                      } ]
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/published-products/sweat"
                      }
                    },
                    "associations" : { },
                    "categories" : [ "winter_collection" ],
                    "created" : "2016-06-23T11:24:44+02:00",
                    "enabled" : true,
                    "groups" : [ ],
                    "identifier" : "sweat",
                    "updated" : "2016-06-23T11:24:44+02:00",
                    "values" : { }
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/published-products?page=1&limit=3"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/published-products?page=4&limit=3"
                  },
                  "previous" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/published-products?page=2&limit=3"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/published-products?page=3&limit=3"
                  }
                }
              },
              "current_page" : {
                "example" : 3
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 400
              },
              "message" : {
                "example" : "Invalid JSON message received"
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/published-products/{code}" : {
      "get" : {
        "tags" : [ "Published product" ],
        "summary" : "Get a published product",
        "description" : "This endpoint allows you to get the information about a given published product.",
        "operationId" : "get_published_products__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "identifier" ],
                  "type" : "object",
                  "properties" : {
                    "associations" : {
                      "type" : "object",
                      "properties" : {
                        "associationTypeCode" : {
                          "type" : "object",
                          "properties" : {
                            "groups" : {
                              "type" : "array",
                              "description" : "Array of groups codes with which the published product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "product_models" : {
                              "type" : "array",
                              "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "products" : {
                              "type" : "array",
                              "description" : "Array of published product identifiers with which the published product is in relation",
                              "items" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Several associations related to groups and/or other published products, grouped by association types"
                    },
                    "categories" : {
                      "type" : "array",
                      "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the published product is classified",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation",
                      "format" : "dateTime"
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the published product is enable",
                      "default" : true
                    },
                    "family" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Family'>Family</a> code from which the published product inherits its attributes and attributes requirements",
                      "default" : "null"
                    },
                    "groups" : {
                      "type" : "array",
                      "description" : "Codes of the groups to which the published product belong",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "identifier" : {
                      "type" : "string",
                      "description" : "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                    },
                    "quantified_associations" : {
                      "type" : "object",
                      "description" : "Warning: associations with quantities are not compatible with the published products. The response will always be empty."
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update",
                      "format" : "dateTime"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "data" : {
                                "type" : "object",
                                "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "scope" : {
                                "type" : "string",
                                "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
                    }
                  },
                  "example" : {
                    "associations" : {
                      "PACK" : {
                        "groups" : [ ],
                        "product_models" : [ ],
                        "products" : [ "sunglass" ]
                      }
                    },
                    "categories" : [ "summer_collection" ],
                    "created" : "2016-06-23T18:24:44+02:00",
                    "enabled" : true,
                    "family" : "tshirt",
                    "groups" : [ ],
                    "identifier" : "top",
                    "updated" : "2016-06-25T17:56:12+02:00",
                    "values" : {
                      "color" : [ {
                        "data" : "black"
                      } ],
                      "description" : [ {
                        "data" : "Summer top",
                        "locale" : "en_US",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Top",
                        "locale" : "en_US",
                        "scope" : "tablet"
                      }, {
                        "data" : "Débardeur pour l'été",
                        "locale" : "fr_FR",
                        "scope" : "ecommerce"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR",
                        "scope" : "tablet"
                      } ],
                      "name" : [ {
                        "data" : "Top",
                        "locale" : "en_US"
                      }, {
                        "data" : "Débardeur",
                        "locale" : "fr_FR"
                      } ],
                      "price" : [ {
                        "data" : [ {
                          "amount" : "15.5",
                          "currency" : "EUR"
                        }, {
                          "amount" : "15",
                          "currency" : "USD"
                        } ]
                      } ],
                      "size" : [ {
                        "data" : "m"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "403" : {
            "description" : "Access forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 403
              },
              "message" : {
                "example" : "Access forbidden. You are not allowed to list categories."
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities" : {
      "get" : {
        "tags" : [ "Reference entity" ],
        "summary" : "Get list of reference entities",
        "description" : "This endpoint allows you to get a list of reference entities. Reference entities are paginated.",
        "operationId" : "get_reference_entities",
        "parameters" : [ {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return reference entities paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Reference Entities",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "image_download" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI to download the binaries of the reference entity image file"
                                          }
                                        }
                                      },
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Reference entity code"
                                  },
                                  "image" : {
                                    "type" : "string",
                                    "description" : "Code of the reference entity image",
                                    "default" : "null"
                                  },
                                  "labels" : {
                                    "type" : "object",
                                    "properties" : {
                                      "localeCode" : {
                                        "type" : "string",
                                        "description" : "Reference entity label for the locale `localeCode`"
                                      }
                                    },
                                    "description" : "Reference entity labels for each locale"
                                  }
                                },
                                "example" : {
                                  "code" : "brands",
                                  "image" : "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png",
                                  "labels" : {
                                    "en_US" : "Brands",
                                    "fr_FR" : "Marques"
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "image_download" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities-media-files/0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
                      },
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities/brands"
                      }
                    },
                    "code" : "brands",
                    "image" : "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png",
                    "labels" : {
                      "en_US" : "Brands",
                      "fr_FR" : "Marque"
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities/designers"
                      }
                    },
                    "code" : "designers",
                    "labels" : {
                      "en_US" : "Designers",
                      "fr_FR" : "Designers"
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities/colors"
                      }
                    },
                    "code" : "colors",
                    "labels" : {
                      "en_US" : "Colors",
                      "fr_FR" : "Couleurs"
                    }
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities?search_after=2x055w%3D%3D"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities-media-files" : {
      "post" : {
        "tags" : [ "Reference entity media file" ],
        "summary" : "Create a new media file for a reference entity or a record",
        "description" : "This endpoint allows you to create a new media file and associate it to the image of a reference entity, or to the main image or to an attribute value of a record.",
        "operationId" : "post_reference_entity_media_files",
        "parameters" : [ {
          "name" : "Content-type",
          "in" : "header",
          "description" : "Equal to 'multipart/form-data', no other value allowed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The binary of the media file",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Reference-entities-media-file-code" : {
                "description" : "Code of the media file",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities-media-files/{code}" : {
      "get" : {
        "tags" : [ "Reference entity media file" ],
        "summary" : "Download the media file associated to a reference entity or a record",
        "description" : "This endpoint allows you to download a given media file that is associated with a reference entity or a record.",
        "operationId" : "get_reference_entity_media_files__code",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities/{code}" : {
      "get" : {
        "tags" : [ "Reference entity" ],
        "summary" : "Get a reference entity",
        "description" : "This endpoint allows you to get the information about a given reference entity.",
        "operationId" : "get_reference_entities__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "image_download" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI to download the binaries of the reference entity image file"
                              }
                            }
                          }
                        }
                      }
                    }
                  }, {
                    "required" : [ "code" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "string",
                        "description" : "Reference entity code"
                      },
                      "image" : {
                        "type" : "string",
                        "description" : "Code of the reference entity image",
                        "default" : "null"
                      },
                      "labels" : {
                        "type" : "object",
                        "properties" : {
                          "localeCode" : {
                            "type" : "string",
                            "description" : "Reference entity label for the locale `localeCode`"
                          }
                        },
                        "description" : "Reference entity labels for each locale"
                      }
                    },
                    "example" : {
                      "code" : "brands",
                      "image" : "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png",
                      "labels" : {
                        "en_US" : "Brands",
                        "fr_FR" : "Marques"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Reference entity" ],
        "summary" : "Update/create a reference entity",
        "description" : "This endpoint allows you to update a given reference entity. Note that if the reference entity does not already exist, it creates it.",
        "operationId" : "patch_reference_entity__code_",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Reference entity code"
                  },
                  "image" : {
                    "type" : "string",
                    "description" : "Code of the reference entity image",
                    "default" : "null"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Reference entity label for the locale `localeCode`"
                      }
                    },
                    "description" : "Reference entity labels for each locale"
                  }
                },
                "example" : {
                  "code" : "brands",
                  "image" : "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png",
                  "labels" : {
                    "en_US" : "Brands",
                    "fr_FR" : "Marques"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities/{reference_entity_code}/attributes" : {
      "get" : {
        "tags" : [ "Reference entity attribute" ],
        "summary" : "Get the list of attributes of a given reference entity",
        "description" : "This endpoint allows you to get the list of attributes of a given reference entity.",
        "operationId" : "get_reference_entities__code__attributes",
        "parameters" : [ {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the attributes of the given reference entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "code", "type" ],
                    "type" : "object",
                    "properties" : {
                      "allowed_extensions" : {
                        "type" : "array",
                        "description" : "Extensions allowed when the attribute type is `image`",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "code" : {
                        "type" : "string",
                        "description" : "Attribute code"
                      },
                      "decimals_allowed" : {
                        "type" : "boolean",
                        "description" : "Whether decimals are allowed when the attribute type is `number`",
                        "default" : false
                      },
                      "is_required_for_completeness" : {
                        "type" : "boolean",
                        "description" : "Whether the attribute should be part of the record's completeness calculation",
                        "default" : false
                      },
                      "is_rich_text_editor" : {
                        "type" : "boolean",
                        "description" : "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`"
                      },
                      "is_textarea" : {
                        "type" : "boolean",
                        "description" : "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                        "default" : false
                      },
                      "labels" : {
                        "type" : "object",
                        "properties" : {
                          "localeCode" : {
                            "type" : "string",
                            "description" : "Attribute label for the locale `localeCode`"
                          }
                        },
                        "description" : "Attribute labels for each locale"
                      },
                      "max_characters" : {
                        "type" : "integer",
                        "description" : "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`"
                      },
                      "max_file_size" : {
                        "type" : "string",
                        "description" : "Max file size in MB when the attribute type is `image`",
                        "default" : "null"
                      },
                      "max_value" : {
                        "type" : "string",
                        "description" : "Maximum value allowed when the attribute type is `number`",
                        "default" : "null"
                      },
                      "min_value" : {
                        "type" : "string",
                        "description" : "Minimum value allowed when the attribute type is `number`",
                        "default" : "null"
                      },
                      "reference_entity_code" : {
                        "type" : "string",
                        "description" : "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
                        "default" : "null"
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
                        "enum" : [ "text", "image", "number", "single_option", "multiple_options", "reference_entity_single_link", "reference_entity_multiple_links" ]
                      },
                      "validation_regexp" : {
                        "type" : "string",
                        "description" : "Regexp expression used to validate the attribute value when the attribute type is `text`",
                        "default" : "null"
                      },
                      "validation_rule" : {
                        "type" : "string",
                        "description" : "Validation rule type used to validate the attribute value when the attribute type is `text`",
                        "default" : "none",
                        "enum" : [ "email", "url", "regexp", "none" ]
                      },
                      "value_per_channel" : {
                        "type" : "boolean",
                        "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                        "default" : false
                      },
                      "value_per_locale" : {
                        "type" : "boolean",
                        "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                        "default" : false
                      }
                    },
                    "example" : {
                      "code" : "description",
                      "is_required_for_completeness" : true,
                      "is_rich_text_editor" : true,
                      "is_textarea" : true,
                      "labels" : {
                        "en_US" : "Description",
                        "fr_FR" : "Description"
                      },
                      "max_characters" : null,
                      "type" : "text",
                      "validation_regexp" : null,
                      "validation_rule" : "none",
                      "value_per_channel" : false,
                      "value_per_locale" : true
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options" : {
      "get" : {
        "tags" : [ "Reference entity attribute option" ],
        "summary" : "Get a list of attribute options of a given attribute for a given reference entity",
        "description" : "This endpoint allows you to get a list of attribute options for a given reference entity.",
        "operationId" : "get_reference_entity_attributes__attribute_code__options",
        "parameters" : [ {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the options of the given attributes of the given reference entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "code" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "string",
                        "description" : "Attribute's option code"
                      },
                      "labels" : {
                        "type" : "object",
                        "properties" : {
                          "localeCode" : {
                            "type" : "string",
                            "description" : "Attribute label for the locale `localeCode`"
                          }
                        },
                        "description" : "Attribute labels for each locale"
                      }
                    },
                    "example" : {
                      "code" : "global_nomad",
                      "labels" : {
                        "en_US" : "Global Nomad",
                        "fr_FR" : "Nomade du Monde"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options/{code}" : {
      "get" : {
        "tags" : [ "Reference entity attribute option" ],
        "summary" : "Get an attribute option for a given attribute of a given reference entity",
        "description" : "This endpoint allows you to get the information about a given attribute option.",
        "operationId" : "get_reference_entity_attributes__attribute_code__options__code_",
        "parameters" : [ {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Attribute's option code"
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description" : "Attribute labels for each locale"
                    }
                  },
                  "example" : {
                    "code" : "global_nomad",
                    "labels" : {
                      "en_US" : "Global Nomad",
                      "fr_FR" : "Nomade du Monde"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Reference entity attribute option" ],
        "summary" : "Update/create a reference entity attribute option",
        "description" : "This endpoint allows you to update a given option for a given attribute and a given reference entity. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given reference entity, it creates it.",
        "operationId" : "patch_reference_entity_attributes__attribute_code__options__code_",
        "parameters" : [ {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attribute_code",
          "in" : "path",
          "description" : "Code of the attribute",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute's option code"
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute labels for each locale"
                  }
                },
                "example" : {
                  "code" : "global_nomad",
                  "labels" : {
                    "en_US" : "Global Nomad",
                    "fr_FR" : "Nomade du Monde"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{code}" : {
      "get" : {
        "tags" : [ "Reference entity attribute" ],
        "summary" : "Get an attribute of a given reference entity",
        "description" : "This endpoint allows you to get the information about a given attribute for a given reference entity.",
        "operationId" : "get_reference_entity_attributes__code_",
        "parameters" : [ {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code", "type" ],
                  "type" : "object",
                  "properties" : {
                    "allowed_extensions" : {
                      "type" : "array",
                      "description" : "Extensions allowed when the attribute type is `image`",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Attribute code"
                    },
                    "decimals_allowed" : {
                      "type" : "boolean",
                      "description" : "Whether decimals are allowed when the attribute type is `number`",
                      "default" : false
                    },
                    "is_required_for_completeness" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute should be part of the record's completeness calculation",
                      "default" : false
                    },
                    "is_rich_text_editor" : {
                      "type" : "boolean",
                      "description" : "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`"
                    },
                    "is_textarea" : {
                      "type" : "boolean",
                      "description" : "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                      "default" : false
                    },
                    "labels" : {
                      "type" : "object",
                      "properties" : {
                        "localeCode" : {
                          "type" : "string",
                          "description" : "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description" : "Attribute labels for each locale"
                    },
                    "max_characters" : {
                      "type" : "integer",
                      "description" : "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`"
                    },
                    "max_file_size" : {
                      "type" : "string",
                      "description" : "Max file size in MB when the attribute type is `image`",
                      "default" : "null"
                    },
                    "max_value" : {
                      "type" : "string",
                      "description" : "Maximum value allowed when the attribute type is `number`",
                      "default" : "null"
                    },
                    "min_value" : {
                      "type" : "string",
                      "description" : "Minimum value allowed when the attribute type is `number`",
                      "default" : "null"
                    },
                    "reference_entity_code" : {
                      "type" : "string",
                      "description" : "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
                      "default" : "null"
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
                      "enum" : [ "text", "image", "number", "single_option", "multiple_options", "reference_entity_single_link", "reference_entity_multiple_links" ]
                    },
                    "validation_regexp" : {
                      "type" : "string",
                      "description" : "Regexp expression used to validate the attribute value when the attribute type is `text`",
                      "default" : "null"
                    },
                    "validation_rule" : {
                      "type" : "string",
                      "description" : "Validation rule type used to validate the attribute value when the attribute type is `text`",
                      "default" : "none",
                      "enum" : [ "email", "url", "regexp", "none" ]
                    },
                    "value_per_channel" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                      "default" : false
                    },
                    "value_per_locale" : {
                      "type" : "boolean",
                      "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                      "default" : false
                    }
                  },
                  "example" : {
                    "code" : "description",
                    "is_required_for_completeness" : true,
                    "is_rich_text_editor" : true,
                    "is_textarea" : true,
                    "labels" : {
                      "en_US" : "Description",
                      "fr_FR" : "Description"
                    },
                    "type" : "text",
                    "validation_rule" : "none",
                    "value_per_channel" : false,
                    "value_per_locale" : true
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Reference entity attribute" ],
        "summary" : "Update/create an attribute of a given reference entity",
        "description" : "This endpoint allows you to update a given attribute for a given renference entity. Note that if the attribute does not already exist for the given reference entity, it creates it.",
        "operationId" : "patch_reference_entity_attributes__code_",
        "parameters" : [ {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code", "type" ],
                "type" : "object",
                "properties" : {
                  "allowed_extensions" : {
                    "type" : "array",
                    "description" : "Extensions allowed when the attribute type is `image`",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Attribute code"
                  },
                  "decimals_allowed" : {
                    "type" : "boolean",
                    "description" : "Whether decimals are allowed when the attribute type is `number`",
                    "default" : false
                  },
                  "is_required_for_completeness" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute should be part of the record's completeness calculation",
                    "default" : false
                  },
                  "is_rich_text_editor" : {
                    "type" : "boolean",
                    "description" : "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`"
                  },
                  "is_textarea" : {
                    "type" : "boolean",
                    "description" : "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                    "default" : false
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Attribute label for the locale `localeCode`"
                      }
                    },
                    "description" : "Attribute labels for each locale"
                  },
                  "max_characters" : {
                    "type" : "integer",
                    "description" : "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`"
                  },
                  "max_file_size" : {
                    "type" : "string",
                    "description" : "Max file size in MB when the attribute type is `image`",
                    "default" : "null"
                  },
                  "max_value" : {
                    "type" : "string",
                    "description" : "Maximum value allowed when the attribute type is `number`",
                    "default" : "null"
                  },
                  "min_value" : {
                    "type" : "string",
                    "description" : "Minimum value allowed when the attribute type is `number`",
                    "default" : "null"
                  },
                  "reference_entity_code" : {
                    "type" : "string",
                    "description" : "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
                    "default" : "null"
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
                    "enum" : [ "text", "image", "number", "single_option", "multiple_options", "reference_entity_single_link", "reference_entity_multiple_links" ]
                  },
                  "validation_regexp" : {
                    "type" : "string",
                    "description" : "Regexp expression used to validate the attribute value when the attribute type is `text`",
                    "default" : "null"
                  },
                  "validation_rule" : {
                    "type" : "string",
                    "description" : "Validation rule type used to validate the attribute value when the attribute type is `text`",
                    "default" : "none",
                    "enum" : [ "email", "url", "regexp", "none" ]
                  },
                  "value_per_channel" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
                    "default" : false
                  },
                  "value_per_locale" : {
                    "type" : "boolean",
                    "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
                    "default" : false
                  }
                },
                "example" : {
                  "code" : "description",
                  "is_required_for_completeness" : true,
                  "is_rich_text_editor" : true,
                  "is_textarea" : true,
                  "labels" : {
                    "en_US" : "Description",
                    "fr_FR" : "Description"
                  },
                  "type" : "text",
                  "validation_rule" : "none",
                  "value_per_channel" : false,
                  "value_per_locale" : true
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities/{reference_entity_code}/records" : {
      "get" : {
        "tags" : [ "Reference entity record" ],
        "summary" : "Get the list of the records of a reference entity",
        "description" : "This endpoint allows you to get a list of records of a given reference entity. Records are paginated and can be filtered.",
        "operationId" : "get_reference_entity_records",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Filter records of the reference entity, for more details see the <a href=\"/documentation/filter.html#filter-reference-entity-records\">Filters</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel",
          "in" : "query",
          "description" : "Filter attribute values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#record-values-by-channel\">Filter attribute values by channel</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locales",
          "in" : "query",
          "description" : "Filter attribute values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#record-values-by-locale\">Filter attribute values by locale</a> section",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search_after",
          "in" : "query",
          "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema" : {
            "type" : "string",
            "default" : "cursor to the first page"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the records of the given reference entity paginated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Reference entity record",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "_links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the first page of resources"
                              }
                            }
                          },
                          "next" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the next page of resources"
                              }
                            }
                          },
                          "self" : {
                            "type" : "object",
                            "properties" : {
                              "href" : {
                                "type" : "string",
                                "description" : "URI of the current page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "_embedded" : {
                        "type" : "object",
                        "properties" : {
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "allOf" : [ {
                                "type" : "object",
                                "properties" : {
                                  "_links" : {
                                    "type" : "object",
                                    "properties" : {
                                      "self" : {
                                        "type" : "object",
                                        "properties" : {
                                          "href" : {
                                            "type" : "string",
                                            "description" : "URI of the resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }, {
                                "required" : [ "code" ],
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "type" : "string",
                                    "description" : "Code of the record"
                                  },
                                  "created" : {
                                    "type" : "string",
                                    "description" : "Date of creation.",
                                    "format" : "dateTime",
                                    "default" : "null"
                                  },
                                  "updated" : {
                                    "type" : "string",
                                    "description" : "Date of the last update.",
                                    "format" : "dateTime",
                                    "default" : "null"
                                  },
                                  "values" : {
                                    "type" : "object",
                                    "properties" : {
                                      "attributeCode" : {
                                        "type" : "array",
                                        "items" : {
                                          "type" : "object",
                                          "properties" : {
                                            "channel" : {
                                              "type" : "string",
                                              "description" : "Channel code of the reference entity record value"
                                            },
                                            "data" : {
                                              "type" : "object",
                                              "description" : "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                                            },
                                            "locale" : {
                                              "type" : "string",
                                              "description" : "Locale code of the reference entity record value"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description" : "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details"
                                  }
                                },
                                "example" : {
                                  "code" : "kartell",
                                  "created" : "2021-01-01T01:23:34+00:00",
                                  "updated" : "2021-02-03T23:45:60+00:00",
                                  "values" : {
                                    "collection_overview" : [ {
                                      "data" : "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                                    } ],
                                    "country" : [ {
                                      "data" : "italy"
                                    } ],
                                    "creation_year" : [ {
                                      "data" : "1949"
                                    } ],
                                    "description" : [ {
                                      "data" : "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures.",
                                      "locale" : "en_US"
                                    }, {
                                      "data" : "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain.",
                                      "locale" : "fr_FR"
                                    } ],
                                    "image" : [ {
                                      "data" : "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                                    } ],
                                    "label" : [ {
                                      "data" : "Kartell",
                                      "locale" : "en_US"
                                    } ]
                                  }
                                }
                              } ]
                            }
                          }
                        }
                      }
                    }
                  } ]
                }
              },
              "_embedded" : {
                "example" : {
                  "items" : [ {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records/kartell"
                      }
                    },
                    "code" : "kartell",
                    "created" : "2021-01-01T01:23:34+00:00",
                    "updated" : "2021-02-03T23:45:60+00:00",
                    "values" : {
                      "country" : [ {
                        "data" : "italy"
                      } ],
                      "description" : [ {
                        "data" : "The contemporary Italian furniture brand",
                        "locale" : "en_US"
                      }, {
                        "data" : "L'éditeur de meubles comtemporain italien",
                        "locale" : "fr_FR"
                      } ],
                      "image" : [ {
                        "data" : "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                      } ],
                      "label" : [ {
                        "data" : "Kartell",
                        "locale" : "en_US"
                      } ]
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records/usm"
                      }
                    },
                    "code" : "usm",
                    "created" : "2021-01-01T01:23:34+00:00",
                    "updated" : "2021-02-03T23:45:60+00:00",
                    "values" : {
                      "country" : [ {
                        "data" : "switzerland"
                      } ],
                      "description" : [ {
                        "data" : "Modular furniture from Switzerland for your home and office",
                        "locale" : "en_US"
                      }, {
                        "data" : "L'éditeur de meubles modulaires suisse pour votre intérieur et pour les entreprises",
                        "locale" : "fr_FR"
                      } ],
                      "image" : [ {
                        "data" : "9/c/g/1/0cb0c0e115dedba76f8d1ad8343ec897abc43bv4_image.jpg"
                      } ],
                      "label" : [ {
                        "data" : "USM",
                        "locale" : "en_US"
                      } ]
                    }
                  }, {
                    "_links" : {
                      "self" : {
                        "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records/ligneroset"
                      }
                    },
                    "code" : "ligneroset",
                    "created" : "2021-01-01T01:23:34+00:00",
                    "updated" : "2021-02-03T23:45:60+00:00",
                    "values" : {
                      "country" : [ {
                        "data" : "france"
                      } ],
                      "description" : [ {
                        "data" : "Very well known French brand of modern and luxury furniture",
                        "locale" : "en_US"
                      }, {
                        "data" : "La marque renommée des meubles de luxe à la française",
                        "locale" : "fr_FR"
                      } ],
                      "image" : [ {
                        "data" : "4/b/0/1/0cb0c0e115dedde78b8d1ad8343ec980cd5daa54_image.jpg"
                      } ],
                      "label" : [ {
                        "data" : "Ligne Roset",
                        "locale" : "en_US"
                      } ]
                    }
                  } ]
                }
              },
              "_links" : {
                "example" : {
                  "first" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records"
                  },
                  "next" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records?search_after=2x088w%3D%3D"
                  },
                  "self" : {
                    "href" : "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Reference entity record" ],
        "summary" : "Update/create several reference entity records",
        "description" : "This endpoint allows you to update and/or create several records of one given reference entity at once. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\">Update behavior</a>. Note that if the record does not already exist for the given reference entity, it creates it.",
        "operationId" : "patch_reference_entity_records",
        "parameters" : [ {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "array",
                "example" : [ {
                  "code" : "kartell",
                  "values" : {
                    "collection_overview" : [ {
                      "data" : "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                    } ],
                    "country" : [ {
                      "data" : "italy"
                    } ],
                    "creation_year" : [ {
                      "data" : "1949"
                    } ],
                    "description" : [ {
                      "data" : "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures.",
                      "locale" : "en_US"
                    }, {
                      "data" : "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain.",
                      "locale" : "fr_FR"
                    } ],
                    "image" : [ {
                      "data" : "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                    } ],
                    "label" : [ {
                      "data" : "Kartell",
                      "locale" : "en_US"
                    } ]
                  }
                }, {
                  "code" : "ligneroset",
                  "values" : {
                    "country" : [ {
                      "data" : "france"
                    } ],
                    "creation_year" : [ {
                      "data" : "1860"
                    } ],
                    "description" : [ {
                      "data" : "Very well known French brand of modern and luxury furniture",
                      "locale" : "en_US"
                    }, {
                      "data" : "La marque renommée des meubles de luxe à la française",
                      "locale" : "fr_FR"
                    } ],
                    "image" : [ {
                      "data" : "4/b/0/1/0cb0c0e115dedde78b8d1ad8343ec980cd5daa54_image.jpg"
                    } ],
                    "label" : [ {
                      "data" : "Ligne Roset",
                      "locale" : "en_US"
                    } ]
                  }
                }, {
                  "code" : "usm",
                  "values" : {
                    "country" : [ {
                      "data" : "switzerland"
                    } ],
                    "creation_year" : [ {
                      "data" : "1885"
                    } ],
                    "description" : [ {
                      "data" : "Modular furniture from Switzerland for your home and office",
                      "locale" : "en_US"
                    }, {
                      "data" : "L'éditeur de meubles modulaires suisse pour votre intérieur et pour les entreprises",
                      "locale" : "fr_FR"
                    } ],
                    "image" : [ {
                      "data" : "9/c/g/1/0cb0c0e115dedba76f8d1ad8343ec897abc43bv4_image.jpg"
                    } ],
                    "label" : [ {
                      "data" : "USM",
                      "locale" : "en_US"
                    } ]
                  }
                } ],
                "items" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Code of the record"
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation.",
                      "format" : "dateTime",
                      "default" : "null"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update.",
                      "format" : "dateTime",
                      "default" : "null"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "channel" : {
                                "type" : "string",
                                "description" : "Channel code of the reference entity record value"
                              },
                              "data" : {
                                "type" : "object",
                                "description" : "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "Locale code of the reference entity record value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details"
                    }
                  },
                  "example" : {
                    "code" : "kartell",
                    "created" : "2021-01-01T01:23:34+00:00",
                    "updated" : "2021-02-03T23:45:60+00:00",
                    "values" : {
                      "collection_overview" : [ {
                        "channel" : null,
                        "data" : "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png",
                        "locale" : null
                      } ],
                      "country" : [ {
                        "channel" : null,
                        "data" : "italy",
                        "locale" : null
                      } ],
                      "creation_year" : [ {
                        "channel" : null,
                        "data" : "1949",
                        "locale" : null
                      } ],
                      "description" : [ {
                        "channel" : null,
                        "data" : "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures.",
                        "locale" : "en_US"
                      }, {
                        "channel" : null,
                        "data" : "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain.",
                        "locale" : "fr_FR"
                      } ],
                      "image" : [ {
                        "channel" : null,
                        "data" : "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg",
                        "locale" : null
                      } ],
                      "label" : [ {
                        "channel" : null,
                        "data" : "Kartell",
                        "locale" : "en_US"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "string",
                        "description" : "Resource code"
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "Message explaining the error"
                      },
                      "status_code" : {
                        "type" : "integer",
                        "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "413" : {
            "description" : "Request Entity Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 413
              },
              "message" : {
                "example" : "Too many resources to process, 100 is the maximum allowed."
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/reference-entities/{reference_entity_code}/records/{code}" : {
      "get" : {
        "tags" : [ "Reference entity record" ],
        "summary" : "Get a record of a given reference entity",
        "description" : "This endpoint allows you to get the information about a given record for a given reference entity.",
        "operationId" : "get_reference_entity_records__code_",
        "parameters" : [ {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "code" ],
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Code of the record"
                    },
                    "created" : {
                      "type" : "string",
                      "description" : "Date of creation.",
                      "format" : "dateTime",
                      "default" : "null"
                    },
                    "updated" : {
                      "type" : "string",
                      "description" : "Date of the last update.",
                      "format" : "dateTime",
                      "default" : "null"
                    },
                    "values" : {
                      "type" : "object",
                      "properties" : {
                        "attributeCode" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "channel" : {
                                "type" : "string",
                                "description" : "Channel code of the reference entity record value"
                              },
                              "data" : {
                                "type" : "object",
                                "description" : "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "locale" : {
                                "type" : "string",
                                "description" : "Locale code of the reference entity record value"
                              }
                            }
                          }
                        }
                      },
                      "description" : "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details"
                    }
                  },
                  "example" : {
                    "code" : "kartell",
                    "created" : "2021-01-01T01:23:34+00:00",
                    "updated" : "2021-02-03T23:45:60+00:00",
                    "values" : {
                      "collection_overview" : [ {
                        "data" : "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                      } ],
                      "country" : [ {
                        "data" : "italy"
                      } ],
                      "creation_year" : [ {
                        "data" : "1949"
                      } ],
                      "description" : [ {
                        "data" : "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures.",
                        "locale" : "en_US"
                      }, {
                        "data" : "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain.",
                        "locale" : "fr_FR"
                      } ],
                      "image" : [ {
                        "data" : "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                      } ],
                      "label" : [ {
                        "data" : "Kartell",
                        "locale" : "en_US"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 404
              },
              "message" : {
                "example" : "Resource `my_resource_code` does not exist."
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Reference entity record" ],
        "summary" : "Update/create a record of a given reference entity",
        "description" : "This endpoint allows you to update a given record of a given renference entity. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\">Update behavior</a>. Note that if the record does not already exist for the given reference entity, it creates it.",
        "operationId" : "patch_reference_entity_records__code_",
        "parameters" : [ {
          "name" : "reference_entity_code",
          "in" : "path",
          "description" : "Code of the reference entity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "required" : [ "code" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Code of the record"
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Date of creation.",
                    "format" : "dateTime",
                    "default" : "null"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Date of the last update.",
                    "format" : "dateTime",
                    "default" : "null"
                  },
                  "values" : {
                    "type" : "object",
                    "properties" : {
                      "attributeCode" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "channel" : {
                              "type" : "string",
                              "description" : "Channel code of the reference entity record value"
                            },
                            "data" : {
                              "type" : "object",
                              "description" : "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "locale" : {
                              "type" : "string",
                              "description" : "Locale code of the reference entity record value"
                            }
                          }
                        }
                      }
                    },
                    "description" : "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details"
                  }
                },
                "example" : {
                  "code" : "kartell",
                  "values" : {
                    "collection_overview" : [ {
                      "data" : "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                    } ],
                    "country" : [ {
                      "data" : "italy"
                    } ],
                    "creation_year" : [ {
                      "data" : "1949"
                    } ],
                    "description" : [ {
                      "data" : "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures.",
                      "locale" : "en_US"
                    }, {
                      "data" : "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain.",
                      "locale" : "fr_FR"
                    } ],
                    "image" : [ {
                      "data" : "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                    } ],
                    "label" : [ {
                      "data" : "Kartell",
                      "locale" : "en_US"
                    } ]
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "URI of the created resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content to return",
            "headers" : {
              "Location" : {
                "description" : "URI of the updated resource",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 401
              },
              "message" : {
                "example" : "Authentication is required"
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 415
              },
              "message" : {
                "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "_links" : {
                "example" : {
                  "documentation" : {
                    "href" : "http://api.akeneo.com/api-reference.html"
                  }
                }
              },
              "code" : {
                "example" : 422
              },
              "message" : {
                "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
              }
            }
          }
        }
      }
    },
    "/api/rest/v1/system-information" : {
      "get" : {
        "tags" : [ "System" ],
        "summary" : "Get system information",
        "description" : "This endpoint allows you to get the version and the edition of the PIM. Example of what you can get <table class=\"description-table\"> <thead> <tr> <th align=\"center\">Environment</th> <th align=\"center\">Edition</th> <th align=\"center\">Version</th> </tr> </thead> <tbody> <tr> <td align=\"center\">SaaS EE</td> <td align=\"center\">Serenity</td> <td align=\"center\">v20230112013744</td> </tr> <tr> <td align=\"center\">SaaS CE</td> <td align=\"center\">GE</td> <td align=\"center\">v20210526040645</td> </tr> <tr> <td align=\"center\">PaaS or onPrem EE</td> <td align=\"center\">EE</td> <td align=\"center\">5.0.28</td> </tr> <tr> <td align=\"center\">PaaS or onPrem CE</td> <td align=\"center\">CE</td> <td align=\"center\">5.0.28</td> </tr> </tbody> </table>",
        "operationId" : "get_system_information",
        "responses" : {
          "200" : {
            "description" : "Return the version and the edition of the PIM.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "edition" : {
                      "type" : "string",
                      "description" : "Edition of the PIM"
                    },
                    "version" : {
                      "type" : "string",
                      "description" : "Version of the PIM"
                    }
                  }
                }
              },
              "edition" : {
                "example" : "Serenity"
              },
              "version" : {
                "example" : "20210521041041"
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "description" : "HTTP status code"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Message explaining the error"
                    }
                  }
                }
              },
              "code" : {
                "example" : 406
              },
              "message" : {
                "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AppCatalogList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "type" : "object",
          "properties" : {
            "enabled" : {
              "type" : "boolean",
              "description" : "Whether the catalog is enabled or not",
              "default" : false
            },
            "id" : {
              "type" : "string",
              "description" : "Catalog id"
            },
            "name" : {
              "type" : "string",
              "description" : "Catalog name"
            }
          },
          "example" : {
            "enabled" : false,
            "id" : "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
            "name" : "My app catalog"
          }
        } ]
      },
      "AssetAttributeList" : {
        "type" : "array",
        "items" : {
          "required" : [ "code", "media_type", "type" ],
          "type" : "object",
          "properties" : {
            "allowed_extensions" : {
              "type" : "array",
              "description" : "Extensions allowed when the attribute type is `media_file`",
              "items" : {
                "type" : "string"
              }
            },
            "code" : {
              "type" : "string",
              "description" : "Attribute code"
            },
            "decimals_allowed" : {
              "type" : "boolean",
              "description" : "Whether decimals are allowed when the attribute type is `number`",
              "default" : false
            },
            "is_read_only" : {
              "type" : "boolean",
              "description" : "Whether the attribute should be in read only mode only in the UI, but you can still update it with the API",
              "default" : false
            },
            "is_required_for_completeness" : {
              "type" : "boolean",
              "description" : "Whether the attribute should be part of the record's completeness calculation",
              "default" : false
            },
            "is_rich_text_editor" : {
              "type" : "boolean",
              "description" : "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`"
            },
            "is_textarea" : {
              "type" : "boolean",
              "description" : "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
              "default" : false
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Attribute label for the locale `localeCode`"
                }
              },
              "description" : "Attribute labels for each locale"
            },
            "max_characters" : {
              "type" : "integer",
              "description" : "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`"
            },
            "max_file_size" : {
              "type" : "string",
              "description" : "Max file size in MB when the attribute type is `media_file`",
              "default" : "null"
            },
            "max_value" : {
              "type" : "string",
              "description" : "Maximum value allowed when the attribute type is `number`",
              "default" : "null"
            },
            "media_type" : {
              "type" : "string",
              "description" : "For the `media_link` attribute type, it is the type of the media behind the url, to allow its preview in the PIM. For the `media_file` attribute type, it is the type of the file.",
              "enum" : [ "image", "pdf", "youtube", "vimeo", "other" ]
            },
            "min_value" : {
              "type" : "string",
              "description" : "Minimum value allowed when the attribute type is `number`",
              "default" : "null"
            },
            "prefix" : {
              "type" : "string",
              "description" : "Prefix of the `media_link` attribute type. The common url root that prefixes the link to the media",
              "default" : "null"
            },
            "suffix" : {
              "type" : "string",
              "description" : "Suffix of the `media_link` attribute type. The common url suffix for the media",
              "default" : "null"
            },
            "type" : {
              "type" : "string",
              "description" : "Attribute type. See <a href='/concepts/asset-manager.html#asset-attribute'>type</a> section for more details.",
              "enum" : [ "text", "media_link", "number", "media_file", "single_option", "multiple_options", "reference_entity_single_link", "reference_entity_multiple_links", "boolean" ]
            },
            "validation_regexp" : {
              "type" : "string",
              "description" : "Regexp expression used to validate the attribute value when the attribute type is `text`",
              "default" : "null"
            },
            "validation_rule" : {
              "type" : "string",
              "description" : "Validation rule type used to validate the attribute value when the attribute type is `text`",
              "default" : "none",
              "enum" : [ "email", "url", "regexp", "none" ]
            },
            "value_per_channel" : {
              "type" : "boolean",
              "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
              "default" : false
            },
            "value_per_locale" : {
              "type" : "boolean",
              "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
              "default" : false
            }
          },
          "example" : {
            "code" : "model_is_wearing_size",
            "is_required_for_completeness" : true,
            "labels" : {
              "en_US" : "Model is wearing size",
              "fr_FR" : "Le mannequin porte la taille"
            },
            "type" : "single_option",
            "value_per_channel" : false,
            "value_per_locale" : false
          }
        }
      },
      "AssetAttributeOptionList" : {
        "type" : "array",
        "items" : {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Attribute's option code"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Attribute label for the locale `localeCode`"
                }
              },
              "description" : "Attribute labels for each locale"
            }
          },
          "example" : {
            "code" : "small",
            "labels" : {
              "en_US" : "S",
              "fr_FR" : "S"
            }
          }
        }
      },
      "AssetFamilyItemList" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the resource"
                  }
                }
              }
            }
          }
        }
      },
      "AssetFamilyList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "attribute_as_main_media" : {
              "type" : "string",
              "description" : "Attribute code that is used as the main media of the asset family.",
              "default" : "First media file or media link attribute that was created"
            },
            "code" : {
              "type" : "string",
              "description" : "Asset family code"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Asset family label for the locale `localeCode`"
                }
              },
              "description" : "Asset family labels for each locale"
            },
            "naming_convention" : {
              "type" : "object",
              "properties" : {
                "abort_asset_creation_on_error" : {
                  "type" : "boolean",
                  "description" : "Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>."
                },
                "pattern" : {
                  "type" : "string",
                  "description" : "The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>."
                },
                "source" : {
                  "type" : "object",
                  "description" : "The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>."
                }
              },
              "description" : "The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>."
            },
            "product_link_rules" : {
              "type" : "array",
              "description" : "The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "assign_assets_to" : {
                    "type" : "array",
                    "description" : "The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.",
                    "items" : {
                      "required" : [ "attribute", "mode" ],
                      "type" : "object",
                      "properties" : {
                        "attribute" : {
                          "type" : "string"
                        },
                        "channel" : {
                          "type" : "string"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "mode" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "product_selections" : {
                    "type" : "array",
                    "description" : "The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.",
                    "items" : {
                      "required" : [ "field", "operator", "value" ],
                      "type" : "object",
                      "properties" : {
                        "channel" : {
                          "type" : "string"
                        },
                        "field" : {
                          "type" : "string"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "operator" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "transformations" : {
              "type" : "array",
              "description" : "The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.",
              "items" : {
                "required" : [ "label", "operations", "source", "target" ],
                "type" : "object",
                "properties" : {
                  "filename_prefix" : {
                    "type" : "string",
                    "description" : "The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                  },
                  "filename_suffix" : {
                    "type" : "string",
                    "description" : "The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                  },
                  "label" : {
                    "type" : "string",
                    "description" : "The name of the transformation"
                  },
                  "operations" : {
                    "type" : "object",
                    "properties" : {
                      "parameters" : {
                        "type" : "object",
                        "properties" : {
                          "colorspace" : {
                            "type" : "string"
                          },
                          "height" : {
                            "type" : "integer"
                          },
                          "quality" : {
                            "type" : "integer"
                          },
                          "ratio" : {
                            "type" : "integer"
                          },
                          "resolution-unit" : {
                            "type" : "string"
                          },
                          "resolution-x" : {
                            "type" : "integer"
                          },
                          "resolution-y" : {
                            "type" : "integer"
                          },
                          "width" : {
                            "type" : "integer"
                          }
                        }
                      },
                      "type" : {
                        "type" : "string"
                      }
                    },
                    "description" : "The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>."
                  },
                  "source" : {
                    "required" : [ "attribute", "channel", "locale" ],
                    "type" : "object",
                    "properties" : {
                      "attribute" : {
                        "type" : "string"
                      },
                      "channel" : {
                        "type" : "string"
                      },
                      "locale" : {
                        "type" : "string"
                      }
                    },
                    "description" : "The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>."
                  },
                  "target" : {
                    "required" : [ "attribute", "channel", "locale" ],
                    "type" : "object",
                    "properties" : {
                      "attribute" : {
                        "type" : "string"
                      },
                      "channel" : {
                        "type" : "string"
                      },
                      "locale" : {
                        "type" : "string"
                      }
                    },
                    "description" : "The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>."
                  }
                }
              }
            }
          },
          "example" : {
            "attribute_as_main_media" : "main_image",
            "code" : "model_pictures",
            "labels" : {
              "en_US" : "Model pictures",
              "fr_FR" : "Photographies en pied"
            },
            "naming_convention" : {
              "abort_asset_creation_on_error" : true,
              "pattern" : "/(?P<product_ref>.*)-.*/",
              "source" : {
                "property" : "code"
              }
            },
            "product_link_rules" : [ {
              "assign_assets_to" : [ {
                "attribute" : "model_pictures",
                "mode" : "replace"
              } ],
              "product_selections" : [ {
                "field" : "sku",
                "operator" : "EQUALS",
                "value" : "{{product_ref}}"
              } ]
            } ],
            "transformations" : [ {
              "filename_suffix" : "_thumbnailBW",
              "label" : "Thumbnail plus black and white transformation",
              "operations" : [ {
                "parameters" : {
                  "height" : 150,
                  "width" : 150
                },
                "type" : "thumbnail"
              }, {
                "parameters" : {
                  "colorspace" : "grey"
                },
                "type" : "colorspace"
              } ],
              "source" : {
                "attribute" : "main_image"
              },
              "target" : {
                "attribute" : "thumbnail"
              }
            } ]
          }
        } ]
      },
      "AssetItemList" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the resource"
                  }
                }
              }
            }
          }
        }
      },
      "AssetList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Code of the asset"
            },
            "created" : {
              "type" : "string",
              "description" : "Date of creation",
              "format" : "dateTime"
            },
            "updated" : {
              "type" : "string",
              "description" : "Date of the last update",
              "format" : "dateTime"
            },
            "values" : {
              "type" : "object",
              "properties" : {
                "attributeCode" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "channel" : {
                        "type" : "string",
                        "description" : "Channel code of the asset attribute value"
                      },
                      "data" : {
                        "type" : "object",
                        "description" : "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                      },
                      "locale" : {
                        "type" : "string",
                        "description" : "Locale code of the asset attribute value"
                      }
                    }
                  }
                }
              },
              "description" : "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details."
            }
          },
          "example" : {
            "code" : "sku_54628_picture1",
            "created" : "2021-05-31T09:23:34+00:00",
            "updated" : "2021-05-31T09:23:34+00:00",
            "values" : {
              "end_of_use_date" : [ {
                "data" : "02/03/2021"
              } ],
              "main_colors" : [ {
                "data" : [ "red", "purple" ]
              } ],
              "media_preview" : [ {
                "data" : "sku_54628_picture1.jpg"
              } ],
              "model_wears_size" : [ {
                "data" : "s"
              } ],
              "photographer" : [ {
                "data" : "ben_levy"
              } ]
            }
          }
        } ]
      },
      "AssociationType" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Association type code"
          },
          "is_quantified" : {
            "type" : "boolean",
            "description" : "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
            "default" : false
          },
          "is_two_way" : {
            "type" : "boolean",
            "description" : "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
            "default" : false
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Association type label for the locale `localeCode`"
              }
            },
            "description" : "Association type labels for each locale"
          }
        },
        "example" : {
          "code" : "upsell",
          "is_quantified" : false,
          "is_two_way" : false,
          "labels" : {
            "en_US" : "Upsell",
            "fr_FR" : "Vente incitative"
          }
        }
      },
      "AssociationTypeList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Association type code"
            },
            "is_quantified" : {
              "type" : "boolean",
              "description" : "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
              "default" : false
            },
            "is_two_way" : {
              "type" : "boolean",
              "description" : "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
              "default" : false
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Association type label for the locale `localeCode`"
                }
              },
              "description" : "Association type labels for each locale"
            }
          },
          "example" : {
            "code" : "upsell",
            "is_quantified" : false,
            "is_two_way" : false,
            "labels" : {
              "en_US" : "Upsell",
              "fr_FR" : "Vente incitative"
            }
          }
        } ]
      },
      "Attribute" : {
        "required" : [ "code", "group", "type" ],
        "type" : "object",
        "properties" : {
          "allowed_extensions" : {
            "type" : "array",
            "description" : "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
            "items" : {
              "type" : "string"
            }
          },
          "available_locales" : {
            "type" : "array",
            "description" : "To make the attribute locale specfic, specify here for which locales it is specific",
            "items" : {
              "type" : "string"
            }
          },
          "code" : {
            "type" : "string",
            "description" : "Attribute code"
          },
          "date_max" : {
            "type" : "string",
            "description" : "Maximum date allowed when the attribute type is `pim_catalog_date`",
            "format" : "date-time"
          },
          "date_min" : {
            "type" : "string",
            "description" : "Minimum date allowed when the attribute type is `pim_catalog_date`",
            "format" : "date-time"
          },
          "decimals_allowed" : {
            "type" : "boolean",
            "description" : "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
          },
          "default_metric_unit" : {
            "type" : "string",
            "description" : "Default metric unit when the attribute type is `pim_catalog_metric`"
          },
          "default_value" : {
            "type" : "boolean",
            "description" : "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)"
          },
          "group" : {
            "type" : "string",
            "description" : "Attribute group"
          },
          "group_labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Group label for the locale `localeCode`"
              }
            },
            "description" : "Group labels for each locale"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Attribute label for the locale `localeCode`"
              }
            },
            "description" : "Attribute labels for each locale"
          },
          "localizable" : {
            "type" : "boolean",
            "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
            "default" : false
          },
          "max_characters" : {
            "type" : "integer",
            "description" : "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`"
          },
          "max_file_size" : {
            "type" : "string",
            "description" : "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`"
          },
          "metric_family" : {
            "type" : "string",
            "description" : "Metric family when the attribute type is `pim_catalog_metric`"
          },
          "negative_allowed" : {
            "type" : "boolean",
            "description" : "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`"
          },
          "number_max" : {
            "type" : "string",
            "description" : "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
          },
          "number_min" : {
            "type" : "string",
            "description" : "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
          },
          "reference_data_name" : {
            "type" : "string",
            "description" : "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`"
          },
          "scopable" : {
            "type" : "boolean",
            "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
            "default" : false
          },
          "sort_order" : {
            "type" : "integer",
            "description" : "Order of the attribute in its group"
          },
          "table_configuration" : {
            "type" : "array",
            "description" : "Configuration of the Table attribute (columns)",
            "items" : {
              "required" : [ "code", "data_type" ],
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "string",
                  "description" : "Column code"
                },
                "data_type" : {
                  "type" : "string",
                  "description" : "Column data type",
                  "enum" : [ "select", "text", "number", "boolean" ]
                },
                "is_required_for_completeness" : {
                  "type" : "boolean",
                  "description" : "Defines if the column should be entirely filled for the attribute to be considered complete",
                  "default" : false
                },
                "labels" : {
                  "type" : "object",
                  "properties" : {
                    "localeCode" : {
                      "type" : "string",
                      "description" : "Column label for the locale `localeCode`"
                    }
                  },
                  "description" : "Column labels for each locale"
                },
                "validations" : {
                  "type" : "object",
                  "properties" : {
                    "decimals_allowed" : {
                      "type" : "boolean",
                      "description" : "whether the value of a numeric cell can hold a decimal part"
                    },
                    "max" : {
                      "type" : "number",
                      "description" : "maximum value of a numeric cell"
                    },
                    "max_length" : {
                      "type" : "number",
                      "description" : "maximum length of a text cell"
                    },
                    "min" : {
                      "type" : "number",
                      "description" : "minimum value of a numeric cell"
                    }
                  },
                  "description" : "User defined validation constraints on the cell content"
                }
              }
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
            "enum" : [ "pim_catalog_identifier", "pim_catalog_metric", "pim_catalog_number", "pim_catalog_reference_data_multi_select", "pim_catalog_reference_data_simple_select", "pim_catalog_simpleselect", "pim_catalog_multiselect", "pim_catalog_date", "pim_catalog_textarea", "pim_catalog_text", "pim_catalog_file", "pim_catalog_image", "pim_catalog_price_collection", "pim_catalog_boolean", "akeneo_reference_entity", "akeneo_reference_entity_collection", "pim_catalog_asset_collection" ]
          },
          "unique" : {
            "type" : "boolean",
            "description" : "Whether two values for the attribute cannot be the same"
          },
          "useable_as_grid_filter" : {
            "type" : "boolean",
            "description" : "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
          },
          "validation_regexp" : {
            "type" : "string",
            "description" : "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
          },
          "validation_rule" : {
            "type" : "string",
            "description" : "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
          },
          "wysiwyg_enabled" : {
            "type" : "boolean",
            "description" : "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`"
          }
        },
        "example" : {
          "allowed_extensions" : [ ],
          "available_locales" : [ ],
          "code" : "release_date",
          "date_max" : "2017-08-08T22:00:00",
          "date_min" : "2017-06-28T08:00:00",
          "group" : "marketing",
          "group_labels" : {
            "en_US" : "Marketing",
            "fr_FR" : "Marketing"
          },
          "labels" : {
            "en_US" : "Sale date",
            "fr_FR" : "Date des soldes"
          },
          "localizable" : false,
          "scopable" : false,
          "sort_order" : 1,
          "type" : "pim_catalog_date",
          "unique" : false,
          "useable_as_grid_filter" : true
        }
      },
      "AttributeGroup" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "array",
            "description" : "Attribute codes that compose the attribute group",
            "items" : {
              "type" : "string"
            }
          },
          "code" : {
            "type" : "string",
            "description" : "Attribute group code"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Attribute group label for the locale `localeCode`"
              }
            },
            "description" : "Attribute group labels for each locale"
          },
          "sort_order" : {
            "type" : "integer",
            "description" : "Attribute group order among other attribute groups"
          }
        },
        "example" : {
          "attributes" : [ "sku", "name", "description", "response_time", "release_date", "price" ],
          "code" : "marketing",
          "labels" : {
            "en_US" : "Marketing",
            "fr_FR" : "Marketing"
          },
          "sort_order" : 4
        }
      },
      "AttributeGroupList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "attributes" : {
              "type" : "array",
              "description" : "Attribute codes that compose the attribute group",
              "items" : {
                "type" : "string"
              }
            },
            "code" : {
              "type" : "string",
              "description" : "Attribute group code"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Attribute group label for the locale `localeCode`"
                }
              },
              "description" : "Attribute group labels for each locale"
            },
            "sort_order" : {
              "type" : "integer",
              "description" : "Attribute group order among other attribute groups"
            }
          },
          "example" : {
            "attributes" : [ "sku", "name", "description", "response_time", "release_date", "price" ],
            "code" : "marketing",
            "labels" : {
              "en_US" : "Marketing",
              "fr_FR" : "Marketing"
            },
            "sort_order" : 4
          }
        } ]
      },
      "AttributeList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code", "group", "type" ],
          "type" : "object",
          "properties" : {
            "allowed_extensions" : {
              "type" : "array",
              "description" : "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
              "items" : {
                "type" : "string"
              }
            },
            "available_locales" : {
              "type" : "array",
              "description" : "To make the attribute locale specfic, specify here for which locales it is specific",
              "items" : {
                "type" : "string"
              }
            },
            "code" : {
              "type" : "string",
              "description" : "Attribute code"
            },
            "date_max" : {
              "type" : "string",
              "description" : "Maximum date allowed when the attribute type is `pim_catalog_date`",
              "format" : "date-time"
            },
            "date_min" : {
              "type" : "string",
              "description" : "Minimum date allowed when the attribute type is `pim_catalog_date`",
              "format" : "date-time"
            },
            "decimals_allowed" : {
              "type" : "boolean",
              "description" : "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
            },
            "default_metric_unit" : {
              "type" : "string",
              "description" : "Default metric unit when the attribute type is `pim_catalog_metric`"
            },
            "default_value" : {
              "type" : "boolean",
              "description" : "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)"
            },
            "group" : {
              "type" : "string",
              "description" : "Attribute group"
            },
            "group_labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Group label for the locale `localeCode`"
                }
              },
              "description" : "Group labels for each locale"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Attribute label for the locale `localeCode`"
                }
              },
              "description" : "Attribute labels for each locale"
            },
            "localizable" : {
              "type" : "boolean",
              "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
              "default" : false
            },
            "max_characters" : {
              "type" : "integer",
              "description" : "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`"
            },
            "max_file_size" : {
              "type" : "string",
              "description" : "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`"
            },
            "metric_family" : {
              "type" : "string",
              "description" : "Metric family when the attribute type is `pim_catalog_metric`"
            },
            "negative_allowed" : {
              "type" : "boolean",
              "description" : "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`"
            },
            "number_max" : {
              "type" : "string",
              "description" : "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
            },
            "number_min" : {
              "type" : "string",
              "description" : "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
            },
            "reference_data_name" : {
              "type" : "string",
              "description" : "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`"
            },
            "scopable" : {
              "type" : "boolean",
              "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
              "default" : false
            },
            "sort_order" : {
              "type" : "integer",
              "description" : "Order of the attribute in its group"
            },
            "table_configuration" : {
              "type" : "array",
              "description" : "Configuration of the Table attribute (columns)",
              "items" : {
                "required" : [ "code", "data_type" ],
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Column code"
                  },
                  "data_type" : {
                    "type" : "string",
                    "description" : "Column data type",
                    "enum" : [ "select", "text", "number", "boolean" ]
                  },
                  "is_required_for_completeness" : {
                    "type" : "boolean",
                    "description" : "Defines if the column should be entirely filled for the attribute to be considered complete",
                    "default" : false
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Column label for the locale `localeCode`"
                      }
                    },
                    "description" : "Column labels for each locale"
                  },
                  "validations" : {
                    "type" : "object",
                    "properties" : {
                      "decimals_allowed" : {
                        "type" : "boolean",
                        "description" : "whether the value of a numeric cell can hold a decimal part"
                      },
                      "max" : {
                        "type" : "number",
                        "description" : "maximum value of a numeric cell"
                      },
                      "max_length" : {
                        "type" : "number",
                        "description" : "maximum length of a text cell"
                      },
                      "min" : {
                        "type" : "number",
                        "description" : "minimum value of a numeric cell"
                      }
                    },
                    "description" : "User defined validation constraints on the cell content"
                  }
                }
              }
            },
            "type" : {
              "type" : "string",
              "description" : "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
              "enum" : [ "pim_catalog_identifier", "pim_catalog_metric", "pim_catalog_number", "pim_catalog_reference_data_multi_select", "pim_catalog_reference_data_simple_select", "pim_catalog_simpleselect", "pim_catalog_multiselect", "pim_catalog_date", "pim_catalog_textarea", "pim_catalog_text", "pim_catalog_file", "pim_catalog_image", "pim_catalog_price_collection", "pim_catalog_boolean", "akeneo_reference_entity", "akeneo_reference_entity_collection", "pim_catalog_asset_collection" ]
            },
            "unique" : {
              "type" : "boolean",
              "description" : "Whether two values for the attribute cannot be the same"
            },
            "useable_as_grid_filter" : {
              "type" : "boolean",
              "description" : "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
            },
            "validation_regexp" : {
              "type" : "string",
              "description" : "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
            },
            "validation_rule" : {
              "type" : "string",
              "description" : "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`"
            },
            "wysiwyg_enabled" : {
              "type" : "boolean",
              "description" : "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`"
            }
          },
          "example" : {
            "allowed_extensions" : [ ],
            "available_locales" : [ ],
            "code" : "release_date",
            "date_max" : "2017-08-08T22:00:00",
            "date_min" : "2017-06-28T08:00:00",
            "group" : "marketing",
            "group_labels" : {
              "en_US" : "Marketing",
              "fr_FR" : "Marketing"
            },
            "labels" : {
              "en_US" : "Sale date",
              "fr_FR" : "Date des soldes"
            },
            "localizable" : false,
            "scopable" : false,
            "sort_order" : 1,
            "type" : "pim_catalog_date",
            "unique" : false,
            "useable_as_grid_filter" : true
          }
        } ]
      },
      "AttributeOption" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "attribute" : {
            "type" : "string",
            "description" : "Code of attribute related to the attribute option"
          },
          "code" : {
            "type" : "string",
            "description" : "Code of option"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Attribute option label for the locale `localeCode`"
              }
            },
            "description" : "Attribute option labels for each locale"
          },
          "sort_order" : {
            "type" : "integer",
            "description" : "Order of attribute option"
          }
        },
        "example" : {
          "attribute" : "a_simple_select",
          "code" : "black",
          "labels" : {
            "en_US" : "Black",
            "fr_FR" : "Noir"
          },
          "sort_order" : 2
        }
      },
      "AttributeOptionList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "attribute" : {
              "type" : "string",
              "description" : "Code of attribute related to the attribute option"
            },
            "code" : {
              "type" : "string",
              "description" : "Code of option"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Attribute option label for the locale `localeCode`"
                }
              },
              "description" : "Attribute option labels for each locale"
            },
            "sort_order" : {
              "type" : "integer",
              "description" : "Order of attribute option"
            }
          },
          "example" : {
            "attribute" : "a_simple_select",
            "code" : "black",
            "labels" : {
              "en_US" : "Black",
              "fr_FR" : "Noir"
            },
            "sort_order" : 2
          }
        } ]
      },
      "Category" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Category code"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Category label for the locale `localeCode`"
              }
            },
            "description" : "Category labels for each locale"
          },
          "parent" : {
            "type" : "string",
            "description" : "Category code of the parent's category",
            "default" : "null"
          },
          "position" : {
            "type" : "integer",
            "description" : "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")"
          },
          "updated" : {
            "type" : "string",
            "description" : "Date of the last update",
            "format" : "dateTime"
          },
          "values" : {
            "type" : "object",
            "properties" : {
              "attributeCode|attributeUuid|channelCode|localeCode" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "attribute_code" : {
                      "type" : "string",
                      "description" : "The attribute code with its uuid (attributeCode|attributeUuid)"
                    },
                    "channel" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                    },
                    "data" : {
                      "type" : "object",
                      "description" : "Attribute value"
                    },
                    "locale" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "The attribute type"
                    }
                  }
                }
              }
            },
            "description" : "Attribute values"
          }
        },
        "example" : {
          "code" : "winter_collection",
          "labels" : {
            "en_US" : "Winter collection",
            "fr_FR" : "Collection hiver"
          },
          "position" : 1,
          "updated" : "2021-05-22T12:48:00+02:00",
          "values" : {
            "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US" : {
              "attribute_code" : "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26",
              "channel" : "ecommerce",
              "data" : "<p>Winter collection description</p>\n",
              "locale" : "en_US",
              "type" : "textarea"
            }
          }
        }
      },
      "CategoryList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Category code"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Category label for the locale `localeCode`"
                }
              },
              "description" : "Category labels for each locale"
            },
            "parent" : {
              "type" : "string",
              "description" : "Category code of the parent's category",
              "default" : "null"
            },
            "position" : {
              "type" : "integer",
              "description" : "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")"
            },
            "updated" : {
              "type" : "string",
              "description" : "Date of the last update",
              "format" : "dateTime"
            },
            "values" : {
              "type" : "object",
              "properties" : {
                "attributeCode|attributeUuid|channelCode|localeCode" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "attribute_code" : {
                        "type" : "string",
                        "description" : "The attribute code with its uuid (attributeCode|attributeUuid)"
                      },
                      "channel" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                      },
                      "data" : {
                        "type" : "object",
                        "description" : "Attribute value"
                      },
                      "locale" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "The attribute type"
                      }
                    }
                  }
                }
              },
              "description" : "Attribute values"
            }
          },
          "example" : {
            "code" : "winter_collection",
            "labels" : {
              "en_US" : "Winter collection",
              "fr_FR" : "Collection hiver"
            },
            "position" : 1,
            "updated" : "2021-05-22T12:48:00+02:00",
            "values" : {
              "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US" : {
                "attribute_code" : "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26",
                "channel" : "ecommerce",
                "data" : "<p>Winter collection description</p>\n",
                "locale" : "en_US",
                "type" : "textarea"
              }
            }
          }
        } ]
      },
      "Channel" : {
        "required" : [ "category_tree", "code", "currencies", "locales" ],
        "type" : "object",
        "properties" : {
          "category_tree" : {
            "type" : "string",
            "description" : "Code of the category tree linked to the channel"
          },
          "code" : {
            "type" : "string",
            "description" : "Channel code"
          },
          "conversion_units" : {
            "type" : "object",
            "properties" : {
              "attributeCode" : {
                "type" : "string",
                "description" : "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
              }
            },
            "description" : "Units to which the given metric attributes should be converted when exporting products"
          },
          "currencies" : {
            "type" : "array",
            "description" : "Codes of activated currencies for the channel",
            "items" : {
              "type" : "string"
            }
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Channel label for the locale `localeCode`"
              }
            },
            "description" : "Channel labels for each locale"
          },
          "locales" : {
            "type" : "array",
            "description" : "Codes of activated locales for the channel",
            "items" : {
              "type" : "string"
            }
          }
        },
        "example" : {
          "category_tree" : "master",
          "code" : "ecommerce",
          "conversion_units" : {
            "weight" : "KILOGRAM"
          },
          "currencies" : [ "USD", "EUR" ],
          "labels" : {
            "de_DE" : "Ecommerce",
            "en_US" : "Ecommerce",
            "fr_FR" : "Ecommerce"
          },
          "locales" : [ "de_DE", "en_US", "fr_FR" ]
        }
      },
      "ChannelList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "category_tree", "code", "currencies", "locales" ],
          "type" : "object",
          "properties" : {
            "category_tree" : {
              "type" : "string",
              "description" : "Code of the category tree linked to the channel"
            },
            "code" : {
              "type" : "string",
              "description" : "Channel code"
            },
            "conversion_units" : {
              "type" : "object",
              "properties" : {
                "attributeCode" : {
                  "type" : "string",
                  "description" : "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                }
              },
              "description" : "Units to which the given metric attributes should be converted when exporting products"
            },
            "currencies" : {
              "type" : "array",
              "description" : "Codes of activated currencies for the channel",
              "items" : {
                "type" : "string"
              }
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Channel label for the locale `localeCode`"
                }
              },
              "description" : "Channel labels for each locale"
            },
            "locales" : {
              "type" : "array",
              "description" : "Codes of activated locales for the channel",
              "items" : {
                "type" : "string"
              }
            }
          },
          "example" : {
            "category_tree" : "master",
            "code" : "ecommerce",
            "conversion_units" : {
              "weight" : "KILOGRAM"
            },
            "currencies" : [ "USD", "EUR" ],
            "labels" : {
              "de_DE" : "Ecommerce",
              "en_US" : "Ecommerce",
              "fr_FR" : "Ecommerce"
            },
            "locales" : [ "de_DE", "en_US", "fr_FR" ]
          }
        } ]
      },
      "Currency" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Currency code"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the currency is enabled"
          }
        },
        "example" : {
          "code" : "EUR",
          "enabled" : true
        }
      },
      "CurrencyList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Currency code"
            },
            "enabled" : {
              "type" : "boolean",
              "description" : "Whether the currency is enabled"
            }
          },
          "example" : {
            "code" : "EUR",
            "enabled" : true
          }
        } ]
      },
      "DeprecatedAsset" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "categories" : {
            "type" : "array",
            "description" : "Codes of the PAM asset categories in which the asset is classified",
            "items" : {
              "type" : "string"
            }
          },
          "code" : {
            "type" : "string",
            "description" : "PAM asset code"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the PAM asset",
            "default" : "null"
          },
          "end_of_use" : {
            "type" : "string",
            "description" : "Date on which the PAM asset expire",
            "format" : "dateTime",
            "default" : "null"
          },
          "localizable" : {
            "type" : "boolean",
            "description" : "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
            "default" : false
          },
          "reference_files" : {
            "type" : "array",
            "description" : "Reference files of the PAM asset",
            "items" : {
              "type" : "object",
              "properties" : {
                "_link" : {
                  "type" : "object",
                  "properties" : {
                    "download" : {
                      "type" : "object",
                      "properties" : {
                        "href" : {
                          "type" : "string",
                          "description" : "URI to download the reference file"
                        }
                      }
                    },
                    "self" : {
                      "type" : "object",
                      "properties" : {
                        "href" : {
                          "type" : "string",
                          "description" : "URI of the reference file entity"
                        }
                      }
                    }
                  },
                  "description" : "Links to get and download the reference file"
                },
                "code" : {
                  "type" : "string",
                  "description" : "Code of the reference file"
                },
                "locale" : {
                  "type" : "string",
                  "description" : "Locale code of the reference file"
                }
              }
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "Tags of the PAM asset",
            "items" : {
              "type" : "string"
            }
          },
          "variation_files" : {
            "type" : "array",
            "description" : "Variations of the PAM asset",
            "items" : {
              "type" : "object",
              "properties" : {
                "_link" : {
                  "type" : "object",
                  "properties" : {
                    "download" : {
                      "type" : "object",
                      "properties" : {
                        "href" : {
                          "type" : "string",
                          "description" : "URI to download the variation file"
                        }
                      }
                    },
                    "self" : {
                      "type" : "object",
                      "properties" : {
                        "href" : {
                          "type" : "string",
                          "description" : "URI of the variation entity"
                        }
                      }
                    }
                  },
                  "description" : "Links to get and download the variation file"
                },
                "code" : {
                  "type" : "string",
                  "description" : "Code of the variation"
                },
                "locale" : {
                  "type" : "string",
                  "description" : "Locale code of the variation"
                },
                "scope" : {
                  "type" : "string",
                  "description" : "Channel code of the variation"
                }
              }
            }
          }
        },
        "example" : {
          "categories" : [ "tshirts_assets" ],
          "code" : "tshirt_artemis_main_picture",
          "description" : "The main picture of the Artemis t-shirt",
          "end_of_use" : "2019-09-01T00:00:00+0200",
          "localizable" : false,
          "reference_files" : [ {
            "_link" : {
              "download" : {
                "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
              },
              "self" : {
                "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
              }
            },
            "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
          } ],
          "tags" : [ "tshirts", "red", "summer" ],
          "variation_files" : [ {
            "_link" : {
              "download" : {
                "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
              },
              "self" : {
                "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
              }
            },
            "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
            "scope" : "e_commerce"
          }, {
            "_link" : {
              "download" : {
                "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
              },
              "self" : {
                "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
              }
            },
            "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg",
            "scope" : "print"
          } ]
        }
      },
      "DeprecatedAssetCategory" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "PAM asset category code"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "PAM asset category label for the locale `localeCode`"
              }
            },
            "description" : "PAM asset category labels for each locale"
          },
          "parent" : {
            "type" : "string",
            "description" : "PAM ssset category code of the parent's asset category",
            "default" : "null"
          }
        },
        "example" : {
          "code" : "front_views",
          "labels" : {
            "en_US" : "Front views",
            "fr_FR" : "Vues de face"
          },
          "parent" : "pictures"
        }
      },
      "DeprecatedAssetCategoryList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "PAM asset category code"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "PAM asset category label for the locale `localeCode`"
                }
              },
              "description" : "PAM asset category labels for each locale"
            },
            "parent" : {
              "type" : "string",
              "description" : "PAM ssset category code of the parent's asset category",
              "default" : "null"
            }
          },
          "example" : {
            "code" : "front_views",
            "labels" : {
              "en_US" : "Front views",
              "fr_FR" : "Vues de face"
            },
            "parent" : "pictures"
          }
        } ]
      },
      "DeprecatedAssetList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "categories" : {
              "type" : "array",
              "description" : "Codes of the PAM asset categories in which the asset is classified",
              "items" : {
                "type" : "string"
              }
            },
            "code" : {
              "type" : "string",
              "description" : "PAM asset code"
            },
            "description" : {
              "type" : "string",
              "description" : "Description of the PAM asset",
              "default" : "null"
            },
            "end_of_use" : {
              "type" : "string",
              "description" : "Date on which the PAM asset expire",
              "format" : "dateTime",
              "default" : "null"
            },
            "localizable" : {
              "type" : "boolean",
              "description" : "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
              "default" : false
            },
            "reference_files" : {
              "type" : "array",
              "description" : "Reference files of the PAM asset",
              "items" : {
                "type" : "object",
                "properties" : {
                  "_link" : {
                    "type" : "object",
                    "properties" : {
                      "download" : {
                        "type" : "object",
                        "properties" : {
                          "href" : {
                            "type" : "string",
                            "description" : "URI to download the reference file"
                          }
                        }
                      },
                      "self" : {
                        "type" : "object",
                        "properties" : {
                          "href" : {
                            "type" : "string",
                            "description" : "URI of the reference file entity"
                          }
                        }
                      }
                    },
                    "description" : "Links to get and download the reference file"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Code of the reference file"
                  },
                  "locale" : {
                    "type" : "string",
                    "description" : "Locale code of the reference file"
                  }
                }
              }
            },
            "tags" : {
              "type" : "array",
              "description" : "Tags of the PAM asset",
              "items" : {
                "type" : "string"
              }
            },
            "variation_files" : {
              "type" : "array",
              "description" : "Variations of the PAM asset",
              "items" : {
                "type" : "object",
                "properties" : {
                  "_link" : {
                    "type" : "object",
                    "properties" : {
                      "download" : {
                        "type" : "object",
                        "properties" : {
                          "href" : {
                            "type" : "string",
                            "description" : "URI to download the variation file"
                          }
                        }
                      },
                      "self" : {
                        "type" : "object",
                        "properties" : {
                          "href" : {
                            "type" : "string",
                            "description" : "URI of the variation entity"
                          }
                        }
                      }
                    },
                    "description" : "Links to get and download the variation file"
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "Code of the variation"
                  },
                  "locale" : {
                    "type" : "string",
                    "description" : "Locale code of the variation"
                  },
                  "scope" : {
                    "type" : "string",
                    "description" : "Channel code of the variation"
                  }
                }
              }
            }
          },
          "example" : {
            "categories" : [ "tshirts_assets" ],
            "code" : "tshirt_artemis_main_picture",
            "description" : "The main picture of the Artemis t-shirt",
            "end_of_use" : "2019-09-01T00:00:00+0200",
            "localizable" : false,
            "reference_files" : [ {
              "_link" : {
                "download" : {
                  "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                },
                "self" : {
                  "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                }
              },
              "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
            } ],
            "tags" : [ "tshirts", "red", "summer" ],
            "variation_files" : [ {
              "_link" : {
                "download" : {
                  "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                },
                "self" : {
                  "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                }
              },
              "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
              "scope" : "e_commerce"
            }, {
              "_link" : {
                "download" : {
                  "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                },
                "self" : {
                  "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                }
              },
              "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg",
              "scope" : "print"
            } ]
          }
        } ]
      },
      "DeprecatedAssetReferenceFile" : {
        "type" : "object",
        "properties" : {
          "_link" : {
            "type" : "object",
            "properties" : {
              "download" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI to download the reference file"
                  }
                }
              }
            },
            "description" : "Links to get and download the reference file"
          },
          "code" : {
            "type" : "string",
            "description" : "Code of the PAM asset reference file"
          },
          "locale" : {
            "type" : "string",
            "description" : "Locale of the PAM asset reference file, equal to `null` if the asset is not localizable"
          }
        },
        "example" : {
          "_link" : {
            "download" : {
              "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
            }
          },
          "code" : "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
        }
      },
      "DeprecatedAssetReferenceFileUploadWarning" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "channel" : {
                  "type" : "string",
                  "description" : "Channel for which the variation file generation failed"
                },
                "locale" : {
                  "type" : "string",
                  "description" : "Locale for which the variation file generation failed"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining why the variation file generation failed"
                }
              }
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Message explaining the warning"
          }
        }
      },
      "DeprecatedAssetTag" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "PAM asset tag code"
          }
        },
        "example" : {
          "code" : "tshirt"
        }
      },
      "DeprecatedAssetTagList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "PAM asset tag code"
            }
          },
          "example" : {
            "code" : "tshirt"
          }
        } ]
      },
      "DeprecatedAssetVariationFile" : {
        "type" : "object",
        "properties" : {
          "_link" : {
            "type" : "object",
            "properties" : {
              "download" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI to download the variation file"
                  }
                }
              }
            },
            "description" : "Links to get and download the reference file"
          },
          "code" : {
            "type" : "string",
            "description" : "Code of the PAM asset variation file"
          },
          "locale" : {
            "type" : "string",
            "description" : "Locale of the PAM asset variation file, equal to `null` if the asset is not localizable"
          },
          "scope" : {
            "type" : "string",
            "description" : "Channel of the PAM asset variation file"
          }
        },
        "example" : {
          "_link" : {
            "download" : {
              "href" : "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
            }
          },
          "code" : "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
          "scope" : "ecommerce"
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "HTTP status code"
          },
          "message" : {
            "type" : "string",
            "description" : "Message explaining the error"
          }
        }
      },
      "ErrorByLine" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Resource code, only filled when the resource is not a product"
          },
          "identifier" : {
            "type" : "string",
            "description" : "Resource identifier, only filled when the resource is a product"
          },
          "line" : {
            "type" : "integer",
            "description" : "Line number"
          },
          "message" : {
            "type" : "string",
            "description" : "Message explaining the error"
          },
          "status_code" : {
            "type" : "integer",
            "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
          }
        }
      },
      "ErrorByLineProductUuid" : {
        "type" : "object",
        "properties" : {
          "line" : {
            "type" : "integer",
            "description" : "Line number"
          },
          "message" : {
            "type" : "string",
            "description" : "Message explaining the error"
          },
          "status_code" : {
            "type" : "integer",
            "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
          },
          "uuid" : {
            "type" : "string",
            "description" : "Product uuid"
          }
        }
      },
      "ErrorByObject" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Resource code"
            },
            "message" : {
              "type" : "string",
              "description" : "Message explaining the error"
            },
            "status_code" : {
              "type" : "integer",
              "description" : "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
            }
          }
        }
      },
      "Family" : {
        "required" : [ "attribute_as_label", "code" ],
        "type" : "object",
        "properties" : {
          "attribute_as_image" : {
            "type" : "string",
            "description" : "Attribute code used as the main picture in the user interface (only since v2.0)",
            "default" : "null"
          },
          "attribute_as_label" : {
            "type" : "string",
            "description" : "Attribute code used as label"
          },
          "attribute_requirements" : {
            "type" : "object",
            "properties" : {
              "channelCode" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "description" : "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                }
              }
            },
            "description" : "Attributes codes of the family that are required for the completeness calculation for each channel"
          },
          "attributes" : {
            "type" : "array",
            "description" : "Attributes codes that compose the family",
            "items" : {
              "type" : "string"
            }
          },
          "code" : {
            "type" : "string",
            "description" : "Family code"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Family label for the locale `localeCode`"
              }
            },
            "description" : "Family labels for each locale"
          }
        },
        "example" : {
          "attribute_as_image" : "picture",
          "attribute_as_label" : "name",
          "attribute_requirements" : {
            "ecommerce" : [ "sku", "name", "description", "price", "color" ],
            "tablet" : [ "sku", "name", "description", "price" ]
          },
          "attributes" : [ "sku", "name", "description", "price", "color", "picture" ],
          "code" : "caps",
          "labels" : {
            "en_US" : "Caps",
            "fr_FR" : "Casquettes"
          }
        }
      },
      "FamilyList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "attribute_as_label", "code" ],
          "type" : "object",
          "properties" : {
            "attribute_as_image" : {
              "type" : "string",
              "description" : "Attribute code used as the main picture in the user interface (only since v2.0)",
              "default" : "null"
            },
            "attribute_as_label" : {
              "type" : "string",
              "description" : "Attribute code used as label"
            },
            "attribute_requirements" : {
              "type" : "object",
              "properties" : {
                "channelCode" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "description" : "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                  }
                }
              },
              "description" : "Attributes codes of the family that are required for the completeness calculation for each channel"
            },
            "attributes" : {
              "type" : "array",
              "description" : "Attributes codes that compose the family",
              "items" : {
                "type" : "string"
              }
            },
            "code" : {
              "type" : "string",
              "description" : "Family code"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Family label for the locale `localeCode`"
                }
              },
              "description" : "Family labels for each locale"
            }
          },
          "example" : {
            "attribute_as_image" : "picture",
            "attribute_as_label" : "name",
            "attribute_requirements" : {
              "ecommerce" : [ "sku", "name", "description", "price", "color" ],
              "tablet" : [ "sku", "name", "description", "price" ]
            },
            "attributes" : [ "sku", "name", "description", "price", "color", "picture" ],
            "code" : "caps",
            "labels" : {
              "en_US" : "Caps",
              "fr_FR" : "Casquettes"
            }
          }
        } ]
      },
      "FamilyVariant" : {
        "required" : [ "code", "variant_attribute_sets" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Family variant code"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Family variant label for the locale `localeCode`"
              }
            },
            "description" : "Family variant labels for each locale"
          },
          "variant_attribute_sets" : {
            "type" : "array",
            "description" : "Attributes distribution according to the enrichment level",
            "items" : {
              "required" : [ "axes", "level" ],
              "type" : "object",
              "properties" : {
                "attributes" : {
                  "type" : "array",
                  "description" : "Codes of attributes bind to this enrichment level",
                  "items" : {
                    "type" : "string"
                  }
                },
                "axes" : {
                  "type" : "array",
                  "description" : "Codes of attributes used as variant axes",
                  "items" : {
                    "type" : "string"
                  }
                },
                "level" : {
                  "type" : "integer",
                  "description" : "Enrichment level"
                }
              },
              "description" : "Enrichment level"
            }
          }
        },
        "example" : {
          "code" : "shoesVariant",
          "labels" : {
            "en_US" : "Shoes variant",
            "fr_FR" : "Variante de chaussures"
          },
          "variant_attribute_sets" : [ {
            "attributes" : [ "color", "material" ],
            "axes" : [ "color" ],
            "level" : 1
          }, {
            "attributes" : [ "sku", "size" ],
            "axes" : [ "size" ],
            "level" : 2
          } ]
        }
      },
      "FamilyVariantList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code", "variant_attribute_sets" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Family variant code"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Family variant label for the locale `localeCode`"
                }
              },
              "description" : "Family variant labels for each locale"
            },
            "variant_attribute_sets" : {
              "type" : "array",
              "description" : "Attributes distribution according to the enrichment level",
              "items" : {
                "required" : [ "axes", "level" ],
                "type" : "object",
                "properties" : {
                  "attributes" : {
                    "type" : "array",
                    "description" : "Codes of attributes bind to this enrichment level",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "axes" : {
                    "type" : "array",
                    "description" : "Codes of attributes used as variant axes",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "level" : {
                    "type" : "integer",
                    "description" : "Enrichment level"
                  }
                },
                "description" : "Enrichment level"
              }
            }
          },
          "example" : {
            "code" : "shoesVariant",
            "labels" : {
              "en_US" : "Shoes variant",
              "fr_FR" : "Variante de chaussures"
            },
            "variant_attribute_sets" : [ {
              "attributes" : [ "color", "material" ],
              "axes" : [ "color" ],
              "level" : 1
            }, {
              "attributes" : [ "sku", "size" ],
              "axes" : [ "size" ],
              "level" : 2
            } ]
          }
        } ]
      },
      "ItemList" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the resource"
                  }
                }
              }
            }
          }
        }
      },
      "Locale" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Locale code"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the locale is enabled",
            "default" : false
          }
        },
        "example" : {
          "code" : "en_US",
          "enable" : true
        }
      },
      "LocaleList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Locale code"
            },
            "enabled" : {
              "type" : "boolean",
              "description" : "Whether the locale is enabled",
              "default" : false
            }
          },
          "example" : {
            "code" : "en_US",
            "enable" : true
          }
        } ]
      },
      "MeasureFamily" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Measure family code"
          },
          "standard" : {
            "type" : "string",
            "description" : "Measure family standard"
          },
          "units" : {
            "type" : "array",
            "description" : "Family units",
            "items" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "string",
                  "description" : "Measure code"
                },
                "convert" : {
                  "type" : "object",
                  "description" : "Mathematic operation to convert the unit into the standard unit"
                },
                "symbol" : {
                  "type" : "string",
                  "description" : "Measure symbol"
                }
              }
            }
          }
        },
        "example" : {
          "code" : "Area",
          "standard" : "SQUARE_METER",
          "units" : [ {
            "code" : "SQUARE_MILLIMETER",
            "convert" : {
              "mul" : "0.001"
            },
            "symbol" : "mm²"
          }, {
            "code" : "SQUARE_CENTIMETER",
            "convert" : {
              "mul" : "0.001"
            },
            "symbol" : "cm²"
          } ]
        }
      },
      "MeasureFamilyList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Measure family code"
            },
            "standard" : {
              "type" : "string",
              "description" : "Measure family standard"
            },
            "units" : {
              "type" : "array",
              "description" : "Family units",
              "items" : {
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Measure code"
                  },
                  "convert" : {
                    "type" : "object",
                    "description" : "Mathematic operation to convert the unit into the standard unit"
                  },
                  "symbol" : {
                    "type" : "string",
                    "description" : "Measure symbol"
                  }
                }
              }
            }
          },
          "example" : {
            "code" : "Area",
            "standard" : "SQUARE_METER",
            "units" : [ {
              "code" : "SQUARE_MILLIMETER",
              "convert" : {
                "mul" : "0.001"
              },
              "symbol" : "mm²"
            }, {
              "code" : "SQUARE_CENTIMETER",
              "convert" : {
                "mul" : "0.001"
              },
              "symbol" : "cm²"
            } ]
          }
        } ]
      },
      "MeasurementFamily" : {
        "required" : [ "code", "standard_unit_code", "units" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Measurement family code"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Measurement family label for the locale `localeCode`"
              }
            },
            "description" : "Measurement family labels for each locale"
          },
          "standard_unit_code" : {
            "type" : "string",
            "description" : "Unit code used as the standard unit for this measurement family"
          },
          "units" : {
            "type" : "object",
            "properties" : {
              "unitCode" : {
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                  },
                  "convert_from_standard" : {
                    "type" : "array",
                    "description" : "Calculation to convert the unit from the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "operator" : {
                          "type" : "string",
                          "description" : "Operator for a conversion operation to convert the unit in the standard unit",
                          "enum" : [ "mul", "div", "add", "sub" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Value for a conversion operation to convert the unit in the standard unit"
                        }
                      }
                    }
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Unit label for the locale `localeCode`"
                      }
                    },
                    "description" : "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                  },
                  "symbol" : {
                    "type" : "string",
                    "description" : "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                  }
                }
              }
            },
            "description" : "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
          }
        },
        "example" : {
          "code" : "AREA",
          "labels" : {
            "en_US" : "Area",
            "fr_FR" : "Surface"
          },
          "standard_unit_code" : "SQUARE_METER",
          "units" : {
            "SQUARE_CENTIMETER" : {
              "code" : "SQUARE_CENTIMETER",
              "convert_from_standard" : [ {
                "operator" : "mul",
                "value" : "0.0001"
              } ],
              "labels" : {
                "en_US" : "Square centimeter",
                "fr_FR" : "Centimètre carré"
              },
              "symbol" : "cm²"
            },
            "SQUARE_METER" : {
              "code" : "SQUARE_METER",
              "convert_from_standard" : [ {
                "operator" : "mul",
                "value" : "1"
              } ],
              "labels" : {
                "en_US" : "Square meter",
                "fr_FR" : "Mètre carré"
              },
              "symbol" : "m²"
            },
            "SQUARE_MILLIMETER" : {
              "code" : "SQUARE_MILLIMETER",
              "convert_from_standard" : [ {
                "operator" : "mul",
                "value" : "0.000001"
              } ],
              "labels" : {
                "en_US" : "Square millimeter",
                "fr_FR" : "Millimètre carré"
              },
              "symbol" : "mm²"
            }
          }
        }
      },
      "MeasurementFamilyList" : {
        "required" : [ "code", "standard_unit_code", "units" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Measurement family code"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Measurement family label for the locale `localeCode`"
              }
            },
            "description" : "Measurement family labels for each locale"
          },
          "standard_unit_code" : {
            "type" : "string",
            "description" : "Unit code used as the standard unit for this measurement family"
          },
          "units" : {
            "type" : "object",
            "properties" : {
              "unitCode" : {
                "type" : "object",
                "properties" : {
                  "code" : {
                    "type" : "string",
                    "description" : "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                  },
                  "convert_from_standard" : {
                    "type" : "array",
                    "description" : "Calculation to convert the unit from the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "operator" : {
                          "type" : "string",
                          "description" : "Operator for a conversion operation to convert the unit in the standard unit",
                          "enum" : [ "mul", "div", "add", "sub" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Value for a conversion operation to convert the unit in the standard unit"
                        }
                      }
                    }
                  },
                  "labels" : {
                    "type" : "object",
                    "properties" : {
                      "localeCode" : {
                        "type" : "string",
                        "description" : "Unit label for the locale `localeCode`"
                      }
                    },
                    "description" : "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                  },
                  "symbol" : {
                    "type" : "string",
                    "description" : "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                  }
                }
              }
            },
            "description" : "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
          }
        },
        "example" : {
          "code" : "AREA",
          "labels" : {
            "en_US" : "Area",
            "fr_FR" : "Surface"
          },
          "standard_unit_code" : "SQUARE_METER",
          "units" : {
            "SQUARE_CENTIMETER" : {
              "code" : "SQUARE_CENTIMETER",
              "convert_from_standard" : [ {
                "operator" : "mul",
                "value" : "0.0001"
              } ],
              "labels" : {
                "en_US" : "Square centimeter",
                "fr_FR" : "Centimètre carré"
              },
              "symbol" : "cm²"
            },
            "SQUARE_METER" : {
              "code" : "SQUARE_METER",
              "convert_from_standard" : [ {
                "operator" : "mul",
                "value" : "1"
              } ],
              "labels" : {
                "en_US" : "Square meter",
                "fr_FR" : "Mètre carré"
              },
              "symbol" : "m²"
            },
            "SQUARE_MILLIMETER" : {
              "code" : "SQUARE_MILLIMETER",
              "convert_from_standard" : [ {
                "operator" : "mul",
                "value" : "0.000001"
              } ],
              "labels" : {
                "en_US" : "Square millimeter",
                "fr_FR" : "Millimètre carré"
              },
              "symbol" : "mm²"
            }
          }
        }
      },
      "MediaFile" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "download" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI to download the binaries of the media file"
                    }
                  }
                }
              }
            }
          }
        }, {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Media file code"
            },
            "extension" : {
              "type" : "string",
              "description" : "Extension of the media file"
            },
            "mime_type" : {
              "type" : "string",
              "description" : "Mime type of the media file"
            },
            "original_filename" : {
              "type" : "string",
              "description" : "Original filename of the media file"
            },
            "size" : {
              "type" : "integer",
              "description" : "Size of the media file"
            }
          },
          "example" : {
            "code" : "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
            "extension" : "jpg",
            "mime_type" : "image/jpeg",
            "original_filename" : "10806799-1356.jpg",
            "size" : 16070
          }
        } ]
      },
      "MediaFileItemList" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "download" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI to download the binaries of the media file"
                  }
                }
              },
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI to get the metadata of the media file"
                  }
                }
              }
            }
          }
        }
      },
      "MediaFileList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "download" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI to download the binaries of the media file"
                    }
                  }
                },
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI to get the metadata of the media file"
                    }
                  }
                }
              }
            }
          }
        }, {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Media file code"
            },
            "extension" : {
              "type" : "string",
              "description" : "Extension of the media file"
            },
            "mime_type" : {
              "type" : "string",
              "description" : "Mime type of the media file"
            },
            "original_filename" : {
              "type" : "string",
              "description" : "Original filename of the media file"
            },
            "size" : {
              "type" : "integer",
              "description" : "Size of the media file"
            }
          },
          "example" : {
            "code" : "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
            "extension" : "jpg",
            "mime_type" : "image/jpeg",
            "original_filename" : "10806799-1356.jpg",
            "size" : 16070
          }
        } ]
      },
      "Pagination" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "first" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the first page of resources"
                  }
                }
              },
              "next" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the next page of resources"
                  }
                }
              },
              "previous" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the previous page of resources"
                  }
                }
              },
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the current page of resources"
                  }
                }
              }
            }
          },
          "current_page" : {
            "type" : "integer",
            "description" : "Current page number"
          }
        }
      },
      "Product" : {
        "required" : [ "identifier" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "object",
            "properties" : {
              "associationTypeCode" : {
                "type" : "object",
                "properties" : {
                  "groups" : {
                    "type" : "array",
                    "description" : "Array of groups codes with which the product is in relation",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "product_models" : {
                    "type" : "array",
                    "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "products" : {
                    "type" : "array",
                    "description" : "Array of product identifiers with which the product is in relation",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
          },
          "categories" : {
            "type" : "array",
            "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
            "items" : {
              "type" : "string"
            }
          },
          "completenesses" : {
            "type" : "array",
            "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
            "items" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "integer"
                },
                "locale" : {
                  "type" : "string"
                },
                "scope" : {
                  "type" : "string"
                }
              }
            }
          },
          "created" : {
            "type" : "string",
            "description" : "Date of creation",
            "format" : "dateTime"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the product is enabled",
            "default" : true
          },
          "family" : {
            "type" : "string",
            "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
            "default" : "null only in the case of a non variant product"
          },
          "groups" : {
            "type" : "array",
            "description" : "Codes of the groups to which the product belong",
            "items" : {
              "type" : "string"
            }
          },
          "identifier" : {
            "type" : "string",
            "description" : "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
          },
          "metadata" : {
            "type" : "object",
            "properties" : {
              "workflow_status" : {
                "type" : "string",
                "description" : "Status of the product regarding the user permissions",
                "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
              }
            },
            "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
          },
          "parent" : {
            "type" : "string",
            "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
            "default" : "null"
          },
          "quality_scores" : {
            "type" : "object",
            "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
          },
          "quantified_associations" : {
            "type" : "object",
            "properties" : {
              "quantifiedAssociationTypeCode" : {
                "type" : "object",
                "properties" : {
                  "product_models" : {
                    "type" : "array",
                    "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string"
                        },
                        "quantity" : {
                          "type" : "integer"
                        }
                      }
                    }
                  },
                  "products" : {
                    "type" : "array",
                    "description" : "Array of objects containing product identifiers and quantities with which the product is in relation",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "identifier" : {
                          "type" : "string"
                        },
                        "quantity" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
          },
          "updated" : {
            "type" : "string",
            "description" : "Date of the last update",
            "format" : "dateTime"
          },
          "uuid" : {
            "type" : "string",
            "description" : "Product UUID"
          },
          "values" : {
            "type" : "object",
            "properties" : {
              "attributeCode" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                    },
                    "linked_data" : {
                      "type" : "object",
                      "properties" : {
                        "attribute" : {
                          "type" : "string"
                        },
                        "code" : {
                          "type" : "string"
                        },
                        "labels" : {
                          "type" : "object"
                        }
                      },
                      "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                    },
                    "locale" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                    },
                    "scope" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                    }
                  }
                }
              }
            },
            "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
          }
        },
        "example" : {
          "associations" : {
            "PACK" : {
              "groups" : [ ],
              "product_models" : [ ],
              "products" : [ "sunglass" ]
            }
          },
          "categories" : [ "summer_collection" ],
          "completenesses" : [ {
            "data" : 10,
            "locale" : "en_US",
            "scope" : "ecommerce"
          }, {
            "data" : 20,
            "locale" : "fr_FR",
            "scope" : "ecommerce"
          }, {
            "data" : 30,
            "locale" : "en_US",
            "scope" : "tablet"
          }, {
            "data" : 40,
            "locale" : "fr_FR",
            "scope" : "tablet"
          } ],
          "created" : "2016-06-23T18:24:44+02:00",
          "enabled" : true,
          "family" : "tshirt",
          "groups" : [ ],
          "identifier" : "top",
          "quality_scores" : [ {
            "data" : "A",
            "locale" : "en_US",
            "scope" : "ecommerce"
          }, {
            "data" : "B",
            "locale" : "fr_FR",
            "scope" : "ecommerce"
          }, {
            "data" : "D",
            "locale" : "en_US",
            "scope" : "tablet"
          }, {
            "data" : "E",
            "locale" : "fr_FR",
            "scope" : "tablet"
          } ],
          "quantified_associations" : {
            "PRODUCT_SET" : {
              "product_models" : [ {
                "identifier" : "model-biker-jacket-leather",
                "quantity" : 2
              } ],
              "products" : [ {
                "identifier" : "cap",
                "quantity" : 2
              }, {
                "identifier" : "shoes",
                "quantity" : 1
              } ]
            }
          },
          "updated" : "2016-06-25T17:56:12+02:00",
          "values" : {
            "collection" : [ {
              "data" : [ "winter_2016" ],
              "linked_data" : {
                "winter_2016" : {
                  "attribute" : "collection",
                  "code" : "winter_2016",
                  "labels" : {
                    "en_US" : "Winter 2016",
                    "fr_FR" : "Hiver 2016"
                  }
                }
              }
            } ],
            "color" : [ {
              "data" : "black",
              "linked_data" : {
                "attribute" : "color",
                "code" : "black",
                "labels" : {
                  "en_US" : "Black",
                  "fr_FR" : "Noir"
                }
              }
            } ],
            "description" : [ {
              "data" : "Summer top",
              "locale" : "en_US",
              "scope" : "ecommerce"
            }, {
              "data" : "Top",
              "locale" : "en_US",
              "scope" : "tablet"
            }, {
              "data" : "Débardeur pour l'été",
              "locale" : "fr_FR",
              "scope" : "ecommerce"
            }, {
              "data" : "Débardeur",
              "locale" : "fr_FR",
              "scope" : "tablet"
            } ],
            "name" : [ {
              "data" : "Top",
              "locale" : "en_US"
            }, {
              "data" : "Débardeur",
              "locale" : "fr_FR"
            } ],
            "price" : [ {
              "data" : [ {
                "amount" : "15.5",
                "currency" : "EUR"
              }, {
                "amount" : "15",
                "currency" : "USD"
              } ]
            } ],
            "size" : [ {
              "data" : "m",
              "linked_data" : {
                "attribute" : "size",
                "code" : "m",
                "labels" : {
                  "en_US" : "M",
                  "fr_FR" : "M"
                }
              }
            } ]
          }
        }
      },
      "ProductExamples" : {
        "type" : "object"
      },
      "ProductList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "identifier" ],
          "type" : "object",
          "properties" : {
            "associations" : {
              "type" : "object",
              "properties" : {
                "associationTypeCode" : {
                  "type" : "object",
                  "properties" : {
                    "groups" : {
                      "type" : "array",
                      "description" : "Array of groups codes with which the product is in relation",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "product_models" : {
                      "type" : "array",
                      "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "products" : {
                      "type" : "array",
                      "description" : "Array of product identifiers with which the product is in relation",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              },
              "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
            },
            "categories" : {
              "type" : "array",
              "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
              "items" : {
                "type" : "string"
              }
            },
            "completenesses" : {
              "type" : "array",
              "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
              "items" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "integer"
                  },
                  "locale" : {
                    "type" : "string"
                  },
                  "scope" : {
                    "type" : "string"
                  }
                }
              }
            },
            "created" : {
              "type" : "string",
              "description" : "Date of creation",
              "format" : "dateTime"
            },
            "enabled" : {
              "type" : "boolean",
              "description" : "Whether the product is enabled",
              "default" : true
            },
            "family" : {
              "type" : "string",
              "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
              "default" : "null only in the case of a non variant product"
            },
            "groups" : {
              "type" : "array",
              "description" : "Codes of the groups to which the product belong",
              "items" : {
                "type" : "string"
              }
            },
            "identifier" : {
              "type" : "string",
              "description" : "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
            },
            "metadata" : {
              "type" : "object",
              "properties" : {
                "workflow_status" : {
                  "type" : "string",
                  "description" : "Status of the product regarding the user permissions",
                  "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                }
              },
              "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
            },
            "parent" : {
              "type" : "string",
              "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
              "default" : "null"
            },
            "quality_scores" : {
              "type" : "object",
              "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
            },
            "quantified_associations" : {
              "type" : "object",
              "properties" : {
                "quantifiedAssociationTypeCode" : {
                  "type" : "object",
                  "properties" : {
                    "product_models" : {
                      "type" : "array",
                      "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string"
                          },
                          "quantity" : {
                            "type" : "integer"
                          }
                        }
                      }
                    },
                    "products" : {
                      "type" : "array",
                      "description" : "Array of objects containing product identifiers and quantities with which the product is in relation",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "identifier" : {
                            "type" : "string"
                          },
                          "quantity" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
            },
            "updated" : {
              "type" : "string",
              "description" : "Date of the last update",
              "format" : "dateTime"
            },
            "uuid" : {
              "type" : "string",
              "description" : "Product UUID"
            },
            "values" : {
              "type" : "object",
              "properties" : {
                "attributeCode" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                      },
                      "linked_data" : {
                        "type" : "object",
                        "properties" : {
                          "attribute" : {
                            "type" : "string"
                          },
                          "code" : {
                            "type" : "string"
                          },
                          "labels" : {
                            "type" : "object"
                          }
                        },
                        "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                      },
                      "locale" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                      },
                      "scope" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                      }
                    }
                  }
                }
              },
              "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
            }
          },
          "example" : {
            "associations" : {
              "PACK" : {
                "groups" : [ ],
                "product_models" : [ ],
                "products" : [ "sunglass" ]
              }
            },
            "categories" : [ "summer_collection" ],
            "completenesses" : [ {
              "data" : 10,
              "locale" : "en_US",
              "scope" : "ecommerce"
            }, {
              "data" : 20,
              "locale" : "fr_FR",
              "scope" : "ecommerce"
            }, {
              "data" : 30,
              "locale" : "en_US",
              "scope" : "tablet"
            }, {
              "data" : 40,
              "locale" : "fr_FR",
              "scope" : "tablet"
            } ],
            "created" : "2016-06-23T18:24:44+02:00",
            "enabled" : true,
            "family" : "tshirt",
            "groups" : [ ],
            "identifier" : "top",
            "quality_scores" : [ {
              "data" : "A",
              "locale" : "en_US",
              "scope" : "ecommerce"
            }, {
              "data" : "B",
              "locale" : "fr_FR",
              "scope" : "ecommerce"
            }, {
              "data" : "D",
              "locale" : "en_US",
              "scope" : "tablet"
            }, {
              "data" : "E",
              "locale" : "fr_FR",
              "scope" : "tablet"
            } ],
            "quantified_associations" : {
              "PRODUCT_SET" : {
                "product_models" : [ {
                  "identifier" : "model-biker-jacket-leather",
                  "quantity" : 2
                } ],
                "products" : [ {
                  "identifier" : "cap",
                  "quantity" : 2
                }, {
                  "identifier" : "shoes",
                  "quantity" : 1
                } ]
              }
            },
            "updated" : "2016-06-25T17:56:12+02:00",
            "values" : {
              "collection" : [ {
                "data" : [ "winter_2016" ],
                "linked_data" : {
                  "winter_2016" : {
                    "attribute" : "collection",
                    "code" : "winter_2016",
                    "labels" : {
                      "en_US" : "Winter 2016",
                      "fr_FR" : "Hiver 2016"
                    }
                  }
                }
              } ],
              "color" : [ {
                "data" : "black",
                "linked_data" : {
                  "attribute" : "color",
                  "code" : "black",
                  "labels" : {
                    "en_US" : "Black",
                    "fr_FR" : "Noir"
                  }
                }
              } ],
              "description" : [ {
                "data" : "Summer top",
                "locale" : "en_US",
                "scope" : "ecommerce"
              }, {
                "data" : "Top",
                "locale" : "en_US",
                "scope" : "tablet"
              }, {
                "data" : "Débardeur pour l'été",
                "locale" : "fr_FR",
                "scope" : "ecommerce"
              }, {
                "data" : "Débardeur",
                "locale" : "fr_FR",
                "scope" : "tablet"
              } ],
              "name" : [ {
                "data" : "Top",
                "locale" : "en_US"
              }, {
                "data" : "Débardeur",
                "locale" : "fr_FR"
              } ],
              "price" : [ {
                "data" : [ {
                  "amount" : "15.5",
                  "currency" : "EUR"
                }, {
                  "amount" : "15",
                  "currency" : "USD"
                } ]
              } ],
              "size" : [ {
                "data" : "m",
                "linked_data" : {
                  "attribute" : "size",
                  "code" : "m",
                  "labels" : {
                    "en_US" : "M",
                    "fr_FR" : "M"
                  }
                }
              } ]
            }
          }
        } ]
      },
      "ProductModel" : {
        "required" : [ "code", "family_variant" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "object",
            "properties" : {
              "associationTypeCode" : {
                "type" : "object",
                "properties" : {
                  "groups" : {
                    "type" : "array",
                    "description" : "Array of groups codes with which the product is in relation",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "product_models" : {
                    "type" : "array",
                    "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "products" : {
                    "type" : "array",
                    "description" : "Array of product identifiers with which the product is in relation",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "description" : "Several associations related to groups, product and/or other product models, grouped by association types"
          },
          "categories" : {
            "type" : "array",
            "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
            "items" : {
              "type" : "string"
            }
          },
          "code" : {
            "type" : "string",
            "description" : "Product model code"
          },
          "created" : {
            "type" : "string",
            "description" : "Date of creation",
            "format" : "dateTime"
          },
          "family" : {
            "type" : "string",
            "description" : "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)"
          },
          "family_variant" : {
            "type" : "string",
            "description" : "Family variant code from which the product model inherits its attributes and variant attributes"
          },
          "metadata" : {
            "type" : "object",
            "properties" : {
              "workflow_status" : {
                "type" : "string",
                "description" : "Status of the product model regarding the user permissions",
                "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
              }
            },
            "description" : "More information around the product model (only available since the v2.3 in the Enterprise Edition)"
          },
          "parent" : {
            "type" : "string",
            "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
            "default" : "null"
          },
          "quality_scores" : {
            "type" : "object",
            "description" : "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")"
          },
          "quantified_associations" : {
            "type" : "object",
            "properties" : {
              "quantifiedAssociationTypeCode" : {
                "type" : "object",
                "properties" : {
                  "product_models" : {
                    "type" : "array",
                    "description" : "Array of objects containing product model codes and quantities with which the product model is in relation",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string"
                        },
                        "quantity" : {
                          "type" : "integer"
                        }
                      }
                    }
                  },
                  "products" : {
                    "type" : "array",
                    "description" : "Array of objects containing product identifiers and quantities with which the product model is in relation",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "identifier" : {
                          "type" : "string"
                        },
                        "quantity" : {
                          "type" : "integer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
          },
          "updated" : {
            "type" : "string",
            "description" : "Date of the last update",
            "format" : "dateTime"
          },
          "values" : {
            "type" : "object",
            "properties" : {
              "attributeCode" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                    },
                    "locale" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                    },
                    "scope" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                    }
                  }
                }
              }
            },
            "description" : "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
          }
        },
        "example" : {
          "associations" : {
            "PACK" : {
              "groups" : [ ],
              "product_models" : [ ],
              "products" : [ "sunglass" ]
            }
          },
          "categories" : [ "summer_collection" ],
          "code" : "model-biker-jacket-leather",
          "created" : "2017-10-02T15:03:55+02:00",
          "family" : "clothing",
          "family_variant" : "clothing_material_size",
          "parent" : "model-biker-jacket",
          "quality_scores" : [ {
            "data" : "A",
            "locale" : "en_US",
            "scope" : "ecommerce"
          }, {
            "data" : "B",
            "locale" : "fr_FR",
            "scope" : "ecommerce"
          }, {
            "data" : "D",
            "locale" : "en_US",
            "scope" : "tablet"
          }, {
            "data" : "E",
            "locale" : "fr_FR",
            "scope" : "tablet"
          } ],
          "quantified_associations" : {
            "PRODUCT_SET" : {
              "product_models" : [ {
                "code" : "model-biker-jacket-leather",
                "quantity" : 2
              } ],
              "products" : [ {
                "identifier" : "top",
                "quantity" : 2
              }, {
                "identifier" : "cap",
                "quantity" : 1
              } ]
            }
          },
          "updated" : "2017-10-02T15:03:55+02:00",
          "values" : {
            "collection" : [ {
              "data" : [ "summer_2017" ]
            } ],
            "color" : [ {
              "data" : "antique_white"
            } ],
            "description" : [ {
              "data" : "Biker jacket",
              "locale" : "en_US",
              "scope" : "ecommerce"
            } ],
            "material" : [ {
              "data" : "leather"
            } ],
            "name" : [ {
              "data" : "Biker jacket",
              "locale" : "en_US"
            } ],
            "variation_name" : [ {
              "data" : "Biker jacket leather",
              "locale" : "en_US"
            } ]
          }
        }
      },
      "ProductModelList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code", "family_variant" ],
          "type" : "object",
          "properties" : {
            "associations" : {
              "type" : "object",
              "properties" : {
                "associationTypeCode" : {
                  "type" : "object",
                  "properties" : {
                    "groups" : {
                      "type" : "array",
                      "description" : "Array of groups codes with which the product is in relation",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "product_models" : {
                      "type" : "array",
                      "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "products" : {
                      "type" : "array",
                      "description" : "Array of product identifiers with which the product is in relation",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              },
              "description" : "Several associations related to groups, product and/or other product models, grouped by association types"
            },
            "categories" : {
              "type" : "array",
              "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
              "items" : {
                "type" : "string"
              }
            },
            "code" : {
              "type" : "string",
              "description" : "Product model code"
            },
            "created" : {
              "type" : "string",
              "description" : "Date of creation",
              "format" : "dateTime"
            },
            "family" : {
              "type" : "string",
              "description" : "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)"
            },
            "family_variant" : {
              "type" : "string",
              "description" : "Family variant code from which the product model inherits its attributes and variant attributes"
            },
            "metadata" : {
              "type" : "object",
              "properties" : {
                "workflow_status" : {
                  "type" : "string",
                  "description" : "Status of the product model regarding the user permissions",
                  "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                }
              },
              "description" : "More information around the product model (only available since the v2.3 in the Enterprise Edition)"
            },
            "parent" : {
              "type" : "string",
              "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
              "default" : "null"
            },
            "quality_scores" : {
              "type" : "object",
              "description" : "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")"
            },
            "quantified_associations" : {
              "type" : "object",
              "properties" : {
                "quantifiedAssociationTypeCode" : {
                  "type" : "object",
                  "properties" : {
                    "product_models" : {
                      "type" : "array",
                      "description" : "Array of objects containing product model codes and quantities with which the product model is in relation",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string"
                          },
                          "quantity" : {
                            "type" : "integer"
                          }
                        }
                      }
                    },
                    "products" : {
                      "type" : "array",
                      "description" : "Array of objects containing product identifiers and quantities with which the product model is in relation",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "identifier" : {
                            "type" : "string"
                          },
                          "quantity" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
            },
            "updated" : {
              "type" : "string",
              "description" : "Date of the last update",
              "format" : "dateTime"
            },
            "values" : {
              "type" : "object",
              "properties" : {
                "attributeCode" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                      },
                      "locale" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                      },
                      "scope" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                      }
                    }
                  }
                }
              },
              "description" : "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
            }
          },
          "example" : {
            "associations" : {
              "PACK" : {
                "groups" : [ ],
                "product_models" : [ ],
                "products" : [ "sunglass" ]
              }
            },
            "categories" : [ "summer_collection" ],
            "code" : "model-biker-jacket-leather",
            "created" : "2017-10-02T15:03:55+02:00",
            "family" : "clothing",
            "family_variant" : "clothing_material_size",
            "parent" : "model-biker-jacket",
            "quality_scores" : [ {
              "data" : "A",
              "locale" : "en_US",
              "scope" : "ecommerce"
            }, {
              "data" : "B",
              "locale" : "fr_FR",
              "scope" : "ecommerce"
            }, {
              "data" : "D",
              "locale" : "en_US",
              "scope" : "tablet"
            }, {
              "data" : "E",
              "locale" : "fr_FR",
              "scope" : "tablet"
            } ],
            "quantified_associations" : {
              "PRODUCT_SET" : {
                "product_models" : [ {
                  "code" : "model-biker-jacket-leather",
                  "quantity" : 2
                } ],
                "products" : [ {
                  "identifier" : "top",
                  "quantity" : 2
                }, {
                  "identifier" : "cap",
                  "quantity" : 1
                } ]
              }
            },
            "updated" : "2017-10-02T15:03:55+02:00",
            "values" : {
              "collection" : [ {
                "data" : [ "summer_2017" ]
              } ],
              "color" : [ {
                "data" : "antique_white"
              } ],
              "description" : [ {
                "data" : "Biker jacket",
                "locale" : "en_US",
                "scope" : "ecommerce"
              } ],
              "material" : [ {
                "data" : "leather"
              } ],
              "name" : [ {
                "data" : "Biker jacket",
                "locale" : "en_US"
              } ],
              "variation_name" : [ {
                "data" : "Biker jacket leather",
                "locale" : "en_US"
              } ]
            }
          }
        } ]
      },
      "ProductUuid" : {
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "object",
            "properties" : {
              "associationTypeCode" : {
                "type" : "object",
                "properties" : {
                  "groups" : {
                    "type" : "array",
                    "description" : "Array of groups codes with which the product is in relation",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "product_models" : {
                    "type" : "array",
                    "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "products" : {
                    "type" : "array",
                    "description" : "Array of product uuids with which the product is in relation",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
          },
          "categories" : {
            "type" : "array",
            "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
            "items" : {
              "type" : "string"
            }
          },
          "completenesses" : {
            "type" : "array",
            "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
            "items" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "integer"
                },
                "locale" : {
                  "type" : "string"
                },
                "scope" : {
                  "type" : "string"
                }
              }
            }
          },
          "created" : {
            "type" : "string",
            "description" : "Date of creation",
            "format" : "dateTime"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the product is enabled",
            "default" : true
          },
          "family" : {
            "type" : "string",
            "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
            "default" : "null only in the case of a non variant product"
          },
          "groups" : {
            "type" : "array",
            "description" : "Codes of the groups to which the product belong",
            "items" : {
              "type" : "string"
            }
          },
          "metadata" : {
            "type" : "object",
            "properties" : {
              "workflow_status" : {
                "type" : "string",
                "description" : "Status of the product regarding the user permissions",
                "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
              }
            },
            "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
          },
          "parent" : {
            "type" : "string",
            "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
            "default" : "null"
          },
          "quality_scores" : {
            "type" : "object",
            "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
          },
          "quantified_associations" : {
            "type" : "object",
            "properties" : {
              "quantifiedAssociationTypeCode" : {
                "type" : "object",
                "properties" : {
                  "product_models" : {
                    "type" : "array",
                    "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string"
                        },
                        "quantity" : {
                          "type" : "integer"
                        }
                      }
                    }
                  },
                  "products" : {
                    "type" : "array",
                    "description" : "Array of objects containing product uuids and quantities with which the product is in relation",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "quantity" : {
                          "type" : "integer"
                        },
                        "uuid" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
          },
          "updated" : {
            "type" : "string",
            "description" : "Date of the last update",
            "format" : "dateTime"
          },
          "uuid" : {
            "type" : "string",
            "description" : "Product uuid"
          },
          "values" : {
            "type" : "object",
            "properties" : {
              "attributeCode" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                    },
                    "linked_data" : {
                      "type" : "object",
                      "properties" : {
                        "attribute" : {
                          "type" : "string"
                        },
                        "code" : {
                          "type" : "string"
                        },
                        "labels" : {
                          "type" : "object"
                        }
                      },
                      "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                    },
                    "locale" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                    },
                    "scope" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                    }
                  }
                }
              }
            },
            "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
          }
        },
        "example" : {
          "associations" : {
            "PACK" : {
              "groups" : [ ],
              "product_models" : [ ],
              "products" : [ "d055527c-0698-4967-8f16-8a5f23f4e5cf" ]
            }
          },
          "categories" : [ "summer_collection" ],
          "completenesses" : [ {
            "data" : 10,
            "locale" : "en_US",
            "scope" : "ecommerce"
          }, {
            "data" : 20,
            "locale" : "fr_FR",
            "scope" : "ecommerce"
          }, {
            "data" : 30,
            "locale" : "en_US",
            "scope" : "tablet"
          }, {
            "data" : 40,
            "locale" : "fr_FR",
            "scope" : "tablet"
          } ],
          "created" : "2016-06-23T18:24:44+02:00",
          "enabled" : true,
          "family" : "tshirt",
          "groups" : [ ],
          "quality_scores" : [ {
            "data" : "A",
            "locale" : "en_US",
            "scope" : "ecommerce"
          }, {
            "data" : "B",
            "locale" : "fr_FR",
            "scope" : "ecommerce"
          }, {
            "data" : "D",
            "locale" : "en_US",
            "scope" : "tablet"
          }, {
            "data" : "E",
            "locale" : "fr_FR",
            "scope" : "tablet"
          } ],
          "quantified_associations" : {
            "PRODUCT_SET" : {
              "product_models" : [ {
                "identifier" : "model-biker-jacket-leather",
                "quantity" : 2
              } ],
              "products" : [ {
                "quantity" : 2,
                "uuid" : "fc24e6c3-933c-4a93-8a81-e5c703d134d5"
              }, {
                "quantity" : 1,
                "uuid" : "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc"
              } ]
            }
          },
          "updated" : "2016-06-25T17:56:12+02:00",
          "uuid" : "25566245-55c3-42ce-86d9-8610ac459fa8",
          "values" : {
            "collection" : [ {
              "data" : [ "winter_2016" ],
              "linked_data" : {
                "winter_2016" : {
                  "attribute" : "collection",
                  "code" : "winter_2016",
                  "labels" : {
                    "en_US" : "Winter 2016",
                    "fr_FR" : "Hiver 2016"
                  }
                }
              }
            } ],
            "color" : [ {
              "data" : "black",
              "linked_data" : {
                "attribute" : "color",
                "code" : "black",
                "labels" : {
                  "en_US" : "Black",
                  "fr_FR" : "Noir"
                }
              }
            } ],
            "description" : [ {
              "data" : "Summer top",
              "locale" : "en_US",
              "scope" : "ecommerce"
            }, {
              "data" : "Top",
              "locale" : "en_US",
              "scope" : "tablet"
            }, {
              "data" : "Débardeur pour l'été",
              "locale" : "fr_FR",
              "scope" : "ecommerce"
            }, {
              "data" : "Débardeur",
              "locale" : "fr_FR",
              "scope" : "tablet"
            } ],
            "name" : [ {
              "data" : "Top",
              "locale" : "en_US"
            }, {
              "data" : "Débardeur",
              "locale" : "fr_FR"
            } ],
            "price" : [ {
              "data" : [ {
                "amount" : "15.5",
                "currency" : "EUR"
              }, {
                "amount" : "15",
                "currency" : "USD"
              } ]
            } ],
            "size" : [ {
              "data" : "m",
              "linked_data" : {
                "attribute" : "size",
                "code" : "m",
                "labels" : {
                  "en_US" : "M",
                  "fr_FR" : "M"
                }
              }
            } ],
            "sku" : [ {
              "data" : "top"
            } ]
          }
        }
      },
      "ProductUuidExamples" : {
        "type" : "object"
      },
      "ProductUuidList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "type" : "object",
          "properties" : {
            "associations" : {
              "type" : "object",
              "properties" : {
                "associationTypeCode" : {
                  "type" : "object",
                  "properties" : {
                    "groups" : {
                      "type" : "array",
                      "description" : "Array of groups codes with which the product is in relation",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "product_models" : {
                      "type" : "array",
                      "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "products" : {
                      "type" : "array",
                      "description" : "Array of product uuids with which the product is in relation",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              },
              "description" : "Several associations related to groups, product models and/or other products, grouped by association types"
            },
            "categories" : {
              "type" : "array",
              "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
              "items" : {
                "type" : "string"
              }
            },
            "completenesses" : {
              "type" : "array",
              "description" : "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
              "items" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "integer"
                  },
                  "locale" : {
                    "type" : "string"
                  },
                  "scope" : {
                    "type" : "string"
                  }
                }
              }
            },
            "created" : {
              "type" : "string",
              "description" : "Date of creation",
              "format" : "dateTime"
            },
            "enabled" : {
              "type" : "boolean",
              "description" : "Whether the product is enabled",
              "default" : true
            },
            "family" : {
              "type" : "string",
              "description" : "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
              "default" : "null only in the case of a non variant product"
            },
            "groups" : {
              "type" : "array",
              "description" : "Codes of the groups to which the product belong",
              "items" : {
                "type" : "string"
              }
            },
            "metadata" : {
              "type" : "object",
              "properties" : {
                "workflow_status" : {
                  "type" : "string",
                  "description" : "Status of the product regarding the user permissions",
                  "enum" : [ "read_only", "draft_in_progress", "proposal_waiting_for_approval", "working_copy" ]
                }
              },
              "description" : "More information around the product (only available since the v2.0 in the Enterprise Edition)"
            },
            "parent" : {
              "type" : "string",
              "description" : "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
              "default" : "null"
            },
            "quality_scores" : {
              "type" : "object",
              "description" : "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")"
            },
            "quantified_associations" : {
              "type" : "object",
              "properties" : {
                "quantifiedAssociationTypeCode" : {
                  "type" : "object",
                  "properties" : {
                    "product_models" : {
                      "type" : "array",
                      "description" : "Array of objects containing product model codes and quantities with which the product is in relation",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string"
                          },
                          "quantity" : {
                            "type" : "integer"
                          }
                        }
                      }
                    },
                    "products" : {
                      "type" : "array",
                      "description" : "Array of objects containing product uuids and quantities with which the product is in relation",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "quantity" : {
                            "type" : "integer"
                          },
                          "uuid" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description" : "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)"
            },
            "updated" : {
              "type" : "string",
              "description" : "Date of the last update",
              "format" : "dateTime"
            },
            "uuid" : {
              "type" : "string",
              "description" : "Product uuid"
            },
            "values" : {
              "type" : "object",
              "properties" : {
                "attributeCode" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "description" : "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                      },
                      "linked_data" : {
                        "type" : "object",
                        "properties" : {
                          "attribute" : {
                            "type" : "string"
                          },
                          "code" : {
                            "type" : "string"
                          },
                          "labels" : {
                            "type" : "object"
                          }
                        },
                        "description" : "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details."
                      },
                      "locale" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                      },
                      "scope" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                      }
                    }
                  }
                }
              },
              "description" : "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
            }
          },
          "example" : {
            "associations" : {
              "PACK" : {
                "groups" : [ ],
                "product_models" : [ ],
                "products" : [ "d055527c-0698-4967-8f16-8a5f23f4e5cf" ]
              }
            },
            "categories" : [ "summer_collection" ],
            "completenesses" : [ {
              "data" : 10,
              "locale" : "en_US",
              "scope" : "ecommerce"
            }, {
              "data" : 20,
              "locale" : "fr_FR",
              "scope" : "ecommerce"
            }, {
              "data" : 30,
              "locale" : "en_US",
              "scope" : "tablet"
            }, {
              "data" : 40,
              "locale" : "fr_FR",
              "scope" : "tablet"
            } ],
            "created" : "2016-06-23T18:24:44+02:00",
            "enabled" : true,
            "family" : "tshirt",
            "groups" : [ ],
            "quality_scores" : [ {
              "data" : "A",
              "locale" : "en_US",
              "scope" : "ecommerce"
            }, {
              "data" : "B",
              "locale" : "fr_FR",
              "scope" : "ecommerce"
            }, {
              "data" : "D",
              "locale" : "en_US",
              "scope" : "tablet"
            }, {
              "data" : "E",
              "locale" : "fr_FR",
              "scope" : "tablet"
            } ],
            "quantified_associations" : {
              "PRODUCT_SET" : {
                "product_models" : [ {
                  "identifier" : "model-biker-jacket-leather",
                  "quantity" : 2
                } ],
                "products" : [ {
                  "quantity" : 2,
                  "uuid" : "fc24e6c3-933c-4a93-8a81-e5c703d134d5"
                }, {
                  "quantity" : 1,
                  "uuid" : "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc"
                } ]
              }
            },
            "updated" : "2016-06-25T17:56:12+02:00",
            "uuid" : "25566245-55c3-42ce-86d9-8610ac459fa8",
            "values" : {
              "collection" : [ {
                "data" : [ "winter_2016" ],
                "linked_data" : {
                  "winter_2016" : {
                    "attribute" : "collection",
                    "code" : "winter_2016",
                    "labels" : {
                      "en_US" : "Winter 2016",
                      "fr_FR" : "Hiver 2016"
                    }
                  }
                }
              } ],
              "color" : [ {
                "data" : "black",
                "linked_data" : {
                  "attribute" : "color",
                  "code" : "black",
                  "labels" : {
                    "en_US" : "Black",
                    "fr_FR" : "Noir"
                  }
                }
              } ],
              "description" : [ {
                "data" : "Summer top",
                "locale" : "en_US",
                "scope" : "ecommerce"
              }, {
                "data" : "Top",
                "locale" : "en_US",
                "scope" : "tablet"
              }, {
                "data" : "Débardeur pour l'été",
                "locale" : "fr_FR",
                "scope" : "ecommerce"
              }, {
                "data" : "Débardeur",
                "locale" : "fr_FR",
                "scope" : "tablet"
              } ],
              "name" : [ {
                "data" : "Top",
                "locale" : "en_US"
              }, {
                "data" : "Débardeur",
                "locale" : "fr_FR"
              } ],
              "price" : [ {
                "data" : [ {
                  "amount" : "15.5",
                  "currency" : "EUR"
                }, {
                  "amount" : "15",
                  "currency" : "USD"
                } ]
              } ],
              "size" : [ {
                "data" : "m",
                "linked_data" : {
                  "attribute" : "size",
                  "code" : "m",
                  "labels" : {
                    "en_US" : "M",
                    "fr_FR" : "M"
                  }
                }
              } ],
              "sku" : [ {
                "data" : "top"
              } ]
            }
          }
        } ]
      },
      "PublishedProduct" : {
        "required" : [ "identifier" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "object",
            "properties" : {
              "associationTypeCode" : {
                "type" : "object",
                "properties" : {
                  "groups" : {
                    "type" : "array",
                    "description" : "Array of groups codes with which the published product is in relation",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "product_models" : {
                    "type" : "array",
                    "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "products" : {
                    "type" : "array",
                    "description" : "Array of published product identifiers with which the published product is in relation",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "description" : "Several associations related to groups and/or other published products, grouped by association types"
          },
          "categories" : {
            "type" : "array",
            "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the published product is classified",
            "items" : {
              "type" : "string"
            }
          },
          "created" : {
            "type" : "string",
            "description" : "Date of creation",
            "format" : "dateTime"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the published product is enable",
            "default" : true
          },
          "family" : {
            "type" : "string",
            "description" : "<a href='api-reference.html#Family'>Family</a> code from which the published product inherits its attributes and attributes requirements",
            "default" : "null"
          },
          "groups" : {
            "type" : "array",
            "description" : "Codes of the groups to which the published product belong",
            "items" : {
              "type" : "string"
            }
          },
          "identifier" : {
            "type" : "string",
            "description" : "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
          },
          "quantified_associations" : {
            "type" : "object",
            "description" : "Warning: associations with quantities are not compatible with the published products. The response will always be empty."
          },
          "updated" : {
            "type" : "string",
            "description" : "Date of the last update",
            "format" : "dateTime"
          },
          "values" : {
            "type" : "object",
            "properties" : {
              "attributeCode" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                    },
                    "locale" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                    },
                    "scope" : {
                      "type" : "string",
                      "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                    }
                  }
                }
              }
            },
            "description" : "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
          }
        },
        "example" : {
          "associations" : {
            "PACK" : {
              "groups" : [ ],
              "product_models" : [ ],
              "products" : [ "sunglass" ]
            }
          },
          "categories" : [ "summer_collection" ],
          "created" : "2016-06-23T18:24:44+02:00",
          "enabled" : true,
          "family" : "tshirt",
          "groups" : [ ],
          "identifier" : "top",
          "updated" : "2016-06-25T17:56:12+02:00",
          "values" : {
            "color" : [ {
              "data" : "black"
            } ],
            "description" : [ {
              "data" : "Summer top",
              "locale" : "en_US",
              "scope" : "ecommerce"
            }, {
              "data" : "Top",
              "locale" : "en_US",
              "scope" : "tablet"
            }, {
              "data" : "Débardeur pour l'été",
              "locale" : "fr_FR",
              "scope" : "ecommerce"
            }, {
              "data" : "Débardeur",
              "locale" : "fr_FR",
              "scope" : "tablet"
            } ],
            "name" : [ {
              "data" : "Top",
              "locale" : "en_US"
            }, {
              "data" : "Débardeur",
              "locale" : "fr_FR"
            } ],
            "price" : [ {
              "data" : [ {
                "amount" : "15.5",
                "currency" : "EUR"
              }, {
                "amount" : "15",
                "currency" : "USD"
              } ]
            } ],
            "size" : [ {
              "data" : "m"
            } ]
          }
        }
      },
      "PublishedProductList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "identifier" ],
          "type" : "object",
          "properties" : {
            "associations" : {
              "type" : "object",
              "properties" : {
                "associationTypeCode" : {
                  "type" : "object",
                  "properties" : {
                    "groups" : {
                      "type" : "array",
                      "description" : "Array of groups codes with which the published product is in relation",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "product_models" : {
                      "type" : "array",
                      "description" : "Array of product model codes with which the product is in relation (only available since the v2.1)",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "products" : {
                      "type" : "array",
                      "description" : "Array of published product identifiers with which the published product is in relation",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              },
              "description" : "Several associations related to groups and/or other published products, grouped by association types"
            },
            "categories" : {
              "type" : "array",
              "description" : "Codes of the <a href='api-reference.html#Category'>categories</a> in which the published product is classified",
              "items" : {
                "type" : "string"
              }
            },
            "created" : {
              "type" : "string",
              "description" : "Date of creation",
              "format" : "dateTime"
            },
            "enabled" : {
              "type" : "boolean",
              "description" : "Whether the published product is enable",
              "default" : true
            },
            "family" : {
              "type" : "string",
              "description" : "<a href='api-reference.html#Family'>Family</a> code from which the published product inherits its attributes and attributes requirements",
              "default" : "null"
            },
            "groups" : {
              "type" : "array",
              "description" : "Codes of the groups to which the published product belong",
              "items" : {
                "type" : "string"
              }
            },
            "identifier" : {
              "type" : "string",
              "description" : "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
            },
            "quantified_associations" : {
              "type" : "object",
              "description" : "Warning: associations with quantities are not compatible with the published products. The response will always be empty."
            },
            "updated" : {
              "type" : "string",
              "description" : "Date of the last update",
              "format" : "dateTime"
            },
            "values" : {
              "type" : "object",
              "properties" : {
                "attributeCode" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "description" : "<a href='api-reference.html#Productuuid'>Product</a> value"
                      },
                      "locale" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                      },
                      "scope" : {
                        "type" : "string",
                        "description" : "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                      }
                    }
                  }
                }
              },
              "description" : "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details"
            }
          },
          "example" : {
            "associations" : {
              "PACK" : {
                "groups" : [ ],
                "product_models" : [ ],
                "products" : [ "sunglass" ]
              }
            },
            "categories" : [ "summer_collection" ],
            "created" : "2016-06-23T18:24:44+02:00",
            "enabled" : true,
            "family" : "tshirt",
            "groups" : [ ],
            "identifier" : "top",
            "updated" : "2016-06-25T17:56:12+02:00",
            "values" : {
              "color" : [ {
                "data" : "black"
              } ],
              "description" : [ {
                "data" : "Summer top",
                "locale" : "en_US",
                "scope" : "ecommerce"
              }, {
                "data" : "Top",
                "locale" : "en_US",
                "scope" : "tablet"
              }, {
                "data" : "Débardeur pour l'été",
                "locale" : "fr_FR",
                "scope" : "ecommerce"
              }, {
                "data" : "Débardeur",
                "locale" : "fr_FR",
                "scope" : "tablet"
              } ],
              "name" : [ {
                "data" : "Top",
                "locale" : "en_US"
              }, {
                "data" : "Débardeur",
                "locale" : "fr_FR"
              } ],
              "price" : [ {
                "data" : [ {
                  "amount" : "15.5",
                  "currency" : "EUR"
                }, {
                  "amount" : "15",
                  "currency" : "USD"
                } ]
              } ],
              "size" : [ {
                "data" : "m"
              } ]
            }
          }
        } ]
      },
      "ReferenceEntity" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "image_download" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI to download the binaries of the reference entity image file"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Reference entity code"
            },
            "image" : {
              "type" : "string",
              "description" : "Code of the reference entity image",
              "default" : "null"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Reference entity label for the locale `localeCode`"
                }
              },
              "description" : "Reference entity labels for each locale"
            }
          },
          "example" : {
            "code" : "brands",
            "image" : "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png",
            "labels" : {
              "en_US" : "Brands",
              "fr_FR" : "Marques"
            }
          }
        } ]
      },
      "ReferenceEntityAttribute" : {
        "required" : [ "code", "type" ],
        "type" : "object",
        "properties" : {
          "allowed_extensions" : {
            "type" : "array",
            "description" : "Extensions allowed when the attribute type is `image`",
            "items" : {
              "type" : "string"
            }
          },
          "code" : {
            "type" : "string",
            "description" : "Attribute code"
          },
          "decimals_allowed" : {
            "type" : "boolean",
            "description" : "Whether decimals are allowed when the attribute type is `number`",
            "default" : false
          },
          "is_required_for_completeness" : {
            "type" : "boolean",
            "description" : "Whether the attribute should be part of the record's completeness calculation",
            "default" : false
          },
          "is_rich_text_editor" : {
            "type" : "boolean",
            "description" : "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`"
          },
          "is_textarea" : {
            "type" : "boolean",
            "description" : "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
            "default" : false
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Attribute label for the locale `localeCode`"
              }
            },
            "description" : "Attribute labels for each locale"
          },
          "max_characters" : {
            "type" : "integer",
            "description" : "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`"
          },
          "max_file_size" : {
            "type" : "string",
            "description" : "Max file size in MB when the attribute type is `image`",
            "default" : "null"
          },
          "max_value" : {
            "type" : "string",
            "description" : "Maximum value allowed when the attribute type is `number`",
            "default" : "null"
          },
          "min_value" : {
            "type" : "string",
            "description" : "Minimum value allowed when the attribute type is `number`",
            "default" : "null"
          },
          "reference_entity_code" : {
            "type" : "string",
            "description" : "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
            "default" : "null"
          },
          "type" : {
            "type" : "string",
            "description" : "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
            "enum" : [ "text", "image", "number", "single_option", "multiple_options", "reference_entity_single_link", "reference_entity_multiple_links" ]
          },
          "validation_regexp" : {
            "type" : "string",
            "description" : "Regexp expression used to validate the attribute value when the attribute type is `text`",
            "default" : "null"
          },
          "validation_rule" : {
            "type" : "string",
            "description" : "Validation rule type used to validate the attribute value when the attribute type is `text`",
            "default" : "none",
            "enum" : [ "email", "url", "regexp", "none" ]
          },
          "value_per_channel" : {
            "type" : "boolean",
            "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
            "default" : false
          },
          "value_per_locale" : {
            "type" : "boolean",
            "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
            "default" : false
          }
        },
        "example" : {
          "code" : "description",
          "is_required_for_completeness" : true,
          "is_rich_text_editor" : true,
          "is_textarea" : true,
          "labels" : {
            "en_US" : "Description",
            "fr_FR" : "Description"
          },
          "type" : "text",
          "validation_rule" : "none",
          "value_per_channel" : false,
          "value_per_locale" : true
        }
      },
      "ReferenceEntityAttributeList" : {
        "type" : "array",
        "items" : {
          "required" : [ "code", "type" ],
          "type" : "object",
          "properties" : {
            "allowed_extensions" : {
              "type" : "array",
              "description" : "Extensions allowed when the attribute type is `image`",
              "items" : {
                "type" : "string"
              }
            },
            "code" : {
              "type" : "string",
              "description" : "Attribute code"
            },
            "decimals_allowed" : {
              "type" : "boolean",
              "description" : "Whether decimals are allowed when the attribute type is `number`",
              "default" : false
            },
            "is_required_for_completeness" : {
              "type" : "boolean",
              "description" : "Whether the attribute should be part of the record's completeness calculation",
              "default" : false
            },
            "is_rich_text_editor" : {
              "type" : "boolean",
              "description" : "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`"
            },
            "is_textarea" : {
              "type" : "boolean",
              "description" : "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
              "default" : false
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Attribute label for the locale `localeCode`"
                }
              },
              "description" : "Attribute labels for each locale"
            },
            "max_characters" : {
              "type" : "integer",
              "description" : "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`"
            },
            "max_file_size" : {
              "type" : "string",
              "description" : "Max file size in MB when the attribute type is `image`",
              "default" : "null"
            },
            "max_value" : {
              "type" : "string",
              "description" : "Maximum value allowed when the attribute type is `number`",
              "default" : "null"
            },
            "min_value" : {
              "type" : "string",
              "description" : "Minimum value allowed when the attribute type is `number`",
              "default" : "null"
            },
            "reference_entity_code" : {
              "type" : "string",
              "description" : "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
              "default" : "null"
            },
            "type" : {
              "type" : "string",
              "description" : "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
              "enum" : [ "text", "image", "number", "single_option", "multiple_options", "reference_entity_single_link", "reference_entity_multiple_links" ]
            },
            "validation_regexp" : {
              "type" : "string",
              "description" : "Regexp expression used to validate the attribute value when the attribute type is `text`",
              "default" : "null"
            },
            "validation_rule" : {
              "type" : "string",
              "description" : "Validation rule type used to validate the attribute value when the attribute type is `text`",
              "default" : "none",
              "enum" : [ "email", "url", "regexp", "none" ]
            },
            "value_per_channel" : {
              "type" : "boolean",
              "description" : "Whether the attribute is scopable, i.e. can have one value by channel",
              "default" : false
            },
            "value_per_locale" : {
              "type" : "boolean",
              "description" : "Whether the attribute is localizable, i.e. can have one value by locale",
              "default" : false
            }
          },
          "example" : {
            "code" : "description",
            "is_required_for_completeness" : true,
            "is_rich_text_editor" : true,
            "is_textarea" : true,
            "labels" : {
              "en_US" : "Description",
              "fr_FR" : "Description"
            },
            "max_characters" : null,
            "type" : "text",
            "validation_regexp" : null,
            "validation_rule" : "none",
            "value_per_channel" : false,
            "value_per_locale" : true
          }
        }
      },
      "ReferenceEntityAttributeOption" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Attribute's option code"
          },
          "labels" : {
            "type" : "object",
            "properties" : {
              "localeCode" : {
                "type" : "string",
                "description" : "Attribute label for the locale `localeCode`"
              }
            },
            "description" : "Attribute labels for each locale"
          }
        },
        "example" : {
          "code" : "global_nomad",
          "labels" : {
            "en_US" : "Global Nomad",
            "fr_FR" : "Nomade du Monde"
          }
        }
      },
      "ReferenceEntityAttributeOptionList" : {
        "type" : "array",
        "items" : {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Attribute's option code"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Attribute label for the locale `localeCode`"
                }
              },
              "description" : "Attribute labels for each locale"
            }
          },
          "example" : {
            "code" : "global_nomad",
            "labels" : {
              "en_US" : "Global Nomad",
              "fr_FR" : "Nomade du Monde"
            }
          }
        }
      },
      "ReferenceEntityItemList" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "image_download" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI to download the binaries of the reference entity image file"
                  }
                }
              },
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the resource"
                  }
                }
              }
            }
          }
        }
      },
      "ReferenceEntityList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "image_download" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI to download the binaries of the reference entity image file"
                    }
                  }
                },
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Reference entity code"
            },
            "image" : {
              "type" : "string",
              "description" : "Code of the reference entity image",
              "default" : "null"
            },
            "labels" : {
              "type" : "object",
              "properties" : {
                "localeCode" : {
                  "type" : "string",
                  "description" : "Reference entity label for the locale `localeCode`"
                }
              },
              "description" : "Reference entity labels for each locale"
            }
          },
          "example" : {
            "code" : "brands",
            "image" : "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png",
            "labels" : {
              "en_US" : "Brands",
              "fr_FR" : "Marques"
            }
          }
        } ]
      },
      "ReferenceEntityRecord" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Code of the record"
          },
          "created" : {
            "type" : "string",
            "description" : "Date of creation.",
            "format" : "dateTime",
            "default" : "null"
          },
          "updated" : {
            "type" : "string",
            "description" : "Date of the last update.",
            "format" : "dateTime",
            "default" : "null"
          },
          "values" : {
            "type" : "object",
            "properties" : {
              "attributeCode" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "channel" : {
                      "type" : "string",
                      "description" : "Channel code of the reference entity record value"
                    },
                    "data" : {
                      "type" : "object",
                      "description" : "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                    },
                    "locale" : {
                      "type" : "string",
                      "description" : "Locale code of the reference entity record value"
                    }
                  }
                }
              }
            },
            "description" : "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details"
          }
        },
        "example" : {
          "code" : "kartell",
          "created" : "2021-01-01T01:23:34+00:00",
          "updated" : "2021-02-03T23:45:60+00:00",
          "values" : {
            "collection_overview" : [ {
              "data" : "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
            } ],
            "country" : [ {
              "data" : "italy"
            } ],
            "creation_year" : [ {
              "data" : "1949"
            } ],
            "description" : [ {
              "data" : "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures.",
              "locale" : "en_US"
            }, {
              "data" : "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain.",
              "locale" : "fr_FR"
            } ],
            "image" : [ {
              "data" : "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
            } ],
            "label" : [ {
              "data" : "Kartell",
              "locale" : "en_US"
            } ]
          }
        }
      },
      "ReferenceEntityRecordItemList" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the resource"
                  }
                }
              }
            }
          }
        }
      },
      "ReferenceEntityRecordList" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "_links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "object",
                  "properties" : {
                    "href" : {
                      "type" : "string",
                      "description" : "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        }, {
          "required" : [ "code" ],
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string",
              "description" : "Code of the record"
            },
            "created" : {
              "type" : "string",
              "description" : "Date of creation.",
              "format" : "dateTime",
              "default" : "null"
            },
            "updated" : {
              "type" : "string",
              "description" : "Date of the last update.",
              "format" : "dateTime",
              "default" : "null"
            },
            "values" : {
              "type" : "object",
              "properties" : {
                "attributeCode" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "channel" : {
                        "type" : "string",
                        "description" : "Channel code of the reference entity record value"
                      },
                      "data" : {
                        "type" : "object",
                        "description" : "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                      },
                      "locale" : {
                        "type" : "string",
                        "description" : "Locale code of the reference entity record value"
                      }
                    }
                  }
                }
              },
              "description" : "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details"
            }
          },
          "example" : {
            "code" : "kartell",
            "created" : "2021-01-01T01:23:34+00:00",
            "updated" : "2021-02-03T23:45:60+00:00",
            "values" : {
              "collection_overview" : [ {
                "data" : "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
              } ],
              "country" : [ {
                "data" : "italy"
              } ],
              "creation_year" : [ {
                "data" : "1949"
              } ],
              "description" : [ {
                "data" : "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures.",
                "locale" : "en_US"
              }, {
                "data" : "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain.",
                "locale" : "fr_FR"
              } ],
              "image" : [ {
                "data" : "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
              } ],
              "label" : [ {
                "data" : "Kartell",
                "locale" : "en_US"
              } ]
            }
          }
        } ]
      },
      "SearchAfterPagination" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "object",
            "properties" : {
              "first" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the first page of resources"
                  }
                }
              },
              "next" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the next page of resources"
                  }
                }
              },
              "self" : {
                "type" : "object",
                "properties" : {
                  "href" : {
                    "type" : "string",
                    "description" : "URI of the current page of resources"
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses" : {
      "400Error" : {
        "description" : "Bad request",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 400
          },
          "message" : {
            "example" : "Invalid JSON message received"
          }
        }
      },
      "401Error" : {
        "description" : "Authentication required",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 401
          },
          "message" : {
            "example" : "Authentication is required"
          }
        }
      },
      "403CatalogError" : {
        "description" : "Access forbidden",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 403
          },
          "message" : {
            "example" : "Access forbidden. You are not allowed to list catalogs."
          }
        }
      },
      "403Error" : {
        "description" : "Access forbidden",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 403
          },
          "message" : {
            "example" : "Access forbidden. You are not allowed to list categories."
          }
        }
      },
      "404CatalogError" : {
        "description" : "Catalog not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 404
          },
          "message" : {
            "example" : "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
          }
        }
      },
      "404Error" : {
        "description" : "Resource not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 404
          },
          "message" : {
            "example" : "Resource `my_resource_code` does not exist."
          }
        }
      },
      "406Error" : {
        "description" : "Not Acceptable",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 406
          },
          "message" : {
            "example" : "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
          }
        }
      },
      "413Error" : {
        "description" : "Request Entity Too Large",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 413
          },
          "message" : {
            "example" : "Too many resources to process, 100 is the maximum allowed."
          }
        }
      },
      "415Error" : {
        "description" : "Unsupported Media type",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 415
          },
          "message" : {
            "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
          }
        }
      },
      "415ErrorMultipart" : {
        "description" : "Unsupported Media type",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 415
          },
          "message" : {
            "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’ is allowed."
          }
        }
      },
      "415ErrorStream" : {
        "description" : "Unsupported Media type",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "code" : {
            "example" : 415
          },
          "message" : {
            "example" : "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
          }
        }
      },
      "422Error" : {
        "description" : "Unprocessable entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "description" : "HTTP status code"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the error"
                }
              }
            }
          },
          "_links" : {
            "example" : {
              "documentation" : {
                "href" : "http://api.akeneo.com/api-reference.html"
              }
            }
          },
          "code" : {
            "example" : 422
          },
          "message" : {
            "example" : "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
          }
        }
      },
      "AssetMediaFileUploaded" : {
        "description" : "Created",
        "headers" : {
          "Asset-media-file-code" : {
            "description" : "Code of the media file",
            "schema" : {
              "type" : "string"
            }
          },
          "Location" : {
            "description" : "URI of the created resource",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "Created" : {
        "description" : "Created",
        "headers" : {
          "Location" : {
            "description" : "URI of the created resource",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "DeprecatedAssetReferenceFileUploaded" : {
        "description" : "Uploaded",
        "headers" : {
          "Location" : {
            "description" : "URI of the created resource",
            "schema" : {
              "type" : "string"
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "errors" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "channel" : {
                        "type" : "string",
                        "description" : "Channel for which the variation file generation failed"
                      },
                      "locale" : {
                        "type" : "string",
                        "description" : "Locale for which the variation file generation failed"
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "Message explaining why the variation file generation failed"
                      }
                    }
                  }
                },
                "message" : {
                  "type" : "string",
                  "description" : "Message explaining the warning"
                }
              }
            }
          }
        }
      },
      "NoContent" : {
        "description" : "No content to return",
        "headers" : {
          "Location" : {
            "description" : "URI of the updated resource",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "ReferenceEntityMediaFileUploaded" : {
        "description" : "Created",
        "headers" : {
          "Reference-entities-media-file-code" : {
            "description" : "Code of the media file",
            "schema" : {
              "type" : "string"
            }
          },
          "Location" : {
            "description" : "URI of the created resource",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "Submitted" : {
        "description" : "Submitted",
        "headers" : {
          "Location" : {
            "description" : "URI of the created resource",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "parameters" : {
      "asset_code" : {
        "name" : "asset_code",
        "in" : "path",
        "description" : "Code of the asset",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "asset_family_code" : {
        "name" : "asset_family_code",
        "in" : "path",
        "description" : "Code of the asset family",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "attribute_code" : {
        "name" : "attribute_code",
        "in" : "path",
        "description" : "Code of the attribute",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "channel_code" : {
        "name" : "channel_code",
        "in" : "path",
        "description" : "Code of the channel",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "code" : {
        "name" : "code",
        "in" : "path",
        "description" : "Code of the resource",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "family_code" : {
        "name" : "family_code",
        "in" : "path",
        "description" : "Code of the family",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "limit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
        "schema" : {
          "maximum" : 100,
          "minimum" : 1,
          "type" : "integer",
          "default" : 10
        }
      },
      "locale_code" : {
        "name" : "locale_code",
        "in" : "path",
        "description" : "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "page" : {
        "name" : "page",
        "in" : "query",
        "description" : "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
        "schema" : {
          "type" : "integer",
          "default" : 1
        }
      },
      "pagination_type" : {
        "name" : "pagination_type",
        "in" : "query",
        "description" : "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
        "schema" : {
          "type" : "string",
          "default" : "page",
          "enum" : [ "page", "search_after" ]
        }
      },
      "reference_entity_code" : {
        "name" : "reference_entity_code",
        "in" : "path",
        "description" : "Code of the reference entity",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "search_after" : {
        "name" : "search_after",
        "in" : "query",
        "description" : "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
        "schema" : {
          "type" : "string",
          "default" : "cursor to the first page"
        }
      },
      "updated_after" : {
        "name" : "updated_after",
        "in" : "query",
        "description" : "Filter products that have been updated AFTER the provided date (Only available on Catalogs endpoints)",
        "schema" : {
          "type" : "string",
          "format" : "date"
        }
      },
      "updated_before" : {
        "name" : "updated_before",
        "in" : "query",
        "description" : "Filter products that have been updated BEFORE the provided date (Only available on Catalogs endpoints)",
        "schema" : {
          "type" : "string",
          "format" : "date"
        }
      },
      "uuid" : {
        "name" : "uuid",
        "in" : "path",
        "description" : "Uuid of the resource",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "with_attribute_options" : {
        "name" : "with_attribute_options",
        "in" : "query",
        "description" : "Return labels of attribute options in the response. (Only available since the 5.0 version)",
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "with_completenesses" : {
        "name" : "with_completenesses",
        "in" : "query",
        "description" : "Return product completenesses in the response. (Only available since the 6.0 version)",
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "with_count" : {
        "name" : "with_count",
        "in" : "query",
        "description" : "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "with_enriched_attributes" : {
        "name" : "with_enriched_attributes",
        "in" : "query",
        "description" : "Return attribute values of the category (only available on SaaS platforms)",
        "schema" : {
          "type" : "boolean"
        }
      },
      "with_enriched_attributes_coming_soon" : {
        "name" : "with_enriched_attributes",
        "in" : "query",
        "description" : "Return attribute values of the category (only available on SaaS platforms) <strong>[COMING SOON]<strong>",
        "schema" : {
          "type" : "boolean"
        }
      },
      "with_position" : {
        "name" : "with_position",
        "in" : "query",
        "description" : "Return information about category position into its category tree (only available since the 7.0 version)",
        "schema" : {
          "type" : "boolean"
        }
      },
      "with_quality_scores__product_models" : {
        "name" : "with_quality_scores",
        "in" : "query",
        "description" : "Return product model quality scores in the response. <strong>(Only available since the 6.0 version)</strong>",
        "schema" : {
          "type" : "boolean"
        }
      },
      "with_quality_scores__products" : {
        "name" : "with_quality_scores",
        "in" : "query",
        "description" : "Return product quality scores in the response. (Only available since the 5.0 version)",
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "with_table_select_options" : {
        "name" : "with_table_select_options",
        "in" : "query",
        "description" : "Return the options of 'select' column types (of a table attribute) in the response. (Only available since the 7.0 version)",
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      }
    }
  }
}