{
  "mappings" : [ {
    "id" : "729a1c3e-0b6d-4b93-88ff-0e568e97a46a",
    "name" : "Lists a collection of resources associated with tags.",
    "request" : {
      "urlPath" : "/subscriptions/9b6m/resourceGroups/Dr.+Merrilee+Weissnat/providers/Microsoft.ApiManagement/service/s/tagResources",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y1a6une0i9i62yx7afc0k125gokpopoa5b7ziitwo1x87t3zpffcdrmqcgjqscwzkwk6s4ze6txl3dbeat7f2avj61d7tha1r3hqtx3vhd2dasj5wbx9ryzoigqun7h16pi9bhaedwgntf2zwl5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"product\" : {\n      \"name\" : \"Bradford Rath\",\n      \"id\" : \"i527\"\n    },\n    \"api\" : {\n      \"path\" : \"x0urisdr2sut1wt62s6bhl2dvb6iuybc21vugs40mlj84mnw6tnau8eqg6is2g9yi5typvjlm338a4a7nd0g3lgawzn6u4eoe1l3fvdgydptqnil\",\n      \"name\" : \"Marion Wiza\",\n      \"serviceUrl\" : \"https://web.example.mocklab.io/520771\",\n      \"id\" : \"0y19\",\n      \"protocols\" : [ \"http\", \"https\", \"https\", \"https\", \"http\" ]\n    },\n    \"tag\" : {\n      \"name\" : \"Lesia Gibson\",\n      \"id\" : \"87fe\"\n    },\n    \"operation\" : {\n      \"apiName\" : \"Miss Jarred Kunde\",\n      \"apiVersion\" : \"hjo9q7sxljak1so2sdpny3erll0ohah4ybqcfl36zvfc3l4sa1v9xbtmwg1937dpupoynrrkxyxzuviy2djqrwf7xk1nbf262c3lepkq70xdtupz7xik6scfd\",\n      \"method\" : \"y5e6p54mbc9ay3l93vefpq86c04kggwukizzvhcc3xkgxrajk67llbo0pdcjvi2hxubmuwkfdgld9xi4q8z5suche6mf1365gdve10q3yv\",\n      \"urlTemplate\" : \"pcyxxlhkpdukhja8biylxqt0skr7or6k3rsyokmy68gnuruoiqzdu6lstkqedtzrou6slqd7be\",\n      \"name\" : \"Joanie Erdman\",\n      \"description\" : \"Accusantium inventore excepturi quo ut consequatur numquam. Dignissimos quam voluptatem saepe. Magnam aut sed animi.\",\n      \"id\" : \"n0ou\",\n      \"apiRevision\" : \"y1om7xjfwbdfjn57i8l4w\"\n    }\n  }, {\n    \"product\" : {\n      \"name\" : \"Carey Lynch\",\n      \"id\" : \"m5wm\"\n    },\n    \"api\" : {\n      \"path\" : \"881d2hwvgdfiq8u3f90jv3yw5mcq1lmtvj1hcls5tnawybpbjhp5zmgcye2ml0eqec0q9dhfgq97e7zo39o53eticwbl\",\n      \"name\" : \"Adele Ondricka\",\n      \"serviceUrl\" : \"https://web.example.mocklab.io/605300\",\n      \"id\" : \"f75i\",\n      \"protocols\" : [ \"https\" ]\n    },\n    \"tag\" : {\n      \"name\" : \"Beverley Lynch\",\n      \"id\" : \"6g6s\"\n    },\n    \"operation\" : {\n      \"apiName\" : \"Keith Mraz\",\n      \"apiVersion\" : \"jrefho8u9lm1jqqhc9nlklbn9kt68xcdd60jtad1sc7ct82gxtjan8lp7bp1irxke5jao\",\n      \"method\" : \"n3mn5jefq3yuihtjzf3ayf7bgdmbfft7k4z64mf5\",\n      \"urlTemplate\" : \"ggktvdlsz1t859492lcdk21yekr5ejd437eszqlm1r978mb3qleus3u77k5aj8fpsx043nshzrmfx8e\",\n      \"name\" : \"Norris Stiedemann DDS\",\n      \"description\" : \"Numquam vero omnis quo qui numquam labore necessitatibus. In corporis autem veniam quam. Quae iure facere voluptatibus.\",\n      \"id\" : \"7i9g\",\n      \"apiRevision\" : \"nv3z58ekb1nqis69ib90qh91j5mi3\"\n    }\n  } ],\n  \"nextLink\" : \"q8grzfiikcco2aocbgnlqqwzr6r8s7jddo50i1zmfm26cp58uv2tawe0u19ye6g3evcltsom1m7pqejqd9aflqrgsvhfbq5xw4qd45quqz7l7abpklyel2ruocejry1zjpltvqsrlypd4nlemnx80mpe017xvmd7xam4yxfs3qv3aajj750vp0dtx5em\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "729a1c3e-0b6d-4b93-88ff-0e568e97a46a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.817432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource_ListByService",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Next page link if any."
              },
              "value" : {
                "type" : "array",
                "description" : "Page values.",
                "items" : {
                  "required" : [ "tag" ],
                  "type" : "object",
                  "properties" : {
                    "api" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "API identifier in the form /apis/{apiId}."
                        },
                        "name" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "API name."
                        },
                        "path" : {
                          "maxLength" : 400,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                        },
                        "protocols" : {
                          "type" : "array",
                          "description" : "Describes on which protocols the operations in this API can be invoked.",
                          "items" : {
                            "type" : "string",
                            "enum" : [ "http", "https" ]
                          }
                        },
                        "serviceUrl" : {
                          "maxLength" : 2000,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Absolute URL of the backend service implementing this API."
                        }
                      },
                      "description" : "API contract properties for the Tag Resources."
                    },
                    "operation" : {
                      "type" : "object",
                      "properties" : {
                        "apiName" : {
                          "type" : "string",
                          "description" : "Api Name.",
                          "readOnly" : true
                        },
                        "apiRevision" : {
                          "type" : "string",
                          "description" : "Api Revision.",
                          "readOnly" : true
                        },
                        "apiVersion" : {
                          "type" : "string",
                          "description" : "Api Version.",
                          "readOnly" : true
                        },
                        "description" : {
                          "type" : "string",
                          "description" : "Operation Description.",
                          "readOnly" : true
                        },
                        "id" : {
                          "type" : "string",
                          "description" : "Identifier of the operation in form /operations/{operationId}."
                        },
                        "method" : {
                          "type" : "string",
                          "description" : "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
                          "readOnly" : true
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Operation name.",
                          "readOnly" : true
                        },
                        "urlTemplate" : {
                          "type" : "string",
                          "description" : "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
                          "readOnly" : true
                        }
                      },
                      "description" : "Operation Entity contract Properties."
                    },
                    "product" : {
                      "required" : [ "name" ],
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Identifier of the product in the form of /products/{productId}"
                        },
                        "name" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Product name."
                        }
                      },
                      "description" : "Product profile."
                    },
                    "tag" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Tag identifier"
                        },
                        "name" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag Name"
                        }
                      },
                      "description" : "Contract defining the Tag property in the Tag Resource Contract"
                    }
                  },
                  "description" : "TagResource contract properties."
                }
              }
            },
            "description" : "Paged Tag list representation."
          }
        }
      }
    },
    "insertionIndex" : 0
  } ]
}