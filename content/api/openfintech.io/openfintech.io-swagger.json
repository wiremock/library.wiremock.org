{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "OpenFinTech.io",
    "description" : "# Introduction\n[OpenFinTech.io](https://openfintech.io) is an open database that comprises of standardized primary data for FinTech industry.<br>\nIt contains such information as geolocation data (countries, cities, regions), organizations, currencies (national, digital, virtual, crypto), banks, digital exchangers, payment providers (PSP), payment methods, etc.<br>\nIt is created for communication of cross-integrated micro-services on \"one language\". This is achieved through standardization of entity identifiers that are used to exchange information among different services.<br>\n\n### UML\nUML Domain Model diagram you can find [here](https://api.openfintech.io/public_domain_model.png).<br>\n\n### Persistence\nEntities are updated not more than 1 time per day.<br>\n\n### Terms and Conditions\nThis *OpenFinTech.io* is made available under the [Open Database License](http://opendatacommons.org/licenses/odbl/1.0/).<br>\nAny rights in individual contents of the database are licensed under the [Database Contents License](http://opendatacommons.org/licenses/dbcl/1.0/).<br>\n\n### Contacts\nFor any questions, please email - info@openfintech.io<br>\nOr you can contact us at <a href=\"https://gitter.im/paymaxicom/openfintech.io\">Gitter</a><br>\n\nPowered by [Paymaxi](https://www.paymaxi.com)\n\n# Get Started\n\nIf you use [POSTMAN](https://www.getpostman.com) or similar program which can operate with swagger`s files - just [download](https://docs.openfintech.io) our spec and [import it](https://www.getpostman.com/docs/importing_swagger). Also you can try live [API demo](https://api.openfintech.io).\n\n## Overview\n\nThe OpenFinTech API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors.<br>\nAPI is based on [JSON API](http://jsonapi.org) standard. JSON is returned by all API responses, including errors, although our API libraries convert responses to appropriate language-specific objects.<br>\nJSON API requires use of the JSON API media type (`application/vnd.api+json`) for exchanging data.<br>\n### Additional Request Headers\n#### ACCEPT HEADER\nYour requests should always include the header:\n```curl\nAccept: application/vnd.api+json\n```\n\n## Authentication\n\nTo use OpenFinTech API no needed authorization.\n\n## Versioning\n\nWhen we make changes to the API, we release new, dated versions. The current version is **2017-08-24**. Read our [API upgrades guide]() to see our API changelog and to learn more about backwards compatibility.\n\n## Pagination\n\nOpenFinTech APIs to retrieve lists of banks, currencies and other resources - paginated to **100** items by default. The pagination information will be included in the list API response under the node name `meta` - contains information about listed objects [`total` - contains information about total count of listed objects, `pages` - count of pages], `links` - contain links to navigate between pages [`first` - link to first page, `prev` - link to previous page, `next` - link to next page, `last` - link to last page].<br>\nBy default first page will be listed. For navigating through pages, use the page parameter (e.g. `page[number]`, `page[size]`).<br>\nThe `page[size]` parameter can be used to set the number of records that you want to receive in the response.<br>\nThe `page[number]` parameter can be used to set needed page number.<br>\nExample of response:\n```json\n{\n  \"meta\": {\n    \"total\": 419,\n    \"pages\": 42\n  },\n  \"links\": {\n    \"first\": \"/v1/{path}?page[number]=1&page[size]=10\",\n    \"prev\": \"/v1/{path}?page[number]=39&page[size]=10\",\n    \"next\": \"/v1/{path}?page[number]=41&page[size]=10\",\n    \"last\": \"/v1/{path}?page[number]=42&page[size]=10\"\n  }\n```\n\n### Sorting\n\nOpenFinTech\\`s API supported query parameter to sort result collection [e.g. `?sort=code`]. Information about available parameters may be found in the endpoint description. Positive parameter [e.g. `?sort=code`] points to ascending sorting, negative  [e.g. `?sort=-code`] - to descending sorting. Also, supported multiple sorting parameters [e.g. `?sort=code, -name, id`, etc.]\n```curl\nhttps://api.openfintech.io/v1/countries?sort=name,-area\n```\n\n### Filtering\n\nFiltering provided by unique query key `filter[*filtering_condition*]`. Information about available parameters may be found in the endpoint description.\n```curl\nhttps://api.openfintech.io/v1/countries?filter[region]=europe\n```\n\n## Images\n\nOpenFinTech provides two types of images: icons and logos. To get one of those types you should to use next url pattern:\n``` curl\nhttps://api.openfintech.io/v1/{path}/{id}/{icon/logo}\n```\nAlso, images can be resized by adding next parameters: `h={height}&w={width}`. For example, you want to get organization icon with width equals to 20 pixels:\n``` curl\nhttps://api.openfintech.io/v1/organizations/{id}/icon?w=20&h=20\n```\nIf argument height or width is missing API returns original image with real sizes.\n\n## Errors\n\nAPI uses conventional HTTP response codes to indicate the success or failure of an API request. In general, codes in the `2xx` range indicate success, codes in the `4xx` range indicate an error that failed given the information provided (e.g., a required parameter was omitted, etc.), and codes in the `5xx` range indicate an error with OpenFinTech's servers (these are rare).\n\n| Code | Description |\n|------|-------------|\n| 200 - OK\t| Everything worked as expected. |\n| 400 - Bad Request |\tThe request was unacceptable, often due to missing a required parameter. |\n| 401 - Unauthorized |\tNo valid API key provided. |\n| 402 - Request Failed\t| The parameters were valid but the request failed. |\n| 404 - Not Found |\tThe requested resource doesn't exist. |\n| 409 - Conflict\t| The request conflicts with another request (perhaps due to using the same idempotent key). |\n| 429 - Too Many Requests |\tToo many requests hit the API too quickly. We recommend an exponential backoff of your requests. |\n| 500, 502, 503, 504 - Server Errors |\tSomething went wrong on OpenFinTech's end. (These are rare.) |\n",
    "version" : "2017-08-24"
  },
  "servers" : [ {
    "url" : "https://api.openfintech.io/v1/"
  } ],
  "tags" : [ {
    "name" : "Countries",
    "description" : "Information about countries"
  }, {
    "name" : "Currencies",
    "description" : "Information about currencies"
  }, {
    "name" : "Organizations",
    "description" : "Information about organizations"
  }, {
    "name" : "Exchangers",
    "description" : "Information about exchangers"
  }, {
    "name" : "Banks",
    "description" : "Information about banks"
  }, {
    "name" : "Payment methods",
    "description" : "Information about payment methods"
  }, {
    "name" : "Deposit methods",
    "description" : "Information about deposit methods"
  }, {
    "name" : "Payment providers",
    "description" : "Information about payment providers"
  }, {
    "name" : "Merchant industries",
    "description" : "Information about merchant industries"
  } ],
  "paths" : {
    "/banks" : {
      "get" : {
        "tags" : [ "Banks" ],
        "summary" : "List of banks",
        "description" : "Returns list of banks. Each object contains general information about bank such as name and status, also information about bank details and related link to main organization.\n",
        "parameters" : [ {
          "name" : "page[number]",
          "in" : "query",
          "description" : "Current page number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "description" : "Page size.<br>*Default value: 100*\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[sort_code]",
          "in" : "query",
          "description" : "Filtering by banks code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[code]",
          "in" : "query",
          "description" : "Filtering by code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[status]",
          "in" : "query",
          "description" : "Filtration by status.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "liquidated", "problem", "deleted" ]
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort params:<br>\n\n| ASC | DESC |\n|-----|------|\n| name | -name |\n| code | -code |\n| status | -status |\n| sort_code | -sort_code |\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "-name", "status", "-status", "code", "-code", "sort_code", "-sort_code" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of banks.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BanksResponse"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}" : {
      "get" : {
        "tags" : [ "Banks" ],
        "summary" : "Bank by ID",
        "description" : "Returns bank with specific ID.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Bank information.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BankResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Bank ID is not valid."
          }
        }
      }
    },
    "/countries" : {
      "get" : {
        "tags" : [ "Countries" ],
        "summary" : "List of countries",
        "description" : "Returns all available countries.\n",
        "parameters" : [ {
          "name" : "page[number]",
          "in" : "query",
          "description" : "Current page number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "description" : "Page size.<br>*Default value: 100*\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[region]",
          "in" : "query",
          "description" : "Filtration by region.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "africa", "americas", "asia", "europe", "oceania", "polar" ]
            }
          }
        }, {
          "name" : "filter[sub_region]",
          "in" : "query",
          "description" : "Filtration by sub region.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "northern_africa", "southern_africa", "western_africa", "eastern_africa", "middle_africa", "northern_america", "south_america", "central_america", "caribbean", "southern_asia", "western_asia", "eastern_asia", "south_eastern_asia", "central_asia", "northern_europe", "southern_europe", "western_europe", "eastern_europe", "polynesia", "australia_and_new_zealand", "micronesia", "melanesia" ]
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort params:<br>\n\n| ASC | DESC |\n|-----|------|\n| name | -name |\n| area | -area |\n| population | -population |\n| region | -region |\n| sub_region | -sub_region |\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "-name", "area", "-area", "population", "-population", "region", "-region", "sub_region", "-sub_region" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of countries.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/countries/{id}" : {
      "get" : {
        "tags" : [ "Countries" ],
        "summary" : "Country by ID",
        "description" : "Returns country with specific ID.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Country informatiion.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Country ID is not valid."
          }
        }
      }
    },
    "/currencies" : {
      "get" : {
        "tags" : [ "Currencies" ],
        "summary" : "List of currencies",
        "description" : "Returns all available currencies.\n",
        "parameters" : [ {
          "name" : "page[number]",
          "in" : "query",
          "description" : "Current page number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "description" : "Page size.<br>*Default value: 100*\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[search]",
          "in" : "query",
          "description" : "Full text search with name, code, type, code_iso_alpha3, code_jsons_alpha, code_estandards_alpha, category.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[code_iso_alpha3]",
          "in" : "query",
          "description" : "Filtering by ISO code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[code_iso_numeric3]",
          "in" : "query",
          "description" : "Filtering by ISO number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[code_estandards_alpha]",
          "in" : "query",
          "description" : "Filtering by estandards code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[currency_type]",
          "in" : "query",
          "description" : "Filtration by currency type.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "national", "digital", "virtual", "metal", "energy", "crypto", "code", "technical" ]
            }
          }
        }, {
          "name" : "filter[category]",
          "in" : "query",
          "description" : "Filtration by category.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "electronic", "online_bankings", "money_transfers", "crypto_exchangers", "crypto_currencies", "vouchers", "cards", "cash", "games", "psps", "others" ]
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort params:<br>\n\n| ASC | DESC |\n|-----|------|\n| name | -name |\n| type | -type |\n| category | -category |\n| code | -code |\n| code_iso_alpha3 | -code_iso_alpha3 |\n| code_iso_numeric3 | -code_iso_numeric3 |\n| code_estandards_alpha | -code_estandards_alpha |\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "-name", "type", "-type", "category", "-category", "code", "-code", "code_iso_alpha3", "-code_iso_alpha3", "code_iso_numeric3", "-code_iso_numeric3", "code_estandards_alpha", "-code_estandards_alpha" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of currencies.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrenciesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/currencies/{id}" : {
      "get" : {
        "tags" : [ "Currencies" ],
        "summary" : "Currency by ID",
        "description" : "Returns currency with specific ID.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Currency information.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Currency ID is not valid."
          }
        }
      }
    },
    "/deposit-methods" : {
      "get" : {
        "tags" : [ "Deposit methods" ],
        "summary" : "List of deposit methods",
        "description" : "Returns list of deposit methods. Each object contains information about deposit method such as name and category, also related link to deposit method issuer (which processing it).\n",
        "parameters" : [ {
          "name" : "page[number]",
          "in" : "query",
          "description" : "Current page number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "description" : "Page size.<br>*Default value: 100*\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[search]",
          "in" : "query",
          "description" : "Full text search with id, name, code, category.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "Filtering by name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[code]",
          "in" : "query",
          "description" : "Filtering by code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[processor_name]",
          "in" : "query",
          "description" : "Filtering by processor_name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[category]",
          "in" : "query",
          "description" : "Filtering by category.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "card", "alternative", "wallet", "credit_cards", "debit_cards", "prepaid_cards", "check", "invoice", "bank_transaction", "direct_debits", "mobile_carrier_billing", "cash_on_delivery" ]
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort params:<br>\n\n| ASC | DESC |\n|-----|------|\n| name | -name |\n| code | -code |\n| processor_name | -processor_name |\n| category | -category |\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "-name", "code", "-code", "processor_name", "-processor_name", "category", "-category" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of deposit methods.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DepositMethodsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/deposit-methods/{id}" : {
      "get" : {
        "tags" : [ "Deposit methods" ],
        "summary" : "Deposit method by ID",
        "description" : "Returns deposit method with specific ID.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deposit method information.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DepositMethodResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "deposit method ID is not valid."
          }
        }
      }
    },
    "/exchangers" : {
      "get" : {
        "tags" : [ "Exchangers" ],
        "summary" : "List of exchangers",
        "description" : "Returns list of exchange markets. Each object contains general information about exchanger such as name and status, also information about rates export and related link to main organization.<br>\nRates export standards is represented by:\n* [estandards](http://estandards.info)\n* [jsons](http://jsons.info)\n* ratex - our internal standard\n",
        "parameters" : [ {
          "name" : "page[number]",
          "in" : "query",
          "description" : "Current page number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "description" : "Page size.<br>*Default value: 100*\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "Filtering by name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[status]",
          "in" : "query",
          "description" : "Filtration by status.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "blocked", "deleted" ]
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort params:<br>\n\n| ASC | DESC |\n|-----|------|\n| name | -name |\n| status | -status |\n| wmid | -wmid |\n| rate_type | -rate_type |\n| rates_export_standard | <nobr>-rates_export_standard</nobr> |\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "-name", "status", "-status", "wmid", "-wmid", "rate_type", "-rate_type", "rates_export_standard", "-rates_export_standard" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of exchangers.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExchangersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/exchangers/{id}" : {
      "get" : {
        "tags" : [ "Exchangers" ],
        "summary" : "Exchanger by ID",
        "description" : "Returns exchanger with specific ID.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Exchanger information.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExchangerResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Exchanger ID is not valid."
          }
        }
      }
    },
    "/merchant-industries" : {
      "get" : {
        "tags" : [ "Merchant industries" ],
        "summary" : "List of merchant industries",
        "description" : "Returns all available merchant fields of activity.\n",
        "parameters" : [ {
          "name" : "page[number]",
          "in" : "query",
          "description" : "Current page number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "description" : "Page size.<br>*Default value: 100*\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "Filtering by name.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of Merchant industries.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MerchantIndustriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/merchant-industries/{id}" : {
      "get" : {
        "tags" : [ "Merchant industries" ],
        "summary" : "Merchant industry by ID",
        "description" : "Returns merchant industry with specific ID.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Merchant industry.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MerchantIndustryResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Merchant industry ID is not valid."
          }
        }
      }
    },
    "/organizations" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "List of organizations",
        "description" : "This endpoint retrievs the list of organizations present in the system. The data displays general, public information, without reference to the type of activity (for example - name, address, contacts, etc.).\n",
        "parameters" : [ {
          "name" : "page[number]",
          "in" : "query",
          "description" : "Current page number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "description" : "Page size.<br>*Default value: 100*\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[search]",
          "in" : "query",
          "description" : "Full text search with id, name, code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "Filtering by name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[code]",
          "in" : "query",
          "description" : "Filtering by code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[status]",
          "in" : "query",
          "description" : "Filtration by status.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "blocked", "deleted" ]
            }
          }
        }, {
          "name" : "filter[industries]",
          "in" : "query",
          "description" : "Filtering by industries.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort params:<br>\n\n| ASC | DESC |\n|-----|------|\n| name | -name |\n| code | -code |\n| status | -status |\n| description | -description |\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "-name", "code", "-code", "status", "-status", "description", "-description" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of Organizations.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Organization by ID",
        "description" : "Returns organization with specific ID.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization information.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization ID is not valid."
          }
        }
      }
    },
    "/payment-methods" : {
      "get" : {
        "tags" : [ "Payment methods" ],
        "summary" : "List of payment methods",
        "description" : "Returns list of payment methods. Each object contains information about payment method such as name and category, also related link to payment method issuer (which processing it).\n",
        "parameters" : [ {
          "name" : "page[number]",
          "in" : "query",
          "description" : "Current page number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "description" : "Page size.<br>*Default value: 100*\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[search]",
          "in" : "query",
          "description" : "Full text search with id, name, code, category.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "Filtering by name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[code]",
          "in" : "query",
          "description" : "Filtering by code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[processor_name]",
          "in" : "query",
          "description" : "Filtering by processor_name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[category]",
          "in" : "query",
          "description" : "Filtering by category.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "card", "alternative", "wallet", "credit_cards", "debit_cards", "prepaid_cards", "check", "invoice", "bank_transaction", "direct_debits", "mobile_carrier_billing", "cash_on_delivery" ]
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort params:<br>\n\n| ASC | DESC |\n|-----|------|\n| name | -name |\n| code | -code |\n| processor_name | -processor_name |\n| category | -category |\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "-name", "code", "-code", "processor_name", "-processor_name", "category", "-category" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of payment methods.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethodsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payment-methods/{id}" : {
      "get" : {
        "tags" : [ "Payment methods" ],
        "summary" : "Payment method by ID",
        "description" : "Returns payment method with specific ID.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Payment method information.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethodResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Payment method ID is not valid."
          }
        }
      }
    },
    "/payment-providers" : {
      "get" : {
        "tags" : [ "Payment providers" ],
        "summary" : "List of payment providers",
        "description" : "A payment service provider (PSP) offers shops online services for accepting electronic payments by a variety of payment methods.<br> Endpoint returns list of PSPs. Each object contains: name, type, supported features and sales channels, also related link to available payment methods and main organization.\n",
        "parameters" : [ {
          "name" : "page[number]",
          "in" : "query",
          "description" : "Current page number.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[size]",
          "in" : "query",
          "description" : "Page size.<br>*Default value: 100*\n",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter[search]",
          "in" : "query",
          "description" : "Full text search with id, code, name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "Filtering by name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[code]",
          "in" : "query",
          "description" : "Filtering by code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter[types]",
          "in" : "query",
          "description" : "Filtering by types.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "distributor", "aggregator", "collector", "acquirer" ]
            }
          }
        }, {
          "name" : "filter[sales_channels]",
          "in" : "query",
          "description" : "Filtering by sales channels.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "e_commerce", "in_app", "m_commerce", "moto", "m_pos", "pos" ]
            }
          }
        }, {
          "name" : "filter[features]",
          "in" : "query",
          "description" : "Filtering by features.",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "e_commerce", "installments", "partial_captures", "mastercard_secure", "american_express_safe_key", "a_b_testing", "payment_transfer", "hosted_payment_page", "edcc", "multi_lingual", "fraud_scrubbing", "multi_currency", "pay_out_of_winnings", "refunds", "verified_by_visa", "tokenization", "recurring_payments", "avs", "pre_authorisation", "chargeback_management", "discover_protectbuy", "level_iii_data", "j_secure_by_jcb" ]
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort params:<br>\n\n| ASC | DESC |\n|-----|------|\n| name | -name |\n| code | -code |\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "-name", "code", "-code" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of Payment providers.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentProvidersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payment-providers/{id}" : {
      "get" : {
        "tags" : [ "Payment providers" ],
        "summary" : "Payment provider by ID",
        "description" : "Returns payment provider with specific ID.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Payment provider.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentProviderResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Payment provider ID is not valid."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ActiveInCountriesRelationship" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "UA"
                },
                "type" : {
                  "type" : "string",
                  "example" : "countries"
                }
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "related" : {
                "type" : "string",
                "example" : "/v1/deposit-methods/dm_fyBYShF7DuOXzeiR/active_in_countries"
              }
            }
          }
        },
        "description" : "Active in countries"
      },
      "Bank" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/BankAttributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Bank`s ID",
            "example" : "bnk_ROO9xUfcBUwOIsqI"
          },
          "links" : {
            "$ref" : "#/components/schemas/SelfLinks"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/BankRelationships"
          },
          "type" : {
            "type" : "string",
            "example" : "banks"
          }
        }
      },
      "BankAttributes" : {
        "type" : "object",
        "properties" : {
          "account_number" : {
            "type" : "string"
          },
          "bank_code" : {
            "type" : "string"
          },
          "bic" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string",
            "description" : "Bank`s code",
            "example" : "pat_kb_privatbank"
          },
          "iban" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Bank`s name",
            "example" : "Test"
          },
          "sort_code" : {
            "type" : "string",
            "example" : "305299"
          },
          "status" : {
            "type" : "string",
            "description" : "Status [active, liquidated, problem, deleted]",
            "example" : "active"
          },
          "vatin" : {
            "type" : "string"
          }
        },
        "description" : "Array of bank attributes"
      },
      "BankOrganization" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BankOrganizationData"
          },
          "links" : {
            "$ref" : "#/components/schemas/BankOrganizationLinks"
          }
        }
      },
      "BankOrganizationData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Organization`s ID",
            "example" : "org_qXJX8D9I5VCQjCOH"
          },
          "type" : {
            "type" : "string",
            "example" : "organizations"
          }
        }
      },
      "BankOrganizationLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/banks/bnk_ROO9xUfcBUwOIsqI/organization"
          }
        }
      },
      "BankRelationships" : {
        "type" : "object",
        "properties" : {
          "organization" : {
            "$ref" : "#/components/schemas/BankOrganization"
          }
        }
      },
      "BankResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Bank"
          }
        }
      },
      "BanksResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Bank"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResponseLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ResponseMeta"
          }
        }
      },
      "CountriesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResponseLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ResponseMeta"
          }
        }
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/CountryAttributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Country`s ID",
            "example" : "UA"
          },
          "links" : {
            "$ref" : "#/components/schemas/SelfLinks"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/CountryRelationships"
          },
          "type" : {
            "type" : "string",
            "example" : "countries"
          }
        }
      },
      "CountryAttributes" : {
        "type" : "object",
        "properties" : {
          "area" : {
            "type" : "string",
            "description" : "Countryâ€™s area (sq km)",
            "example" : "603700"
          },
          "calling_codes" : {
            "type" : "array",
            "description" : "Array of country`s phone codes",
            "example" : [ 380 ],
            "items" : {
              "type" : "integer"
            }
          },
          "capital" : {
            "type" : "string",
            "description" : "Countryâ€™s capital",
            "example" : "Kyiv"
          },
          "code_alpha3" : {
            "type" : "string",
            "description" : "Country`s ISO alpha3 code",
            "example" : "UKR"
          },
          "languages" : {
            "type" : "array",
            "description" : "Array of country`s languages",
            "example" : [ "uk" ],
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Country`s name",
            "example" : "Ukraine"
          },
          "native_name" : {
            "type" : "string",
            "description" : "Country`s nativ name",
            "example" : "Ð£ÐºÑ€Ð°Ñ—Ð½Ð°"
          },
          "population" : {
            "type" : "string",
            "description" : "Countryâ€™s population",
            "example" : "42836922"
          },
          "region" : {
            "type" : "string",
            "description" : "Countryâ€™s region:<br>\n\n  * Africa\n  * Americas\n  * Asia\n  * Europe\n  * Oceania\n  * Polar\n",
            "example" : "europe"
          },
          "sub_region" : {
            "type" : "string",
            "description" : "Countryâ€™s sub region:<br>\n\n  * Northern Africa\n  * Southern Africa\n  * Western Africa\n  * Eastern Africa\n  * Middle Africa\n  * Northern America\n  * South America\n  * Central America\n  * Caribbean\n  * Southern Asia\n  * Western Asia\n  * Eastern Asia\n  * South-Eastern Asia\n  * Central Asia\n  * Northern Europe\n  * Southern Europe\n  * Western Europe\n  * Eastern Europe\n  * Polynesia\n  * Australia and New Zealand\n  * Micronesia\n  * Melanesia\n",
            "example" : "eastern_europe"
          },
          "timezones" : {
            "type" : "array",
            "description" : "Array of country`s timezones (UTC)",
            "example" : [ "UTC+02:00" ],
            "items" : {
              "type" : "string"
            }
          },
          "top_level_domains" : {
            "type" : "array",
            "description" : "Array of country`s domains",
            "example" : [ ".ua" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CountryRelationships" : {
        "type" : "object",
        "properties" : {
          "translations" : {
            "$ref" : "#/components/schemas/CountryTranslations"
          }
        }
      },
      "CountryResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Country"
          }
        }
      },
      "CountryTranslations" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "$ref" : "#/components/schemas/CountryTranslationsLinks"
          }
        }
      },
      "CountryTranslationsLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/countries/UA/translations"
          }
        }
      },
      "CurrenciesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Currency"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResponseLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ResponseMeta"
          }
        }
      },
      "Currency" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/CurrencyAttributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Currency ID",
            "example" : "UAH"
          },
          "links" : {
            "$ref" : "#/components/schemas/SelfLinks"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/CurrencyRelationships"
          },
          "type" : {
            "type" : "string",
            "example" : "currencies"
          }
        }
      },
      "CurrencyAttributes" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "type" : "string",
            "description" : "Currency category",
            "example" : "others"
          },
          "code" : {
            "type" : "string",
            "description" : "Currency system code",
            "example" : "UAH"
          },
          "code_estandards_alpha" : {
            "type" : "string",
            "example" : "none"
          },
          "code_iso_alpha3" : {
            "type" : "string",
            "description" : "Currency ISO code",
            "example" : "UAH"
          },
          "code_iso_numeric3" : {
            "type" : "integer",
            "description" : "Currency ISO numeric code",
            "example" : 980
          },
          "code_json_alpha" : {
            "type" : "string",
            "example" : "none"
          },
          "created" : {
            "type" : "string",
            "description" : "Created date in system (in Unixtime)",
            "example" : "1486051665"
          },
          "currency_type" : {
            "type" : "string",
            "description" : "Type of currencies [national, digital, virtual, metal, energy]",
            "example" : "national"
          },
          "decimal_e" : {
            "type" : "string",
            "description" : "Number of digits after the decimal separator",
            "example" : "2"
          },
          "icon" : {
            "$ref" : "#/components/schemas/CurrencyAttributesIcon"
          },
          "issuer" : {
            "type" : "string",
            "description" : "Currency`s issuer"
          },
          "name" : {
            "type" : "string",
            "description" : "Currency description",
            "example" : "Hryvnia"
          },
          "native_symbol" : {
            "type" : "string",
            "description" : "Currencyâ€™s symbol. In general, only for nationals currencies",
            "example" : "â‚´"
          },
          "symbol" : {
            "type" : "string",
            "description" : "Currencyâ€™s symbol. In general, only for nationals currencies",
            "example" : "â‚´"
          }
        },
        "description" : "Array of currencies attributes"
      },
      "CurrencyAttributesIcon" : {
        "type" : "object",
        "properties" : {
          "16" : {
            "type" : "string",
            "description" : "16x16 icon",
            "example" : "https://i.openfintech.io/currencies/UAH/icon_16.png"
          },
          "32" : {
            "type" : "string",
            "description" : "32x32 icon",
            "example" : "https://i.openfintech.io/currencies/UAH/icon_32.png"
          },
          "64" : {
            "type" : "string",
            "description" : "64x64 icon",
            "example" : "https://i.openfintech.io/currencies/UAH/icon_64.png"
          }
        },
        "description" : "Links to currency icons"
      },
      "CurrencyCountries" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "$ref" : "#/components/schemas/CurrencyCountryLinks"
          }
        }
      },
      "CurrencyCountryLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/currencies/UAH/countries"
          }
        }
      },
      "CurrencyIssuer" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CurrencyIssuertData"
          },
          "links" : {
            "$ref" : "#/components/schemas/CurrencyIssuerLinks"
          }
        },
        "description" : "Currency Issuer. 'Only for virtual currency'\n"
      },
      "CurrencyIssuerLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/currencies/UAH/issuer"
          }
        }
      },
      "CurrencyIssuerOrganization" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CurrencyIssuerOrganizationData"
          },
          "links" : {
            "$ref" : "#/components/schemas/CurrencyIssuerOrganizationLinks"
          }
        },
        "description" : "Issuer.\n"
      },
      "CurrencyIssuerOrganizationData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Issuer organization ID"
          },
          "type" : {
            "type" : "string",
            "example" : "currencies"
          }
        }
      },
      "CurrencyIssuerOrganizationLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/currencies/UAH/issuer_organization"
          }
        }
      },
      "CurrencyIssuertData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Issuer ID"
          },
          "type" : {
            "type" : "string",
            "example" : "issuer"
          }
        }
      },
      "CurrencyParent" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CurrencyParentData"
          },
          "links" : {
            "$ref" : "#/components/schemas/CurrencyParentLinks"
          }
        },
        "description" : "Parent currency. 'Only for virtual currency'\n"
      },
      "CurrencyParentData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Parent currency ID",
            "example" : "UAH"
          },
          "type" : {
            "type" : "string",
            "example" : "currencies"
          }
        }
      },
      "CurrencyParentLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/currencies/UAH/parent"
          }
        }
      },
      "CurrencyRelationships" : {
        "type" : "object",
        "properties" : {
          "countries" : {
            "$ref" : "#/components/schemas/CurrencyCountries"
          },
          "issuer" : {
            "$ref" : "#/components/schemas/CurrencyIssuer"
          },
          "issuer_organization" : {
            "$ref" : "#/components/schemas/CurrencyIssuerOrganization"
          },
          "parent" : {
            "$ref" : "#/components/schemas/CurrencyParent"
          }
        }
      },
      "CurrencyResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "DepositMethod" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/DepositMethodAttributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Deposit-methods`s ID",
            "example" : "paym_8NBX4V5fAEmqr3PO"
          },
          "links" : {
            "$ref" : "#/components/schemas/SelfLinks"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/DepositMethodRelationships"
          },
          "type" : {
            "type" : "string",
            "example" : "deposit-methods"
          }
        }
      },
      "DepositMethodAttributes" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "type" : "string",
            "example" : "wallet"
          },
          "code" : {
            "type" : "string",
            "description" : "Deposit-method`s code",
            "example" : "justpayewallet"
          },
          "name" : {
            "type" : "string",
            "description" : "Deposit-method`s name",
            "example" : "TOT Just Pay"
          },
          "processor_name" : {
            "type" : "string",
            "description" : "Deposit-method`s processor",
            "example" : "TOT Just Pay"
          }
        },
        "description" : "Array of Deposit-method attributes"
      },
      "DepositMethodProcessorData" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Processor`s id.",
                  "example" : "ppr_zkqg6xJKCIoWjBB9"
                },
                "type" : {
                  "type" : "string",
                  "description" : "Processor`s type.",
                  "example" : "organizations"
                }
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "related" : {
                "type" : "string",
                "example" : "/v1/payment-methods/pm_QcW80uZ5XefiQYwp/payment-processor"
              }
            }
          }
        },
        "description" : "Processor`s Data."
      },
      "DepositMethodRelationships" : {
        "type" : "object",
        "properties" : {
          "actiove_in_countries" : {
            "$ref" : "#/components/schemas/ActiveInCountriesRelationship"
          },
          "currencies" : {
            "$ref" : "#/components/schemas/CurrencyParent"
          },
          "payment_processor" : {
            "$ref" : "#/components/schemas/DepositMethodProcessorData"
          },
          "supported_psps" : {
            "$ref" : "#/components/schemas/SupportedPspsRelationship"
          }
        }
      },
      "DepositMethodResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DepositMethod"
          }
        }
      },
      "DepositMethodsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DepositMethod"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResponseLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ResponseMeta"
          }
        }
      },
      "Exchanger" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ExchangerAttributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Exchanger`s ID",
            "example" : "exch_1oClKBr43J1xxxAa"
          },
          "links" : {
            "$ref" : "#/components/schemas/SelfLinks"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/ExchangerRelationships"
          },
          "type" : {
            "type" : "string",
            "example" : "exchangers"
          }
        }
      },
      "ExchangerAttributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Exchanger`s name",
            "example" : "Xchange.cc"
          },
          "rates_export_standard" : {
            "type" : "string",
            "example" : "estandard"
          },
          "rates_export_url" : {
            "type" : "string",
            "example" : "https://xchange.cc/valuta.xml"
          },
          "status" : {
            "type" : "string",
            "description" : "Exchanger`s status [active, blocked, deleted]",
            "example" : "active"
          },
          "wmid" : {
            "type" : "integer",
            "description" : "Exchanger`s WebMoney ID",
            "example" : 612345678901
          }
        }
      },
      "ExchangerOrganization" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ExchangerOrganizationData"
          },
          "links" : {
            "$ref" : "#/components/schemas/ExchangerOrganizationLinks"
          }
        }
      },
      "ExchangerOrganizationData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Organization ID",
            "example" : "org_Dr5Wi728plQ0RPA5"
          },
          "type" : {
            "type" : "string",
            "example" : "organizations"
          }
        }
      },
      "ExchangerOrganizationLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/exchangers/exch_1oClKBr43J1xxxAa/organization"
          }
        }
      },
      "ExchangerRelationships" : {
        "type" : "object",
        "properties" : {
          "organization" : {
            "$ref" : "#/components/schemas/ExchangerOrganization"
          }
        }
      },
      "ExchangerResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Exchanger"
          }
        }
      },
      "ExchangersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Exchanger"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResponseLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ResponseMeta"
          }
        }
      },
      "MerchantIndustriesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MerchantIndustry"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResponseLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ResponseMeta"
          }
        }
      },
      "MerchantIndustry" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/MerchantIndustryAttributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Merchant-industry`s ID",
            "example" : "merchind_Cukwq7LEFXiaRpkZ"
          },
          "type" : {
            "type" : "string",
            "example" : "merchant-industries"
          }
        }
      },
      "MerchantIndustryAttributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Merchant-industry`s name",
            "example" : "Airlines"
          }
        },
        "description" : "Array of Merchant-industry attributes"
      },
      "MerchantIndustryResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MerchantIndustry"
          }
        }
      },
      "Organization" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/OrganizationAttributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Organization`s ID",
            "example" : "org_RysJXOwKaGT5o1SZ"
          },
          "links" : {
            "$ref" : "#/components/schemas/SelfLinks"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/OrganizationRelationships"
          },
          "type" : {
            "type" : "string",
            "example" : "organizations"
          }
        }
      },
      "OrganizationActive" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "example" : "none",
            "items" : {
              "type" : "string"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/OrganizationActiveLinks"
          }
        }
      },
      "OrganizationActiveLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/organizations/org_lK1mIKXO1kHOrTeJ/active_in_countries"
          }
        }
      },
      "OrganizationAddress" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "type" : "string",
            "example" : "Kyiv"
          },
          "country" : {
            "type" : "string",
            "example" : "Ukraine"
          },
          "post_code" : {
            "type" : "integer",
            "example" : 2184
          },
          "region" : {
            "type" : "string",
            "description" : "Countryâ€™s region:<br>\n\n  * Africa\n  * Americas\n  * Asia\n  * Europe\n  * Oceania\n  * Polar\n",
            "example" : "Europe"
          },
          "street" : {
            "type" : "string",
            "example" : "Obolonska nab"
          }
        },
        "description" : "Organization`s address"
      },
      "OrganizationAttributes" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/OrganizationAddress"
          },
          "blog" : {
            "type" : "string",
            "description" : "Organization`s blog",
            "example" : "none"
          },
          "code" : {
            "type" : "string",
            "description" : "Organization`s code",
            "example" : "interkassa"
          },
          "contacts" : {
            "$ref" : "#/components/schemas/OrganizationContacts"
          },
          "description" : {
            "type" : "string",
            "description" : "Description",
            "example" : "Payment acceptance system"
          },
          "icon" : {
            "$ref" : "#/components/schemas/OrganizationAttributesIcon"
          },
          "industries" : {
            "type" : "array",
            "description" : "Industries",
            "example" : [ "psp" ],
            "items" : {
              "type" : "string"
            }
          },
          "logo" : {
            "$ref" : "#/components/schemas/OrganizationAttributesLogo"
          },
          "name" : {
            "type" : "string",
            "description" : "Organization`s name",
            "example" : "Interkassa"
          },
          "site" : {
            "type" : "string",
            "description" : "Organization`s site",
            "example" : "https://www.interkassa.com"
          },
          "social_profiles" : {
            "$ref" : "#/components/schemas/OrganizationSocial"
          },
          "status" : {
            "type" : "string",
            "description" : "Organization`s status [active, liquidated, deleted]",
            "example" : "active"
          },
          "wiki" : {
            "type" : "string",
            "description" : "Organization`s wiki",
            "example" : "https://www.interkassa.com/wiki/"
          }
        }
      },
      "OrganizationAttributesIcon" : {
        "type" : "object",
        "properties" : {
          "16" : {
            "type" : "string",
            "description" : "16x16 icon",
            "example" : "https://i.openfintech.io/organizations/Interkassa/icon_16.png"
          },
          "32" : {
            "type" : "string",
            "description" : "32x32 icon",
            "example" : "https://i.openfintech.io/organizations/Interkassa/icon_32.png"
          },
          "64" : {
            "type" : "string",
            "description" : "64x64 icon",
            "example" : "https://i.openfintech.io/organizations/Interkassa/icon_64.png"
          }
        },
        "description" : "Links to organization icons"
      },
      "OrganizationAttributesLogo" : {
        "type" : "object",
        "properties" : {
          "50" : {
            "type" : "string",
            "description" : "50x50 logo",
            "example" : "https://i.openfintech.io/organizations/Interkassa/logo_50.png"
          },
          "100" : {
            "type" : "string",
            "description" : "100x100 logo",
            "example" : "https://i.openfintech.io/organizations/Interkassa/logo_100.png"
          },
          "150" : {
            "type" : "string",
            "description" : "150x150 logo",
            "example" : "https://i.openfintech.io/organizations/Interkassa/logo_150.png"
          }
        },
        "description" : "Links to organization logos"
      },
      "OrganizationContacts" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "example" : "support@interkassa.com"
          },
          "fax" : {
            "type" : "string",
            "example" : "1234"
          },
          "phone" : {
            "type" : "string",
            "example" : "380445859331"
          },
          "skype" : {
            "type" : "string",
            "example" : "skype.ik"
          }
        },
        "description" : "Organization`s contacts"
      },
      "OrganizationHq" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/OrganizationHqData"
          },
          "links" : {
            "$ref" : "#/components/schemas/OrganizationHqLinks"
          }
        }
      },
      "OrganizationHqData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "HQ location",
            "example" : "UA"
          },
          "type" : {
            "type" : "string",
            "example" : "countries"
          }
        }
      },
      "OrganizationHqLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/organizations/org_lK1mIKXO1kHOrTeJ/hq_in_country"
          }
        }
      },
      "OrganizationRelationships" : {
        "type" : "object",
        "properties" : {
          "active_in_countries" : {
            "$ref" : "#/components/schemas/OrganizationActive"
          },
          "hq_in_country" : {
            "$ref" : "#/components/schemas/OrganizationHq"
          },
          "source_register_org" : {
            "$ref" : "#/components/schemas/OrganizationSource"
          }
        }
      },
      "OrganizationResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Organization"
          }
        }
      },
      "OrganizationSocial" : {
        "type" : "object",
        "properties" : {
          "facebook" : {
            "type" : "string",
            "example" : "none"
          },
          "google_plus" : {
            "type" : "string",
            "example" : "none"
          },
          "linked_in" : {
            "type" : "string",
            "example" : "none"
          },
          "twitter" : {
            "type" : "string",
            "example" : "none"
          },
          "vkontakte" : {
            "type" : "string",
            "example" : "none"
          }
        },
        "description" : "Social profiles"
      },
      "OrganizationSource" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/OrganizationSourceData"
          },
          "links" : {
            "$ref" : "#/components/schemas/OrganizationSourceLinks"
          }
        }
      },
      "OrganizationSourceData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "OrganizationSourceLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/organizations/org_lK1mIKXO1kHOrTeJ/source_register_org"
          }
        }
      },
      "OrganizationsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Organization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResponseLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ResponseMeta"
          }
        }
      },
      "PaymentMethod" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/PaymentMethodAttributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Payment-methods`s ID",
            "example" : "paym_8NBX4V5fAEmqr3PO"
          },
          "links" : {
            "$ref" : "#/components/schemas/SelfLinks"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/PaymentMethodRelationships"
          },
          "type" : {
            "type" : "string",
            "example" : "payment-methods"
          }
        }
      },
      "PaymentMethodAttributes" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "type" : "string",
            "example" : "wallet"
          },
          "code" : {
            "type" : "string",
            "description" : "Payment-method`s code",
            "example" : "justpayewallet"
          },
          "name" : {
            "type" : "string",
            "description" : "Payment-method`s name",
            "example" : "TOT Just Pay"
          },
          "processor_name" : {
            "type" : "string",
            "description" : "Payment-method`s processor",
            "example" : "TOT Just Pay"
          }
        },
        "description" : "Array of Payment-method attributes"
      },
      "PaymentMethodCurrencies" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PaymentMethodCurrenciesLinks"
          }
        }
      },
      "PaymentMethodCurrenciesLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/payment-methods/pm_QcW80uZ5XefiQYwp/payment-processor"
          }
        }
      },
      "PaymentMethodProcessor" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PaymentMethodProcessorData"
          },
          "links" : {
            "$ref" : "#/components/schemas/PaymentMethodProcessorLinks"
          }
        },
        "description" : "Payment-method issuer."
      },
      "PaymentMethodProcessorData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Processor`s id.",
            "example" : "ppr_zkqg6xJKCIoWjBB9"
          },
          "type" : {
            "type" : "string",
            "description" : "Processor`s type.",
            "example" : "payment-method-issuer"
          }
        },
        "description" : "Processor`s Data."
      },
      "PaymentMethodProcessorLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/payment-methods/paym_8NBX4V5fAEmqr3PO/payment-processor"
          }
        }
      },
      "PaymentMethodRelationships" : {
        "type" : "object",
        "properties" : {
          "currencies" : {
            "$ref" : "#/components/schemas/PaymentMethodCurrencies"
          },
          "payment-processor" : {
            "$ref" : "#/components/schemas/PaymentMethodProcessor"
          }
        }
      },
      "PaymentMethodResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PaymentMethod"
          }
        }
      },
      "PaymentMethodsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaymentMethod"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResponseLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ResponseMeta"
          }
        }
      },
      "PaymentProvider" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/PaymentProviderAttributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Payment-provider`s ID",
            "example" : "psp_f9VUSVUhsl7Rm0JD"
          },
          "links" : {
            "$ref" : "#/components/schemas/SelfLinks"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/PaymentProviderRelationships"
          },
          "type" : {
            "type" : "string",
            "example" : "payment-providers"
          }
        }
      },
      "PaymentProviderAttributes" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Payment-provider`s code",
            "example" : "Interkassa"
          },
          "features" : {
            "type" : "array",
            "example" : "[ \"multi_currency\" ]",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Payment-provider`s name",
            "example" : "interkassa"
          },
          "sales_channels" : {
            "type" : "array",
            "example" : "[ \"e_commerce\" ]",
            "items" : {
              "type" : "string"
            }
          },
          "types" : {
            "type" : "array",
            "example" : "[\n  \"aggregator\"\n]",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Array of Payment-provider attributes"
      },
      "PaymentProviderOrganization" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PaymentProviderOrganizationData"
          },
          "links" : {
            "$ref" : "#/components/schemas/PaymentProviderOrganizationLinks"
          }
        }
      },
      "PaymentProviderOrganizationData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Organization`s ID",
            "example" : "org_lK1mIKXO1kHOrTeJ"
          },
          "type" : {
            "type" : "string",
            "example" : "organizations"
          }
        }
      },
      "PaymentProviderOrganizationLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/payment-providers/psp_f9VUSVUhsl7Rm0JD/organization"
          }
        }
      },
      "PaymentProviderPaymentMethods" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "example" : [ ],
            "items" : {
              "type" : "string"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PaymentProviderPaymentMethodsLinks"
          }
        }
      },
      "PaymentProviderPaymentMethodsLinks" : {
        "type" : "object",
        "properties" : {
          "related" : {
            "type" : "string",
            "example" : "/v1/payment-providers/psp_f9VUSVUhsl7Rm0JD/payment-methods"
          }
        }
      },
      "PaymentProviderRelationships" : {
        "type" : "object",
        "properties" : {
          "organization" : {
            "$ref" : "#/components/schemas/PaymentProviderOrganization"
          },
          "payment-methods" : {
            "$ref" : "#/components/schemas/PaymentProviderPaymentMethods"
          }
        }
      },
      "PaymentProviderResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PaymentProvider"
          }
        }
      },
      "PaymentProvidersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaymentProvider"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResponseLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ResponseMeta"
          }
        }
      },
      "ResponseLinks" : {
        "required" : [ "first", "last" ],
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "string",
            "description" : "first page of query",
            "example" : "/v1/{path}?page[number]=1&page[size]=10"
          },
          "last" : {
            "type" : "string",
            "description" : "last page of query",
            "example" : "/v1/{path}?page[number]=42&page[size]=10"
          },
          "next" : {
            "type" : "string",
            "description" : "next page in query",
            "example" : "/v1/{path}?page[number]=41&page[size]=10"
          },
          "prev" : {
            "type" : "string",
            "description" : "previous page in query",
            "example" : "/v1/{path}?page[number]=39&page[size]=10"
          }
        }
      },
      "ResponseMeta" : {
        "type" : "object",
        "properties" : {
          "pages" : {
            "type" : "integer",
            "description" : "total pages",
            "example" : 42
          },
          "total" : {
            "type" : "integer",
            "description" : "total objects in query",
            "example" : 419
          }
        }
      },
      "SelfLinks" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "example" : "/v1/{path}/{id}"
          }
        }
      },
      "SupportedPspsRelationship" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "psp_xhaKgsBvEUZzWGIP"
                },
                "type" : {
                  "type" : "string",
                  "example" : "payment-providers"
                }
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "related" : {
                "type" : "string",
                "example" : "/v1/deposit-methods/dm_fyBYShF7DuOXzeiR/supported_psps"
              }
            }
          }
        },
        "description" : "Supported psps"
      }
    },
    "parameters" : {
      "id" : {
        "name" : "id",
        "in" : "path",
        "description" : "Unique ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    }
  }
}