{
  "mappings" : [ {
    "id" : "8d5c5388-e637-4bf2-a2ce-55084b95e3aa",
    "name" : "Retrieve a list of links connected to a specific asset. Links represent the data...",
    "request" : {
      "urlPath" : "/v1/j9nxp697b7khnzdlr77rybj30o7plprxyarqdh4f7p24n6m3xjuncyab19irmhevg411yirab2yml08ug5oallaqxdturpwvxbcaw4yoavkg73z3raxauzkbql0z9m1k1zc2wr8we31wa17t85xqaggnld7g7zoevgyvmfemdw:searchLinks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"woufzn1kyo54o40tz3imyk3la5399w3xgqimhen53plha2m84db4vmde5shjtotgslx4csy0ylam2sufwj606at00xutabqcoid74vdyanop0deiqo6mk5gjbnt6mxrqp\",\n  \"links\" : [ {\n    \"name\" : \"Mrs. Cornelius Kulas\",\n    \"startTime\" : \"2022-08-16T08:03:47.692919Z\",\n    \"endTime\" : \"2022-07-15T09:21:47.692949Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Leandro Tromp\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Herbert Monahan MD\"\n    }\n  }, {\n    \"name\" : \"Tari Adams V\",\n    \"startTime\" : \"2022-11-12T05:55:47.693114Z\",\n    \"endTime\" : \"2022-06-11T06:24:47.693142Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Azalee Ratke\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Merlin Wuckert\"\n    }\n  }, {\n    \"name\" : \"Rubi Connelly\",\n    \"startTime\" : \"2022-06-03T06:49:47.693299Z\",\n    \"endTime\" : \"2022-05-11T06:32:47.693326Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Sierra Reichel\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Spencer Casper\"\n    }\n  }, {\n    \"name\" : \"Keven Nicolas\",\n    \"startTime\" : \"2023-01-05T05:51:47.693478Z\",\n    \"endTime\" : \"2022-12-19T06:22:47.693503Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Rayford Mertz\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Dr. Marcelino Effertz\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d5c5388-e637-4bf2-a2ce-55084b95e3aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.693663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.searchLinks",
          "schema" : {
            "description" : "Response message for SearchLinks.",
            "properties" : {
              "links" : {
                "description" : "The list of links for a given asset. Can be empty if the asset has no relations of requested type (source or target).",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1Link"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the subsequent call to get the next page. Omitted if there are no more pages in the response.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "ed8042ac-e328-4073-ac59-efa72e6a676d",
    "name" : "Retrieve information about LineageProcesses associated with specific links. Line...",
    "request" : {
      "urlPath" : "/v1/f0b6yhu3stguhz8lxxd001x38f16q3ntzgtdp7n5nuxedc:batchSearchLinkProcesses",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"processLinks\" : [ {\n    \"process\" : \"qfi\",\n    \"links\" : [ {\n      \"link\" : \"hksmvrnhusxx9c5b5kk3blkljoazre11xzb6ukrvgjcmeahlevwbw6yc7viw5k21ov7uohf8rq6ph5a0ytp4emip0dzw2qhwgcp5rc8ei8ag9vlpnx17e\",\n      \"startTime\" : \"2022-11-19T09:00:47.691152Z\",\n      \"endTime\" : \"2022-07-16T08:56:47.691184Z\"\n    }, {\n      \"link\" : \"xc69lbf3bidpz9tjvpdf4ifzhn302tq0nclidq4mm2fl4tgucpwj1ykogude9ztc\",\n      \"startTime\" : \"2022-10-30T05:40:47.691224Z\",\n      \"endTime\" : \"2023-03-22T06:08:47.691252Z\"\n    }, {\n      \"link\" : \"stmbsm6lwt49ag67l3wiuw9p2mk0w6w07wmdl8knojotqojf8t4ubv0uqhfvoqv5r92f7rqkx4ctoah6x3lb\",\n      \"startTime\" : \"2022-08-13T08:56:47.691292Z\",\n      \"endTime\" : \"2022-12-31T05:35:47.691319Z\"\n    }, {\n      \"link\" : \"du9xg7ooibgv8852uzkcrflr1mdqqvuivo4ebsxfrytriwhi4qubtvrx9fgt64x92uu3qlt8opjxxekgik38e29ymiucqc5s8wua1fvvjiaa61vpw35xyfk3wkjn5zorr9d2ds84tzncwy2gycilbzw0rd7ezdccwic6my09xkgd0jw\",\n      \"startTime\" : \"2022-06-03T08:55:47.69136Z\",\n      \"endTime\" : \"2022-09-12T07:48:47.691387Z\"\n    }, {\n      \"link\" : \"9fmem0a91x9obvmnh1uatos31qcui4zwpvp94627faplt8fuof9rtrq7ta3o1mc4f4k4ffqymisi2gw9rye18qk1jfatk5vscggiz6o1n1cwkfid6c94qz0lyptl2vsqb64wo8u3wb66lj\",\n      \"startTime\" : \"2023-01-20T09:05:47.691426Z\",\n      \"endTime\" : \"2022-06-05T06:20:47.691452Z\"\n    }, {\n      \"link\" : \"chddl95snkdpqmkglwylpj7csiqxxqlkmn768bafrk7o2n9x7gtzpq6nuvkaglr5w4leb44iosaf2xviftfp7rur0vpoyrywbuols2c0wlse30y0evc12ukgpir0md55umwipccm8ibhn1pq3n4xx73ynvpvldtdm\",\n      \"startTime\" : \"2022-07-13T09:07:47.691492Z\",\n      \"endTime\" : \"2022-04-27T05:56:47.69152Z\"\n    } ]\n  }, {\n    \"process\" : \"hagcwndarjczfhuecakrwj4v1mavbe5q\",\n    \"links\" : [ {\n      \"link\" : \"tks0anrwepc7823g74z\",\n      \"startTime\" : \"2022-08-22T07:04:47.691575Z\",\n      \"endTime\" : \"2022-05-30T08:17:47.691602Z\"\n    }, {\n      \"link\" : \"yqytletga33xciajegluouqske94fi3\",\n      \"startTime\" : \"2022-08-29T09:12:47.691641Z\",\n      \"endTime\" : \"2022-07-08T07:11:47.69167Z\"\n    }, {\n      \"link\" : \"9vzxeipt6b58tzyc43y31qrzxvkjsx3t1ojh1eq9904z7ktht5hc2hn1jebp2f8zt378dy52jv5a9994ypf2zqt6pp2sggohnh75jc88q6nc0e\",\n      \"startTime\" : \"2022-04-29T08:25:47.691712Z\",\n      \"endTime\" : \"2022-06-13T06:12:47.69174Z\"\n    }, {\n      \"link\" : \"qm6t6638rr2i6g1safbbmuxu34l0zhqd7sep7dgcng153dyk0p4mupxlhev9065z37350izr\",\n      \"startTime\" : \"2022-10-26T07:07:47.691782Z\",\n      \"endTime\" : \"2022-07-20T08:21:47.691814Z\"\n    } ]\n  }, {\n    \"process\" : \"qn9wb2btyzin2bzwhyml98alwh0j198gzyerbcswzixbinzno9uim\",\n    \"links\" : [ {\n      \"link\" : \"95ib5c20k7gbq0rsioyvq0srvq\",\n      \"startTime\" : \"2022-10-07T07:17:47.691871Z\",\n      \"endTime\" : \"2022-10-18T05:49:47.691897Z\"\n    }, {\n      \"link\" : \"7h5pxudgazzv8u7ycms5okzsivn5ngqpyoxyco85f8s5jci41bwec5sbistl7bzkq0j35k3ojy40dpp5ti1g7qm3z0hwoni4v3z4rn1u5sk4qtdtcr2x2mdorqmuyo7ep63t0zi2u7jhdsk1v18nhwpdwis\",\n      \"startTime\" : \"2022-10-26T06:40:47.691936Z\",\n      \"endTime\" : \"2022-05-26T07:33:47.691965Z\"\n    }, {\n      \"link\" : \"22gwhaa1omso6w5lfdfswrfx1g\",\n      \"startTime\" : \"2023-03-14T06:13:47.692003Z\",\n      \"endTime\" : \"2022-06-28T07:40:47.692032Z\"\n    }, {\n      \"link\" : \"mg1fxk167z3\",\n      \"startTime\" : \"2023-03-04T07:52:47.69207Z\",\n      \"endTime\" : \"2022-06-22T08:19:47.692099Z\"\n    } ]\n  }, {\n    \"process\" : \"4qmjlvvj8765kkv83xh7p083whuutzniyrq7ziwzo528w5z4phzwz3tnybsrcj1m8wg22m0z9jvrfmu8wgjmwkl0n79d4jz0d57hvzun2z\",\n    \"links\" : [ {\n      \"link\" : \"qret26ketordcra2665anbmqvv5mvi43y3p2nvpr72elbm9dl0tf83kqt0t7cozgksho8u5zfasgvkti6a6niv0qkedp08133sujxcastaoecjquvx9bejq5rwafux2q751kt\",\n      \"startTime\" : \"2022-09-29T06:25:47.692158Z\",\n      \"endTime\" : \"2022-10-05T07:20:47.692184Z\"\n    }, {\n      \"link\" : \"40453kibdctouse0j9pxu1mb6ztipxbfref5z5vu6o7rc1kxzperom5plgqu947qm4xy4go2shxmg5j0qat1w0dzf6mjlxhddtmy1dhqambi1\",\n      \"startTime\" : \"2022-05-22T05:36:47.692225Z\",\n      \"endTime\" : \"2022-06-16T06:00:47.692252Z\"\n    } ]\n  }, {\n    \"process\" : \"50svjg04qdozq43c53tqwuk3l9rvhgncvqfwffvgmdz6behbr9gca6oyqs3s1qy5u19bdy58or8bf9vzkq48c08n63zeym3gyxwn8o5bk00qh9knwmkpeoxa6u006qqjj3hcdeov5m4cipph2dwweyubmpj6zwy\",\n    \"links\" : [ {\n      \"link\" : \"5pezeuh1rlxqhr7cjvaxluj18ealjujolcvkr6ma1byrtlznt6vhbw8hywlqn8eb65sojnlm9m8xn3ufimatby22p3bwym\",\n      \"startTime\" : \"2022-11-10T05:32:47.69231Z\",\n      \"endTime\" : \"2022-11-27T06:13:47.692338Z\"\n    } ]\n  }, {\n    \"process\" : \"envcousol4bfo507kwgngk8mxkhusdvx5lma406lecy14e9fgeb3qwnzzwyb0pbchoo2s0aitu6mddqf54isp4eo9d1uq6wyqtf9zt9dneebikpyc4ktqs2\",\n    \"links\" : [ {\n      \"link\" : \"k6z9z9rz2hi18mpdkg5v2wz41mqxjhicaomerip8jxs0mdgc0fjaahejx4yawhgy7uw4dcxaqyc0eae6f47k1tpixp6rv8b0xjjzenwu\",\n      \"startTime\" : \"2022-04-24T08:05:47.692395Z\",\n      \"endTime\" : \"2022-04-09T07:14:47.692424Z\"\n    }, {\n      \"link\" : \"miasccwxqesd4xxsylnp34lctvqbztpybis59syumysc75dcc1f6ck6krexva9sbw37i2uut7ka8qaojozyp2hygbgcrg2bqhc08wn3kgz61\",\n      \"startTime\" : \"2023-01-27T06:16:47.692465Z\",\n      \"endTime\" : \"2022-05-12T07:15:47.692495Z\"\n    }, {\n      \"link\" : \"8ohfyy8ifeutikiq1u9h5tapmw2jtbq9wz8ak57qr1b6w0seaf475l7s0rn0x6uj8hg7fqzxroktfvjndok8n86l04j6py5807ul6lmt1cy7oyborreprj3scj8xw4isk04llx1d7sormzvkus1xbipu75wwmqjr\",\n      \"startTime\" : \"2023-01-25T05:38:47.692535Z\",\n      \"endTime\" : \"2022-09-03T07:55:47.692563Z\"\n    }, {\n      \"link\" : \"7jyxn3enrmf0v6jy4b8omp7wln2lpg25s3gjl7p24d\",\n      \"startTime\" : \"2022-04-15T08:39:47.692603Z\",\n      \"endTime\" : \"2022-09-14T08:41:47.692632Z\"\n    }, {\n      \"link\" : \"cacjcek394fcm0185zpchy3eeittr6yeup0bfdyjf51sjw0lg2izul04yxlbzk1jgerqo43i24gd7p46vig47ebyydw8fmwav8aa\",\n      \"startTime\" : \"2022-09-17T07:30:47.69267Z\",\n      \"endTime\" : \"2022-12-25T07:37:47.692699Z\"\n    } ]\n  } ],\n  \"nextPageToken\" : \"9qsdyedjn9gn2ywgow3nigaapfwzzdks0b4kkoavvya4b524a97dhlzda810jnpza51ayc9qelplk3n5j98vfxxlg2ki6mvl0xsu35v4fvdm9ovxwlviu1faqwx58hul9u8kh8a97y2morr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed8042ac-e328-4073-ac59-efa72e6a676d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.692811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.batchSearchLinkProcesses",
          "schema" : {
            "description" : "Response message for BatchSearchLinkProcesses.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the subsequent call to get the next page. Omitted if there are no more pages in the response.",
                "type" : "string"
              },
              "processLinks" : {
                "description" : "An array of processes associated with the specified links.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1ProcessLinks"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "8ee43130-1667-42b5-98e5-fed593c0aaa2",
    "name" : "Creates a new run.",
    "request" : {
      "urlPath" : "/v1/7zfxp4jsi16ozbu0ykpjv5nz0g591jo9qil726agcstf5ys3qy96jcdkltte1qfi7cc3amejl1uerbxb0j7llmmuzfjnfiox1u2e7stptkqc7rai346o/runs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Andrew Heidenreich\",\n  \"name\" : \"Tyisha Herzog\",\n  \"attributes\" : { },\n  \"startTime\" : \"2022-08-21T06:55:47.690919Z\",\n  \"endTime\" : \"2023-01-25T06:12:47.690944Z\",\n  \"state\" : \"UNKNOWN\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ee43130-1667-42b5-98e5-fed593c0aaa2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.691066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.create",
          "schema" : {
            "description" : "A lineage run represents an execution of a process that creates lineage events.",
            "properties" : {
              "attributes" : {
                "description" : "Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.",
                "type" : "object"
              },
              "displayName" : {
                "description" : "Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`",
                "type" : "string"
              },
              "endTime" : {
                "description" : "Optional. The timestamp of the end of the run.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Required. The timestamp of the start of the run.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "state" : {
                "description" : "Required. The state of the run.",
                "enum" : [ "UNKNOWN", "STARTED", "COMPLETED", "FAILED", "ABORTED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d3939cc1-2201-4d84-8493-40ab9fda2b90",
    "name" : "Lists runs in the given project and location. List order is descending by `start...",
    "request" : {
      "urlPath" : "/v1/cgo7u4ppdk5i81114bb9h8hjr5o2538f473w6dbluky99ydvb0dw0p6ydwhs6cexvjkjw7loeahnwiehjgl8ehaexuvv0mr4o4tg8zjp35eoybkzf7dn4pe670dvvx2x15or0g4pjfp0ibqk8wwntkteiefcujgjsksgjm97ry7fx9d4nkm2pa/runs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"34ae74govczsx85of4ek16fe30bbg1yi9bu8sg6zkefbdzf3hpgsaj958uof8kko4fskua5vmxw6vebla1pxawag2wde1p36w4tn9r1pryu97agkejwvqv25nhaamj0t09rsq\",\n  \"runs\" : [ {\n    \"displayName\" : \"Omar Marquardt\",\n    \"name\" : \"Marquis Kihn\",\n    \"attributes\" : { },\n    \"startTime\" : \"2022-12-19T08:06:47.690705Z\",\n    \"endTime\" : \"2023-01-02T09:23:47.690735Z\",\n    \"state\" : \"ABORTED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3939cc1-2201-4d84-8493-40ab9fda2b90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.690814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.list",
          "schema" : {
            "description" : "Response message for ListRuns.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the next call to get the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              },
              "runs" : {
                "description" : "The runs from the specified project and location.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1Run"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "1467c3a9-c88c-4240-81cf-d7115663850f",
    "name" : "Creates a new process.",
    "request" : {
      "urlPath" : "/v1/9flens0qsdiw3si62qqnctn117ynvqwzbcdzowa34sgbjqtabye5mmvwfx7b8pvisof/processes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Luis Langosh\",\n  \"origin\" : {\n    \"sourceType\" : \"DATA_FUSION\",\n    \"name\" : \"Otto Schultz\"\n  },\n  \"name\" : \"Kennith Hansen\",\n  \"attributes\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1467c3a9-c88c-4240-81cf-d7115663850f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.69055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.create",
          "schema" : {
            "description" : "A process is the definition of a data transformation operation.",
            "properties" : {
              "attributes" : {
                "description" : "Optional. The attributes of the process. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the process). Up to 100 attributes are allowed.",
                "type" : "object"
              },
              "displayName" : {
                "description" : "Optional. A human-readable name you can set to display in a user interface. Must be not longer than 200 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`",
                "type" : "string"
              },
              "name" : {
                "description" : "Immutable. The resource name of the lineage process. Format: `projects/{project}/locations/{location}/processes/{process}`. Can be specified or auto-assigned. {process} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "origin" : {
                "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1Origin"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9b543963-04e5-4998-9857-1f6004258911",
    "name" : "List processes in the given project and location. List order is descending by in...",
    "request" : {
      "urlPath" : "/v1/9t859/processes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"processes\" : [ {\n    \"displayName\" : \"Hortensia Cruickshank\",\n    \"origin\" : {\n      \"sourceType\" : \"COMPOSER\",\n      \"name\" : \"Juli Shields\"\n    },\n    \"name\" : \"Lorenzo Kulas PhD\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Jeremy Larson\",\n    \"origin\" : {\n      \"sourceType\" : \"DATAPROC\",\n      \"name\" : \"Walter McCullough\"\n    },\n    \"name\" : \"Tyler Kshlerin\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Angelo Ryan IV\",\n    \"origin\" : {\n      \"sourceType\" : \"DATA_FUSION\",\n      \"name\" : \"Kari Schowalter V\"\n    },\n    \"name\" : \"Leilani Kutch\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Millard Hand III\",\n    \"origin\" : {\n      \"sourceType\" : \"DATA_FUSION\",\n      \"name\" : \"Dominga Bergnaum\"\n    },\n    \"name\" : \"Shawnee Shields\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Roxana Heathcote\",\n    \"origin\" : {\n      \"sourceType\" : \"BIGQUERY\",\n      \"name\" : \"Sam Rippin\"\n    },\n    \"name\" : \"Miss Jeff Cummings\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Ayanna Herman III\",\n    \"origin\" : {\n      \"sourceType\" : \"COMPOSER\",\n      \"name\" : \"Willard Crooks\"\n    },\n    \"name\" : \"Porsche O'Reilly\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Dr. Enid Bogan\",\n    \"origin\" : {\n      \"sourceType\" : \"SOURCE_TYPE_UNSPECIFIED\",\n      \"name\" : \"Edwin Brekke\"\n    },\n    \"name\" : \"Mr. Maisie Monahan\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Manual Goldner\",\n    \"origin\" : {\n      \"sourceType\" : \"DATA_FUSION\",\n      \"name\" : \"Lynette Tremblay\"\n    },\n    \"name\" : \"Heike Sauer\",\n    \"attributes\" : { }\n  } ],\n  \"nextPageToken\" : \"jhr7tizgh7vdu35mkkk5fc1nu3eidt3gyrt35qiiv9kbdpcpj6vursvn0jjdzlp99313d4leyp4fc06djduqcju5wlmkwxhc7l078upmotblcyo18gx5i1uwuh2q0hupcme97pptu1954tyhi396nmrwi5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b543963-04e5-4998-9857-1f6004258911",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.690332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.list",
          "schema" : {
            "description" : "Response message for ListProcesses.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the next call to get the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              },
              "processes" : {
                "description" : "The processes from the specified project and location.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1Process"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "33659bcb-c66a-42a6-8713-7e7fd78f5cba",
    "name" : "Creates a new lineage event.",
    "request" : {
      "urlPath" : "/v1/p8rbs6o22jb0tvz0armzxdo03jomchf260uwh1a1tlg7mbg9nnh99u6w801mc2tv62rm1k1oh7ux30zgm7ssrprbzr96ftik12ki6blwkf61lb00bn4yfybh8uhk9/lineageEvents",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Tabetha Hickle II\",\n  \"links\" : [ {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Mr. Maryanna Wolf\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Clair Kling\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Emmitt Okuneva\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Brigitte Jakubowski\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Jolanda Rodriguez V\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Johnette Reichel\"\n    }\n  } ],\n  \"startTime\" : \"2023-01-17T05:28:47.689014Z\",\n  \"endTime\" : \"2022-12-14T06:15:47.689038Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33659bcb-c66a-42a6-8713-7e7fd78f5cba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.689117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.lineageEvents.create",
          "schema" : {
            "description" : "A lineage event represents an operation on assets. Within the operation, the data flows from the source to the target defined in the links field.",
            "properties" : {
              "endTime" : {
                "description" : "Optional. The end of the transformation which resulted in this lineage event. For streaming scenarios, it should be the end of the period from which the lineage is being reported.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "links" : {
                "description" : "Optional. List of source-target pairs. Can't contain more than 100 tuples.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1EventLink"
                },
                "type" : "array"
              },
              "name" : {
                "description" : "Immutable. The resource name of the lineage event. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`. Can be specified or auto-assigned. {lineage_event} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Optional. The beginning of the transformation which resulted in this lineage event. For streaming scenarios, it should be the beginning of the period from which the lineage is being reported.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "a529e28e-d2e3-49db-b5ba-d166a6a8c03a",
    "name" : "Lists lineage events in the given project and location. The list order is not de...",
    "request" : {
      "urlPath" : "/v1/54i5u7emsr4eaq19hry8xwj9yfwkslgiqcpzpnbmog04i5ld8oihtedf0jxps1inc7ml29bg2hbs8wdpmyug4dcmvuwg1n22bm66ppmkuzat/lineageEvents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"gkgcf33j9l4t35a29jw7kd2d252ehytm5k16dr0ii4zs9yyjqsk214falp624afxb28vihltw9d05jrxl8oq77eh29ndg0geoahvu2w0yxi3haxzmtoqtqwdfitil7566cd2jkfm68j2hp2t55ogn19iy0hw3b29njv3b12cq9618s0xit8fap9lp25lk8uug\",\n  \"lineageEvents\" : [ {\n    \"name\" : \"Lacy Kutch\",\n    \"links\" : [ {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Freddie Robel\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Virgilio Shields Sr.\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Roxane Conn\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Cesar Pollich Sr.\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Deann Brekke\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Mr. Alise Sawayn\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Sharon Quigley\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Jamison Hermann\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Ms. Anthony Conn\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Juan Conroy\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Darnell Wisoky\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Miss Farah Hilll\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Cherly Hodkiewicz\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Terence Morar MD\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Ms. Sharlene Beer\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Ms. Rosette Runolfsson\"\n      }\n    } ],\n    \"startTime\" : \"2022-11-27T05:30:47.686833Z\",\n    \"endTime\" : \"2022-05-03T06:13:47.686866Z\"\n  }, {\n    \"name\" : \"Mrs. Lanelle Cole\",\n    \"links\" : [ {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Roselyn O'Conner\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Sunday Hettinger\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Eusebio Renner\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"John Lehner\"\n      }\n    } ],\n    \"startTime\" : \"2022-11-28T06:32:47.687133Z\",\n    \"endTime\" : \"2022-08-07T05:30:47.687162Z\"\n  }, {\n    \"name\" : \"Dr. Boyd Lindgren\",\n    \"links\" : [ {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Wei Kohler\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Pasty McClure III\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Lino Abernathy\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Edmundo Effertz\"\n      }\n    } ],\n    \"startTime\" : \"2022-12-06T06:37:47.687428Z\",\n    \"endTime\" : \"2022-04-24T08:24:47.687454Z\"\n  }, {\n    \"name\" : \"Harley Hilpert\",\n    \"links\" : [ {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Garret Roberts\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Asley Marquardt I\"\n      }\n    } ],\n    \"startTime\" : \"2023-03-02T05:26:47.687631Z\",\n    \"endTime\" : \"2023-01-05T09:16:47.687657Z\"\n  }, {\n    \"name\" : \"Kelvin McDermott\",\n    \"links\" : [ {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Mr. Genia Fritsch\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Leslie Predovic\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Mr. Harris Huel\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Francis Hermann Sr.\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Bruce Haag\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Lola Lueilwitz\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Kris Zieme\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Joey Osinski\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Palmer Mayert\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Nicky Zboncak\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Rebecka Rempel V\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Renea Dickens\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Robby Heidenreich\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Dionne Kovacek\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Dewitt Satterfield\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Williams Reichel\"\n      }\n    } ],\n    \"startTime\" : \"2022-09-02T07:58:47.688496Z\",\n    \"endTime\" : \"2022-09-11T07:58:47.688524Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a529e28e-d2e3-49db-b5ba-d166a6a8c03a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.68866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.lineageEvents.list",
          "schema" : {
            "description" : "Response message for ListLineageEvents.",
            "properties" : {
              "lineageEvents" : {
                "description" : "Lineage events from the specified project and location.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the next call to get the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "51a56f0a-e04f-40f1-8156-e2acff37c78f",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Marcellus+Fritsch+MD:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51a56f0a-e04f-40f1-8156-e2acff37c78f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.685901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "439b2406-5b7d-4f02-9a2c-60567030c2e2",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Dolly+Cummings/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Anna Hudson\",\n    \"error\" : {\n      \"code\" : 512124912,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Vitae vero mollitia. Animi rem sit consequatur. Libero tenetur consectetur error voluptas numquam. Ut incidunt officia neque voluptatem recusandae voluptatem exercitationem. Natus accusamus et ipsam.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Santiago Kautzer\",\n    \"error\" : {\n      \"code\" : 2047396561,\n      \"details\" : [ { } ],\n      \"message\" : \"Sit et adipisci nostrum laboriosam iure. Nostrum aut officiis placeat dolore dolores unde. Quasi placeat rem dolor tempore nobis necessitatibus enim. Ipsum voluptatem ut non est. Maiores omnis suscipi\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"wehcgzbm13cgvi4lql788q8nmlnf1shvm6fzc99amt2nxmeprajiuddygdxhkdxyrualdljknxui29hclufobachgarx4uknz2f08qotzfg71p4ccgl24j94ea22ojdqikxm8rtw0igwusougabkknzs75pvsphmsa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "439b2406-5b7d-4f02-9a2c-60567030c2e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.685814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "c805b36e-9e7b-454c-8412-07f448679bf1",
    "name" : "Updates a run.",
    "request" : {
      "urlPath" : "/v1/Karma+Leuschke+DVM",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Willard Osinski\",\n  \"name\" : \"Ms. Drucilla Nitzsche\",\n  \"attributes\" : { },\n  \"startTime\" : \"2022-10-04T08:36:47.685166Z\",\n  \"endTime\" : \"2022-12-04T06:59:47.685195Z\",\n  \"state\" : \"FAILED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c805b36e-9e7b-454c-8412-07f448679bf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.685358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.patch",
          "schema" : {
            "description" : "A lineage run represents an execution of a process that creates lineage events.",
            "properties" : {
              "attributes" : {
                "description" : "Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.",
                "type" : "object"
              },
              "displayName" : {
                "description" : "Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`",
                "type" : "string"
              },
              "endTime" : {
                "description" : "Optional. The timestamp of the end of the run.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Required. The timestamp of the start of the run.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "state" : {
                "description" : "Required. The state of the run.",
                "enum" : [ "UNKNOWN", "STARTED", "COMPLETED", "FAILED", "ABORTED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "abc7cd4a-5cbf-4552-a578-a6f139cced7b",
    "name" : "Gets details of a specified lineage event.",
    "request" : {
      "urlPath" : "/v1/Nicolette+Hirthe",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Earleen Kuhn III\",\n  \"links\" : [ {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Mrs. Arlean Nader\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Doyle Hoeger\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Kris Cruickshank\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Waylon Schultz\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Kristeen Brakus Sr.\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Lucio Lindgren\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Tamiko Tromp\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Genoveva Beer\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Marcellus Rutherford\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Gayle Murray\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Ms. Raquel Funk\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Erik Lubowitz\"\n    }\n  } ],\n  \"startTime\" : \"2022-12-11T08:22:47.684861Z\",\n  \"endTime\" : \"2022-11-24T08:35:47.684896Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abc7cd4a-5cbf-4552-a578-a6f139cced7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.685025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.lineageEvents.get",
          "schema" : {
            "description" : "A lineage event represents an operation on assets. Within the operation, the data flows from the source to the target defined in the links field.",
            "properties" : {
              "endTime" : {
                "description" : "Optional. The end of the transformation which resulted in this lineage event. For streaming scenarios, it should be the end of the period from which the lineage is being reported.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "links" : {
                "description" : "Optional. List of source-target pairs. Can't contain more than 100 tuples.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1EventLink"
                },
                "type" : "array"
              },
              "name" : {
                "description" : "Immutable. The resource name of the lineage event. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`. Can be specified or auto-assigned. {lineage_event} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Optional. The beginning of the transformation which resulted in this lineage event. For streaming scenarios, it should be the beginning of the period from which the lineage is being reported.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "81672f03-c630-4c4e-8bc6-05d273e7d16f",
    "name" : "Deletes the lineage event with the specified name.",
    "request" : {
      "urlPath" : "/v1/Gerardo+Schiller+II",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81672f03-c630-4c4e-8bc6-05d273e7d16f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:47.68417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.lineageEvents.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  } ]
}