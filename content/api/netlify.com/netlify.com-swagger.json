{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Netlify's API documentation",
    "description" : "Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.\n\nThis document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).\n\nAdditionally, we have two API clients for your convenience:\n- [Go Client](https://github.com/netlify/open-api#go-client)\n- [JS Client](https://github.com/netlify/js-client)",
    "termsOfService" : "https://www.netlify.com/legal/terms-of-use/",
    "version" : "2.15.0"
  },
  "externalDocs" : {
    "description" : "Online documentation",
    "url" : "https://www.netlify.com/docs/api/"
  },
  "servers" : [ {
    "url" : "https://api.netlify.com/api/v1"
  } ],
  "security" : [ {
    "netlifyAuth" : null
  } ],
  "tags" : [ {
    "name" : "ticket"
  }, {
    "name" : "accessToken"
  }, {
    "name" : "user"
  }, {
    "name" : "accountMembership"
  }, {
    "name" : "member"
  }, {
    "name" : "accountType"
  }, {
    "name" : "paymentMethod"
  }, {
    "name" : "auditLog"
  }, {
    "name" : "site"
  }, {
    "name" : "environmentVariables"
  }, {
    "name" : "file"
  }, {
    "name" : "metadata"
  }, {
    "name" : "snippet"
  }, {
    "name" : "dnsZone"
  }, {
    "name" : "sniCertificate"
  }, {
    "name" : "deploy"
  }, {
    "name" : "deployedBranch"
  }, {
    "name" : "deployKey"
  }, {
    "name" : "build"
  }, {
    "name" : "buildLogMsg"
  }, {
    "name" : "hook"
  }, {
    "name" : "hookType"
  }, {
    "name" : "buildHook"
  }, {
    "name" : "service"
  }, {
    "name" : "serviceInstance"
  }, {
    "name" : "function"
  }, {
    "name" : "form"
  }, {
    "name" : "submission"
  }, {
    "name" : "splitTest"
  }, {
    "name" : "asset"
  }, {
    "name" : "assetPublicSignature"
  } ],
  "paths" : {
    "/accounts" : {
      "get" : {
        "tags" : [ "accountMembership" ],
        "operationId" : "listAccountsForUser",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/accountMembership"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "accountMembership" ],
        "operationId" : "createAccount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/accountSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/accountMembership"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/types" : {
      "get" : {
        "tags" : [ "accountType" ],
        "operationId" : "listAccountTypesForUser",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/accountType"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}" : {
      "get" : {
        "tags" : [ "accountMembership" ],
        "operationId" : "getAccount",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/accountMembership"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "accountMembership" ],
        "operationId" : "updateAccount",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/accountUpdateSetup"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/accountMembership"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "accountMembership" ],
        "operationId" : "cancelAccount",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/audit" : {
      "get" : {
        "tags" : [ "auditLog" ],
        "operationId" : "listAccountAuditEvents",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "log_type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/auditLog"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/env" : {
      "get" : {
        "tags" : [ "environmentVariables" ],
        "description" : "Returns all environment variables for an account or site. An account corresponds to a team in the Netlify UI. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
        "operationId" : "getEnvVars",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Scope response to account_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "context_name",
          "in" : "query",
          "description" : "Filter by deploy context",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "dev", "branch-deploy", "deploy-preview", "production" ]
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Filter by scope",
          "schema" : {
            "type" : "string",
            "enum" : [ "builds", "functions", "runtime", "post-processing" ]
          }
        }, {
          "name" : "site_id",
          "in" : "query",
          "description" : "If specified, only return environment variables set on this site",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/envVar"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "environmentVariables" ],
        "description" : "Creates new environment variables. Granular scopes are available on Pro plans and above.  To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
        "operationId" : "createEnvVars",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Scope response to account_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "site_id",
          "in" : "query",
          "description" : "If provided, create an environment variable on the site level, not the account level",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "key" : {
                      "type" : "string",
                      "description" : "The existing or new name of the key, if you wish to rename it (case-sensitive)"
                    },
                    "scopes" : {
                      "type" : "array",
                      "description" : "The scopes that this environment variable is set to (Pro plans and above)",
                      "items" : {
                        "type" : "string",
                        "enum" : [ "builds", "functions", "runtime", "post-processing" ]
                      }
                    },
                    "values" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/envVarValue"
                      }
                    }
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/envVar"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/env/{key}" : {
      "get" : {
        "tags" : [ "environmentVariables" ],
        "description" : "Returns an individual environment variable. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
        "operationId" : "getEnvVar",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Scope response to account_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The environment variable key (case-sensitive)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "site_id",
          "in" : "query",
          "description" : "If provided, return the environment variable for a specific site (no merging is performed)",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/envVar"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "environmentVariables" ],
        "description" : "Updates an existing environment variable and all of its values. Existing values will be replaced by values provided. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
        "operationId" : "updateEnvVar",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Scope response to account_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The existing environment variable key name (case-sensitive)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "site_id",
          "in" : "query",
          "description" : "If provided, update an environment variable set on this site",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "key" : {
                    "type" : "string",
                    "description" : "The existing or new name of the key, if you wish to rename it (case-sensitive)"
                  },
                  "scopes" : {
                    "type" : "array",
                    "description" : "The scopes that this environment variable is set to (Pro plans and above)",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "builds", "functions", "runtime", "post-processing" ]
                    }
                  },
                  "values" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/envVarValue"
                    }
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/envVar"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "environmentVariables" ],
        "description" : "Deletes an environment variable. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
        "operationId" : "deleteEnvVar",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Scope response to account_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The environment variable key (case-sensitive)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "site_id",
          "in" : "query",
          "description" : "If provided, delete the environment variable from this site",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content (success)"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "environmentVariables" ],
        "description" : "Updates or creates a new value for an existing environment variable. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
        "operationId" : "setEnvVarValue",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Scope response to account_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The existing environment variable key name (case-sensitive)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "site_id",
          "in" : "query",
          "description" : "If provided, update an environment variable set on this site",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "context" : {
                    "type" : "string",
                    "description" : "The deploy context in which this value will be used. `dev` refers to local development when running `netlify dev`.",
                    "enum" : [ "dev", "branch-deploy", "deploy-preview", "production" ]
                  },
                  "value" : {
                    "type" : "string",
                    "description" : "The environment variable's unencrypted value"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created (success)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/envVar"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/env/{key}/value/{id}" : {
      "delete" : {
        "tags" : [ "environmentVariables" ],
        "description" : "Deletes a specific environment variable value. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
        "operationId" : "deleteEnvVarValue",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Scope response to account_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The environment variable value's ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The environment variable key name (case-sensitive)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "site_id",
          "in" : "query",
          "description" : "If provided, delete the value from an environment variable on this site",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content (success)"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/billing/payment_methods" : {
      "get" : {
        "tags" : [ "paymentMethod" ],
        "operationId" : "listPaymentMethodsForUser",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/paymentMethod"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{build_id}" : {
      "get" : {
        "tags" : [ "build" ],
        "operationId" : "getSiteBuild",
        "parameters" : [ {
          "name" : "build_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/build"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{build_id}/log" : {
      "post" : {
        "tags" : [ "buildLogMsg" ],
        "operationId" : "updateSiteBuildLog",
        "parameters" : [ {
          "name" : "build_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/buildLogMsg"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{build_id}/start" : {
      "post" : {
        "tags" : [ "build" ],
        "operationId" : "notifyBuildStart",
        "parameters" : [ {
          "name" : "build_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deploy_keys" : {
      "get" : {
        "tags" : [ "deployKey" ],
        "operationId" : "listDeployKeys",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/deployKey"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "deployKey" ],
        "operationId" : "createDeployKey",
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deployKey"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deploy_keys/{key_id}" : {
      "get" : {
        "tags" : [ "deployKey" ],
        "operationId" : "getDeployKey",
        "parameters" : [ {
          "name" : "key_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deployKey"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "deployKey" ],
        "operationId" : "deleteDeployKey",
        "parameters" : [ {
          "name" : "key_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deploys/{deploy_id}" : {
      "get" : {
        "tags" : [ "deploy" ],
        "operationId" : "getDeploy",
        "parameters" : [ {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "deploy" ],
        "operationId" : "deleteDeploy",
        "parameters" : [ {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deploys/{deploy_id}/cancel" : {
      "post" : {
        "tags" : [ "deploy" ],
        "operationId" : "cancelSiteDeploy",
        "parameters" : [ {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Cancelled",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deploys/{deploy_id}/files/{path}" : {
      "put" : {
        "tags" : [ "file" ],
        "operationId" : "uploadDeployFile",
        "parameters" : [ {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/file"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deploys/{deploy_id}/functions/{name}" : {
      "put" : {
        "tags" : [ "function" ],
        "operationId" : "uploadDeployFunction",
        "parameters" : [ {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runtime",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "X-Nf-Retry-Count",
          "in" : "header",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/function"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deploys/{deploy_id}/lock" : {
      "post" : {
        "tags" : [ "deploy" ],
        "operationId" : "lockDeploy",
        "parameters" : [ {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deploys/{deploy_id}/plugin_runs" : {
      "post" : {
        "tags" : [ "x-internal" ],
        "description" : "This is an internal-only endpoint.",
        "operationId" : "createPluginRun",
        "parameters" : [ {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/pluginRunData"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "CREATED",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/pluginRun"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deploys/{deploy_id}/unlock" : {
      "post" : {
        "tags" : [ "deploy" ],
        "operationId" : "unlockDeploy",
        "parameters" : [ {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/dns_zones" : {
      "get" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "getDnsZones",
        "parameters" : [ {
          "name" : "account_slug",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "get all DNS zones the user has access to",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dnsZones"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "createDnsZone",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dnsZoneSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dnsZone"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/dns_zones/{zone_id}" : {
      "get" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "getDnsZone",
        "parameters" : [ {
          "name" : "zone_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "get a single DNS zone",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dnsZone"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "deleteDnsZone",
        "parameters" : [ {
          "name" : "zone_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "delete a single DNS zone"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/dns_zones/{zone_id}/dns_records" : {
      "get" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "getDnsRecords",
        "parameters" : [ {
          "name" : "zone_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "get all DNS records for a single DNS zone",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dnsRecords"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "createDnsRecord",
        "parameters" : [ {
          "name" : "zone_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dnsRecordCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dnsRecord"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/dns_zones/{zone_id}/dns_records/{dns_record_id}" : {
      "get" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "getIndividualDnsRecord",
        "parameters" : [ {
          "name" : "zone_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dns_record_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "get a single DNS record",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dnsRecord"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "deleteDnsRecord",
        "parameters" : [ {
          "name" : "zone_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dns_record_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "record deleted"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/dns_zones/{zone_id}/transfer" : {
      "put" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "transferDnsZone",
        "parameters" : [ {
          "name" : "zone_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "account_id",
          "in" : "query",
          "description" : "the account of the dns zone",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transfer_account_id",
          "in" : "query",
          "description" : "the account you want to transfer the dns zone to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transfer_user_id",
          "in" : "query",
          "description" : "the user you want to transfer the dns zone to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "transfer a DNS zone to another account",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dnsZone"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/forms/{form_id}/submissions" : {
      "get" : {
        "tags" : [ "submission" ],
        "operationId" : "listFormSubmissions",
        "parameters" : [ {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/submission"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/hooks" : {
      "get" : {
        "tags" : [ "hook" ],
        "operationId" : "listHooksBySiteId",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/hook"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "hook" ],
        "operationId" : "createHookBySiteId",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/hook"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/hook"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/hooks/types" : {
      "get" : {
        "tags" : [ "hookType" ],
        "operationId" : "listHookTypes",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/hookType"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/hooks/{hook_id}" : {
      "get" : {
        "tags" : [ "hook" ],
        "operationId" : "getHook",
        "parameters" : [ {
          "name" : "hook_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/hook"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "hook" ],
        "operationId" : "updateHook",
        "parameters" : [ {
          "name" : "hook_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/hook"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/hook"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "hook" ],
        "operationId" : "deleteHook",
        "parameters" : [ {
          "name" : "hook_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          }
        }
      }
    },
    "/hooks/{hook_id}/enable" : {
      "post" : {
        "tags" : [ "hook" ],
        "operationId" : "enableHook",
        "parameters" : [ {
          "name" : "hook_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/hook"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/tickets" : {
      "post" : {
        "tags" : [ "ticket" ],
        "operationId" : "createTicket",
        "parameters" : [ {
          "name" : "client_id",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ticket"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/tickets/{ticket_id}" : {
      "get" : {
        "tags" : [ "ticket" ],
        "operationId" : "showTicket",
        "parameters" : [ {
          "name" : "ticket_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ticket"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/tickets/{ticket_id}/exchange" : {
      "post" : {
        "tags" : [ "accessToken" ],
        "operationId" : "exchangeTicket",
        "parameters" : [ {
          "name" : "ticket_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/accessToken"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/services/" : {
      "get" : {
        "tags" : [ "service" ],
        "operationId" : "getServices",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "services",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/service"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/services/{addonName}" : {
      "get" : {
        "tags" : [ "service" ],
        "operationId" : "showService",
        "parameters" : [ {
          "name" : "addonName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "services",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/service"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/services/{addonName}/manifest" : {
      "get" : {
        "tags" : [ "service" ],
        "operationId" : "showServiceManifest",
        "parameters" : [ {
          "name" : "addonName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "retrieving from provider",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites" : {
      "get" : {
        "tags" : [ "site" ],
        "description" : "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [getEnvVars](#tag/environmentVariables/operation/getEnvVars) to retrieve site environment variables.",
        "operationId" : "listSites",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "owner", "guest" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/site"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "site" ],
        "description" : "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [createEnvVars](#tag/environmentVariables/operation/createEnvVars) to create environment variables for a site.",
        "operationId" : "createSite",
        "parameters" : [ {
          "name" : "configure_dns",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/siteSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/site"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}" : {
      "get" : {
        "tags" : [ "site" ],
        "description" : "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [getEnvVars](#tag/environmentVariables/operation/getEnvVars) to retrieve site environment variables.",
        "operationId" : "getSite",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/site"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "site" ],
        "operationId" : "deleteSite",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "site" ],
        "description" : "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [updateEnvVar](#tag/environmentVariables/operation/updateEnvVar) to update a site's environment variables.",
        "operationId" : "updateSite",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/siteSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/site"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/assets" : {
      "get" : {
        "tags" : [ "asset" ],
        "operationId" : "listSiteAssets",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/asset"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "asset" ],
        "operationId" : "createSiteAsset",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "content_type",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "visibility",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/assetSignature"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/assets/{asset_id}" : {
      "get" : {
        "tags" : [ "asset" ],
        "operationId" : "getSiteAssetInfo",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asset_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/asset"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "asset" ],
        "operationId" : "updateSiteAsset",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asset_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/asset"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "asset" ],
        "operationId" : "deleteSiteAsset",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asset_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/assets/{asset_id}/public_signature" : {
      "get" : {
        "tags" : [ "assetPublicSignature" ],
        "operationId" : "getSiteAssetPublicSignature",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asset_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/assetPublicSignature"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/build_hooks" : {
      "get" : {
        "tags" : [ "buildHook" ],
        "operationId" : "listSiteBuildHooks",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/buildHook"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "buildHook" ],
        "operationId" : "createSiteBuildHook",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/buildHookSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/buildHook"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/build_hooks/{id}" : {
      "get" : {
        "tags" : [ "buildHook" ],
        "operationId" : "getSiteBuildHook",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/buildHook"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "buildHook" ],
        "operationId" : "updateSiteBuildHook",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/buildHookSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "buildHook" ],
        "operationId" : "deleteSiteBuildHook",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/builds" : {
      "get" : {
        "tags" : [ "build" ],
        "operationId" : "listSiteBuilds",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/build"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "build" ],
        "operationId" : "createSiteBuild",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/buildSetup"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/build"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/deployed-branches" : {
      "get" : {
        "tags" : [ "deployedBranch" ],
        "operationId" : "listSiteDeployedBranches",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/deployedBranch"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/deploys" : {
      "get" : {
        "tags" : [ "deploy" ],
        "operationId" : "listSiteDeploys",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploy-previews",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "production",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "new", "pending_review", "accepted", "rejected", "enqueued", "building", "uploading", "uploaded", "preparing", "prepared", "processing", "ready", "error", "retrying" ]
          }
        }, {
          "name" : "branch",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest-published",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/deploy"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "deploy" ],
        "operationId" : "createSiteDeploy",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploy-previews",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "production",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "new", "pending_review", "accepted", "rejected", "enqueued", "building", "uploading", "uploaded", "preparing", "prepared", "processing", "ready", "error", "retrying" ]
          }
        }, {
          "name" : "branch",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest-published",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "title",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/deployFiles"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/deploys/{deploy_id}" : {
      "get" : {
        "tags" : [ "deploy" ],
        "operationId" : "getSiteDeploy",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "deploy" ],
        "operationId" : "updateSiteDeploy",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/deployFiles"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "deploy" ],
        "operationId" : "deleteSiteDeploy",
        "parameters" : [ {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/deploys/{deploy_id}/restore" : {
      "post" : {
        "tags" : [ "deploy" ],
        "operationId" : "restoreSiteDeploy",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploy_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/dns" : {
      "get" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "getDNSForSite",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/dnsZone"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "dnsZone" ],
        "operationId" : "configureDNSForSite",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/dnsZone"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/files" : {
      "get" : {
        "tags" : [ "file" ],
        "operationId" : "listSiteFiles",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/file"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/files/{file_path}" : {
      "get" : {
        "tags" : [ "file" ],
        "operationId" : "getSiteFileByPathName",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "file_path",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/file"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/forms" : {
      "get" : {
        "tags" : [ "form" ],
        "operationId" : "listSiteForms",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/form"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/forms/{form_id}" : {
      "delete" : {
        "tags" : [ "form" ],
        "operationId" : "deleteSiteForm",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "form_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/metadata" : {
      "get" : {
        "tags" : [ "metadata" ],
        "operationId" : "getSiteMetadata",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/metadata"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "metadata" ],
        "operationId" : "updateSiteMetadata",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/metadata"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/plugin_runs/latest" : {
      "get" : {
        "tags" : [ "x-internal" ],
        "description" : "This is an internal-only endpoint.",
        "operationId" : "getLatestPluginRuns",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "packages",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/pluginRun"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/plugins/{package}" : {
      "put" : {
        "tags" : [ "x-internal" ],
        "description" : "This is an internal-only endpoint.",
        "operationId" : "updatePlugin",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "package",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/pluginParams"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/plugin"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/rollback" : {
      "put" : {
        "tags" : [ "deploy" ],
        "operationId" : "rollbackSiteDeploy",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/service-instances" : {
      "get" : {
        "tags" : [ "serviceInstance" ],
        "operationId" : "listServiceInstancesForSite",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/serviceInstance"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/services/{addon}/instances" : {
      "post" : {
        "tags" : [ "serviceInstance" ],
        "operationId" : "createServiceInstance",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addon",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/serviceInstance"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/services/{addon}/instances/{instance_id}" : {
      "get" : {
        "tags" : [ "serviceInstance" ],
        "operationId" : "showServiceInstance",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addon",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instance_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/serviceInstance"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "serviceInstance" ],
        "operationId" : "updateServiceInstance",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addon",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instance_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "serviceInstance" ],
        "operationId" : "deleteServiceInstance",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addon",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instance_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/snippets" : {
      "get" : {
        "tags" : [ "snippet" ],
        "operationId" : "listSiteSnippets",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/snippet"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "snippet" ],
        "operationId" : "createSiteSnippet",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/snippet"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/snippet"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/snippets/{snippet_id}" : {
      "get" : {
        "tags" : [ "snippet" ],
        "operationId" : "getSiteSnippet",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "snippet_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/snippet"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "snippet" ],
        "operationId" : "updateSiteSnippet",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "snippet_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/snippet"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "snippet" ],
        "operationId" : "deleteSiteSnippet",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "snippet_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/ssl" : {
      "get" : {
        "tags" : [ "sniCertificate" ],
        "operationId" : "showSiteTLSCertificate",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sniCertificate"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "sniCertificate" ],
        "operationId" : "provisionSiteTLSCertificate",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ca_certificates",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sniCertificate"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/submissions" : {
      "get" : {
        "tags" : [ "submission" ],
        "operationId" : "listSiteSubmissions",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/submission"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/traffic_splits" : {
      "get" : {
        "tags" : [ "splitTest" ],
        "operationId" : "getSplitTests",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "split_tests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/splitTests"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "splitTest" ],
        "operationId" : "createSplitTest",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/splitTestSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/splitTest"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/traffic_splits/{split_test_id}" : {
      "get" : {
        "tags" : [ "splitTest" ],
        "operationId" : "getSplitTest",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "split_test_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "split_test",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/splitTest"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "splitTest" ],
        "operationId" : "updateSplitTest",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "split_test_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/splitTestSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/splitTest"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/traffic_splits/{split_test_id}/publish" : {
      "post" : {
        "tags" : [ "splitTest" ],
        "operationId" : "enableSplitTest",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "split_test_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "enable"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/traffic_splits/{split_test_id}/unpublish" : {
      "post" : {
        "tags" : [ "splitTest" ],
        "operationId" : "disableSplitTest",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "split_test_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "disabled"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sites/{site_id}/unlink_repo" : {
      "put" : {
        "tags" : [ "site" ],
        "description" : "[Beta] Unlinks the repo from the site.\n\nThis action will also:\n- Delete associated deploy keys\n- Delete outgoing webhooks for the repo\n- Delete the site's build hooks",
        "operationId" : "unlinkSiteRepo",
        "parameters" : [ {
          "name" : "site_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/site"
                }
              }
            }
          },
          "404" : {
            "description" : "Site not found"
          }
        }
      }
    },
    "/submissions/{submission_id}" : {
      "get" : {
        "tags" : [ "submission" ],
        "operationId" : "listFormSubmission",
        "parameters" : [ {
          "name" : "submission_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/submission"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "submission" ],
        "operationId" : "deleteSubmission",
        "parameters" : [ {
          "name" : "submission_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "user" ],
        "operationId" : "getCurrentUser",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/{account_id}/builds/status" : {
      "get" : {
        "tags" : [ "build" ],
        "operationId" : "getAccountBuildStatus",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/buildStatus"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/{account_slug}/members" : {
      "get" : {
        "tags" : [ "member" ],
        "operationId" : "listMembersForAccount",
        "parameters" : [ {
          "name" : "account_slug",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/member"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "member" ],
        "operationId" : "addMemberToAccount",
        "parameters" : [ {
          "name" : "account_slug",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/accountAddMemberSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/member"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/{account_slug}/members/{member_id}" : {
      "get" : {
        "tags" : [ "member" ],
        "operationId" : "getAccountMember",
        "parameters" : [ {
          "name" : "account_slug",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/member"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "member" ],
        "operationId" : "updateAccountMember",
        "parameters" : [ {
          "name" : "account_slug",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/accountUpdateMemberSetup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/member"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "member" ],
        "operationId" : "removeAccountMember",
        "parameters" : [ {
          "name" : "account_slug",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Not Content"
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/{account_slug}/sites" : {
      "get" : {
        "tags" : [ "site" ],
        "description" : "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [getEnvVars](#tag/environmentVariables/operation/getEnvVars) to retrieve site environment variables.",
        "operationId" : "listSitesForAccount",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "account_slug",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/site"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "site" ],
        "description" : "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [createEnvVars](#tag/environmentVariables/operation/createEnvVars) to create environment variables for a site.",
        "operationId" : "createSiteInTeam",
        "parameters" : [ {
          "name" : "configure_dns",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "account_slug",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/siteSetup"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/site"
                }
              }
            }
          },
          "default" : {
            "description" : "error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "accessToken" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "id" : {
            "type" : "string"
          },
          "user_email" : {
            "type" : "string"
          },
          "user_id" : {
            "type" : "string"
          }
        }
      },
      "accountAddMemberSetup" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "Owner", "Collaborator", "Controller" ]
          }
        }
      },
      "accountMembership" : {
        "type" : "object",
        "properties" : {
          "billing_details" : {
            "type" : "string"
          },
          "billing_email" : {
            "type" : "string"
          },
          "billing_name" : {
            "type" : "string"
          },
          "billing_period" : {
            "type" : "string"
          },
          "capabilities" : {
            "type" : "object",
            "properties" : {
              "collaborators" : {
                "$ref" : "#/components/schemas/accountUsageCapability"
              },
              "sites" : {
                "$ref" : "#/components/schemas/accountUsageCapability"
              }
            }
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "owner_ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "payment_method_id" : {
            "type" : "string"
          },
          "roles_allowed" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "slug" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "type_id" : {
            "type" : "string"
          },
          "type_name" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          }
        }
      },
      "accountSetup" : {
        "required" : [ "name", "type_id" ],
        "type" : "object",
        "properties" : {
          "extra_seats_block" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "payment_method_id" : {
            "type" : "string"
          },
          "period" : {
            "type" : "string",
            "enum" : [ "monthly", "yearly" ]
          },
          "type_id" : {
            "type" : "string"
          }
        }
      },
      "accountType" : {
        "type" : "object",
        "properties" : {
          "capabilities" : {
            "type" : "object"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "monthly_dollar_price" : {
            "type" : "integer"
          },
          "monthly_seats_addon_dollar_price" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "yearly_dollar_price" : {
            "type" : "integer"
          },
          "yearly_seats_addon_dollar_price" : {
            "type" : "integer"
          }
        }
      },
      "accountUpdateMemberSetup" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "type" : "string",
            "enum" : [ "Owner", "Collaborator", "Controller" ]
          },
          "site_access" : {
            "type" : "string",
            "enum" : [ "all", "none", "selected" ]
          },
          "site_ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "accountUpdateSetup" : {
        "type" : "object",
        "properties" : {
          "billing_details" : {
            "type" : "string"
          },
          "billing_email" : {
            "type" : "string"
          },
          "billing_name" : {
            "type" : "string"
          },
          "extra_seats_block" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string"
          },
          "type_id" : {
            "type" : "string"
          }
        }
      },
      "accountUsageCapability" : {
        "type" : "object",
        "properties" : {
          "included" : {
            "type" : "integer"
          },
          "used" : {
            "type" : "integer"
          }
        }
      },
      "asset" : {
        "type" : "object",
        "properties" : {
          "content_type" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "creator_id" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "site_id" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "state" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "url" : {
            "type" : "string"
          },
          "visibility" : {
            "type" : "string"
          }
        }
      },
      "assetForm" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "assetPublicSignature" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          }
        }
      },
      "assetSignature" : {
        "type" : "object",
        "properties" : {
          "asset" : {
            "$ref" : "#/components/schemas/asset"
          },
          "form" : {
            "$ref" : "#/components/schemas/assetForm"
          }
        }
      },
      "auditLog" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "payload" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "build" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "deploy_id" : {
            "type" : "string"
          },
          "done" : {
            "type" : "boolean"
          },
          "error" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "sha" : {
            "type" : "string"
          }
        }
      },
      "buildHook" : {
        "type" : "object",
        "properties" : {
          "branch" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "id" : {
            "type" : "string"
          },
          "site_id" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "buildHookSetup" : {
        "type" : "object",
        "properties" : {
          "branch" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "buildLogMsg" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean"
          },
          "message" : {
            "type" : "string"
          },
          "section" : {
            "type" : "string",
            "enum" : [ "initializing", "building", "deploying", "cleanup", "postprocessing" ]
          }
        }
      },
      "buildSetup" : {
        "type" : "object",
        "properties" : {
          "clear_cache" : {
            "type" : "boolean"
          },
          "image" : {
            "type" : "string"
          }
        }
      },
      "buildStatus" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "integer"
          },
          "build_count" : {
            "type" : "integer"
          },
          "enqueued" : {
            "type" : "integer"
          },
          "minutes" : {
            "type" : "object",
            "properties" : {
              "current" : {
                "type" : "integer"
              },
              "current_average_sec" : {
                "type" : "integer"
              },
              "included_minutes" : {
                "type" : "string"
              },
              "included_minutes_with_packs" : {
                "type" : "string"
              },
              "last_updated_at" : {
                "type" : "string",
                "format" : "dateTime"
              },
              "period_end_date" : {
                "type" : "string",
                "format" : "dateTime"
              },
              "period_start_date" : {
                "type" : "string",
                "format" : "dateTime"
              },
              "previous" : {
                "type" : "integer"
              }
            }
          },
          "pending_concurrency" : {
            "type" : "integer"
          }
        }
      },
      "deploy" : {
        "type" : "object",
        "properties" : {
          "admin_url" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "build_id" : {
            "type" : "string"
          },
          "commit_ref" : {
            "type" : "string"
          },
          "commit_url" : {
            "type" : "string"
          },
          "context" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "deploy_ssl_url" : {
            "type" : "string"
          },
          "deploy_url" : {
            "type" : "string"
          },
          "draft" : {
            "type" : "boolean"
          },
          "error_message" : {
            "type" : "string"
          },
          "framework" : {
            "type" : "string"
          },
          "function_schedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/functionSchedule"
            }
          },
          "id" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "published_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "required" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "required_functions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "review_id" : {
            "type" : "number"
          },
          "review_url" : {
            "type" : "string"
          },
          "screenshot_url" : {
            "type" : "string"
          },
          "site_capabilities" : {
            "type" : "object",
            "properties" : {
              "large_media_enabled" : {
                "type" : "boolean"
              }
            }
          },
          "site_id" : {
            "type" : "string"
          },
          "skipped" : {
            "type" : "boolean"
          },
          "ssl_url" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "url" : {
            "type" : "string"
          },
          "user_id" : {
            "type" : "string"
          }
        }
      },
      "deployFiles" : {
        "type" : "object",
        "properties" : {
          "async" : {
            "type" : "boolean"
          },
          "branch" : {
            "type" : "string"
          },
          "draft" : {
            "type" : "boolean"
          },
          "files" : {
            "type" : "object"
          },
          "framework" : {
            "type" : "string"
          },
          "function_schedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/functionSchedule"
            }
          },
          "functions" : {
            "type" : "object"
          },
          "functions_config" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/functionConfig"
            }
          }
        }
      },
      "deployKey" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "id" : {
            "type" : "string"
          },
          "public_key" : {
            "type" : "string"
          }
        }
      },
      "deployedBranch" : {
        "type" : "object",
        "properties" : {
          "deploy_id" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string"
          },
          "ssl_url" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "dnsRecord" : {
        "type" : "object",
        "properties" : {
          "dns_zone_id" : {
            "type" : "string"
          },
          "flag" : {
            "type" : "integer"
          },
          "hostname" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "managed" : {
            "type" : "boolean"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int64"
          },
          "site_id" : {
            "type" : "string"
          },
          "tag" : {
            "type" : "string"
          },
          "ttl" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "dnsRecordCreate" : {
        "type" : "object",
        "properties" : {
          "flag" : {
            "type" : "integer",
            "format" : "int64"
          },
          "hostname" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int64"
          },
          "tag" : {
            "type" : "string"
          },
          "ttl" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "dnsRecords" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/dnsRecord"
        }
      },
      "dnsZone" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string"
          },
          "account_name" : {
            "type" : "string"
          },
          "account_slug" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "dedicated" : {
            "type" : "boolean"
          },
          "dns_servers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "domain" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ipv6_enabled" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dnsRecord"
            }
          },
          "site_id" : {
            "type" : "string"
          },
          "supported_record_types" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "user_id" : {
            "type" : "string"
          }
        }
      },
      "dnsZoneSetup" : {
        "type" : "object",
        "properties" : {
          "account_slug" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "site_id" : {
            "type" : "string"
          }
        }
      },
      "dnsZones" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/dnsZone"
        }
      },
      "envVar" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The environment variable key, like ALGOLIA_ID (case-sensitive)"
          },
          "scopes" : {
            "type" : "array",
            "description" : "The scopes that this environment variable is set to",
            "items" : {
              "type" : "string",
              "enum" : [ "builds", "functions", "runtime", "post-processing" ]
            }
          },
          "updated_at" : {
            "type" : "string",
            "description" : "The timestamp of when the value was last updated",
            "format" : "date-time"
          },
          "updated_by" : {
            "$ref" : "#/components/schemas/envVarUser"
          },
          "values" : {
            "type" : "array",
            "description" : "An array of Value objects containing values and metadata",
            "items" : {
              "$ref" : "#/components/schemas/envVarValue"
            }
          }
        },
        "description" : "Environment variable model definition"
      },
      "envVarUser" : {
        "type" : "object",
        "properties" : {
          "avatar_url" : {
            "type" : "string",
            "description" : "A URL pointing to the user's avatar"
          },
          "email" : {
            "type" : "string",
            "description" : "The user's email address"
          },
          "full_name" : {
            "type" : "string",
            "description" : "The user's full name (first and last)"
          },
          "id" : {
            "type" : "string",
            "description" : "The user's unique identifier"
          }
        }
      },
      "envVarValue" : {
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "description" : "The deploy context in which this value will be used. `dev` refers to local development when running `netlify dev`.",
            "enum" : [ "all", "dev", "branch-deploy", "deploy-preview", "production" ]
          },
          "id" : {
            "type" : "string",
            "description" : "The environment variable value's universally unique ID"
          },
          "value" : {
            "type" : "string",
            "description" : "The environment variable's unencrypted value"
          }
        },
        "description" : "Environment variable value model definition"
      },
      "error" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int64"
          },
          "message" : {
            "type" : "string",
            "nullable" : false
          }
        }
      },
      "file" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "mime_type" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "sha" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "form" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "paths" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "site_id" : {
            "type" : "string"
          },
          "submission_count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "function" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "sha" : {
            "type" : "string"
          }
        }
      },
      "functionConfig" : {
        "type" : "object",
        "properties" : {
          "display_name" : {
            "type" : "string"
          },
          "generator" : {
            "type" : "string"
          }
        }
      },
      "functionSchedule" : {
        "type" : "object",
        "properties" : {
          "cron" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "hook" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "data" : {
            "type" : "object"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "event" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "site_id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          }
        }
      },
      "hookType" : {
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "member" : {
        "type" : "object",
        "properties" : {
          "avatar" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "full_name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          }
        }
      },
      "metadata" : {
        "type" : "object"
      },
      "minifyOptions" : {
        "type" : "object",
        "properties" : {
          "bundle" : {
            "type" : "boolean"
          },
          "minify" : {
            "type" : "boolean"
          }
        }
      },
      "paymentMethod" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "card_type" : {
                "type" : "string"
              },
              "email" : {
                "type" : "string"
              },
              "last4" : {
                "type" : "string"
              }
            }
          },
          "id" : {
            "type" : "string"
          },
          "method_name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          }
        }
      },
      "plugin" : {
        "type" : "object",
        "properties" : {
          "package" : {
            "type" : "string"
          },
          "pinned_version" : {
            "type" : "string"
          }
        }
      },
      "pluginParams" : {
        "type" : "object",
        "properties" : {
          "pinned_version" : {
            "type" : "string"
          }
        }
      },
      "pluginRun" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/pluginRunData"
        }, {
          "type" : "object",
          "properties" : {
            "deploy_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "pluginRunData" : {
        "type" : "object",
        "properties" : {
          "package" : {
            "type" : "string"
          },
          "reporting_event" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "repoInfo" : {
        "type" : "object",
        "properties" : {
          "allowed_branches" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "cmd" : {
            "type" : "string"
          },
          "deploy_key_id" : {
            "type" : "string"
          },
          "dir" : {
            "type" : "string"
          },
          "env" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "functions_dir" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer"
          },
          "installation_id" : {
            "type" : "integer"
          },
          "private_logs" : {
            "type" : "boolean"
          },
          "provider" : {
            "type" : "string"
          },
          "public_repo" : {
            "type" : "boolean"
          },
          "repo_branch" : {
            "type" : "string"
          },
          "repo_path" : {
            "type" : "string"
          },
          "repo_url" : {
            "type" : "string"
          },
          "stop_builds" : {
            "type" : "boolean"
          }
        }
      },
      "service" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "description" : {
            "type" : "string"
          },
          "environments" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "events" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "icon" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "long_description" : {
            "type" : "string"
          },
          "manifest_url" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "service_path" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          }
        }
      },
      "serviceInstance" : {
        "type" : "object",
        "properties" : {
          "auth_url" : {
            "type" : "string"
          },
          "config" : {
            "type" : "object"
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "env" : {
            "type" : "object"
          },
          "external_attributes" : {
            "type" : "object"
          },
          "id" : {
            "type" : "string"
          },
          "service_name" : {
            "type" : "string"
          },
          "service_path" : {
            "type" : "string"
          },
          "service_slug" : {
            "type" : "string"
          },
          "snippets" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "site" : {
        "type" : "object",
        "properties" : {
          "account_name" : {
            "type" : "string"
          },
          "account_slug" : {
            "type" : "string"
          },
          "admin_url" : {
            "type" : "string"
          },
          "build_image" : {
            "type" : "string"
          },
          "build_settings" : {
            "$ref" : "#/components/schemas/repoInfo"
          },
          "capabilities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "custom_domain" : {
            "type" : "string"
          },
          "default_hooks_data" : {
            "type" : "object",
            "properties" : {
              "access_token" : {
                "type" : "string"
              }
            }
          },
          "deploy_hook" : {
            "type" : "string"
          },
          "deploy_url" : {
            "type" : "string"
          },
          "domain_aliases" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "force_ssl" : {
            "type" : "boolean"
          },
          "git_provider" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "id_domain" : {
            "type" : "string"
          },
          "managed_dns" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "notification_email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "plan" : {
            "type" : "string"
          },
          "prerender" : {
            "type" : "string"
          },
          "processing_settings" : {
            "type" : "object",
            "properties" : {
              "css" : {
                "$ref" : "#/components/schemas/minifyOptions"
              },
              "html" : {
                "type" : "object",
                "properties" : {
                  "pretty_urls" : {
                    "type" : "boolean"
                  }
                }
              },
              "images" : {
                "type" : "object",
                "properties" : {
                  "optimize" : {
                    "type" : "boolean"
                  }
                }
              },
              "js" : {
                "$ref" : "#/components/schemas/minifyOptions"
              },
              "skip" : {
                "type" : "boolean"
              }
            }
          },
          "published_deploy" : {
            "$ref" : "#/components/schemas/deploy"
          },
          "screenshot_url" : {
            "type" : "string"
          },
          "session_id" : {
            "type" : "string"
          },
          "ssl" : {
            "type" : "boolean"
          },
          "ssl_url" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "url" : {
            "type" : "string"
          },
          "user_id" : {
            "type" : "string"
          }
        }
      },
      "siteSetup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/site"
        }, {
          "type" : "object",
          "properties" : {
            "repo" : {
              "$ref" : "#/components/schemas/repoInfo"
            }
          }
        } ]
      },
      "sniCertificate" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "domains" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "expires_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "state" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          }
        }
      },
      "snippet" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "type" : "string"
          },
          "general_position" : {
            "type" : "string"
          },
          "goal" : {
            "type" : "string"
          },
          "goal_position" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "site_id" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "splitTest" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "branches" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "site_id" : {
            "type" : "string"
          },
          "unpublished_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime"
          }
        }
      },
      "splitTestSetup" : {
        "type" : "object",
        "properties" : {
          "branch_tests" : {
            "type" : "object"
          }
        }
      },
      "splitTests" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/splitTest"
        }
      },
      "submission" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "type" : "string"
          },
          "company" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "data" : {
            "type" : "object"
          },
          "email" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "site_url" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          }
        }
      },
      "ticket" : {
        "type" : "object",
        "properties" : {
          "authorized" : {
            "type" : "boolean"
          },
          "client_id" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "user" : {
        "type" : "object",
        "properties" : {
          "affiliate_id" : {
            "type" : "string"
          },
          "avatar_url" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "email" : {
            "type" : "string"
          },
          "full_name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "last_login" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "login_providers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "onboarding_progress" : {
            "type" : "object",
            "properties" : {
              "slides" : {
                "type" : "string"
              }
            }
          },
          "site_count" : {
            "type" : "integer",
            "format" : "int64"
          },
          "uid" : {
            "type" : "string"
          }
        }
      }
    },
    "responses" : {
      "error" : {
        "description" : "error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error"
            }
          }
        }
      }
    },
    "parameters" : {
      "page" : {
        "name" : "page",
        "in" : "query",
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "perPage" : {
        "name" : "per_page",
        "in" : "query",
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "retryCount" : {
        "name" : "X-Nf-Retry-Count",
        "in" : "header",
        "schema" : {
          "type" : "integer"
        }
      }
    },
    "securitySchemes" : {
      "netlifyAuth" : {
        "type" : "oauth2"
      }
    }
  }
}