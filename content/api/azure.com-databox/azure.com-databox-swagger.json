{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "DataBoxManagementClient",
    "version" : "2019-09-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.DataBox/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "This method gets all the operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The supported operations list.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Lists all the jobs available under the subscription.",
        "operationId" : "Jobs_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of jobs available under the subscription.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResourceList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/availableSkus" : {
      "post" : {
        "tags" : [ "Service" ],
        "description" : "This method provides the list of available skus for the given subscription and location.",
        "operationId" : "Service_ListAvailableSkus",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "The location of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Filters for showing the available skus.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AvailableSkuRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The list of available skus under subscription.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableSkusResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/regionConfiguration" : {
      "post" : {
        "tags" : [ "Service" ],
        "description" : "This API provides configuration details specific to given region/location.",
        "operationId" : "Service_RegionConfiguration",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "The location of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body to get the configuration for the region.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegionConfigurationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Region configuration response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionConfigurationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateAddress" : {
      "post" : {
        "tags" : [ "Service" ],
        "description" : "[DEPRECATED NOTICE: This operation will soon be removed] This method validates the customer shipping address and provide alternate addresses if any.",
        "operationId" : "Service_ValidateAddress",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "The location of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Shipping address of the customer.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ValidateAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The valid and alternate addresses.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressValidationOutput"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateInputs" : {
      "post" : {
        "tags" : [ "Service" ],
        "description" : "This method does all necessary pre-job creation validation under subscription.",
        "operationId" : "Service_ValidateInputs",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "The location of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Inputs of the customer.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ValidationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The validation status and responses of each validating parameter.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Lists all the jobs available under the given resource group.",
        "operationId" : "Jobs_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of jobs by resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResourceList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Gets information about the specified job.",
        "operationId" : "Jobs_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "$expand is supported on details parameter for job, which provides details on the job stages.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Job object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Jobs" ],
        "description" : "Creates a new job with the specified parameters. Existing job cannot be updated with this API and should instead be updated with the Update job API.",
        "operationId" : "Jobs_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Job details from request body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Job object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted request for create Job."
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Jobs" ],
        "description" : "Deletes a job.",
        "operationId" : "Jobs_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted request for delete Job."
          },
          "204" : {
            "description" : "Job deleted."
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Jobs" ],
        "description" : "Updates the properties of an existing job.",
        "operationId" : "Jobs_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "Defines the If-Match condition. The patch will be performed only if the ETag of the job on the server matches this value.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Job update parameters from request body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobResourceUpdateParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Job object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted request for job updated."
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/bookShipmentPickUp" : {
      "post" : {
        "tags" : [ "Jobs" ],
        "description" : "Book shipment pick up.",
        "operationId" : "Jobs_BookShipmentPickUp",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of shipment pick up request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentPickUpRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Booked shipment pick up successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShipmentPickUpResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/cancel" : {
      "post" : {
        "tags" : [ "Jobs" ],
        "description" : "CancelJob.",
        "operationId" : "Jobs_Cancel",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Reason for cancellation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CancellationReason"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Job cancelled."
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/listCredentials" : {
      "post" : {
        "tags" : [ "Jobs" ],
        "description" : "This method gets the unencrypted secrets related to the job.",
        "operationId" : "Jobs_ListCredentials",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of unencrypted credentials of the job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnencryptedCredentialsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/locations/{location}/availableSkus" : {
      "post" : {
        "tags" : [ "Service" ],
        "description" : "This method provides the list of available skus for the given subscription, resource group and location.",
        "operationId" : "Service_ListAvailableSkusByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "The location of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Filters for showing the available skus.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AvailableSkuRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The list of available skus under Resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableSkusResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/locations/{location}/validateInputs" : {
      "post" : {
        "tags" : [ "Service" ],
        "description" : "This method does all necessary pre-job creation validation under resource group.",
        "operationId" : "Service_ValidateInputsByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "The location of the resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Inputs of the customer.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ValidationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The validation status and responses of each validating parameter.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing reason for operation failure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccountCredentialDetails" : {
        "type" : "object",
        "properties" : {
          "accountConnectionString" : {
            "type" : "string",
            "description" : "Connection string of the account endpoint to use the account as a storage endpoint on the device.",
            "readOnly" : true
          },
          "accountName" : {
            "type" : "string",
            "description" : "Name of the account.",
            "readOnly" : true
          },
          "dataDestinationType" : {
            "type" : "string",
            "description" : "Data Destination Type.",
            "readOnly" : true,
            "enum" : [ "StorageAccount", "ManagedDisk" ]
          },
          "shareCredentialDetails" : {
            "type" : "array",
            "description" : "Per share level unencrypted access credentials.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ShareCredentialDetails"
            }
          }
        },
        "description" : "Credential details of the account."
      },
      "AddressValidationOutput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AddressValidationProperties"
          }
        },
        "description" : "Output of the address validation api."
      },
      "AddressValidationProperties" : {
        "properties" : {
          "alternateAddresses" : {
            "type" : "array",
            "description" : "List of alternate addresses.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ShippingAddress"
            }
          },
          "validationStatus" : {
            "type" : "string",
            "description" : "The address validation status.",
            "readOnly" : true,
            "enum" : [ "Valid", "Invalid", "Ambiguous" ]
          }
        },
        "description" : "The address validation output.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputResponse"
        } ]
      },
      "ApplianceNetworkConfiguration" : {
        "type" : "object",
        "properties" : {
          "macAddress" : {
            "type" : "string",
            "description" : "Mac Address.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the network.",
            "readOnly" : true
          }
        },
        "description" : "The Network Adapter configuration of a DataBox."
      },
      "ArmBaseObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the object.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the object.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the object.",
            "readOnly" : true
          }
        },
        "description" : "Base class for all objects under resource."
      },
      "AvailableSkuRequest" : {
        "required" : [ "country", "location", "transferType" ],
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "description" : "ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements"
          },
          "location" : {
            "type" : "string",
            "description" : "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
          },
          "skuNames" : {
            "type" : "array",
            "description" : "Sku Names to filter for available skus",
            "items" : {
              "type" : "string",
              "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
            }
          },
          "transferType" : {
            "type" : "string",
            "description" : "Type of the transfer.",
            "enum" : [ "ImportToAzure" ]
          }
        },
        "description" : "The filters for showing the available skus."
      },
      "AvailableSkusResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of skus."
          },
          "value" : {
            "type" : "array",
            "description" : "List of available skus.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/SkuInformation"
            }
          }
        },
        "description" : "The available skus operation response."
      },
      "CancellationReason" : {
        "required" : [ "reason" ],
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "description" : "Reason for cancellation."
          }
        },
        "description" : "Reason for cancellation."
      },
      "CloudError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code string.",
            "readOnly" : true
          },
          "details" : {
            "type" : "array",
            "description" : "More detailed error information.",
            "items" : {
              "$ref" : "#/components/schemas/CloudError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Descriptive error information.",
            "readOnly" : true
          },
          "target" : {
            "type" : "string",
            "description" : "Error target"
          }
        },
        "description" : "The error information object."
      },
      "ContactDetails" : {
        "required" : [ "contactName", "emailList", "phone" ],
        "type" : "object",
        "properties" : {
          "contactName" : {
            "type" : "string",
            "description" : "Contact name of the person."
          },
          "emailList" : {
            "type" : "array",
            "description" : "List of Email-ids to be notified about job progress.",
            "items" : {
              "type" : "string"
            }
          },
          "mobile" : {
            "type" : "string",
            "description" : "Mobile number of the contact person."
          },
          "notificationPreference" : {
            "type" : "array",
            "description" : "Notification preference for a job stage.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationPreference"
            }
          },
          "phone" : {
            "type" : "string",
            "description" : "Phone number of the contact person."
          },
          "phoneExtension" : {
            "type" : "string",
            "description" : "Phone extension number of the contact person."
          }
        },
        "description" : "Contact Details."
      },
      "CopyLogDetails" : {
        "required" : [ "copyLogDetailsType" ],
        "type" : "object",
        "properties" : {
          "copyLogDetailsType" : {
            "type" : "string",
            "description" : "Indicates the type of job details.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          }
        },
        "description" : "Details for log generated during copy.",
        "discriminator" : {
          "propertyName" : "copyLogDetailsType"
        }
      },
      "CopyProgress" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "Id of the account where the data needs to be uploaded.",
            "readOnly" : true
          },
          "bytesSentToCloud" : {
            "type" : "integer",
            "description" : "Amount of data uploaded by the job as of now.",
            "format" : "int64",
            "readOnly" : true
          },
          "dataDestinationType" : {
            "type" : "string",
            "description" : "Data Destination Type.",
            "readOnly" : true,
            "enum" : [ "StorageAccount", "ManagedDisk" ]
          },
          "filesErroredOut" : {
            "type" : "integer",
            "description" : "Number of files which could not be copied",
            "format" : "int64",
            "readOnly" : true
          },
          "filesProcessed" : {
            "type" : "integer",
            "description" : "Number of files processed by the job as of now.",
            "format" : "int64",
            "readOnly" : true
          },
          "invalidFileBytesUploaded" : {
            "type" : "integer",
            "description" : "Total amount of data not adhering to azure naming conventions which were processed by automatic renaming",
            "format" : "int64",
            "readOnly" : true
          },
          "invalidFilesProcessed" : {
            "type" : "integer",
            "description" : "Number of files not adhering to azure naming conventions which were processed by automatic renaming",
            "format" : "int64",
            "readOnly" : true
          },
          "renamedContainerCount" : {
            "type" : "integer",
            "description" : "Number of folders not adhering to azure naming conventions which were processed by automatic renaming",
            "format" : "int64",
            "readOnly" : true
          },
          "storageAccountName" : {
            "type" : "string",
            "description" : "Name of the storage account where the data needs to be uploaded.",
            "readOnly" : true
          },
          "totalBytesToProcess" : {
            "type" : "integer",
            "description" : "Total amount of data to be processed by the job.",
            "format" : "int64",
            "readOnly" : true
          },
          "totalFilesToProcess" : {
            "type" : "integer",
            "description" : "Total number of files to be processed by the job.",
            "format" : "int64",
            "readOnly" : true
          }
        },
        "description" : "Copy progress."
      },
      "CreateJobValidations" : {
        "description" : "It does all pre-job creation validations.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationRequest"
        } ]
      },
      "CreateOrderLimitForSubscriptionValidationRequest" : {
        "required" : [ "deviceType" ],
        "properties" : {
          "deviceType" : {
            "type" : "string",
            "description" : "Device type to be used for the job.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          }
        },
        "description" : "Request to validate create order limit for current subscription.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputRequest"
        } ]
      },
      "CreateOrderLimitForSubscriptionValidationResponseProperties" : {
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Create order limit validation status.",
            "readOnly" : true,
            "enum" : [ "Valid", "Invalid", "Skipped" ]
          }
        },
        "description" : "Properties of create order limit for subscription validation response.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputResponse"
        } ]
      },
      "DataBoxAccountCopyLogDetails" : {
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "Destination account name.",
            "readOnly" : true
          },
          "copyLogLink" : {
            "type" : "string",
            "description" : "Link for copy logs.",
            "readOnly" : true
          }
        },
        "description" : "Copy log details for a storage account of a DataBox job",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CopyLogDetails"
        } ]
      },
      "DataBoxDiskCopyLogDetails" : {
        "properties" : {
          "diskSerialNumber" : {
            "type" : "string",
            "description" : "Disk Serial Number.",
            "readOnly" : true
          },
          "errorLogLink" : {
            "type" : "string",
            "description" : "Link for copy error logs.",
            "readOnly" : true
          },
          "verboseLogLink" : {
            "type" : "string",
            "description" : "Link for copy verbose logs.",
            "readOnly" : true
          }
        },
        "description" : "Copy Log Details for a disk",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CopyLogDetails"
        } ]
      },
      "DataBoxDiskCopyProgress" : {
        "type" : "object",
        "properties" : {
          "bytesCopied" : {
            "type" : "integer",
            "description" : "Bytes copied during the copy of disk.",
            "format" : "int64",
            "readOnly" : true
          },
          "percentComplete" : {
            "type" : "integer",
            "description" : "Indicates the percentage completed for the copy of the disk.",
            "format" : "int32",
            "readOnly" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "The serial number of the disk",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The Status of the copy",
            "readOnly" : true,
            "enum" : [ "NotStarted", "InProgress", "Completed", "CompletedWithErrors", "Failed", "NotReturned", "HardwareError", "DeviceFormatted", "DeviceMetadataModified", "StorageAccountNotAccessible", "UnsupportedData" ]
          }
        },
        "description" : "DataBox Disk Copy Progress"
      },
      "DataBoxDiskJobDetails" : {
        "properties" : {
          "copyProgress" : {
            "type" : "array",
            "description" : "Copy progress per disk.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DataBoxDiskCopyProgress"
            }
          },
          "disksAndSizeDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            },
            "description" : "Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.",
            "readOnly" : true
          },
          "passkey" : {
            "type" : "string",
            "description" : "User entered passkey for DataBox Disk job."
          },
          "preferredDisks" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            },
            "description" : "User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int."
          }
        },
        "description" : "DataBox Disk Job Details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobDetails"
        } ]
      },
      "DataBoxDiskJobSecrets" : {
        "properties" : {
          "diskSecrets" : {
            "type" : "array",
            "description" : "Contains the list of secrets object for that device.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiskSecret"
            }
          },
          "isPasskeyUserDefined" : {
            "type" : "boolean",
            "description" : "Whether passkey was provided by user.",
            "readOnly" : true
          },
          "passKey" : {
            "type" : "string",
            "description" : "PassKey for the disk Job.",
            "readOnly" : true
          }
        },
        "description" : "The secrets related to disk job.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobSecrets"
        } ]
      },
      "DataBoxHeavyAccountCopyLogDetails" : {
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "Destination account name.",
            "readOnly" : true
          },
          "copyLogLink" : {
            "type" : "array",
            "description" : "Link for copy logs.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Copy log details for a storage account for Databox heavy",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CopyLogDetails"
        } ]
      },
      "DataBoxHeavyJobDetails" : {
        "properties" : {
          "copyProgress" : {
            "type" : "array",
            "description" : "Copy progress per account.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CopyProgress"
            }
          },
          "devicePassword" : {
            "type" : "string",
            "description" : "Set Device password for unlocking Databox Heavy"
          }
        },
        "description" : "Databox Heavy Device Job Details",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobDetails"
        } ]
      },
      "DataBoxHeavyJobSecrets" : {
        "properties" : {
          "cabinetPodSecrets" : {
            "type" : "array",
            "description" : "Contains the list of secret objects for a databox heavy job.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DataBoxHeavySecret"
            }
          }
        },
        "description" : "The secrets related to a databox heavy job.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobSecrets"
        } ]
      },
      "DataBoxHeavySecret" : {
        "type" : "object",
        "properties" : {
          "accountCredentialDetails" : {
            "type" : "array",
            "description" : "Per account level access credentials.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AccountCredentialDetails"
            }
          },
          "devicePassword" : {
            "type" : "string",
            "description" : "Password for out of the box experience on device.",
            "readOnly" : true
          },
          "deviceSerialNumber" : {
            "type" : "string",
            "description" : "Serial number of the assigned device.",
            "readOnly" : true
          },
          "encodedValidationCertPubKey" : {
            "type" : "string",
            "description" : "The base 64 encoded public key to authenticate with the device",
            "readOnly" : true
          },
          "networkConfigurations" : {
            "type" : "array",
            "description" : "Network configuration of the appliance.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplianceNetworkConfiguration"
            }
          }
        },
        "description" : "The secrets related to a databox heavy."
      },
      "DataBoxJobDetails" : {
        "properties" : {
          "copyProgress" : {
            "type" : "array",
            "description" : "Copy progress per storage account.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CopyProgress"
            }
          },
          "devicePassword" : {
            "type" : "string",
            "description" : "Set Device password for unlocking Databox"
          }
        },
        "description" : "Databox Job Details",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobDetails"
        } ]
      },
      "DataBoxScheduleAvailabilityRequest" : {
        "description" : "Request body to get the availability for scheduling data box orders orders.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ScheduleAvailabilityRequest"
        } ]
      },
      "DataBoxSecret" : {
        "type" : "object",
        "properties" : {
          "accountCredentialDetails" : {
            "type" : "array",
            "description" : "Per account level access credentials.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AccountCredentialDetails"
            }
          },
          "devicePassword" : {
            "type" : "string",
            "description" : "Password for out of the box experience on device.",
            "readOnly" : true
          },
          "deviceSerialNumber" : {
            "type" : "string",
            "description" : "Serial number of the assigned device.",
            "readOnly" : true
          },
          "encodedValidationCertPubKey" : {
            "type" : "string",
            "description" : "The base 64 encoded public key to authenticate with the device",
            "readOnly" : true
          },
          "networkConfigurations" : {
            "type" : "array",
            "description" : "Network configuration of the appliance.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplianceNetworkConfiguration"
            }
          }
        },
        "description" : "The secrets related to a DataBox."
      },
      "DataDestinationDetailsValidationRequest" : {
        "required" : [ "destinationAccountDetails", "location" ],
        "properties" : {
          "destinationAccountDetails" : {
            "type" : "array",
            "description" : "Destination account details list.",
            "items" : {
              "$ref" : "#/components/schemas/DestinationAccountDetails"
            }
          },
          "location" : {
            "type" : "string",
            "description" : "Location of stamp or geo."
          }
        },
        "description" : "Request to validate data destination details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputRequest"
        } ]
      },
      "DataDestinationDetailsValidationResponseProperties" : {
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Data destination details validation status.",
            "readOnly" : true,
            "enum" : [ "Valid", "Invalid", "Skipped" ]
          }
        },
        "description" : "Properties of data destination details validation response.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputResponse"
        } ]
      },
      "DataboxJobSecrets" : {
        "properties" : {
          "podSecrets" : {
            "type" : "array",
            "description" : "Contains the list of secret objects for a job.",
            "items" : {
              "$ref" : "#/components/schemas/DataBoxSecret"
            }
          }
        },
        "description" : "The secrets related to a databox job.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobSecrets"
        } ]
      },
      "DcAccessSecurityCode" : {
        "type" : "object",
        "properties" : {
          "forwardDcAccessCode" : {
            "type" : "string",
            "description" : "Dc Access Code for dispatching from DC."
          },
          "reverseDcAccessCode" : {
            "type" : "string",
            "description" : "Dc Access code for dropping off at DC."
          }
        },
        "description" : "Dc Access Security code for device."
      },
      "DestinationAccountDetails" : {
        "required" : [ "dataDestinationType" ],
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "Arm Id of the destination where the data has to be moved."
          },
          "dataDestinationType" : {
            "type" : "string",
            "description" : "Data Destination Type.",
            "enum" : [ "StorageAccount", "ManagedDisk" ]
          },
          "sharePassword" : {
            "type" : "string",
            "description" : "Share password to be shared by all shares in SA."
          }
        },
        "description" : "Details of the destination storage accounts.",
        "discriminator" : {
          "propertyName" : "dataDestinationType"
        }
      },
      "DestinationManagedDiskDetails" : {
        "required" : [ "resourceGroupId", "stagingStorageAccountId" ],
        "properties" : {
          "resourceGroupId" : {
            "type" : "string",
            "description" : "Destination Resource Group Id where the Compute disks should be created."
          },
          "stagingStorageAccountId" : {
            "type" : "string",
            "description" : "Arm Id of the storage account that can be used to copy the vhd for staging."
          }
        },
        "description" : "Details for the destination compute disks.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DestinationAccountDetails"
        } ]
      },
      "DestinationStorageAccountDetails" : {
        "required" : [ "storageAccountId" ],
        "properties" : {
          "storageAccountId" : {
            "type" : "string",
            "description" : "Destination Storage Account Arm Id."
          }
        },
        "description" : "Details for the destination storage account.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DestinationAccountDetails"
        } ]
      },
      "DestinationToServiceLocationMap" : {
        "type" : "object",
        "properties" : {
          "destinationLocation" : {
            "type" : "string",
            "description" : "Location of the destination.",
            "readOnly" : true
          },
          "serviceLocation" : {
            "type" : "string",
            "description" : "Location of the service.",
            "readOnly" : true
          }
        },
        "description" : "Map of destination location to service location."
      },
      "DiskScheduleAvailabilityRequest" : {
        "required" : [ "expectedDataSizeInTerabytes" ],
        "properties" : {
          "expectedDataSizeInTerabytes" : {
            "type" : "integer",
            "description" : "The expected size of the data, which needs to be transferred in this job, in terabytes.",
            "format" : "int32"
          }
        },
        "description" : "Request body to get the availability for scheduling disk orders.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ScheduleAvailabilityRequest"
        } ]
      },
      "DiskSecret" : {
        "type" : "object",
        "properties" : {
          "bitLockerKey" : {
            "type" : "string",
            "description" : "Bit Locker key of the disk which can be used to unlock the disk to copy data.",
            "readOnly" : true
          },
          "diskSerialNumber" : {
            "type" : "string",
            "description" : "Serial number of the assigned disk.",
            "readOnly" : true
          }
        },
        "description" : "Contains all the secrets of a Disk."
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code that can be used to programmatically identify the error.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Describes the error in detail and provides debugging information.",
            "readOnly" : true
          }
        },
        "description" : "Top level error for the job."
      },
      "HeavyScheduleAvailabilityRequest" : {
        "description" : "Request body to get the availability for scheduling heavy orders.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ScheduleAvailabilityRequest"
        } ]
      },
      "JobDeliveryInfo" : {
        "type" : "object",
        "properties" : {
          "scheduledDateTime" : {
            "type" : "string",
            "description" : "Scheduled date time.",
            "format" : "date-time"
          }
        },
        "description" : "Additional delivery info."
      },
      "JobDetails" : {
        "required" : [ "contactDetails", "destinationAccountDetails", "jobDetailsType", "shippingAddress" ],
        "type" : "object",
        "properties" : {
          "chainOfCustodySasKey" : {
            "type" : "string",
            "description" : "Shared access key to download the chain of custody logs",
            "readOnly" : true
          },
          "contactDetails" : {
            "$ref" : "#/components/schemas/ContactDetails"
          },
          "copyLogDetails" : {
            "type" : "array",
            "description" : "List of copy log details.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CopyLogDetails"
            }
          },
          "deliveryPackage" : {
            "$ref" : "#/components/schemas/PackageShippingDetails"
          },
          "destinationAccountDetails" : {
            "type" : "array",
            "description" : "Destination account details.",
            "items" : {
              "$ref" : "#/components/schemas/DestinationAccountDetails"
            }
          },
          "errorDetails" : {
            "type" : "array",
            "description" : "Error details for failure. This is optional.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobErrorDetails"
            }
          },
          "expectedDataSizeInTerabytes" : {
            "type" : "integer",
            "description" : "The expected size of the data, which needs to be transferred in this job, in terabytes.",
            "format" : "int32"
          },
          "jobDetailsType" : {
            "type" : "string",
            "description" : "Indicates the type of job details.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          },
          "jobStages" : {
            "type" : "array",
            "description" : "List of stages that run in the job.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobStages"
            }
          },
          "preferences" : {
            "$ref" : "#/components/schemas/Preferences"
          },
          "returnPackage" : {
            "$ref" : "#/components/schemas/PackageShippingDetails"
          },
          "reverseShipmentLabelSasKey" : {
            "type" : "string",
            "description" : "Shared access key to download the return shipment label",
            "readOnly" : true
          },
          "shippingAddress" : {
            "$ref" : "#/components/schemas/ShippingAddress"
          }
        },
        "description" : "Job details.",
        "discriminator" : {
          "propertyName" : "jobDetailsType"
        }
      },
      "JobErrorDetails" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "integer",
            "description" : "Code for the error.",
            "format" : "int32",
            "readOnly" : true
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Message for the error.",
            "readOnly" : true
          },
          "exceptionMessage" : {
            "type" : "string",
            "description" : "Contains the non localized exception message",
            "readOnly" : true
          },
          "recommendedAction" : {
            "type" : "string",
            "description" : "Recommended action for the error.",
            "readOnly" : true
          }
        },
        "description" : "Job Error Details for providing the information and recommended action."
      },
      "JobProperties" : {
        "type" : "object",
        "properties" : {
          "cancellationReason" : {
            "type" : "string",
            "description" : "Reason for cancellation.",
            "readOnly" : true
          },
          "deliveryInfo" : {
            "$ref" : "#/components/schemas/JobDeliveryInfo"
          },
          "deliveryType" : {
            "type" : "string",
            "description" : "Delivery type of Job.",
            "enum" : [ "NonScheduled", "Scheduled" ]
          },
          "details" : {
            "$ref" : "#/components/schemas/JobDetails"
          },
          "error" : {
            "$ref" : "#/components/schemas/Error"
          },
          "isCancellable" : {
            "type" : "boolean",
            "description" : "Describes whether the job is cancellable or not.",
            "readOnly" : true
          },
          "isCancellableWithoutFee" : {
            "type" : "boolean",
            "description" : "Flag to indicate cancellation of scheduled job.",
            "readOnly" : true
          },
          "isDeletable" : {
            "type" : "boolean",
            "description" : "Describes whether the job is deletable or not.",
            "readOnly" : true
          },
          "isShippingAddressEditable" : {
            "type" : "boolean",
            "description" : "Describes whether the shipping address is editable or not.",
            "readOnly" : true
          },
          "startTime" : {
            "type" : "string",
            "description" : "Time at which the job was started in UTC ISO 8601 format.",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Name of the stage which is in progress.",
            "readOnly" : true,
            "enum" : [ "DeviceOrdered", "DevicePrepared", "Dispatched", "Delivered", "PickedUp", "AtAzureDC", "DataCopy", "Completed", "CompletedWithErrors", "Cancelled", "Failed_IssueReportedAtCustomer", "Failed_IssueDetectedAtAzureDC", "Aborted", "CompletedWithWarnings", "ReadyToDispatchFromAzureDC", "ReadyToReceiveAtAzureDC" ]
          }
        },
        "description" : "Job Properties"
      },
      "JobResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the object.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the object.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/JobProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the object.",
            "readOnly" : true
          }
        },
        "description" : "Job Resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "JobResourceList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of job resources."
          },
          "value" : {
            "type" : "array",
            "description" : "List of job resources.",
            "items" : {
              "$ref" : "#/components/schemas/JobResource"
            }
          }
        },
        "description" : "Job Resource Collection"
      },
      "JobResourceUpdateParameter" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdateJobProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups)."
          }
        },
        "description" : "The JobResourceUpdateParameter."
      },
      "JobSecrets" : {
        "required" : [ "jobSecretsType" ],
        "type" : "object",
        "properties" : {
          "dcAccessSecurityCode" : {
            "$ref" : "#/components/schemas/DcAccessSecurityCode"
          },
          "jobSecretsType" : {
            "type" : "string",
            "description" : "Used to indicate what type of job secrets object.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          }
        },
        "description" : "The base class for the secrets",
        "discriminator" : {
          "propertyName" : "jobSecretsType"
        }
      },
      "JobStages" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "Display name of the job stage.",
            "readOnly" : true
          },
          "errorDetails" : {
            "type" : "array",
            "description" : "Error details for the stage.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobErrorDetails"
            }
          },
          "jobStageDetails" : {
            "type" : "object",
            "description" : "Job Stage Details",
            "readOnly" : true
          },
          "stageName" : {
            "type" : "string",
            "description" : "Name of the job stage.",
            "readOnly" : true,
            "enum" : [ "DeviceOrdered", "DevicePrepared", "Dispatched", "Delivered", "PickedUp", "AtAzureDC", "DataCopy", "Completed", "CompletedWithErrors", "Cancelled", "Failed_IssueReportedAtCustomer", "Failed_IssueDetectedAtAzureDC", "Aborted", "CompletedWithWarnings", "ReadyToDispatchFromAzureDC", "ReadyToReceiveAtAzureDC" ]
          },
          "stageStatus" : {
            "type" : "string",
            "description" : "Status of the job stage.",
            "readOnly" : true,
            "enum" : [ "None", "InProgress", "Succeeded", "Failed", "Cancelled", "Cancelling", "SucceededWithErrors" ]
          },
          "stageTime" : {
            "type" : "string",
            "description" : "Time for the job stage in UTC ISO 8601 format.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Job stages."
      },
      "NotificationPreference" : {
        "required" : [ "sendNotification", "stageName" ],
        "type" : "object",
        "properties" : {
          "sendNotification" : {
            "type" : "boolean",
            "description" : "Notification is required or not."
          },
          "stageName" : {
            "type" : "string",
            "description" : "Name of the stage.",
            "enum" : [ "DevicePrepared", "Dispatched", "Delivered", "PickedUp", "AtAzureDC", "DataCopy" ]
          }
        },
        "description" : "Notification preference for a job stage."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the operation. Format: {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}",
            "readOnly" : true
          },
          "origin" : {
            "type" : "string",
            "description" : "Origin of the operation. Can be : user|system|user,system",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/OperationProperties"
          }
        },
        "description" : "Operation entity."
      },
      "OperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Localized description of the operation for display purpose."
          },
          "operation" : {
            "type" : "string",
            "description" : "Localized name of the operation for display purpose."
          },
          "provider" : {
            "type" : "string",
            "description" : "Provider name."
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource name."
          }
        },
        "description" : "Operation display"
      },
      "OperationList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of operations."
          },
          "value" : {
            "type" : "array",
            "description" : "List of operations.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Operation Collection."
      },
      "OperationProperties" : {
        "type" : "object",
        "description" : "Operation properties."
      },
      "PackageShippingDetails" : {
        "type" : "object",
        "properties" : {
          "carrierName" : {
            "type" : "string",
            "description" : "Name of the carrier.",
            "readOnly" : true
          },
          "trackingId" : {
            "type" : "string",
            "description" : "Tracking Id of shipment.",
            "readOnly" : true
          },
          "trackingUrl" : {
            "type" : "string",
            "description" : "Url where shipment can be tracked.",
            "readOnly" : true
          }
        },
        "description" : "Shipping details."
      },
      "Preferences" : {
        "type" : "object",
        "properties" : {
          "preferredDataCenterRegion" : {
            "type" : "array",
            "description" : "Preferred Data Center Region.",
            "items" : {
              "type" : "string"
            }
          },
          "transportPreferences" : {
            "$ref" : "#/components/schemas/TransportPreferences"
          }
        },
        "description" : "Preferences related to the order"
      },
      "PreferencesValidationRequest" : {
        "required" : [ "deviceType" ],
        "properties" : {
          "deviceType" : {
            "type" : "string",
            "description" : "Device type to be used for the job.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          },
          "preference" : {
            "$ref" : "#/components/schemas/Preferences"
          }
        },
        "description" : "Request to validate preference of transport and data center.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputRequest"
        } ]
      },
      "PreferencesValidationResponseProperties" : {
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Validation status of requested data center and transport.",
            "readOnly" : true,
            "enum" : [ "Valid", "Invalid", "Skipped" ]
          }
        },
        "description" : "Properties of data center and transport preference validation response.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputResponse"
        } ]
      },
      "RegionConfigurationRequest" : {
        "type" : "object",
        "properties" : {
          "scheduleAvailabilityRequest" : {
            "$ref" : "#/components/schemas/ScheduleAvailabilityRequest"
          },
          "transportAvailabilityRequest" : {
            "$ref" : "#/components/schemas/TransportAvailabilityRequest"
          }
        },
        "description" : "Request body to get the configuration for the region."
      },
      "RegionConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "scheduleAvailabilityResponse" : {
            "$ref" : "#/components/schemas/ScheduleAvailabilityResponse"
          },
          "transportAvailabilityResponse" : {
            "$ref" : "#/components/schemas/TransportAvailabilityResponse"
          }
        },
        "description" : "Configuration response specific to a region."
      },
      "Resource" : {
        "required" : [ "location", "sku" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location of the resource. This will be one of the supported and registered Azure Regions (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once it is created, but if an identical region is specified on update the request will succeed."
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups)."
          }
        },
        "description" : "Model of the Resource."
      },
      "ScheduleAvailabilityRequest" : {
        "required" : [ "skuName", "storageLocation" ],
        "type" : "object",
        "properties" : {
          "skuName" : {
            "type" : "string",
            "description" : "Sku Name for which the order is to be scheduled.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          },
          "storageLocation" : {
            "type" : "string",
            "description" : "Location for data transfer. \r\nFor locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
          }
        },
        "description" : "Request body to get the availability for scheduling orders.",
        "discriminator" : {
          "propertyName" : "skuName"
        }
      },
      "ScheduleAvailabilityResponse" : {
        "type" : "object",
        "properties" : {
          "availableDates" : {
            "type" : "array",
            "description" : "List of dates available to schedule",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        },
        "description" : "Schedule availability response for given sku in a region."
      },
      "ShareCredentialDetails" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "Password for the share.",
            "readOnly" : true
          },
          "shareName" : {
            "type" : "string",
            "description" : "Name of the share.",
            "readOnly" : true
          },
          "shareType" : {
            "type" : "string",
            "description" : "Type of the share.",
            "readOnly" : true,
            "enum" : [ "UnknownType", "HCS", "BlockBlob", "PageBlob", "AzureFile", "ManagedDisk" ]
          },
          "supportedAccessProtocols" : {
            "type" : "array",
            "description" : "Access protocols supported on the device.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "SMB", "NFS" ]
            }
          },
          "userName" : {
            "type" : "string",
            "description" : "User name for the share.",
            "readOnly" : true
          }
        },
        "description" : "Credential details of the shares in account."
      },
      "ShipmentPickUpRequest" : {
        "required" : [ "endTime", "shipmentLocation", "startTime" ],
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "Maximum date before which the pick up should commence, this must be in local time of pick up area.",
            "format" : "date-time"
          },
          "shipmentLocation" : {
            "type" : "string",
            "description" : "Shipment Location in the pickup place. Eg.front desk"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Minimum date after which the pick up should commence, this must be in local time of pick up area.",
            "format" : "date-time"
          }
        },
        "description" : "Shipment pick up request details."
      },
      "ShipmentPickUpResponse" : {
        "type" : "object",
        "properties" : {
          "confirmationNumber" : {
            "type" : "string",
            "description" : "Confirmation number for the pick up request.",
            "readOnly" : true
          },
          "readyByTime" : {
            "type" : "string",
            "description" : "Time by which shipment should be ready for pick up, this is in local time of pick up area.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Shipment pick up response."
      },
      "ShippingAddress" : {
        "required" : [ "country", "postalCode", "streetAddress1" ],
        "type" : "object",
        "properties" : {
          "addressType" : {
            "type" : "string",
            "description" : "Type of address.",
            "enum" : [ "None", "Residential", "Commercial" ]
          },
          "city" : {
            "type" : "string",
            "description" : "Name of the City."
          },
          "companyName" : {
            "type" : "string",
            "description" : "Name of the company."
          },
          "country" : {
            "type" : "string",
            "description" : "Name of the Country."
          },
          "postalCode" : {
            "type" : "string",
            "description" : "Postal code."
          },
          "stateOrProvince" : {
            "type" : "string",
            "description" : "Name of the State or Province."
          },
          "streetAddress1" : {
            "type" : "string",
            "description" : "Street Address line 1."
          },
          "streetAddress2" : {
            "type" : "string",
            "description" : "Street Address line 2."
          },
          "streetAddress3" : {
            "type" : "string",
            "description" : "Street Address line 3."
          },
          "zipExtendedCode" : {
            "type" : "string",
            "description" : "Extended Zip Code."
          }
        },
        "description" : "Shipping address where customer wishes to receive the device."
      },
      "Sku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the sku."
          },
          "family" : {
            "type" : "string",
            "description" : "The sku family."
          },
          "name" : {
            "type" : "string",
            "description" : "The sku name.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          }
        },
        "description" : "The Sku."
      },
      "SkuAvailabilityValidationRequest" : {
        "required" : [ "country", "deviceType", "location", "transferType" ],
        "properties" : {
          "country" : {
            "type" : "string",
            "description" : "ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements"
          },
          "deviceType" : {
            "type" : "string",
            "description" : "Device type to be used for the job.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          },
          "location" : {
            "type" : "string",
            "description" : "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
          },
          "transferType" : {
            "type" : "string",
            "description" : "Type of the transfer.",
            "enum" : [ "ImportToAzure" ]
          }
        },
        "description" : "Request to validate sku availability.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputRequest"
        } ]
      },
      "SkuAvailabilityValidationResponseProperties" : {
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Sku availability validation status.",
            "readOnly" : true,
            "enum" : [ "Valid", "Invalid", "Skipped" ]
          }
        },
        "description" : "Properties of sku availability validation response.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputResponse"
        } ]
      },
      "SkuCapacity" : {
        "type" : "object",
        "properties" : {
          "maximum" : {
            "type" : "string",
            "description" : "Maximum capacity in TB.",
            "readOnly" : true
          },
          "usable" : {
            "type" : "string",
            "description" : "Usable capacity in TB.",
            "readOnly" : true
          }
        },
        "description" : "Capacity of the sku."
      },
      "SkuCost" : {
        "type" : "object",
        "properties" : {
          "meterId" : {
            "type" : "string",
            "description" : "Meter id of the Sku.",
            "readOnly" : true
          },
          "meterType" : {
            "type" : "string",
            "description" : "The type of the meter.",
            "readOnly" : true
          }
        },
        "description" : "Describes metadata for retrieving price info."
      },
      "SkuInformation" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The sku is enabled or not.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/SkuProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          }
        },
        "description" : "Information of the sku."
      },
      "SkuProperties" : {
        "type" : "object",
        "properties" : {
          "apiVersions" : {
            "type" : "array",
            "description" : "Api versions that support this Sku.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "capacity" : {
            "$ref" : "#/components/schemas/SkuCapacity"
          },
          "costs" : {
            "type" : "array",
            "description" : "Cost of the Sku.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/SkuCost"
            }
          },
          "destinationToServiceLocationMap" : {
            "type" : "array",
            "description" : "The map of destination location to service location.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DestinationToServiceLocationMap"
            }
          },
          "disabledReason" : {
            "type" : "string",
            "description" : "Reason why the Sku is disabled.",
            "readOnly" : true,
            "enum" : [ "None", "Country", "Region", "Feature", "OfferType", "NoSubscriptionInfo" ]
          },
          "disabledReasonMessage" : {
            "type" : "string",
            "description" : "Message for why the Sku is disabled.",
            "readOnly" : true
          },
          "requiredFeature" : {
            "type" : "string",
            "description" : "Required feature to access the sku.",
            "readOnly" : true
          }
        },
        "description" : "Properties of the sku."
      },
      "SubscriptionIsAllowedToCreateJobValidationRequest" : {
        "description" : "Request to validate subscription permission to create jobs.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputRequest"
        } ]
      },
      "SubscriptionIsAllowedToCreateJobValidationResponseProperties" : {
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Validation status of subscription permission to create job.",
            "readOnly" : true,
            "enum" : [ "Valid", "Invalid", "Skipped" ]
          }
        },
        "description" : "Properties of subscription permission to create job validation response.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputResponse"
        } ]
      },
      "TransportAvailabilityDetails" : {
        "type" : "object",
        "properties" : {
          "shipmentType" : {
            "type" : "string",
            "description" : "Transport Shipment Type supported for given region.",
            "readOnly" : true,
            "enum" : [ "CustomerManaged", "MicrosoftManaged" ]
          }
        },
        "description" : "Transport options availability details for given region."
      },
      "TransportAvailabilityRequest" : {
        "type" : "object",
        "properties" : {
          "skuName" : {
            "type" : "string",
            "description" : "Type of the device.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          }
        },
        "description" : "Request body to get the transport availability for given sku."
      },
      "TransportAvailabilityResponse" : {
        "type" : "object",
        "properties" : {
          "transportAvailabilityDetails" : {
            "type" : "array",
            "description" : "List of transport availability details for given region",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/TransportAvailabilityDetails"
            }
          }
        },
        "description" : "Transport options available for given sku in a region."
      },
      "TransportPreferences" : {
        "required" : [ "preferredShipmentType" ],
        "type" : "object",
        "properties" : {
          "preferredShipmentType" : {
            "type" : "string",
            "description" : "Indicates Shipment Logistics type that the customer preferred.",
            "enum" : [ "CustomerManaged", "MicrosoftManaged" ]
          }
        },
        "description" : "Preferences related to the shipment logistics of the sku"
      },
      "UnencryptedCredentials" : {
        "type" : "object",
        "properties" : {
          "jobName" : {
            "type" : "string",
            "description" : "Name of the job.",
            "readOnly" : true
          },
          "jobSecrets" : {
            "$ref" : "#/components/schemas/JobSecrets"
          }
        },
        "description" : "Unencrypted credentials for accessing device."
      },
      "UnencryptedCredentialsList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of unencrypted credentials."
          },
          "value" : {
            "type" : "array",
            "description" : "List of unencrypted credentials.",
            "items" : {
              "$ref" : "#/components/schemas/UnencryptedCredentials"
            }
          }
        },
        "description" : "List of unencrypted credentials for accessing device."
      },
      "UpdateJobDetails" : {
        "type" : "object",
        "properties" : {
          "contactDetails" : {
            "$ref" : "#/components/schemas/ContactDetails"
          },
          "shippingAddress" : {
            "$ref" : "#/components/schemas/ShippingAddress"
          }
        },
        "description" : "Job details for update."
      },
      "UpdateJobProperties" : {
        "type" : "object",
        "properties" : {
          "destinationAccountDetails" : {
            "type" : "array",
            "description" : "Destination account details.",
            "items" : {
              "$ref" : "#/components/schemas/DestinationAccountDetails"
            }
          },
          "details" : {
            "$ref" : "#/components/schemas/UpdateJobDetails"
          }
        },
        "description" : "Job Properties for update"
      },
      "ValidateAddress" : {
        "required" : [ "deviceType", "shippingAddress" ],
        "properties" : {
          "deviceType" : {
            "type" : "string",
            "description" : "Device type to be used for the job.",
            "enum" : [ "DataBox", "DataBoxDisk", "DataBoxHeavy" ]
          },
          "shippingAddress" : {
            "$ref" : "#/components/schemas/ShippingAddress"
          },
          "transportPreferences" : {
            "$ref" : "#/components/schemas/TransportPreferences"
          }
        },
        "description" : "The requirements to validate customer address where the device needs to be shipped.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ValidationInputRequest"
        } ]
      },
      "ValidationInputRequest" : {
        "required" : [ "validationType" ],
        "type" : "object",
        "properties" : {
          "validationType" : {
            "type" : "string",
            "description" : "Identifies the type of validation request.",
            "enum" : [ "ValidateAddress", "ValidateDataDestinationDetails", "ValidateSubscriptionIsAllowedToCreateJob", "ValidatePreferences", "ValidateCreateOrderLimit", "ValidateSkuAvailability" ]
          }
        },
        "description" : "Minimum fields that must be present in any type of validation request.",
        "discriminator" : {
          "propertyName" : "validationType"
        }
      },
      "ValidationInputResponse" : {
        "required" : [ "validationType" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/Error"
          },
          "validationType" : {
            "type" : "string",
            "description" : "Identifies the type of validation response.",
            "enum" : [ "ValidateAddress", "ValidateDataDestinationDetails", "ValidateSubscriptionIsAllowedToCreateJob", "ValidatePreferences", "ValidateCreateOrderLimit", "ValidateSkuAvailability" ]
          }
        },
        "description" : "Minimum properties that should be present in each individual validation response.",
        "discriminator" : {
          "propertyName" : "validationType"
        }
      },
      "ValidationRequest" : {
        "required" : [ "individualRequestDetails", "validationCategory" ],
        "type" : "object",
        "properties" : {
          "individualRequestDetails" : {
            "type" : "array",
            "description" : "List of request details contain validationType and its request as key and value respectively.",
            "items" : {
              "$ref" : "#/components/schemas/ValidationInputRequest"
            }
          },
          "validationCategory" : {
            "type" : "string",
            "description" : "Identify the nature of validation.",
            "enum" : [ "JobCreationValidation" ]
          }
        },
        "description" : "Input request for all pre job creation validation.",
        "discriminator" : {
          "propertyName" : "validationCategory"
        }
      },
      "ValidationResponse" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ValidationResponseProperties"
          }
        },
        "description" : "Response of pre job creation validations."
      },
      "ValidationResponseProperties" : {
        "type" : "object",
        "properties" : {
          "individualResponseDetails" : {
            "type" : "array",
            "description" : "List of response details contain validationType and its response as key and value respectively.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ValidationInputResponse"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "Overall validation status.",
            "readOnly" : true,
            "enum" : [ "AllValidToProceed", "InputsRevisitRequired", "CertainInputValidationsSkipped" ]
          }
        },
        "description" : "Properties of pre job creation validation response."
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API Version",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "jobNameParameter" : {
        "name" : "jobName",
        "in" : "path",
        "description" : "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
        "required" : true,
        "schema" : {
          "maxLength" : 24,
          "minLength" : 3,
          "pattern" : "^[-\\w\\.]+$",
          "type" : "string"
        }
      },
      "locationParameter" : {
        "name" : "location",
        "in" : "path",
        "description" : "The location of the resource",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The Resource Group Name",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The Subscription Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}