{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Flinkster_API_NG",
    "description" : "This REST-API enables you to query for private transport sharing offers provided by companies and cities in Germany, Netherland and Austria. \nYou can search for informations about the rental stations (points or areas) where you can find the rentals by utilizing the /areas/ ressource. \nWith the help of the proximity search in the /bookingproposals/ URI you can request the availabilities of the rentalobjects for spontaneous or planed usage in the future. \n\nFeel free to browse through data by setting the parameter 'providernetwork' to the value: \n 1: Search for car sharing offers provided by the Flinkster platform (http://www.flinkster.de)\n2: Finding bike rental offers from Call a Bike (http://www.callabike.de) \n\nYou can find more details in the documentation section (Unfortunately only available in german language).\n\nHave lots of fun and we are lucky to take notice of your products or getting your feedback.",
    "termsOfService" : "https://developer.deutschebahn.com/store/",
    "contact" : {
      "name" : "DB Rent GmbH",
      "email" : "partner@flinkster.de"
    },
    "version" : "v1"
  },
  "servers" : [ {
    "url" : "https://api.deutschebahn.com/flinkster-api-ng/v1"
  }, {
    "url" : "http://api.deutschebahn.com/flinkster-api-ng/v1"
  } ],
  "tags" : [ {
    "name" : "areas"
  }, {
    "name" : "bookingproposals"
  }, {
    "name" : "categories"
  }, {
    "name" : "index"
  }, {
    "name" : "prices"
  }, {
    "name" : "providernetworks"
  }, {
    "name" : "providers"
  }, {
    "name" : "rentalobjects"
  } ],
  "paths" : {
    "/areas" : {
      "get" : {
        "tags" : [ "areas" ],
        "summary" : "List Areas by Criteria.",
        "description" : "Search for areas (locations of rental objects) by criteria.",
        "operationId" : "listAreas",
        "parameters" : [ {
          "name" : "lat",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "lon",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provider",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providernetwork",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaJO"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\nIf provider is not allowed to display this area.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaJO"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found\nIf no area was found for the given UID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaJO"
                }
              }
            }
          }
        }
      }
    },
    "/areas/{areaUID}" : {
      "get" : {
        "tags" : [ "areas" ],
        "summary" : "Get area by UID.",
        "description" : "Search for a specific area by UID.",
        "operationId" : "getArea",
        "parameters" : [ {
          "name" : "areaUID",
          "in" : "path",
          "description" : "The Area UID ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "description" : "Expand Provider",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaJO"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\nIf provider is not allowed to display this area.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaJO"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found\nIf no area was found for the given UID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaJO"
                }
              }
            }
          }
        }
      }
    },
    "/bookingproposals" : {
      "get" : {
        "tags" : [ "bookingproposals" ],
        "summary" : "Query for available RentalObjects of a specific view",
        "description" : "Here you can query all bookable Rental Objects with different Parameters (Time, Location,...)",
        "operationId" : "listBookingProposals",
        "parameters" : [ {
          "name" : "lat",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "lon",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "providernetwork",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "begin",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "view",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RentalObjectJO"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request\nOne or more parameters have invalid values.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\nProvider is not allowed to use this interface.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          }
        }
      }
    },
    "/index" : {
      "get" : {
        "tags" : [ "index" ],
        "summary" : "Show index.",
        "description" : "Show Service index.",
        "operationId" : "getIndex",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonCollection"
                }
              }
            }
          }
        }
      }
    },
    "/providernetworks/{providernetworkUID}/categories" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Lists all categories",
        "description" : "Search for categorie.",
        "operationId" : "listCategories",
        "parameters" : [ {
          "name" : "providernetworkUID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryJO"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request\nOne or more parameters have invalid values.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\nProvider is not allowed to use this interface.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          }
        }
      }
    },
    "/providernetworks/{providernetworkUID}/categories/{categoryUID}" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Get a Category by UID",
        "description" : "Search for categorie.",
        "operationId" : "getCategory",
        "parameters" : [ {
          "name" : "providernetworkUID",
          "in" : "path",
          "description" : "Provider Network UID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryUID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryJO"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request\nOne or more parameters have invalid values.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\nProvider is not allowed to use this interface.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          }
        }
      }
    },
    "/providernetworks/{providernetworkUID}/prices" : {
      "get" : {
        "tags" : [ "prices" ],
        "summary" : "Get information about the prices.",
        "description" : "Prices of a rental object by query params. The params depend on the price determination strategy of the provider network.\n",
        "operationId" : "getPrices",
        "parameters" : [ {
          "name" : "providernetworkUID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RentalObjectJO"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request\nOne or more parameters have invalid values.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\nProvider is not allowed to use this interface.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          }
        }
      }
    },
    "/providernetworks/{providernetworkUID}/rentalobjects/{rentalObjectUID}" : {
      "get" : {
        "tags" : [ "rentalobjects" ],
        "summary" : "Get information about the RentalObject.",
        "description" : "Get information about the Rental Object.\n",
        "operationId" : "getRentalObject",
        "parameters" : [ {
          "name" : "rentalObjectUID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providernetworkUID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RentalObjectJO"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request\nOne or more parameters have invalid values.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\nProvider is not allowed to use this interface.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          }
        }
      }
    },
    "/providernetworks/{uid}" : {
      "get" : {
        "tags" : [ "providernetworks" ],
        "summary" : "Get information about the ProviderNetworkResources.",
        "description" : "Get information about the ProviderNetworkResources.\n",
        "operationId" : "getProviderNetwork",
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RentalObjectJO"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request\nOne or more parameters have invalid values.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\nProvider is not allowed to use this interface.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          }
        }
      }
    },
    "/providers/{uid}" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Get information about the ProviderResourceImpl.",
        "description" : "Get information about the ProviderResourcesCtrl.\n",
        "operationId" : "getProvider",
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RentalObjectJO"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request\nOne or more parameters have invalid values.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\nProvider is not allowed to use this interface.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorJO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AddressJO" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "type" : "string"
          },
          "district" : {
            "type" : "string"
          },
          "isoCountryCode" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "street" : {
            "type" : "string"
          },
          "zip" : {
            "type" : "string"
          }
        }
      },
      "AreaJO" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkJO"
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/AddressJO"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "description" : {
            "type" : "string"
          },
          "expand" : {
            "type" : "string"
          },
          "geometry" : {
            "$ref" : "#/components/schemas/GeometryJO"
          },
          "href" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "provider" : {
            "$ref" : "#/components/schemas/ProviderJO"
          },
          "providerAreaId" : {
            "type" : "string"
          },
          "providerNetworkIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "STATION", "OPERATIONAREA", "PARKINGAREA", "GASSTATION", "UNKNOWN" ]
          },
          "uid" : {
            "type" : "string"
          }
        }
      },
      "BookingProposalJO" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkJO"
            }
          },
          "area" : {
            "$ref" : "#/components/schemas/AreaJO"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "description" : {
            "type" : "string"
          },
          "distance" : {
            "type" : "number",
            "format" : "double"
          },
          "expand" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "position" : {
            "$ref" : "#/components/schemas/GeoJsonObject"
          },
          "price" : {
            "$ref" : "#/components/schemas/JsonCollectionPriceJO"
          },
          "rentalObject" : {
            "$ref" : "#/components/schemas/RentalObjectJO"
          },
          "uid" : {
            "type" : "string"
          }
        }
      },
      "CategoryJO" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkJO"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "description" : {
            "type" : "string"
          },
          "expand" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "price" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PriceJO"
            }
          },
          "uid" : {
            "type" : "string"
          }
        }
      },
      "Crs" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "name", "link" ]
          }
        }
      },
      "ErrorJO" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "level" : {
            "type" : "string",
            "enum" : [ "INFO", "WARNING", "ERROR" ]
          },
          "message" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Feature" : {
        "type" : "object",
        "properties" : {
          "bbox" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "crs" : {
            "$ref" : "#/components/schemas/Crs"
          },
          "geometry" : {
            "$ref" : "#/components/schemas/GeoJsonObject"
          },
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "FeatureCollection" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/GeoJsonObject"
        }, {
          "type" : "object",
          "properties" : {
            "features" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Feature"
              }
            }
          }
        } ]
      },
      "GeoJsonObject" : {
        "type" : "object",
        "properties" : {
          "bbox" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "crs" : {
            "$ref" : "#/components/schemas/Crs"
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "GeometryJO" : {
        "type" : "object",
        "properties" : {
          "centroid" : {
            "$ref" : "#/components/schemas/Point"
          },
          "position" : {
            "$ref" : "#/components/schemas/GeoJsonObject"
          }
        }
      },
      "JsonCollection" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkJO"
            }
          },
          "href" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JsonObject"
            }
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "JsonCollectionPriceJO" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkJO"
            }
          },
          "href" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PriceJO"
            }
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "JsonObject" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkJO"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "description" : {
            "type" : "string"
          },
          "expand" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "uid" : {
            "type" : "string"
          }
        }
      },
      "LineString" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/GeoJsonObject"
        }, {
          "type" : "object"
        } ]
      },
      "LinkJO" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "rel" : {
            "type" : "string"
          },
          "verb" : {
            "type" : "string"
          }
        }
      },
      "LngLatAlt" : {
        "type" : "object",
        "properties" : {
          "altitude" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "MultiLineString" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/GeoJsonObject"
        }, {
          "type" : "object",
          "properties" : {
            "coordinates" : {
              "type" : "array",
              "items" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/LngLatAlt"
                }
              }
            }
          }
        } ]
      },
      "MultiPoint" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/GeoJsonObject"
        }, {
          "type" : "object",
          "properties" : {
            "coordinates" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LngLatAlt"
              }
            }
          }
        } ]
      },
      "MultiPolygon" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/GeoJsonObject"
        }, {
          "type" : "object",
          "properties" : {
            "coordinates" : {
              "type" : "array",
              "items" : {
                "type" : "array",
                "items" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LngLatAlt"
                  }
                }
              }
            }
          }
        } ]
      },
      "Point" : {
        "type" : "object",
        "properties" : {
          "bbox" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "coordinates" : {
            "$ref" : "#/components/schemas/LngLatAlt"
          },
          "crs" : {
            "$ref" : "#/components/schemas/Crs"
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "Polygon" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/GeoJsonObject"
        }, {
          "type" : "object",
          "properties" : {
            "coordinates" : {
              "type" : "array",
              "items" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/LngLatAlt"
                }
              }
            }
          }
        } ]
      },
      "PriceJO" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkJO"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "currency" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "expand" : {
            "type" : "string"
          },
          "grossamount" : {
            "type" : "number",
            "format" : "double"
          },
          "href" : {
            "type" : "string"
          },
          "interval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "preferredprice" : {
            "type" : "boolean",
            "default" : false
          },
          "taxrate" : {
            "type" : "number",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "TIME", "DISTANCE" ]
          },
          "uid" : {
            "type" : "string"
          }
        }
      },
      "ProviderJO" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkJO"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "description" : {
            "type" : "string"
          },
          "expand" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "uid" : {
            "type" : "string"
          }
        }
      },
      "RentalObjectJO" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkJO"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "category" : {
            "$ref" : "#/components/schemas/CategoryJO"
          },
          "description" : {
            "type" : "string"
          },
          "expand" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "provider" : {
            "$ref" : "#/components/schemas/ProviderJO"
          },
          "providerNetworkIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "providerRentalObjectId" : {
            "type" : "string"
          },
          "rentalModel" : {
            "type" : "string",
            "enum" : [ "FREEFLOATING", "FREEFLOATINGWITHSTATION", "STATIONBASED", "PARKINGAREA", "UNKNOWN" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "VEHICLE", "VEHICLEPOOL", "BIKE", "PEDELEC", "UNKNOWN" ]
          },
          "uid" : {
            "type" : "string"
          }
        }
      }
    }
  }
}