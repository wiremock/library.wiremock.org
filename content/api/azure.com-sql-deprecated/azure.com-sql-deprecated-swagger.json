{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure SQL Database",
    "description" : "Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, and operations.",
    "version" : "2014-04-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions" : {
      "get" : {
        "tags" : [ "ImportExport" ],
        "description" : "Gets database extensions. This API is deprecated and should not be used.",
        "operationId" : "Extensions_ListByDatabase",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database to import into",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/{extensionName}" : {
      "get" : {
        "tags" : [ "ImportExport" ],
        "description" : "Gets a database extension. This API is deprecated and should not be used.",
        "operationId" : "Extensions_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database to import into",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the extension to get",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "import" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption" : {
      "get" : {
        "tags" : [ "TransparentDataEncryption" ],
        "description" : "Gets a list of a database's transparent data encryption configurations. There is only ever one element, named 'current', so GetTransparentDataEncryptionConfiguration should be used instead.",
        "operationId" : "TransparentDataEncryptionConfigurations_ListByDatabase",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database for which the transparent data encryption applies.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransparentDataEncryptionListResult"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    }
  },
  "components" : {
    "schemas" : {
      "ExtensionListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of extensions.",
            "items" : {
              "type" : "object"
            }
          }
        },
        "description" : "Represents the response to a list extensions request."
      },
      "TransparentDataEncryptionListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of transparent data encryption configurations.",
            "items" : {
              "type" : "object",
              "properties" : {
                "location" : {
                  "type" : "string",
                  "description" : "Resource location.",
                  "readOnly" : true
                },
                "properties" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the database transparent data encryption.",
                      "enum" : [ "Enabled", "Disabled" ]
                    }
                  },
                  "description" : "Represents the properties of a database transparent data encryption."
                }
              },
              "description" : "Represents a database transparent data encryption configuration."
            }
          }
        },
        "description" : "Represents the response to a list transparent data encryption configurations request."
      }
    },
    "parameters" : {
      "DatabaseExpandParameter" : {
        "name" : "$expand",
        "in" : "query",
        "description" : "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
        "schema" : {
          "type" : "string"
        }
      },
      "ServerNameParameter" : {
        "name" : "serverName",
        "in" : "path",
        "description" : "The name of the server.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}