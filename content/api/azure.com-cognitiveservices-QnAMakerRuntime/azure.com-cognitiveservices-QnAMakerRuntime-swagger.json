{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "QnAMaker Runtime Client",
    "description" : "An API for QnAMaker runtime",
    "version" : "4.0"
  },
  "servers" : [ {
    "url" : "https://azure.local/"
  } ],
  "security" : [ {
    "auth_key" : null
  } ],
  "paths" : {
    "/knowledgebases/{kbId}/generateAnswer" : {
      "post" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "GenerateAnswer call to query the knowledgebase.",
        "operationId" : "Runtime_GenerateAnswer",
        "parameters" : [ {
          "name" : "kbId",
          "in" : "path",
          "description" : "Knowledgebase id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Post body of the request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "GenerateAnswer call response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QnASearchResultList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/knowledgebases/{kbId}/train" : {
      "post" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "Train call to add suggestions to the knowledgebase.",
        "operationId" : "Runtime_Train",
        "parameters" : [ {
          "name" : "kbId",
          "in" : "path",
          "description" : "Knowledgebase id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Post body of the request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeedbackRecordsDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "HTTP 204 No Content."
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ContextDTO" : {
        "type" : "object",
        "properties" : {
          "isContextOnly" : {
            "type" : "boolean",
            "description" : "To mark if a prompt is relevant only with a previous question or not.\ntrue - Do not include this QnA as search result for queries without context\nfalse - ignores context and includes this QnA in search result"
          },
          "prompts" : {
            "maxItems" : 20,
            "type" : "array",
            "description" : "List of prompts associated with the answer.",
            "items" : {
              "$ref" : "#/components/schemas/PromptDTO"
            }
          }
        },
        "description" : "Context associated with Qna."
      },
      "Error" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/ErrorCode"
          },
          "details" : {
            "type" : "array",
            "description" : "An array of details about specific errors that led to this reported error.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            }
          },
          "innerError" : {
            "$ref" : "#/components/schemas/InnerErrorModel"
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable representation of the error."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error."
          }
        },
        "additionalProperties" : false,
        "description" : "The error object. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses."
      },
      "ErrorCode" : {
        "type" : "string",
        "description" : "Human readable error code.",
        "enum" : [ "BadArgument", "Forbidden", "NotFound", "KbNotFound", "Unauthorized", "Unspecified", "EndpointKeysError", "QuotaExceeded", "QnaRuntimeError", "SKULimitExceeded", "OperationNotFound", "ServiceError", "ValidationFailure", "ExtractionFailure" ]
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "description" : "The error object.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Error"
            } ]
          }
        },
        "additionalProperties" : false,
        "description" : "Error response. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses."
      },
      "FeedbackRecordDTO" : {
        "type" : "object",
        "properties" : {
          "qnaId" : {
            "type" : "integer",
            "description" : "The qnaId for which the suggested question is provided as feedback.",
            "format" : "int32"
          },
          "userId" : {
            "type" : "string",
            "description" : "Unique identifier for the user."
          },
          "userQuestion" : {
            "maxLength" : 1000,
            "type" : "string",
            "description" : "The suggested question being provided as feedback."
          }
        },
        "additionalProperties" : false,
        "description" : "Active learning feedback record."
      },
      "FeedbackRecordsDTO" : {
        "type" : "object",
        "properties" : {
          "feedbackRecords" : {
            "type" : "array",
            "description" : "List of feedback records.",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackRecordDTO"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Active learning feedback records."
      },
      "InnerErrorModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A more specific error code than was provided by the containing error."
          },
          "innerError" : {
            "$ref" : "#/components/schemas/InnerErrorModel"
          }
        },
        "additionalProperties" : false,
        "description" : "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses."
      },
      "MetadataDTO" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string",
            "description" : "Metadata name."
          },
          "value" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "Metadata value."
          }
        },
        "additionalProperties" : false,
        "description" : "Name - value pair of metadata."
      },
      "PromptDTO" : {
        "type" : "object",
        "properties" : {
          "displayOrder" : {
            "type" : "integer",
            "description" : "Index of the prompt - used in ordering of the prompts",
            "format" : "int32"
          },
          "displayText" : {
            "maxLength" : 200,
            "type" : "string",
            "description" : "Text displayed to represent a follow up question prompt"
          },
          "qna" : {
            "type" : "object",
            "description" : "QnADTO - Either QnaId or QnADTO needs to be present in a PromptDTO object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/QnADTO"
            } ]
          },
          "qnaId" : {
            "type" : "integer",
            "description" : "Qna id corresponding to the prompt - if QnaId is present, QnADTO object is ignored.",
            "format" : "int32"
          }
        },
        "description" : "Prompt for an answer."
      },
      "QnADTO" : {
        "required" : [ "answer", "questions" ],
        "type" : "object",
        "properties" : {
          "answer" : {
            "maxLength" : 25000,
            "minLength" : 1,
            "type" : "string",
            "description" : "Answer text"
          },
          "context" : {
            "type" : "object",
            "description" : "Context of a QnA",
            "allOf" : [ {
              "$ref" : "#/components/schemas/ContextDTO"
            } ]
          },
          "id" : {
            "type" : "integer",
            "description" : "Unique id for the Q-A.",
            "format" : "int32"
          },
          "metadata" : {
            "type" : "array",
            "description" : "List of metadata associated with the answer.",
            "items" : {
              "$ref" : "#/components/schemas/MetadataDTO"
            }
          },
          "questions" : {
            "type" : "array",
            "description" : "List of questions associated with the answer.",
            "items" : {
              "type" : "string"
            }
          },
          "source" : {
            "maxLength" : 300,
            "type" : "string",
            "description" : "Source from which Q-A was indexed. eg. https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs"
          }
        },
        "additionalProperties" : false,
        "description" : "Q-A object."
      },
      "QnASearchResult" : {
        "type" : "object",
        "properties" : {
          "answer" : {
            "type" : "string",
            "description" : "Answer."
          },
          "context" : {
            "type" : "object",
            "description" : "Context object of the QnA",
            "allOf" : [ {
              "$ref" : "#/components/schemas/ContextDTO"
            } ]
          },
          "id" : {
            "type" : "integer",
            "description" : "Id of the QnA result.",
            "format" : "int32"
          },
          "metadata" : {
            "type" : "array",
            "description" : "List of metadata.",
            "items" : {
              "$ref" : "#/components/schemas/MetadataDTO"
            }
          },
          "questions" : {
            "type" : "array",
            "description" : "List of questions.",
            "items" : {
              "type" : "string"
            }
          },
          "score" : {
            "type" : "number",
            "description" : "Search result score."
          },
          "source" : {
            "type" : "string",
            "description" : "Source of QnA result."
          }
        },
        "additionalProperties" : false,
        "description" : "Represents Search Result."
      },
      "QnASearchResultList" : {
        "type" : "object",
        "properties" : {
          "answers" : {
            "type" : "array",
            "description" : "Represents Search Result list.",
            "items" : {
              "$ref" : "#/components/schemas/QnASearchResult"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Represents List of Question Answers."
      },
      "QueryContextDTO" : {
        "type" : "object",
        "properties" : {
          "previousQnaId" : {
            "type" : "string",
            "description" : "Previous QnA Id - qnaId of the top result."
          },
          "previousUserQuery" : {
            "type" : "string",
            "description" : "Previous user query."
          }
        },
        "additionalProperties" : false,
        "description" : "Context object with previous QnA's information."
      },
      "QueryDTO" : {
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "object",
            "description" : "Context object with previous QnA's information.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/QueryContextDTO"
            } ]
          },
          "isTest" : {
            "type" : "boolean",
            "description" : "Query against the test index."
          },
          "qnaId" : {
            "type" : "string",
            "description" : "Exact qnaId to fetch from the knowledgebase, this field takes priority over question."
          },
          "question" : {
            "type" : "string",
            "description" : "User question to query against the knowledge base."
          },
          "rankerType" : {
            "type" : "string",
            "description" : "Optional field. Set to 'QuestionOnly' for using a question only Ranker."
          },
          "scoreThreshold" : {
            "type" : "number",
            "description" : "Threshold for answers returned based on score."
          },
          "strictFilters" : {
            "type" : "array",
            "description" : "Find only answers that contain these metadata.",
            "items" : {
              "$ref" : "#/components/schemas/MetadataDTO"
            }
          },
          "top" : {
            "type" : "integer",
            "description" : "Max number of answers to be returned for the question.",
            "format" : "int32"
          },
          "userId" : {
            "type" : "string",
            "description" : "Unique identifier for the user."
          }
        },
        "additionalProperties" : false,
        "description" : "POST body schema to query the knowledgebase."
      }
    },
    "parameters" : {
      "KbId" : {
        "name" : "kbId",
        "in" : "path",
        "description" : "Knowledgebase id.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "nullable" : false
        }
      },
      "RuntimeEndpoint" : {
        "name" : "RuntimeEndpoint",
        "in" : "path",
        "description" : "QnA Maker App Service endpoint (for example: https://{qnaservice-hostname}.azurewebsites.net).",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "requestBodies" : {
      "GenerateAnswerPayload" : {
        "description" : "Post body of the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/QueryDTO"
            }
          }
        },
        "required" : true
      },
      "TrainPayload" : {
        "description" : "Post body of the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FeedbackRecordsDTO"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "auth_key" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}