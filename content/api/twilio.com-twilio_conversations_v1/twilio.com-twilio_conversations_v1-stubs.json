{
  "mappings" : [ {
    "id" : "88080fbb-1edd-4867-a136-240e3453fb7e",
    "name" : "Update a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Users/2g22/Conversations/8p99",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH8cF3b5DCE9f7FA60aDfB7FfbcDbBb2Da\",\n  \"friendly_name\" : \"Russ Balistreri\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-11-20T19:24:27.123Z\",\n  \"date_created\" : \"2023-06-18T21:16:35.123Z\",\n  \"participant_sid\" : \"MB90d74e0CeF48Be9723B575d0c20AEf05\",\n  \"chat_service_sid\" : \"ISfb2Be70aDA444Af0F533acC7E76EdeFE\",\n  \"created_by\" : \"aqroym4daem1gpghn5gaqbxmk18u2be140ktjrsg0q22oeja8daj1dbupmc\",\n  \"url\" : \"https://web.example.mocklab.io/588030\",\n  \"unique_name\" : \"Monte McKenzie\",\n  \"conversation_state\" : \"closed\",\n  \"last_read_message_index\" : 6525614574264939627,\n  \"user_sid\" : \"US11fd12F0A73421E065d8b0e713A681D5\",\n  \"account_sid\" : \"AC64DdC838268D75feFcF3e4E1c5A3eCef\",\n  \"attributes\" : \"q2nusz0o7\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 837183819511364431\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88080fbb-1edd-4867-a136-240e3453fb7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.123673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "fcff3429-9b54-4115-bdbf-d0fd917b4a87",
    "name" : "Fetch a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Users/nc3m/Conversations/8d85",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHEfAaa6616320CFfdDCC2807A6da6fcDE\",\n  \"friendly_name\" : \"Felisa Schultz V\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-11-19T23:10:56.122Z\",\n  \"date_created\" : \"2023-09-10T02:29:55.122Z\",\n  \"participant_sid\" : \"MB6232FAd3e596Ae2CEc89c8FFaFeBFA93\",\n  \"chat_service_sid\" : \"ISFdaBEbFabf53e06DDF16aD6EFeEEDf35\",\n  \"created_by\" : \"9q4zk0j4rrcc67ahcecfaqrz23jj6gkxlokbau84lqxl7jv8xtt64czw47krygmoohhf6sd1fw0u3nk5ywl7xio2eopemtzzusuiyw0agh530u1rkg4lxp3v3ryrqgq0phvhrrmvlez6ntj93ou5o9e9ciq3i4r1fd2bc809w1iktskpa\",\n  \"url\" : \"https://web.example.mocklab.io/905686\",\n  \"unique_name\" : \"Waldo Kub\",\n  \"conversation_state\" : \"closed\",\n  \"last_read_message_index\" : 3334288212297860277,\n  \"user_sid\" : \"USDb0afa0d0CfB754f3eD5BbbBc6b992Bb\",\n  \"account_sid\" : \"ACA18B59558dd30a53dA78d1d8d9ebfACa\",\n  \"attributes\" : \"i269s5kp9ax4ktfj57qhnvijf1o146dru4xiok71yautog1ef0ttew77ur5vcq1dkglizw3gdmlqwhtse8njmm0smhegt8mgd966cjl4bzew4y1d5nwa2n0tfrcg4hpkzktdgutbk3x63srqnq1vrugzqq6ilq3tz4s\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 5775373647449681599\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcff3429-9b54-4115-bdbf-d0fd917b4a87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.123057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "83f7c3bb-105b-4f1b-bd3d-c5ba86de9df3",
    "name" : "Delete a specific User Conversation. - 204",
    "request" : {
      "urlPath" : "/v1/Users/chpu/Conversations/g0i0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "83f7c3bb-105b-4f1b-bd3d-c5ba86de9df3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.12234Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUserConversation"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "612e88a7-ffb1-4819-bea0-461c6525e6f5",
    "name" : "Retrieve a list of all User Conversations for the User.",
    "request" : {
      "urlPath" : "/v1/Users/nhdu/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/729058\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/980630\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/217329\",\n    \"page\" : 8565952729790108788,\n    \"key\" : \"721u6wleye6gza7h6yvxs8ao5c4vk2wkz0nb7bk7c6w97l4j2dyge7hohb9w6uaso1qp7rhemd5ifw0hmnm\",\n    \"url\" : \"https://web.example.mocklab.io/328942\",\n    \"page_size\" : 6663306662982481703\n  },\n  \"conversations\" : [ {\n    \"conversation_sid\" : \"CH62DDf13dDFacfC7a2c71adBB36A276e9\",\n    \"friendly_name\" : \"Elmer Boehm\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-04-19T06:25:18.12Z\",\n    \"date_created\" : \"2022-08-07T23:44:18.12Z\",\n    \"participant_sid\" : \"MB0e83b5A459fAaCcba2C4b9a5fcCA2aF0\",\n    \"chat_service_sid\" : \"IS6f254cbf4A4F8ea94EaE8e6Ee94B656F\",\n    \"created_by\" : \"e5pqu3gjrax3m6a7qu4tc7fjdk8ovixwh5cbehtpxn2xg5usj6xl1m6g0nv4ak3603g0zxb6bphcgczdtl9czmtm2hqj40e6es1dxx02e9dthqj59ekp0ywoj36mhllo55ffezlca5k3b0uurlbk4jykv31cd84w\",\n    \"url\" : \"https://web.example.mocklab.io/634382\",\n    \"unique_name\" : \"Aurelia Schaden DDS\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 8204443868518175764,\n    \"user_sid\" : \"USFaA561FDEeFCdB7dD3E2Bf55AfFc67c8\",\n    \"account_sid\" : \"AC87ed52EFA5D0e3fDcd7A0c7bA2aa0Cf9\",\n    \"attributes\" : \"8jftbroojd60mit36b2\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 4970213640837770974\n  }, {\n    \"conversation_sid\" : \"CH3Dd86553Ff1AB8e87dfc0ecAC0F3c8a5\",\n    \"friendly_name\" : \"Argentina Waelchi\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-02-04T22:58:37.121Z\",\n    \"date_created\" : \"2023-03-30T14:13:43.121Z\",\n    \"participant_sid\" : \"MBbDDEf4B0Fa3eee6C9dabDfde8f36e7d6\",\n    \"chat_service_sid\" : \"IS1a9b93AF38C6Aed439E9CeDCc84bC4A1\",\n    \"created_by\" : \"bme7r7twmfrsfla8nwu2l8bshl5gqmx7ibihhrxub917nnqpha1ju9lvvkta0e6tcyohzfybvj\",\n    \"url\" : \"https://web.example.mocklab.io/836033\",\n    \"unique_name\" : \"Zandra Hansen\",\n    \"conversation_state\" : \"inactive\",\n    \"last_read_message_index\" : 2021801784691257972,\n    \"user_sid\" : \"US980daA268FF03DB77aAac48bac6c239D\",\n    \"account_sid\" : \"AC4dE7eA68fA39A829a7cFd78cF4c3043C\",\n    \"attributes\" : \"84gqsgff35rbfprlugxvgy7i1sposdntbtg0\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 5980937576398742348\n  }, {\n    \"conversation_sid\" : \"CH55c5dBCcbEed9f7993b48fC1aeA77473\",\n    \"friendly_name\" : \"Bobbie Raynor\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-05-27T05:51:37.121Z\",\n    \"date_created\" : \"2023-03-22T22:29:14.121Z\",\n    \"participant_sid\" : \"MBca9bc0CA636bAbB000E2b9841e83Fc08\",\n    \"chat_service_sid\" : \"ISCACdAcAb8f8434498cf2F110851daABb\",\n    \"created_by\" : \"uy6h0p2nqjxhjd4ttc9llvxpvfbdng1ze5ll73x9xqjhi6vii6ag5n1tsfgb71lghemt9qmj914udwxvc30ib251zhbh2l7jndtajhqjsnl94wjxzlevaf1jc9yu7yrssvrvp\",\n    \"url\" : \"https://web.example.mocklab.io/706228\",\n    \"unique_name\" : \"Dr. Isidra Paucek\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 460074227120369804,\n    \"user_sid\" : \"UScFe967CEB95A4c16FDaeE76EaA73dBE2\",\n    \"account_sid\" : \"ACeBD3B7BdbB03bA059F5d1B932aDD6E1a\",\n    \"attributes\" : \"x90vz0p\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 2200170968868520706\n  }, {\n    \"conversation_sid\" : \"CHc6BDbF5E7dcEc5f559cDd04Dd6D9acDF\",\n    \"friendly_name\" : \"Dr. Albina Klocko\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-08-30T08:46:46.121Z\",\n    \"date_created\" : \"2023-05-13T09:39:19.121Z\",\n    \"participant_sid\" : \"MB492ef84e4ef399FfA0c7Cc72eef03a43\",\n    \"chat_service_sid\" : \"IS2fe3dbbfd9e8A7df31BE76a49b23c4ca\",\n    \"created_by\" : \"3gcbru3ltikw8bgf8xzp\",\n    \"url\" : \"https://web.example.mocklab.io/024924\",\n    \"unique_name\" : \"Zenaida Hahn\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 4105653864557129402,\n    \"user_sid\" : \"USe390DBdFb29D1f9f0DeDb4719faAFbcB\",\n    \"account_sid\" : \"ACd4Ca2eD7c36fdA8AAcA1abf3427a7f3a\",\n    \"attributes\" : \"omv6hpgwpreacg76vo1verih3yqcj2ak9fly39i62rzlia1da0azy3isyor64tbb3s70a1koc\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 4016756627733069786\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "612e88a7-ffb1-4819-bea0-461c6525e6f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.122151Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListUserConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.user.user_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListUserConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "b6727f76-477e-406d-b728-2e0a507caf44",
    "name" : "Update an existing conversation user in your account's default service",
    "request" : {
      "urlPath" : "/v1/Users/c25z",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Jillian Thiel III\",\n  \"date_updated\" : \"2023-10-09T01:28:03.12Z\",\n  \"role_sid\" : \"RLFA76d451c01FEC54E198CcEAFE6D9cDD\",\n  \"date_created\" : \"2022-10-17T23:03:22.12Z\",\n  \"chat_service_sid\" : \"IS37B923FbC9dC7342C2A6D72ecECF6c0e\",\n  \"url\" : \"https://web.example.mocklab.io/404823\",\n  \"sid\" : \"UScb7686e48De2d12424aE15DA72BEBda9\",\n  \"identity\" : \"a95e2vimnvvo8fenrsrgxkogbrcyhk4nhg2bbnelhkeli8xtr3c6qxpcnguk23ijo0fjdwl7mfz02vwnttjbqvkoi5ruvrcw95mwdu4zf0yzy00lva2dyrsdvj9u17gehfms22bqc2fkn8huqd839vaydbnifvmf\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"ACe3aC7F329F3Da46BC667eFD1Bd6F4c01\",\n  \"attributes\" : \"cb05hvez09dypojb6zxnap9jk20tj684ips315ubr16cbqlet4pl2a4e4ndlwuuhzp8z0manwfw7ggsu8bam142vl7wpbofw110j2e1qh62hpu4ujh1m2opqr3mpfrs2i63w26l0hzl0m9m7z2ih0wi1ymnxqm\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6727f76-477e-406d-b728-2e0a507caf44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.120518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "160544c7-c963-451f-8aaa-0e8bfe30c89d",
    "name" : "Fetch a conversation user from your account's default service",
    "request" : {
      "urlPath" : "/v1/Users/7lua",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Luciano Wisoky\",\n  \"date_updated\" : \"2023-03-05T03:10:29.119Z\",\n  \"role_sid\" : \"RLd31FBf59ccF3a070fE5ceCC63C4c8b5b\",\n  \"date_created\" : \"2023-01-06T23:18:50.119Z\",\n  \"chat_service_sid\" : \"ISCf8fF079afe46beE06C301AdccFc462e\",\n  \"url\" : \"https://web.example.mocklab.io/529163\",\n  \"sid\" : \"US3CE4a1dDBaA6Bb8faf31994b12E80fEc\",\n  \"identity\" : \"bdenpsibuuzoqt32rlohrd8l1hazeea0z0rkxcjns5n0xpmvf6hh4odb2rc8g9lzr00h42zsg7daf8k2krwkq2qo1x6fkw3rs2i2pp7q82k9p\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"ACca220f41Ab5C8EB6a12809105b531184\",\n  \"attributes\" : \"d7rc4tiosd6z3mj4ein1zm02al9o0n5vs36prgycgh8wpsu61kulro06rc7jlo0afkc546geokkry5tz2vspfvd3og94jbg2252yon\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "160544c7-c963-451f-8aaa-0e8bfe30c89d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.120152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "4625e09c-2286-4d8e-a13d-1b3a7bcd80ac",
    "name" : "Remove a conversation user from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Users/7m1o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4625e09c-2286-4d8e-a13d-1b3a7bcd80ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.119779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "5e40e89e-4cb1-4e7b-9137-e500ec3bffcf",
    "name" : "Add a new conversation user to your account's default service",
    "request" : {
      "urlPath" : "/v1/Users",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Georgeann Quigley\",\n  \"date_updated\" : \"2023-10-25T23:01:21.119Z\",\n  \"role_sid\" : \"RLCA9DBa8aED3dEbCf70De3B9Da5f15F25\",\n  \"date_created\" : \"2022-03-30T11:04:16.119Z\",\n  \"chat_service_sid\" : \"IS39c9E19a3CbfbaaF885EDDC1EFBFE9bc\",\n  \"url\" : \"https://web.example.mocklab.io/639216\",\n  \"sid\" : \"USb9bb39cD4CB12A0ED2A73eEaaED0BeC8\",\n  \"identity\" : \"yw10abrg39ps45rnmpksxh4i3t6nm4bn8tbf9wrog5hyt4thjlkv6o3u1xd1slmudhyag561jety0p6q4a2hxw2lso47giv2v1wj42j3u3nn0b7dk\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"ACEa98ffAF3F92dCe680fF0aAb71BAe498\",\n  \"attributes\" : \"ke6i9len4bq6c71jswycnlltbgpb5krzyn1c8vk9ztbi3svq8oglpbroe2hmhxavhsopehqikjfceit8vu6vtzms2i16w109kkk8\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e40e89e-4cb1-4e7b-9137-e500ec3bffcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.119663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "969251e7-9f8a-44c9-92b1-13907076db3f",
    "name" : "Retrieve a list of all conversation users in your account's default service",
    "request" : {
      "urlPath" : "/v1/Users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/315655\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/532780\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/144781\",\n    \"page\" : 894255748768607783,\n    \"key\" : \"air26k7mj43tzw3vkd\",\n    \"url\" : \"https://web.example.mocklab.io/105518\",\n    \"page_size\" : 7258686772639784488\n  },\n  \"users\" : [ {\n    \"friendly_name\" : \"Truman Gutmann\",\n    \"date_updated\" : \"2023-03-15T07:21:50.118Z\",\n    \"role_sid\" : \"RL505d3cA908f49C2DcEc8383cC5f193AA\",\n    \"date_created\" : \"2024-02-29T11:06:26.118Z\",\n    \"chat_service_sid\" : \"IS55F72e7aD9B360D8Dc7CA5507bCC61F8\",\n    \"url\" : \"https://web.example.mocklab.io/965950\",\n    \"sid\" : \"US2A89bA54EAccbFf7A73acE5E3d43C3BC\",\n    \"identity\" : \"117eam1i522ppz22apkjcbuykbza0u8swmfov0g7f27k0izewthmpok4qhtkje58b6al05v8ybk2twl4\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"AC6BCE8987e6bBe28F1Bb16607Cf61EACA\",\n    \"attributes\" : \"6csf2edrtr5qwvnbz0sewfva3nop21ewiu99t2our1mnnz66ngxjcjmfkigo3skgx6bmjfweoi3\",\n    \"links\" : { },\n    \"is_online\" : true\n  }, {\n    \"friendly_name\" : \"Cecil Hane\",\n    \"date_updated\" : \"2024-02-02T03:04:49.118Z\",\n    \"role_sid\" : \"RLD0a7DCa89399eACfcaFe31BF9A5Eee6B\",\n    \"date_created\" : \"2024-01-07T00:08:43.118Z\",\n    \"chat_service_sid\" : \"ISED7e5CeDb495b4522Ef5113B0ce6a77e\",\n    \"url\" : \"https://web.example.mocklab.io/107415\",\n    \"sid\" : \"USC147f05Aeb7Eb4FA3db3cF50F5174BCB\",\n    \"identity\" : \"4akgzh817qrg23y9r46sxaefurzdtjxbbuhfq0a9gi74qtblm1rst92cdzokm413j9644j5h16ha2e2b5fmngz678oknxtljhj4abtd8s11j0grt\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACc88b2d3d3751cfEfe9b9Cd3A1cE5F097\",\n    \"attributes\" : \"cqjrnb7uw1nbjx8nvrlvgtyygzwmag50b2y1air2rhpkxm8\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Del Durgan II\",\n    \"date_updated\" : \"2024-01-12T10:58:14.118Z\",\n    \"role_sid\" : \"RLb8dc1Be7c1A0ccc2F90BF83C25A84B62\",\n    \"date_created\" : \"2023-12-27T15:27:05.118Z\",\n    \"chat_service_sid\" : \"ISeb467eA150fdE0E8CFcF7e22d705A21f\",\n    \"url\" : \"https://web.example.mocklab.io/602839\",\n    \"sid\" : \"US68dfdc1Dd2133C800EE52B9216578e86\",\n    \"identity\" : \"2ig1atixnhlubuehhrhhyx7vkrnytt6vlc22dj6nc1w3cfummpjen9pbvhyndrs0leclyzcar6tc0nb5y5q0dvv2beu65b22ap330amys8492beb9gpnpxbo22ce684s0o1wcd57bvviv4j2w5dz90itay5wgk96440n1upd80cyawq81c\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"AC89a4984CE95D72DBA756Bd08e95D2f0A\",\n    \"attributes\" : \"itxaauamnzlw24e9ueht6lutzb9wfpmkouc14su4bcnyr6z4027vx5gthvpyzvgamp8k1w444fjlbnn1nws38qzk7a5opszrg8brsaxf38zmv63st5cqs5ky3iwhkaloagseqh5w23q4bg7oxhyr1wtyf6z5ih\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Collette Johnson\",\n    \"date_updated\" : \"2024-02-22T22:31:41.119Z\",\n    \"role_sid\" : \"RL0AD5fdB98c61eCAb4A28B33BDaAcDeDc\",\n    \"date_created\" : \"2022-09-17T02:14:29.119Z\",\n    \"chat_service_sid\" : \"IS1b45dFEEEfFcdC54aa3fabD8BE31Aa00\",\n    \"url\" : \"https://web.example.mocklab.io/623716\",\n    \"sid\" : \"USeAc0ffD0aAaD9A2deeCc654f8B2981bA\",\n    \"identity\" : \"ka39qwwcii1b8bcr38rgz8p855j8b3zk2mkigay7czl22zpttybin5ncfv7fm8h24baj3nlxva27seoc9e3ryu4o3vr2l2amijwtfml1mxu1ox9bqgqf7k4uvjfhnf0k8wgbawn1emss2c51pcj9yf5h5q3ucpr8ydpeage0owvdoangib\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC3dc81fCB62C97Eab83cAa8E941ca4C23\",\n    \"attributes\" : \"dvx605i60ilp9gfbb9ozvx0o9nrjx7veo9kjvf6jwunrodbxhms0kwqp23ly5v41iyrqj0cqn6e4x5qyq5f9z9t6cd79oqnopcei7e9utrey7tx94i415gtb7iz425b4yp6e38042hgznj7vut77pup73x\",\n    \"links\" : { },\n    \"is_online\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "969251e7-9f8a-44c9-92b1-13907076db3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.119312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListUser",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "users" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.user"
                },
                "type" : "array"
              }
            },
            "title" : "ListUserResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "3880b709-c88e-4a44-a5fd-1a7811c3c807",
    "name" : "Fetch a conversation service from your account",
    "request" : {
      "urlPath" : "/v1/Services/IS1FFf5302BEd26fAB47efCe25A40db5fB",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Wm Waters\",\n  \"date_updated\" : \"2023-08-17T15:01:30.117Z\",\n  \"date_created\" : \"2023-10-09T05:50:51.117Z\",\n  \"account_sid\" : \"ACbdcF3f7901De9f16791ecCAF5Ba53df9\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/266169\",\n  \"sid\" : \"ISd2BbBE53354CE6e9DF5f9eaaBbDAc9ac\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3880b709-c88e-4a44-a5fd-1a7811c3c807",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.11804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this service, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access conversations, users, roles, bindings and configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "12b358a1-9db3-446d-8489-2fd4bc5486d7",
    "name" : "Remove a conversation service with all its nested resources from your account - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS798711A29ac9DEdDAf6cCa20d684bAac",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "12b358a1-9db3-446d-8489-2fd4bc5486d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.11779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteService"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "63ccaf65-c730-43fa-9c6b-0161edc5b459",
    "name" : "Update a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Services/ISD5E76d25b47CDADCAddc041d1F02EF8F/Users/fg04/Conversations/a96s",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH643A93E44C37ABD6Bca251feD29B4F6F\",\n  \"friendly_name\" : \"Minh Dickens\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-11-01T09:20:39.117Z\",\n  \"date_created\" : \"2023-11-13T07:33:37.117Z\",\n  \"participant_sid\" : \"MBfecFD2Ed1A0787Dc5ddB2c8FC784C6FE\",\n  \"chat_service_sid\" : \"IS435eA0dbDdf86f74e4331a88dB723eeE\",\n  \"created_by\" : \"2ttm1zgmrb4k7hlx08jhs0zy5f4uz1675y2kwiuu6uxo1q6hr7k9yltjo9xao38it8924ge9u9r6hyq5zw1rts7dazq24ej301x1d87ibyk5umw827tbjbx8qwfhv8eivvpkhjyfkky1gyl4mcvunzqjp0\",\n  \"url\" : \"https://web.example.mocklab.io/695775\",\n  \"unique_name\" : \"Devin Kessler DVM\",\n  \"conversation_state\" : \"inactive\",\n  \"last_read_message_index\" : 7672118230989486285,\n  \"user_sid\" : \"USbC8AbeE41FCD567cFbe2ED33dD887A3E\",\n  \"account_sid\" : \"AC9A40FF0EFd0C6CCC4423EE59AEfdAA74\",\n  \"attributes\" : \"w77fqqpgqoyzb7jto41u42olyxrhs81qa00xbtrlzn0q3fsoly5h87bwpd21p34b0r656m6idp9tuj6bp3skwl88zij0wjm2u8b1wp6bwmpg8libqhjdsrjagcwwj1pwc\",\n  \"links\" : { },\n  \"notification_level\" : \"default\",\n  \"unread_messages_count\" : 6493710212951982121\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63ccaf65-c730-43fa-9c6b-0161edc5b459",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.117749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "fb60c971-ddf2-4db3-9fe2-df07e3640971",
    "name" : "Fetch a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Services/IS594f2fF2FEDE19820bc2ae37F760acf9/Users/v2t4/Conversations/fl40",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHd517eC94ce3DF099dDf2CD97CAff7602\",\n  \"friendly_name\" : \"Roberto Turcotte\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-03-07T02:15:50.116Z\",\n  \"date_created\" : \"2023-03-25T03:21:06.116Z\",\n  \"participant_sid\" : \"MBc5c0Aba5cfc8eD0297C73CC281dC257f\",\n  \"chat_service_sid\" : \"ISfaB4BA25ca9f0C7Cd8C0DA3E5Bb3A3BF\",\n  \"created_by\" : \"lbrjyik8fc83ejbrzo20cpil35ybqsil4lx0hz5\",\n  \"url\" : \"https://web.example.mocklab.io/177065\",\n  \"unique_name\" : \"Raymundo Gutkowski\",\n  \"conversation_state\" : \"inactive\",\n  \"last_read_message_index\" : 989488567567738356,\n  \"user_sid\" : \"USD68Aa084bb326776A2c0bCd1ABaF8b9e\",\n  \"account_sid\" : \"AC8FfCCB9d1d0dEd3A4aB2b1A2cbbe4aF1\",\n  \"attributes\" : \"5e2wxxj6mvcyrit9zu7o5kqfuh33d9yvl9pbmkosalcomeflmcdl5jviuymlpx2h7fokqu\",\n  \"links\" : { },\n  \"notification_level\" : \"default\",\n  \"unread_messages_count\" : 4940115875539536091\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb60c971-ddf2-4db3-9fe2-df07e3640971",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.117189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "299a9a40-1ab6-4b5c-ae23-b6e29a6bd0d7",
    "name" : "Delete a specific User Conversation. - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISa7a2BD85f5b1789E9216Ace799f072d3/Users/598d/Conversations/1u4r",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "299a9a40-1ab6-4b5c-ae23-b6e29a6bd0d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.116569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceUserConversation"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "4b11d211-3f91-4cdc-ac17-074f96961ef6",
    "name" : "Retrieve a list of all User Conversations for the User.",
    "request" : {
      "urlPath" : "/v1/Services/IS2a55FD86CC18A5aecBF5D1D54Ce57C17/Users/4gy2/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/106725\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/031418\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/564702\",\n    \"page\" : 3634354465074450825,\n    \"key\" : \"9pszuybvzs8qnk0hfu847vre1cuaf2d0zrr5hr3dpobjkwtsbctyij9cvt5r1awzg7rvh2p8zbr9qsb16vw\",\n    \"url\" : \"https://web.example.mocklab.io/698241\",\n    \"page_size\" : 5675489874377642239\n  },\n  \"conversations\" : [ {\n    \"conversation_sid\" : \"CH25ba0DDBcc5Afbea85275E73dF10D9b1\",\n    \"friendly_name\" : \"Dong Roberts\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-09-08T08:07:18.114Z\",\n    \"date_created\" : \"2023-06-10T01:30:16.114Z\",\n    \"participant_sid\" : \"MB4E837f80b63EC02D8AaA661a6dA818A6\",\n    \"chat_service_sid\" : \"ISa7c9D55Fc9C845d5cCb6878DC2AC13eA\",\n    \"created_by\" : \"hmn12zl5ssoxf\",\n    \"url\" : \"https://web.example.mocklab.io/480321\",\n    \"unique_name\" : \"Tommie Kemmer\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 3412656669635350884,\n    \"user_sid\" : \"USf9BEff3b10a0E0cCf49d328ddAC8eFad\",\n    \"account_sid\" : \"AC0d81C9D58bdAC39CCf60Ce0a209c827D\",\n    \"attributes\" : \"im8nidnn7re2ep7x6b31hkr8g33eczi7ksxbre031obvnm298o1hufv2t1m6xp13jp0em5503x4f9ri6oqn6brqqpu63ltqdlxbh5yuty2lt5eqwaqr2iuutohpw1x3vwptj1dbdec3uqt4bi38evlkln36ydj6cydyqhub2jnkilaurohbyvh4k0fu0gd85pnjrdg4\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 6998306737116958761\n  }, {\n    \"conversation_sid\" : \"CH5757A1C0c444D4ec3Eaf47aFEEA3A5dA\",\n    \"friendly_name\" : \"Joye Schinner DVM\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-06-05T20:09:45.114Z\",\n    \"date_created\" : \"2022-10-27T06:16:09.114Z\",\n    \"participant_sid\" : \"MBc9B2f513454B1a33beE5bedAdcAB561F\",\n    \"chat_service_sid\" : \"ISb2Be0eB62B8a93bdFA7F9A8ccbEDC555\",\n    \"created_by\" : \"nahoeqk8puuies9uf2fe54legwenaeoqsx9px05wi2lqzjc167m82wx8w3ker849r13w6yrgzub9kpd2ri8e9o3kiqjrmclsxcn6jiw1z4s71yuobin0xd07p3r0m4vbe7gqj0jbve002jnott4\",\n    \"url\" : \"https://web.example.mocklab.io/865150\",\n    \"unique_name\" : \"Mrs. Darrick Braun\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 3284679502653610360,\n    \"user_sid\" : \"USEdb4385ca06b08a2b7fedAf1828DB1a1\",\n    \"account_sid\" : \"AC4bf351D773eF681200D25Faf894Fe1c5\",\n    \"attributes\" : \"3my28e0vmxcmchh9hww7th\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 4153488088776184893\n  }, {\n    \"conversation_sid\" : \"CHBDbe2eEfc92CEcBaAF7Eb2fBdb9aD370\",\n    \"friendly_name\" : \"Gayle Gerhold\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-09-11T09:12:51.114Z\",\n    \"date_created\" : \"2023-05-09T16:46:24.114Z\",\n    \"participant_sid\" : \"MB07bd67cCeC41b0c5BCEB00D55836A4FD\",\n    \"chat_service_sid\" : \"IS9dd345Bad46741CFbd9ABEeB63efbC5C\",\n    \"created_by\" : \"1ckjxprbz2392rw7ul\",\n    \"url\" : \"https://web.example.mocklab.io/671239\",\n    \"unique_name\" : \"Ms. Gidget Hayes\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 8692720066256487515,\n    \"user_sid\" : \"US404f28F93CAcCE9C8c0F4bBa30aDBB3B\",\n    \"account_sid\" : \"ACd9DC7F320bdF9E5cf3042cBCbFc0963f\",\n    \"attributes\" : \"n77v0elbijzr35gjopepmr4k9doeewt8zmcoieqejhi4mahrtykmiitihj7duocsabko1\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 5922076546262700895\n  }, {\n    \"conversation_sid\" : \"CH1B9Ef26B89Daa1e0B355a6cc2EE3E9bB\",\n    \"friendly_name\" : \"Kelvin Batz\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-09-10T23:49:05.114Z\",\n    \"date_created\" : \"2023-09-30T00:21:06.114Z\",\n    \"participant_sid\" : \"MB1aFAf4eDCF1aECd32b87c5A8a5FcbFfb\",\n    \"chat_service_sid\" : \"IS6FB3Fb4d7EdFBFAbdd344Ceb07FC5DdD\",\n    \"created_by\" : \"5coq2mrv0ey6iqqzdjcep3tk9myc6tql8q0cnh4cdbdeypp0d4uiyrm3u3y6lmr4zf679rymftnkdd6b7akxmthlxink86co9gd399rd53cfi5s4aey\",\n    \"url\" : \"https://web.example.mocklab.io/853359\",\n    \"unique_name\" : \"Leanora Dach\",\n    \"conversation_state\" : \"inactive\",\n    \"last_read_message_index\" : 2893161578386742740,\n    \"user_sid\" : \"US7f9C4dbEEA42ceca15E19f8852BA5012\",\n    \"account_sid\" : \"ACA51C4CDffD04c7a710CAaAcf918BdF11\",\n    \"attributes\" : \"7i6xf4s8csh70fkk0ub8jv31kffm86a6zahts5g8n68c4rsa2xun19qv77vg9p6l25jgs4fe2g8dj5dcydqr920avxtho82qnbink0gepfavvqstyugddy08xhzgys1v3x592mp78dgxkq\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 6287110839684580935\n  }, {\n    \"conversation_sid\" : \"CH929DFd98bdA4BF3Bc04B52d7983F2Cf1\",\n    \"friendly_name\" : \"Lavern Ondricka\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-04-08T22:31:09.115Z\",\n    \"date_created\" : \"2024-02-28T04:29:56.115Z\",\n    \"participant_sid\" : \"MBC99D5ee3145BBa3bC2e4AF7987BeCDAb\",\n    \"chat_service_sid\" : \"ISB6dabEeC9a61ed3b7Ef6933Cbe9B2D8f\",\n    \"created_by\" : \"e1nhdpqo02ha05cb4ly7xii3r8yj7an2sk3z6fzmtkllkkrlibr2v7y23s41kq9byriiogvonrumqvivpzl4ns4wnmk3872f0hwwbac3dqma9kiu7ocx1pokmrih3tybeeyvieg\",\n    \"url\" : \"https://web.example.mocklab.io/621903\",\n    \"unique_name\" : \"Mrs. Damion Heller\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 9055912527547356698,\n    \"user_sid\" : \"USeE8A6D26BBe63D7fB4fAe111C1a46f7D\",\n    \"account_sid\" : \"ACF34e9571c5ACdd96F3d5995e34aC62FC\",\n    \"attributes\" : \"wwe5ojnzmqcz0m7ctphz2j2hol88b6db0cnoeqiu\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 688733186177131011\n  }, {\n    \"conversation_sid\" : \"CH0AC1Fe636Dd7B5b22e62ff680FE3dCCc\",\n    \"friendly_name\" : \"Peg Jast\",\n    \"timers\" : { },\n    \"date_updated\" : \"2024-01-08T21:04:56.115Z\",\n    \"date_created\" : \"2023-01-20T23:05:53.115Z\",\n    \"participant_sid\" : \"MBdfB6Cd5D48EC8Bf19aaCAb3B7ac1d6AF\",\n    \"chat_service_sid\" : \"IS867eCD74CC3fcCe9Bb1eC941d3Da9aAA\",\n    \"created_by\" : \"us6rovvogd7oo8llawhyxyd75i3gk6pbulf0usmjoc35o3qwflwcgvcuzjln2qq1ufd2gqioh548pygjse1ffyte8lmmganans6cwfmw4x18w37a2n4ow4kf5cmcq56ghe7eoee7ot4lqy09448bpsuxex0hc4hbrvngycawe7rz9tuj31ql0y\",\n    \"url\" : \"https://web.example.mocklab.io/838766\",\n    \"unique_name\" : \"Everett Tromp\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 5292467625304288655,\n    \"user_sid\" : \"US5E410c0B184FABA7ae2b6aCFA3bAb29c\",\n    \"account_sid\" : \"ACC9B7aece8d6AFAdBc3bCc9cd8Cf5160d\",\n    \"attributes\" : \"b5yqrzwv65c\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 7303260343005964720\n  }, {\n    \"conversation_sid\" : \"CH86f1ae6FBCa6cABCEaA61DD3fdB348B7\",\n    \"friendly_name\" : \"Jackson Sauer\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-07-06T19:04:08.115Z\",\n    \"date_created\" : \"2023-04-23T08:03:10.115Z\",\n    \"participant_sid\" : \"MB774b1B93253126AdcFe68ceEe9cbd534\",\n    \"chat_service_sid\" : \"ISa65b0Bc413296DE67D6CcB5cbcfeC83b\",\n    \"created_by\" : \"oh62qgunib0mlsffzi88az1t7rmhai\",\n    \"url\" : \"https://web.example.mocklab.io/609832\",\n    \"unique_name\" : \"Wilfredo Kirlin\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 3666184518296380545,\n    \"user_sid\" : \"USC3Bd2eE9C5BdbF25e635dF79Cae5298c\",\n    \"account_sid\" : \"ACB0812E6171dadFEFebADE0AAF1eEfe9b\",\n    \"attributes\" : \"q8sjo5re05fqn3otd9fq9kgsckfyg8ezq8o2ws54dijr255zndewv6xfakl2ticbvs5lqr215bssekaawyhwrf4jofqcovd95ny246bthdrgu0k04szcoyz0px8gaflx39162q7pcjclq42syofpy2pbqd9251e4u8\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 7217451915712105863\n  }, {\n    \"conversation_sid\" : \"CH80ADA83a2Cc6fCdE7c49FbfB3c110fcf\",\n    \"friendly_name\" : \"Ms. Marcelo Hamill\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-04-05T20:27:17.115Z\",\n    \"date_created\" : \"2024-01-01T05:58:50.115Z\",\n    \"participant_sid\" : \"MBF966FAbf0ffEFDbFCDD7c2d19dBFbEa1\",\n    \"chat_service_sid\" : \"ISEaa3bD047fc9ADAf54A417AE79fD20cC\",\n    \"created_by\" : \"uccpu917sbthx66m6tcjsbtracs3uqo3i1n5un30gysqikr6ggg8qarvrhiqd67kji81plplauhbhrm8y53czhfy3ukz8qqou0zds\",\n    \"url\" : \"https://web.example.mocklab.io/530821\",\n    \"unique_name\" : \"Iluminada Bayer\",\n    \"conversation_state\" : \"inactive\",\n    \"last_read_message_index\" : 8078441200112575842,\n    \"user_sid\" : \"US2bef018750CAaBe92adaEc4bCbAB14ea\",\n    \"account_sid\" : \"AC0AC5de720DeBb79d3aF324A4c1CAa78f\",\n    \"attributes\" : \"418\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 3144141363909354369\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b11d211-3f91-4cdc-ac17-074f96961ef6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.116378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceUserConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_user.service_user_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceUserConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "92bde550-db36-4d00-8a3c-a69e7f61ed73",
    "name" : "Update an existing conversation user in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISAAAC8DcdaFfd8830b1DDAfb17fdB158A/Users/3154",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Crystle Trantow V\",\n  \"date_updated\" : \"2024-02-29T15:23:00.113Z\",\n  \"role_sid\" : \"RLF2a88CADbF15dbf36cFbA6F713B62554\",\n  \"date_created\" : \"2022-05-09T20:48:11.113Z\",\n  \"chat_service_sid\" : \"ISD2bd08AaeDE7f4bE9e975cFE5FedE5a4\",\n  \"url\" : \"https://web.example.mocklab.io/122749\",\n  \"sid\" : \"US9dC98C5d4335391bF3C4CD7A37B5c9B4\",\n  \"identity\" : \"vxujcgmmpj85gwala0y777rhhwr3pk94awse0g2b0rbsy0m03uqrax7hr2djytyd35n12djci3oqj6ogwldj4mjk\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"ACd37Fb49966Ddb88ad34B45A782eD0Ce6\",\n  \"attributes\" : \"5n9b2h80f7m7q\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92bde550-db36-4d00-8a3c-a69e7f61ed73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.11379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "8918ccc5-d263-46cb-8b5a-5211409ee873",
    "name" : "Fetch a conversation user from your service",
    "request" : {
      "urlPath" : "/v1/Services/ISEF21Be0Ef93dE19eFc53f5dE857b64dA/Users/bw81",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Antoine Anderson PhD\",\n  \"date_updated\" : \"2022-09-23T11:47:49.113Z\",\n  \"role_sid\" : \"RL69C21C84194a7c24d2a4dAFdb6acfce3\",\n  \"date_created\" : \"2022-07-17T13:04:34.113Z\",\n  \"chat_service_sid\" : \"ISa8ec340F3A53c9D9f4F459c8552EA8d2\",\n  \"url\" : \"https://web.example.mocklab.io/130877\",\n  \"sid\" : \"US47fE7785fb87fF2Da3bC5DFEb6F3ECA4\",\n  \"identity\" : \"7r7\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"AC4a396c8Fd8771dFBD5A09eCD2FbFEb05\",\n  \"attributes\" : \"gg8twtyw9z8fba3ylnfrf2s5yksai4dm6oup605q9jlb37mahwhdhp22xbatbibkv7yecbn39bk04pc2fqgubjtsfk5dd5is2gdnp0os1qrbmd23y8wtonloaysojk06532tpykgacxzkb4fpqfby7p94em\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8918ccc5-d263-46cb-8b5a-5211409ee873",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.11342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "e44d5afd-c74d-498a-b6c9-85359f5c0824",
    "name" : "Remove a conversation user from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS138Ce51d10dFbE44CA8cdF97FaB428EB/Users/ij4g",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e44d5afd-c74d-498a-b6c9-85359f5c0824",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.11306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceUser"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "c729d368-e5c9-4ca7-a104-68d547b39de8",
    "name" : "Add a new conversation user to your service",
    "request" : {
      "urlPath" : "/v1/Services/IS1FCAF3Da62adfdc7DeAB23CD84eeba6B/Users",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Miss Lindsay Swaniawski\",\n  \"date_updated\" : \"2023-05-23T20:49:29.112Z\",\n  \"role_sid\" : \"RLa0bED4EcbC6e31CDC7aFbB2cab3c7dcF\",\n  \"date_created\" : \"2023-11-28T06:46:56.112Z\",\n  \"chat_service_sid\" : \"IS7c46bbB4bAdb3BF38EF6ACba90E6228C\",\n  \"url\" : \"https://web.example.mocklab.io/548909\",\n  \"sid\" : \"US0BE0DfaFeeDCbDFAcD03C023D8c44c19\",\n  \"identity\" : \"hwju04t2zc60lbag8ru28ud7cmmr32z79o06dfdh381gfurkcjj4sflsd\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"ACd3AEF901DBEEfb9bE52EcAdd5b5935b5\",\n  \"attributes\" : \"rm6i0441iqnsb9usy10llsqhwkgihg0cz2o9uzrecw8xasmlh3wz8hpek6w942ch\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c729d368-e5c9-4ca7-a104-68d547b39de8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.112942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "010ff2b1-9933-4dba-ac19-ffdc6b76061f",
    "name" : "Retrieve a list of all conversation users in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS1E06Ecd5cedF62E12bdC345D9b87cf5A/Users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/258281\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/265251\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/875835\",\n    \"page\" : 6575593987355622435,\n    \"key\" : \"b9ufeo7pwiz4p2ofbfkxg475tbgzl8h23vuv4bh4p76z4gqul52jc7e0mxjs2qri7efg8gztr7ufbc8r8rjbli6q6yehs9a6zftxel7mq44p17nme\",\n    \"url\" : \"https://web.example.mocklab.io/883752\",\n    \"page_size\" : 6823414043344361204\n  },\n  \"users\" : [ {\n    \"friendly_name\" : \"Dorthy Hegmann MD\",\n    \"date_updated\" : \"2023-11-17T21:59:54.112Z\",\n    \"role_sid\" : \"RL751C51CEA3CC8a8679A93aEd929222bb\",\n    \"date_created\" : \"2022-11-03T01:31:32.112Z\",\n    \"chat_service_sid\" : \"IS15e42a2b6cDAf9C7e96cEf4C4EBb52b8\",\n    \"url\" : \"https://web.example.mocklab.io/382457\",\n    \"sid\" : \"US45398e8bF17A738dA3e3eFf4BbefeEcB\",\n    \"identity\" : \"0yg4ikmedp1fyuz6jf9pzo0hkzi0voujn4j3jlnkqbfgtb0hc5max0o9m7grior9og\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACEdACCA08986f4C1072f3Da63d614B1c4\",\n    \"attributes\" : \"cv6rwntfp1899bgml90mt1tq282fszirb8ftyyeovkp628n3lhml5f7ijv9du8ov88ay0ll4g7htd2fj56owj73z90jcnkp88zs4fn071e5wx9uv1o2jo1rxhbp4fm2wu94tzh510tzmvwnr9aljroxwhnh50cjt6x7tb2itjde87ge\",\n    \"links\" : { },\n    \"is_online\" : false\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "010ff2b1-9933-4dba-ac19-ffdc6b76061f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.112598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceUser",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "users" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_user"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceUserResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "9159f37c-9e81-41f7-98ef-81588b16bdc1",
    "name" : "Update an existing user role in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS1F846cFE9DF17cF332faf7DbF37aC7D0/Roles/RLdcF9204Da7daebF8Ef8Bc1cD9d83cF43",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Tammie Fisher\",\n  \"date_updated\" : \"2024-01-18T04:17:28.111Z\",\n  \"date_created\" : \"2022-09-10T17:23:14.111Z\",\n  \"permissions\" : [ \"hncptg79vd43gkqf37kvpyyitt2mybgnhtqyyumbolin1g9t5toceoce0r7cz72nlid3c6f3eq283gf7g4221zsvyc3278c4ic18ei5qos37nkzhyqof2v9digjqfffjh6yy4bdfcn7jnoq21d13i8poakgrqsnx9dglu4mo8cxhpnv\", \"9u39l8rwa4f1c9umptozz10l5m8lpi5hfpxt87d0tblmf736wz2dpgdxgd8ddogq9n0nu776mzoypegaqy7ok98bvyfrbml23tjofzok0bhmovqjj7fzkd0im2zq0qt8ris3vfoa4ooy8s83eu\", \"gtn9wpwn0d138xja8v4efth5q8tn80k3p1syrsvmj0b2t89u\", \"9xrl4z3unm0uotjknndg5m2h130pe6bi9pwsy1lwhu4eo1474clni5qqfg6vracc80d5fqxpg1x\", \"pup1sv6jqtxhtn0g34atv4gv8j53zoipe84kc9bixu11edd6g4axj7cfni1suv8tsbalw9rgk1yd8ipgoz\" ],\n  \"account_sid\" : \"ACe7aD3C9F08e279fBf8830Cfe7B68B3E2\",\n  \"chat_service_sid\" : \"ISC74048bccC5A0af23f639ACbE1aDd558\",\n  \"type\" : \"service\",\n  \"url\" : \"https://web.example.mocklab.io/441456\",\n  \"sid\" : \"RLAC7dECC4bF78bcEceaf4Bfa5AAa0FA73\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9159f37c-9e81-41f7-98ef-81588b16bdc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.111952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "96dfb8c3-d0f2-4a83-b7e9-fd89ef0b81fb",
    "name" : "Fetch a user role from your service",
    "request" : {
      "urlPath" : "/v1/Services/ISb3FD0Ebc5dD47A77FeBadBC2CE5743Ba/Roles/RL8Dc0c004ecaFC6Fd01cB8bb6cB48006D",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Giuseppina Towne\",\n  \"date_updated\" : \"2022-09-08T00:57:19.111Z\",\n  \"date_created\" : \"2023-05-18T14:44:02.111Z\",\n  \"permissions\" : [ \"004ptgkq69n6nvzn807w02cj001g7mdrj566cc4ru1d9q3ciipkmy4mambro4cg6gmpip25ycfsdrsfivsw8moas8dk5zon5ao84v4a5ou40nsbd3p30rwy2iatzximp16b56cleh76bmgdmthngmhw3171j11409lmpfv4gd09arwt2z0m8ijpzv\" ],\n  \"account_sid\" : \"AC242E4666BCDb4Cb542f2ac15f0F17F33\",\n  \"chat_service_sid\" : \"IS537f06e19F95dd9dfa249FCECaD04F0E\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/026806\",\n  \"sid\" : \"RL0eE372a1bc09eab4b73D5F4D5Fc555E0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96dfb8c3-d0f2-4a83-b7e9-fd89ef0b81fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.11168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d8027c7c-3c71-4344-9890-7521df7fa85b",
    "name" : "Remove a user role from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS7aaEa78D5C184CCe95b6B022b95a4F70/Roles/RLbd5EFe4bbFc784AD9ccccF6DF6C54997",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d8027c7c-3c71-4344-9890-7521df7fa85b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.111432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceRole"
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "5682d715-57b4-42f5-b67e-22bdb905c5b1",
    "name" : "Create a new user role in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS2fB1b2aFBABe6EdB8B1B039FC8F70385/Roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Miss Andres Nikolaus\",\n  \"date_updated\" : \"2023-08-19T05:50:33.111Z\",\n  \"date_created\" : \"2024-01-15T17:55:23.111Z\",\n  \"permissions\" : [ \"nlex69hiuztskiozida291p8dzf4s52mzp839h1h9rvb3l9ryyro93u0go0sevnchb3ruepqctzdomver11nkk9s4ktu84jbflrt5ld2v962gyixar59bxetvpyg7i5zfcgdd54tqv33bnlgx84kxxpewpvf69e9u33nmybd1umekzd6\", \"7g987ddze7378\", \"49lymyq0d1v14pisxwxo08wigmedyvfj5w4h3qnu2odchhmluthqg07m5mmeyuhcceh2274pyer4xvgrznh8c6jtwvzgusbtcliig41907da0zak8xv78bh3f\", \"obggzwot1ptg6ncudd3zikl5ykaobvkmv8u9aomconeod2sr\" ],\n  \"account_sid\" : \"AC4992aaB54bC9aDab5CA6C80ae8f4C13C\",\n  \"chat_service_sid\" : \"IS57E148E1BBC6eDade0d5daCCd1b2e351\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/875211\",\n  \"sid\" : \"RLFB4360AC1Fca3fF6DD0E7CCeEe4d0Bc8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5682d715-57b4-42f5-b67e-22bdb905c5b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.111386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "a89ef041-aec3-45f9-9ffe-b337375501c9",
    "name" : "Retrieve a list of all user roles in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISebE70B1eB650a0E9d8cB2dcFfdAB9F35/Roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/795739\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/071855\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/038785\",\n    \"page\" : 2846130112969718233,\n    \"key\" : \"sreoboqyydy5wv1vxzmlwbpj24qg171fd855yflubupo3wt4bo9v4r9s7h0nr74atphhci8hoxuy9kmta0z9vfvul6ygtjjqw8ueyviap5i25yvtaucbyujcevsdrgc4mn4yu9wiubj6v6t6bf9h08wqcnqoq8o7fjc\",\n    \"url\" : \"https://web.example.mocklab.io/561295\",\n    \"page_size\" : 25298157581383237\n  },\n  \"roles\" : [ {\n    \"friendly_name\" : \"Julius Tromp\",\n    \"date_updated\" : \"2022-10-14T03:52:42.11Z\",\n    \"date_created\" : \"2024-03-06T07:47:04.11Z\",\n    \"permissions\" : [ \"fuw5xzcdhr06wj9wmzd0rz5a3uw8mbm8o8j4xnax1o238siw07zgsx3bqr771yce9logvzpd898dn2rywl0\", \"vccwrkvdpmom3qqrwhr31wglskl5f6d4y176501ep22da8r54w2didfebooozml2agu9ir9gomfhxvr5\", \"34dh4emqeoe8ib7ngz65a252e3865gdxihmoa8rdy0s1e65g2ki2u3ftfw9qxqqlgfalcvn09wcy706cn54l33xx1mcwwdwaiei1yh8qy50y59y4s8rom7n23sekaw763nt0s8ove1cuksidsf4fwid8pnu52kog\" ],\n    \"account_sid\" : \"ACfc07dBED29be4C8ab1faf9e339d2feFb\",\n    \"chat_service_sid\" : \"ISfFb994dadc0fEF3BDda05252E1D328f0\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/416432\",\n    \"sid\" : \"RLE9420e45e69B68ad1972Cd38B4EaE4f9\"\n  }, {\n    \"friendly_name\" : \"Kelsi Frami\",\n    \"date_updated\" : \"2022-12-13T02:34:01.11Z\",\n    \"date_created\" : \"2022-05-02T12:25:50.11Z\",\n    \"permissions\" : [ \"hhvcetsto0axea2u1ya81lht3lavnxvx78t66jtf3pls22t7dkqk1ahdo212r3qe9k9e3dg6v009kf448gq4895fhjp2cg6td2rjhmuga4yg0oeflo2waaefy99m17v7p0u1h7re6jv6yi4mtub640roennfu1qse0c9uomc0dzjf5aaw8fgxklcfky0r5n4g\", \"kd723vkzune4p2k9o1sfhw8b02gmkwz3k0dtmjahv6aw4kx9tl75l\", \"a6dqptnjt47hbdmf21l2hwvx0mnal7hakrdwktnj5739bxml34y19us9n278eh88ust97e38r3llgje8rwr9ra3zxlzzova8tx2ldve3mvpu09br22umi931yrc5ob7vtlc8qokmjjmlx9se818nuh85\", \"ttt80cxroshey4q7gygff1abcxml514r0qzf78xm36tuwn3j6wr9ruisgcem1ykuqlpmob7ylfqo\", \"poa5e2hu1oyrjmgm7zg7b3zv9u4sktaec7dqttvwdup\", \"mxjok9msprrsby0nv7g9jmzkq5v59yrfksyzqg3zn4hkwj6vsvpb95kx1noyll0apd1auwuvwrizf83lyyukfwlaqsjzh5a1tbvuzzlpm0wzskee8xtc0r9lpy\" ],\n    \"account_sid\" : \"ACd2c972F12AC9d588AD611eEb6cF3eAEF\",\n    \"chat_service_sid\" : \"IScF09fcB8cfaFA5cefB58C53Bd33ba4Dd\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/077982\",\n    \"sid\" : \"RL8FbE4aFe2d6FdCa8Ded2ebAC39F41B47\"\n  }, {\n    \"friendly_name\" : \"Caleb Blick\",\n    \"date_updated\" : \"2022-09-02T23:00:51.11Z\",\n    \"date_created\" : \"2023-06-08T08:05:31.11Z\",\n    \"permissions\" : [ \"4zw1ozxdla684dbva7iuf42dl63i7rpwstj3m1w3bcuczxbv6f1mdath9ptkk33rio7ag\", \"wa4qpn8aggj5aa8nmjqh7sd2a2pji3gr7jmlh7nr6akxdpe039w2btvrhz9oad8cw4tk6jm9863tlfd38ed4hdcm1rycufvtfaym3odn8c262etndijb19nwuzwbdsy9n8lswf1amrkckrnwi4ld8f94zq2p4yc8dnnyd2l84ntuneruux\" ],\n    \"account_sid\" : \"ACd7d1f70FeeF3F78AAB3303F6E3b9DFb4\",\n    \"chat_service_sid\" : \"ISF4C95C1D89bbea97D83ad091bBC7ea7f\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/558871\",\n    \"sid\" : \"RLf7C8c1d8EE0dEeeDdC73CA1E910734E8\"\n  }, {\n    \"friendly_name\" : \"Sherley Ortiz\",\n    \"date_updated\" : \"2023-06-02T20:21:39.11Z\",\n    \"date_created\" : \"2023-10-01T16:56:02.11Z\",\n    \"permissions\" : [ \"476l8mq0wywoov3btr0vj2ndxsorsqo202dpx17qrgmjpz9d0x1suqjuvfsf48n5vc1uz10v9te9lb6fyc16hmfptn1vl6ugjoep8a3gd7oow11i5rgawaut4u5nftuosn8kzxf9n8oyidq2er2dr587fj5ft7do76uozl09s1dyi3xish6oznpn3e10dj\", \"nmv9jq7ou0mv1jn0iljzwkcabjghmay15136ayibshbz6e2eqhgdlhb7nomhhol8jsem9l9rf4bnbgpbjhmw3g7nqlyyece4hlceocgdewj8mnpyqb0t8kwkbznan3lgry4g\", \"wxaocfqox5cjn3hst0699zg0rj86jurioko7z7it93wu88umhkuhwgtll3daceg7garw8iwn6228imcfj2hd1mznzal8fss7l4n4h1vv1y6eba69w5qlbrmngzqkkhtsimz2\", \"2lffxj2tpbf98czdst6tm66wl2qgtuto13x2gp0ac7yyvwz6ztgr5z28jc4gktfrllft5881l1ajubjwko8opqnyo6gcwcal4d601dvsuts6wkncsui3qey7wtgbe0sg8e5s3gd7lnr3zw3l577wf5duj749pg3uw0gvg8q02mkslyr583evxbg1xdvjfd8vozws8y\", \"qst9x6vm50qj6nloegm6l152xi7dzq5aj98j2yiwjywa7k9b6cuocnbocot9gti2epfu8m074x37mib1qese5uy2wdqt5n0ezyhjtz5sftbmmxylxxxu0tt31xq1xk8f26pg84kvqhcgfdg493bpu1\", \"v77x8zv4hth9j077gyk0blpejchn9e3kfchmueblcktz9v1uvc9ucid8nf2jw4w\", \"750b8r0b36i33meg7ulefbwnhjwhwd0yfqhnvux9yhzdyk4mpz70gakcohifz1ipxpco5u9a57cs5sj3d6558ghpl1u5sm662vyy6q7tpxklxu51psbk1o\" ],\n    \"account_sid\" : \"AC45301DAaB2AA82cF245C8D54e7fa6EB1\",\n    \"chat_service_sid\" : \"ISf2a560Ef12ADb4FaFEd9cd85efE3D133\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/415238\",\n    \"sid\" : \"RL4D19674c9b0A7fEFF4C269D22bfA8Fd0\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a89ef041-aec3-45f9-9ffe-b337375501c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.111096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceRole",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "roles" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_role"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceRoleResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "687878c5-4680-4c89-aae0-4c212ce891bf",
    "name" : "Retrieve a list of all Conversations that this Participant belongs to by identit...",
    "request" : {
      "urlPath" : "/v1/Services/ISE09D39E2388ef3d4c98FBe26bc7DB71f/ParticipantConversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/006825\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/472806\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/574111\",\n    \"page\" : 469404740672501687,\n    \"key\" : \"rop16rqcx870uwi7zv40p1h0vxq794dq2zemwz3zglxug5a9y0lo0vd54lfhv8ua1n4m9onuckx5j1yk2p1yz\",\n    \"url\" : \"https://web.example.mocklab.io/996294\",\n    \"page_size\" : 8874052615258169123\n  },\n  \"conversations\" : [ {\n    \"conversation_created_by\" : \"k4f0upzamfg3k3taggcsn3ea8e7f4drujkt388tannu0\",\n    \"conversation_sid\" : \"CHDA2cBAc1F3F5a96A31f2AF8AE0c1C4eB\",\n    \"conversation_friendly_name\" : \"Bill Morissette\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"1y3itdpi75yvr5hlp2t8teu9reoc049gqqs7bwyydcmuixa0v5oz31jsxwqbomz\",\n    \"conversation_date_created\" : \"2023-04-01T06:16:19.108Z\",\n    \"conversation_attributes\" : \"dhbqcjew53h7wdpgepcrpgq1tlwpbg068nvn6fcuzlnntma11eft05nygkn2vpynflbkngtnp9wn1hu69xocjjkppd9dkq9rpr231af43dz70t6l6r3h21h58ut3a3utmltqwocwhjtnx7w4s2e3446jq1fvon36ibbxemq132wktyl0c8oz9\",\n    \"participant_sid\" : \"MB656E05Bea3CFA11e4695c1fC36ed5199\",\n    \"chat_service_sid\" : \"IS9C1BcACdbd4545B701799bFc6bBA8137\",\n    \"conversation_date_updated\" : \"2024-01-17T15:14:39.108Z\",\n    \"conversation_unique_name\" : \"Beula Mayer Sr.\",\n    \"participant_user_sid\" : \"US448f20DcB8BfFed4Cf73bc2CB73624eb\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC37807680E5fDB6daD3eA6d0De3Ceabca\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"9mjxl3tn5jol0yjb8sa6rgg7aod9b5fyp5rfmxok1mxr1\",\n    \"conversation_sid\" : \"CHeEedA0bAd985d8038f2CBBBCAD6B6bD2\",\n    \"conversation_friendly_name\" : \"Odell Farrell\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"ikjylrmt0z47ruayah74mcyukno3m9256czc8jkinm9k84kjbc4jmd4daav88jw3pq65e79ivbu5pfarmdqvkbix1d76uvny10sh5dyyo9iy3d8qudl587ic49wvyddh3jl1v3e9luirmpqzw\",\n    \"conversation_date_created\" : \"2023-10-23T20:29:43.108Z\",\n    \"conversation_attributes\" : \"73w4zdyw92xvqyb4aiwnerfck5g3gsagf\",\n    \"participant_sid\" : \"MB0b19Dae697E7ff216A7a5aFdF7e3f1B1\",\n    \"chat_service_sid\" : \"ISC1e01F001bbBcEf1B718F7B979cb8e69\",\n    \"conversation_date_updated\" : \"2022-05-04T21:36:24.108Z\",\n    \"conversation_unique_name\" : \"Ms. Brittney Gusikowski\",\n    \"participant_user_sid\" : \"USC8102D859bAFe97c4Ba7FaaAa4D8fb43\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC5aDc9Cdc7BDe5C6bC8f7785537B96eDb\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"qiiznd8r0nm3qf3b8j083f04wq4ae64i8yq0hnnfcbrp3676qo1pc9jfj7yb65pxwdv47wyqnvy7myepp1y6p3q5bqvb5mgef21w74be5yjxq1a2prxt02b057stcxdfc5nfnz82b59ctchr89n2ipd58gxu3d5bsziq85ke0iioy7\",\n    \"conversation_sid\" : \"CH62B63FBa2Fc7d2Ef6DF1Ecfbb0FCadf0\",\n    \"conversation_friendly_name\" : \"Donald Franecki\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"8w9s69zb4io72e34pkznjolb4tlbfrvgj2rgoz94iq2uni4gqdxawkve004fkm1bu5pbhunio5ew9rb9s7dp7v8wiji80xqb0u4natrcmyw6gtzz7wzk0vws2n0yj3jx55\",\n    \"conversation_date_created\" : \"2023-01-07T18:45:32.108Z\",\n    \"conversation_attributes\" : \"xbaiqa14zewmmwbuta920bubdkzkim2mfe7vnou610w2kuvizg510q1anfion3ulvh39qw1y5lvapkkxp0ai3c1titi75q4trwhquynhc4lc0okc2y3du3qkq50szesj\",\n    \"participant_sid\" : \"MBC9fDEAdb8FC9AE8f5b5957D37dFc8aeb\",\n    \"chat_service_sid\" : \"IS3C66ecBe16aAfA0dBcE2B7dc496a0e7c\",\n    \"conversation_date_updated\" : \"2024-01-07T05:27:42.108Z\",\n    \"conversation_unique_name\" : \"Hector Moore\",\n    \"participant_user_sid\" : \"US3b0FDCD80A7a30e30b8249EEefE0b18A\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC6EdFF1dbB49DFDE4BE3321dA43791520\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"w0vzgmtrdf17uu3sda\",\n    \"conversation_sid\" : \"CH03C8Fc20bACa533A83B9fE5a2CD4c497\",\n    \"conversation_friendly_name\" : \"Gilbert Zulauf\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"depkecab69nujazpfun518rsptjtwwy92ecy4dgumkwjpilv3c40nk3j55mlk5uq23s1dq352qe8g61no6rukfag719aaii1x6sryna9bee33zvoqf1gicwsrnftcx2xgztr6xryg9g1ci2mm8u6eb5uitxkc4bbu1iczmlylzr3tugejwx8wkd\",\n    \"conversation_date_created\" : \"2023-03-02T17:43:07.108Z\",\n    \"conversation_attributes\" : \"2aa5y375ldn43xawykom3s4ojkjx2oago7cg2ckhc1wnhicc37aku5jtf6mpa9gkxkw78mxbvpv0zkjudf4pw831aemgu5lgh4hrsn2mytlqfvwxh4u4asa4ngjjwj1p9v0nag8qyipazfpzm6r\",\n    \"participant_sid\" : \"MBB2dF1ae3B8105cd830E7E5CB2de1fECA\",\n    \"chat_service_sid\" : \"IS9ee3F95d1AA51537e9B84019ca18aEcf\",\n    \"conversation_date_updated\" : \"2022-04-18T20:24:01.108Z\",\n    \"conversation_unique_name\" : \"Ms. Gaylord Nitzsche\",\n    \"participant_user_sid\" : \"USFDC9f1BC797Ff534F83AbCeb4Ed2d49c\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACEA429E1a0BCfFBbCb24bDa6Bf368AF65\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"8ynk0hkvdh4fo2xjw64pll5ypjolk05cr94c5seh3ey9ucr0sz76f5kgeu6xq5v0ccb3a744nfd0pgqc2lh4n0pwefdeqgzqtvqti9h5glja88gh3dvucgf0l3r2cvlqnxah545ynkmsbm06eirmujeuhx9ndxi5xm3lnftuw\",\n    \"conversation_sid\" : \"CHce443c1A1350a79Fdfd4375Be22C1a66\",\n    \"conversation_friendly_name\" : \"Chet Gleason\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"zkftw3dib0jhzm63jeh81slw9xssl83ve4kd5r6yj2xwf9h376nqh2nj8nttumri608np9z0y47oq2fyg85safcle8ci1rwijhmqsbtk15wwqxbws8g1g31wg0xse5cjb5rntu9ueqxl1i5qjugaqa8ytvznh695wiv1eqey0ol2ph5yfelfi8bpq6faazdguv9ltmnk\",\n    \"conversation_date_created\" : \"2023-08-07T15:17:16.109Z\",\n    \"conversation_attributes\" : \"doc3vi5rpnyyru4ms2x9325b1kswwvo7zfzfxdm05jolo5mcm3maatbro2l6ek8rx3u6n8b9hqoedq2fxgw7gi1ymfh48l5irxy\",\n    \"participant_sid\" : \"MB6AA49Dbee790b6a88cc2405Eb32f251C\",\n    \"chat_service_sid\" : \"ISc0a50aA9d2416D19a0e12A8fecB2B8bf\",\n    \"conversation_date_updated\" : \"2022-09-18T00:45:39.109Z\",\n    \"conversation_unique_name\" : \"Trina Weissnat\",\n    \"participant_user_sid\" : \"USaF9F84Df7C6e8f5C7cAFedF06AD6DdDA\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC1FdbADC1453aDfDc2c89bbCe9D3f87Ac\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"p2727j3ikj4uaxm299fdn62044cb97kcss8iiath2yilm0sx7l7z\",\n    \"conversation_sid\" : \"CH5ad63CBb38Ff9eAD72Da065BE328e6A1\",\n    \"conversation_friendly_name\" : \"Lise Ernser\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"pb5sqr7bca1qyal16lifonqor2qv01panudna5y5xvkw3ktmm5qwmhydh7di4dq8alp7ixovi4whyg5r4zbx680ljqburj7txng1j3nylep1f0n21at1hawjvsffmhm200ud0750od1nd2cl7n8aqombn01g993ebtfuul7f1kmw1jba4x8lmi2amie\",\n    \"conversation_date_created\" : \"2022-08-02T00:42:48.109Z\",\n    \"conversation_attributes\" : \"v4u0xnjll9y6pbcdsxwm1ojx9g\",\n    \"participant_sid\" : \"MB1ef5885aB2A775a776B4d25d27B536d2\",\n    \"chat_service_sid\" : \"ISeacdAfB6ec52cCaaefcA9C3D15DCEeB2\",\n    \"conversation_date_updated\" : \"2023-07-08T15:10:40.109Z\",\n    \"conversation_unique_name\" : \"Juana Hand\",\n    \"participant_user_sid\" : \"USD5e84220eC05EE548c30ffd26ff32B2f\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACc28E92Fbe58Ce51eF3aF2427d8669EF6\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"i22mrdzepkfardpasxj3w08xw4p0j52qfyxkjboqj4vwyv66txd405rhiqc7es15gnz1js97x5wa2og97836\",\n    \"conversation_sid\" : \"CH539C835b404A9cde7Fab0d7cCF6f922D\",\n    \"conversation_friendly_name\" : \"Chi Ward\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"lq77gl11rsb0vnn6rl7468pq51fvx9bzcbkg9a2dx7dgp75ouru3pa7\",\n    \"conversation_date_created\" : \"2024-03-10T16:42:22.109Z\",\n    \"conversation_attributes\" : \"btifmzn22hc35pc1dljwz6aqxuwa9hcemrqplloj7xl\",\n    \"participant_sid\" : \"MB77139eb6C8d8D6ecf191ceaEd0AE4f8e\",\n    \"chat_service_sid\" : \"IS692Fb3E524612Ee834Aa666a4c5bf3eF\",\n    \"conversation_date_updated\" : \"2023-01-07T09:01:56.109Z\",\n    \"conversation_unique_name\" : \"Roberto Wiegand\",\n    \"participant_user_sid\" : \"US44dc6BaF0d4061c6e7eFDfa6D65cA11C\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC3BDFbC6637A696d8D6299D6C95B664E5\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"vn4f2dfajyozam6pokxktvmun85tx8qkap4207sa6pe1auvufasozie7xvzlzz1gzfugos4fo9v5gftmcs2jafx4lw3lbs70sjmf6e1gr\",\n    \"conversation_sid\" : \"CHDD7EA507CDA5daaCDDec0b4caEaD60e3\",\n    \"conversation_friendly_name\" : \"Issac Marks Sr.\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"ll1r3fz7eygepdm247f64h5urz3aajulip2acevu5kp6z0psu7gg375k32h9r1gfoubs2gi9f02tu6bqxm1vklbkf4j2snjan1ztvvm2f7ccp\",\n    \"conversation_date_created\" : \"2023-12-15T12:19:52.109Z\",\n    \"conversation_attributes\" : \"s4i47ddxyvw647yuabk1elpkj96459xrs3trti5tthfir0vsth4f3g7vg0czxcn04ikcanun\",\n    \"participant_sid\" : \"MBD95eB7456d9f3BB83fFDD4c0C2cCE669\",\n    \"chat_service_sid\" : \"ISEf2aad1e0d17f99Bceb6dcfDa7A0eFfd\",\n    \"conversation_date_updated\" : \"2022-11-28T04:54:26.109Z\",\n    \"conversation_unique_name\" : \"Ms. Lavinia Johnson\",\n    \"participant_user_sid\" : \"US4A0cD288487f1B5dAeDcCBaEC3e4ab17\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACc52AD0CDc8116BCF9DBeB6a5eBbECFe1\",\n    \"links\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "687878c5-4680-4c89-aae0-4c212ce891bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.109898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceParticipantConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_participant_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceParticipantConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "2b843af7-f6a8-48e1-84f7-3bb01de016a4",
    "name" : "Update an existing conversation in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS37B5CE24C9EEc96b829B4fCe22D9f1d0/Conversations/47xt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Vance Wisozk\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-06-05T12:32:25.107Z\",\n  \"date_created\" : \"2023-02-21T00:29:16.107Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS3c8bE88B3AEfF5b028Ec58FCCDeAfDab\",\n  \"url\" : \"https://web.example.mocklab.io/805738\",\n  \"sid\" : \"CHaba3D0E0ECa30dE82AcDdbfbc2eaaBf6\",\n  \"unique_name\" : \"Geraldine Kub\",\n  \"messaging_service_sid\" : \"MGF742E33B4b49e3d3269a2F01DEB32cA3\",\n  \"account_sid\" : \"AC67eD89d3c637d9791c8Fa6943ECFA6d2\",\n  \"attributes\" : \"rnxgw8rnxjzdzbpzpy5uk9ajrpcksaql7q6tckd0r7vudlp7itkzfs52g1w8qp6ng2ltpcr\",\n  \"links\" : { },\n  \"state\" : \"inactive\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b843af7-f6a8-48e1-84f7-3bb01de016a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.107827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "b8ac01e1-9dc7-49c0-900f-aa68a1b69fd0",
    "name" : "Fetch a conversation from your service",
    "request" : {
      "urlPath" : "/v1/Services/ISf0ad2eC6Fb3DCfECBbDFE66940e74e85/Conversations/u4k9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Susan Johnston\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-07-03T15:23:39.106Z\",\n  \"date_created\" : \"2024-03-14T08:21:23.106Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS3a95D5386D2BaAeb6e8EF2cC8aa6acaA\",\n  \"url\" : \"https://web.example.mocklab.io/494978\",\n  \"sid\" : \"CH8a1be11D29b6bcf063eBbECD8e234215\",\n  \"unique_name\" : \"Otis Jacobson\",\n  \"messaging_service_sid\" : \"MGFdAFef2c4b2b5EBaa4EF0D9e50aDDA5A\",\n  \"account_sid\" : \"AC5aBDaEEC4BB0Dc55a93aF330808F89C1\",\n  \"attributes\" : \"xmbifs9343v9y5yr1equeqdzamh3upg4e31ebruq1v126mov7zehhlv4by8wqmhi14omgwc55rygko308ui2p41bc5o0pz2jmdaxeqqd0yejepbvxvm106kc1zpfkszbgjx17gk52l9zub0qxbue5yfs8xnd5h7z3ea4d0blyb\",\n  \"links\" : { },\n  \"state\" : \"inactive\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8ac01e1-9dc7-49c0-900f-aa68a1b69fd0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.107413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "ee219b40-4282-4cc8-ac41-4ea6d1e1c111",
    "name" : "Remove a conversation from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS4BEe4dbDD8cbe5B18a2717fb8a2283fC/Conversations/3a7f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ee219b40-4282-4cc8-ac41-4ea6d1e1c111",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.1069Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversation"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "dad8d5de-4264-497f-85a0-039ff4c3bf0d",
    "name" : "Update an existing conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Services/IS941EE71Ba3Ad1CfcCef7EDEF7B01d770/Conversations/5u33/Webhooks/WHe5caa6D570ead76Dc006C17d8E79A13E",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHD4A6a37c6c86f0FfE7A1ECAfCEA23232\",\n  \"date_updated\" : \"2023-03-27T19:27:37.106Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-11-30T01:07:59.106Z\",\n  \"account_sid\" : \"ACF6B123f10B2B34aCeCd8e73f5EE8eD71\",\n  \"chat_service_sid\" : \"IS4d74B43ADe2eCd194B8F6BAbf843Bc9E\",\n  \"url\" : \"https://web.example.mocklab.io/883709\",\n  \"sid\" : \"WHF7fAB2dEA604BbaA4E5eef2daDe71CC7\",\n  \"target\" : \"j670vrf9dne8zc56mv0komh8anmerl5tpyh2z437gi3p4sh8i8osavb9ku3l92x7v3gw1ubp03dbpyqnnrnud3d67arspfyotunvdad06asn9b283l8bsgkt05rl7kqqjhny5oyw4blwpj2fgyv2xnci8xquv63rdh3xjjy1b68mpguvcm5bl6h7s9x2wdv4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dad8d5de-4264-497f-85a0-039ff4c3bf0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.106797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "643e9c47-dec1-450e-b08f-f89f192d442f",
    "name" : "Fetch the configuration of a conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Services/ISea92cd70aD1CC599B8AB7aA21C7AB44e/Conversations/2usx/Webhooks/WHB03AAf1Ae1cDAE1eAEf82A8bfe92f446",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHC1E5CA5EcDaed0d3f2c5D3cCfd7cBfba\",\n  \"date_updated\" : \"2022-08-17T11:20:35.106Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-12-12T19:39:35.106Z\",\n  \"account_sid\" : \"AC4A6A56DAC8bcDa8Be5CAAE7d100D48BF\",\n  \"chat_service_sid\" : \"IS40Fb7838B7dfB4Bef63FE90152eD7A0e\",\n  \"url\" : \"https://web.example.mocklab.io/007817\",\n  \"sid\" : \"WHDc42Db08abCBA59C0892abCaFeFefcb8\",\n  \"target\" : \"nkk25nadjg9mjnev2c8fv3oqo0akfqrxyvslghpa4o3aopzzfvnfw0g53e8ob535a28zgyobimd2c22tbfxwxywra\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "643e9c47-dec1-450e-b08f-f89f192d442f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.106501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "91089cfa-b538-433b-86ef-16b317c3d15d",
    "name" : "Remove an existing webhook scoped to the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISA59Aebd9Aaa5b43cb78FA86fFFCfd82e/Conversations/9371/Webhooks/WH2CF1f5fAfFD18eB57E3df2eBe8b67ef3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "91089cfa-b538-433b-86ef-16b317c3d15d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.106204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationScopedWebhook"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "1c0fc241-1b75-4c1c-b01a-5a1761c3d014",
    "name" : "Create a new webhook scoped to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/ISe3Dd1f2f8D0D2ADc3a3F4F6e34Bb354C/Conversations/avq9/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH3DF4dC1D4cB99ab6b30193C24CFd19fc\",\n  \"date_updated\" : \"2023-10-25T16:16:34.105Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-06-09T08:30:49.105Z\",\n  \"account_sid\" : \"AC98BBBd503fAF6c5e3d092ab5Eb8F8CBe\",\n  \"chat_service_sid\" : \"IS0CAfFba4EFAFdE1EFb6Eee7DcdFCaf82\",\n  \"url\" : \"https://web.example.mocklab.io/337366\",\n  \"sid\" : \"WHbC12FE97d0A9cb9CA4FB52B5f4914cFC\",\n  \"target\" : \"cai7sg11eo8i4abib9kd4x9mbrhp8vmuiqrsfqnbyrqezssm1yhcjc32twb6zqzmeg9cant1652hbrbghudc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c0fc241-1b75-4c1c-b01a-5a1761c3d014",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.106089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "2abdbb8a-fe93-4bf2-aa46-3ae673d617b3",
    "name" : "Retrieve a list of all webhooks scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISec31460F5C847A843a02bc7abF7bE4Ea/Conversations/4i8w/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"webhooks\" : [ {\n    \"conversation_sid\" : \"CH77b31AA55eD6FFF6c8c7bBD9BaE6a060\",\n    \"date_updated\" : \"2022-05-29T22:59:05.104Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-06-01T15:33:15.104Z\",\n    \"account_sid\" : \"ACFf3B1ebc7604cB986d94C92EF364A4C4\",\n    \"chat_service_sid\" : \"IS9aBfaDCEf4DaE5c54A33eb625aFBD587\",\n    \"url\" : \"https://web.example.mocklab.io/779009\",\n    \"sid\" : \"WHABf7b6cAfe64D9ddd7353e71ee83a8cF\",\n    \"target\" : \"6q1t1zl132pzqzyum8qgp2w6apk6blcnwq22nehn57uyx8a8apuxg3\"\n  }, {\n    \"conversation_sid\" : \"CH65614dfBbaf86526Cf1ef4E4C88Bb078\",\n    \"date_updated\" : \"2023-09-22T19:59:10.104Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-07-10T19:28:55.104Z\",\n    \"account_sid\" : \"AC9aEd99F7Cb120aDa0C5D4db2D978Dc4d\",\n    \"chat_service_sid\" : \"ISfdc4796cDae2bE9EAcE2673B7FDB4c11\",\n    \"url\" : \"https://web.example.mocklab.io/247985\",\n    \"sid\" : \"WHBbFBeeB52eB3b28FB1d3CE2C7E8E6b9f\",\n    \"target\" : \"9qmb04b3kcsr0oomtrhkm1bzm8m9e74gkjxzvwqkie9anpvu06vqonjfh2yce0l6opgzz1s32emf9zn2mtjlqwhf7lh\"\n  }, {\n    \"conversation_sid\" : \"CHFF71AfAC0Ea724431EDEAAf50A2D25cC\",\n    \"date_updated\" : \"2023-04-12T19:36:44.104Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-07-17T17:44:11.104Z\",\n    \"account_sid\" : \"ACCd5fCDa7C263A3F7cdBdc6347f36B6c0\",\n    \"chat_service_sid\" : \"IS6Bc0aC7CFDb6D4869a8C5ddDd80Daf22\",\n    \"url\" : \"https://web.example.mocklab.io/440978\",\n    \"sid\" : \"WHa6D0Ea207eE6B187BBFB3e139AFf4dC9\",\n    \"target\" : \"5ust6wavfllszaxsgysje64euupe949bj04wj1055u6jfh3jxeehra3kq\"\n  }, {\n    \"conversation_sid\" : \"CH88BBa8a4cc71F3DD38bA83295A6f52c9\",\n    \"date_updated\" : \"2022-04-03T19:29:01.104Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-10-20T18:09:15.104Z\",\n    \"account_sid\" : \"ACa245fB9ef70AeD4bABaFE01e3b2Eb33C\",\n    \"chat_service_sid\" : \"ISBBC6fBEbfe905e8A8ABEdE44D54A70c0\",\n    \"url\" : \"https://web.example.mocklab.io/735577\",\n    \"sid\" : \"WH2Cc24Db3d85eB650B2BF40FCF9d0e348\",\n    \"target\" : \"a5heip9bvnt8yh39n4ba7eo9azqs3r855t2kkw8jpn9xaobu2270lnnn5hhiuxeowu3aj8j435v\"\n  }, {\n    \"conversation_sid\" : \"CHDF7479DfFD6EFAcf38440af05c9C043c\",\n    \"date_updated\" : \"2023-05-18T21:08:45.104Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-06-21T08:25:58.104Z\",\n    \"account_sid\" : \"ACBcC54eC1eEb9Bd5a28aaba8898ceAE59\",\n    \"chat_service_sid\" : \"ISF0dd6Cb7163a59B838f27838b4FAf1aC\",\n    \"url\" : \"https://web.example.mocklab.io/549017\",\n    \"sid\" : \"WHA13a16Fa4E4baFf7AF7B743baBf80aA6\",\n    \"target\" : \"7hxrevv5polp6ocbkzrm516hyk6j7m3lapzbn0i1p17ib5r\"\n  }, {\n    \"conversation_sid\" : \"CH53aDc8dBc7d754D2E7feB03193652aB6\",\n    \"date_updated\" : \"2024-03-18T07:33:36.105Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-10-09T13:56:00.105Z\",\n    \"account_sid\" : \"ACce626fb902E10BdF7Eaa5a30481AdCEa\",\n    \"chat_service_sid\" : \"ISC07640f0b09e7cD66E2c24Fa2fBAeB9C\",\n    \"url\" : \"https://web.example.mocklab.io/152039\",\n    \"sid\" : \"WHc2283f1a4e97BdD3bF88F8cd0f9c45E0\",\n    \"target\" : \"uye2bvajts15553xfz1g8urphvepdhxr1r76if8injajekuim8\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/968583\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/225698\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/543016\",\n    \"page\" : 2671172338712958625,\n    \"key\" : \"spiy8hmdvrw4a7tbc4i28uhn0timzv99ur\",\n    \"url\" : \"https://web.example.mocklab.io/120679\",\n    \"page_size\" : 9137331522249133134\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2abdbb8a-fe93-4bf2-aa46-3ae673d617b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.105733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "webhooks" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_scoped_webhook"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceConversationScopedWebhookResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "ae03c7da-3c07-4fe5-9be9-2017ea7cb0fd",
    "name" : "Update an existing participant in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS1BF3fD987c26BEFc22e0D505C4F1DAF9/Conversations/8m70/Participants/dnf5",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHCae0BCAEAcA1b3bb1FE760e8B9De6Db8\",\n  \"date_updated\" : \"2023-09-11T21:40:05.103Z\",\n  \"role_sid\" : \"RL1e6e9af4a5fBF3e4dB7C51788B345ebc\",\n  \"date_created\" : \"2022-08-10T02:55:30.103Z\",\n  \"chat_service_sid\" : \"ISE20A26dC5D0E2A59cdC4BEcdCaA6CECf\",\n  \"url\" : \"https://web.example.mocklab.io/299161\",\n  \"sid\" : \"MBeAad7DECcF18aDacE87d191FbceA65cF\",\n  \"last_read_message_index\" : 66073589200153690,\n  \"identity\" : \"q5mz23xy079z05l7eou9scoqd3wc06iqjn8qnu1kx1c7zrdz9pee0kgnxjx5jqu0ibavzlymdfhmm9frs6hr44ril1y6vezoafik964jf5nb0gv12o6q9363uoroouo37he3s9wkjfradu2n43q5dmbpzqjp9f516qfna1hwudxf9eqdm39j9swlpdk388zqb6lk\",\n  \"last_read_timestamp\" : \"2022-08-02T08:50:11.104113Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC0D07A530D3c09bCBA1Fd614daC4e92aC\",\n  \"attributes\" : \"fat2eci9b5imwdy9rp9kv8h9vdrzigbsp7memt1ziengh2apxkbwdjg5lswpkvqud46\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae03c7da-3c07-4fe5-9be9-2017ea7cb0fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.104385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "01ea2b55-583f-4b99-be19-d712864aec6c",
    "name" : "Fetch a participant of the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS9f3B3290Feb27cBEFFcCb7cE9C35AdaE/Conversations/nu1y/Participants/402t",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHCf6d9BE797e3be87Ea67323896eA01De\",\n  \"date_updated\" : \"2023-11-27T21:54:23.103Z\",\n  \"role_sid\" : \"RL8ae3FE8fc721f0Fa3a157C27ABCF60Ee\",\n  \"date_created\" : \"2023-01-22T21:40:50.103Z\",\n  \"chat_service_sid\" : \"IS94dD3CcaeaBEfD25e6bcB970bDcB405E\",\n  \"url\" : \"https://web.example.mocklab.io/375993\",\n  \"sid\" : \"MB7eD39967CE41DE9e46BbcAf2c8bf1Cdd\",\n  \"last_read_message_index\" : 7879402453865269603,\n  \"identity\" : \"44lnyawm32qpe0a6l2p1dduhqc2fxbyd\",\n  \"last_read_timestamp\" : \"2022-04-12T06:15:11.103667Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACaA43906aAcEcbAcE94c768BA56fE6C98\",\n  \"attributes\" : \"a1v6fx9m4ldsf0brx6p3iox81to3n4kg49eq92yqjew69tncb3lfpf3sbonrlj8tuc98xrb2lw0v4bt27h854c7chay8xhj05rhl1li0guj5iaqc29e7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01ea2b55-583f-4b99-be19-d712864aec6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.103959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "1e862d18-83fd-418f-ad6f-f33b522d989c",
    "name" : "Remove a participant from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS8fEAc9Cb83B3C584EB697dd4baEb3ADc/Conversations/411h/Participants/95f2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1e862d18-83fd-418f-ad6f-f33b522d989c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.103524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationParticipant"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "294e08cf-02cb-4bac-a7a1-dafa9765e17d",
    "name" : "Add a new participant to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/IS0569FAddbB04EDbb92a154Ac1A6F5bBD/Conversations/161j/Participants",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHD9cEaC6CB3Ee231807eE8c534029C1AC\",\n  \"date_updated\" : \"2023-01-13T00:46:54.102Z\",\n  \"role_sid\" : \"RL11EE666c0E205d4BB971bADdFEAae82b\",\n  \"date_created\" : \"2023-12-20T18:21:58.102Z\",\n  \"chat_service_sid\" : \"ISE928EBcc0A73dD4eC1E8DfAc631123Be\",\n  \"url\" : \"https://web.example.mocklab.io/488823\",\n  \"sid\" : \"MBaCFcC9BbAccEa3Cc37dD4F8EF96a8bC3\",\n  \"last_read_message_index\" : 4565788029560924726,\n  \"identity\" : \"8loho8venypycu607rg8la8r5iana39b5ok7zm0j5m4a8uy6wuu7g28p7daae8sdib02j9okbvqluifta648ay1tft9am2fanhz3cf85j86bd4t9uvs6imosfk6uu5ouczha1qf6c257e9z65yt7dqtpi1d3dh8i5gaaawv718he81qk9en36ycnnp2tv6ngu82g0r\",\n  \"last_read_timestamp\" : \"2022-04-24T05:31:11.103092Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACd69175e22F0d92Ada691d20058Dc0bBC\",\n  \"attributes\" : \"yz8nnvlov5cjrdlkxod7rnwzwiv278k7eo81yuuvwk2e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "294e08cf-02cb-4bac-a7a1-dafa9765e17d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.103353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "89a69f7a-16f0-4dea-a4d1-e8a4a76ceca3",
    "name" : "Retrieve a list of all participants of the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISa2E68e7d5E40Fb8D2FfB9Aafd4cC0f7c/Conversations/9mav/Participants",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/708141\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/930790\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/969494\",\n    \"page\" : 4154300126459401245,\n    \"key\" : \"mjihpl2tepih4\",\n    \"url\" : \"https://web.example.mocklab.io/490462\",\n    \"page_size\" : 7509123306344225179\n  },\n  \"participants\" : [ {\n    \"conversation_sid\" : \"CH3fdd22Af1E51ee5Dfc55D90dE29FDc3A\",\n    \"date_updated\" : \"2023-12-15T22:29:22.102Z\",\n    \"role_sid\" : \"RLADAE062FdE4A7040f7EBed165AbCaaF7\",\n    \"date_created\" : \"2022-06-17T20:25:26.102Z\",\n    \"chat_service_sid\" : \"IS6E6B9eF29BF23Eb34e3aCfF6aCed2fbb\",\n    \"url\" : \"https://web.example.mocklab.io/795047\",\n    \"sid\" : \"MB7aAFdBcB31CCD2dA58c2e8a6B4DBEDd5\",\n    \"last_read_message_index\" : 8256349490226750347,\n    \"identity\" : \"p7on3lczcr\",\n    \"last_read_timestamp\" : \"2022-05-10T08:15:11.102705Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC2B9Ebe4159e822310fbBf54AD9cdED48\",\n    \"attributes\" : \"k0trw53dcb8vfh9z5vayai3umnn7goctsaa22v6ehs33g3mgsmb5zvkkh14jiqlq8rkizty4usho0tjyxuz6cvrkylbbt6s7now2hat8ol9bntimfo8ipk07a862phzchfp7lktczi8gdhuc7znd5rnq4xmtavto3e4o395d10eiet7go376qv5jtwafjg6t019uruh0\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89a69f7a-16f0-4dea-a4d1-e8a4a76ceca3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.102942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "participants" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_participant"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceConversationParticipantResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "e6d1386f-8cff-4154-ad7c-b448b76cfa23",
    "name" : "Update an existing message in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISCdB234570Ab2C3BDD100bb5ACb59Ca24/Conversations/8qin/Messages/IM8E790bCAaca75Cc6421E1ab2E1A7471b",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH8817Eeb9c91f0EE5cEA2Ca59FAFd00DC\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-06-23T11:48:44.101Z\",\n  \"author\" : \"3k76s1xtpbx51mgtq\",\n  \"date_created\" : \"2024-01-22T23:54:46.101Z\",\n  \"participant_sid\" : \"MBd72aAAa3B9F2CAEdbbB24f7CafCDBBFE\",\n  \"chat_service_sid\" : \"ISB19Bf1a06aeC4564c0bE06F7cB4f6F6C\",\n  \"index\" : 1971093032811494042,\n  \"media\" : [ { }, { } ],\n  \"body\" : \"Aperiam suscipit dicta ex distinctio. Natus nobis explicabo suscipit officia. Aut molestias quis et eius nam.\",\n  \"url\" : \"https://web.example.mocklab.io/486098\",\n  \"sid\" : \"IM7046BfF00C9aFDD3dc67EBDCE4AFe182\",\n  \"account_sid\" : \"AC7651ceB357eC5bF94ffBcf1BFDedE5eF\",\n  \"attributes\" : \"rifnbk571chwawiy86rcln7vnu5cotlgiuna4g067cdu7nzem1x9rxfelkvtj8kg0rfugkjz91pt4f0vg80dmoq34uojfttug4jvavrdq5mm5mz03t9\",\n  \"links\" : { },\n  \"content_sid\" : \"HXce37f5E4DD3F81FbebBB1BE1C123b8D0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6d1386f-8cff-4154-ad7c-b448b76cfa23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.102224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "7ea91706-4248-462b-9ab8-281ba9865633",
    "name" : "Fetch a message from the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISbFc3dafABd31BE7dFB62f6F106626fda/Conversations/bikn/Messages/IMEeF7CF2b46CBbF8CdA71cdB08C2B17eb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHddCcC9Ed4972bE8adF9Cb5BC0Bfa5C58\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-04-12T01:19:44.101Z\",\n  \"author\" : \"l0807\",\n  \"date_created\" : \"2023-01-26T20:48:47.101Z\",\n  \"participant_sid\" : \"MB95dbcE8fFdBBDDf372A6174AC8F4656c\",\n  \"chat_service_sid\" : \"IS5bc8E2Ac19Df83Ac7204eaA6C3dD92D0\",\n  \"index\" : 4167591788719551700,\n  \"media\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Velit ut dolor nesciunt qui. Id ut molestias ab nostrum sit qui necessitatibus. Dolores et facilis qui odio.\",\n  \"url\" : \"https://web.example.mocklab.io/849405\",\n  \"sid\" : \"IMc4ef4B8505C52B1F6aF4dfF5e96CB4b4\",\n  \"account_sid\" : \"AC92C1eD6B0f2Aca5a4F1A27B94EaACcD2\",\n  \"attributes\" : \"7xniw3ah9xktpodfn91ocqz\",\n  \"links\" : { },\n  \"content_sid\" : \"HXDF510D0c61Eb8e1AAdaCDA2Ca9Dab37b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ea91706-4248-462b-9ab8-281ba9865633",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.101823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "f420cb31-9581-40cd-9246-33fdf0944d52",
    "name" : "Remove a message from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISad15a9c19bBDB9dBBaDF205fCADA4DA3/Conversations/e99r/Messages/IM024FADc8F3ceAcA4d5495f6dCde85C8b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f420cb31-9581-40cd-9246-33fdf0944d52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.101384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationMessage"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "43e90d58-7f8c-48b9-b518-27a328d81d00",
    "name" : "Fetch the delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Services/IS482A7c33A4eEAC148F087262CE276622/Conversations/r837/Messages/IM1c2Aa0Fd38ea5aC90fd6a1d4006bD625/Receipts/DY0ED0a61f0bAc01b1E43dD04CbdD0ddc3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHf3daa2D807eFF71Ccd08e529E49076e6\",\n  \"date_updated\" : \"2023-07-19T05:09:41.1Z\",\n  \"date_created\" : \"2022-12-07T22:27:15.1Z\",\n  \"participant_sid\" : \"MBeE6Abd45aF4Fd14fDc0aef0919eD8BdE\",\n  \"account_sid\" : \"ACbE4eda70b8666E6dcfA533fDf52Fd3bB\",\n  \"chat_service_sid\" : \"IS5133b8A1B83B6D26adcC467018cB49D2\",\n  \"error_code\" : 8730661254343282501,\n  \"message_sid\" : \"IMDaE90fCdae46BAeBD91FbA99D9C7e042\",\n  \"channel_message_sid\" : \"ivEc3F4ad94CC8B2778CD8597F6Adb40Ed\",\n  \"url\" : \"https://web.example.mocklab.io/526677\",\n  \"sid\" : \"DY361C307aF9bD5C92ac90D9A7e2a0bCd9\",\n  \"status\" : \"delivered\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43e90d58-7f8c-48b9-b518-27a328d81d00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.10127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "channel_message_sid" : {
                "description" : "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. ",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Message resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "description" : "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, ",
                "nullable" : true,
                "type" : "integer"
              },
              "message_sid" : {
                "description" : "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "participant_sid" : {
                "description" : "The unique ID of the participant the delivery receipt belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/service_conversation_message_receipt_enum_delivery_status"
              },
              "url" : {
                "description" : "An absolute API resource URL for this delivery receipt.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "7935eb9e-bf9a-45b5-a347-7afe5a244a55",
    "name" : "Retrieve a list of all delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Services/IS3facd037d6B1cB1bCBEa467ED2Dbd611/Conversations/12f2/Messages/IM06B12D8B183509Db8F3eB9f7dB40fbb7/Receipts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/472581\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/636245\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/463318\",\n    \"page\" : 6887582459280845483,\n    \"key\" : \"w8gl4n21x4h4uu4259gtynzqo4jfwn00zt81mj5924le6wtgsekbst4hsabp1tjrz50ac8k\",\n    \"url\" : \"https://web.example.mocklab.io/738139\",\n    \"page_size\" : 7214219558983742093\n  },\n  \"delivery_receipts\" : [ {\n    \"conversation_sid\" : \"CHE2c4A4f9acfBAc4B5Ccf79cAeDbDCA22\",\n    \"date_updated\" : \"2022-06-30T19:04:27.1Z\",\n    \"date_created\" : \"2022-10-08T04:21:05.1Z\",\n    \"participant_sid\" : \"MBFB1B339ccdd89DdA15731BB424aebA9E\",\n    \"account_sid\" : \"ACC84FcF8C714BC9297C4eeA0B4167a5eD\",\n    \"chat_service_sid\" : \"ISaFAF1Cf50B1a946340Df806839E05B96\",\n    \"error_code\" : 6341092100979802916,\n    \"message_sid\" : \"IMD492098E2BF7ABfb7a6eB7C0aC40a4F9\",\n    \"channel_message_sid\" : \"Zjd2Cd09D74117D41E7bc45EB2F4673Edd\",\n    \"url\" : \"https://web.example.mocklab.io/345641\",\n    \"sid\" : \"DY5b41c1Cda3DD4E1AcCcBA95b395B0Ca9\",\n    \"status\" : \"sent\"\n  }, {\n    \"conversation_sid\" : \"CHDf95aD18E1D8fedD0671f6Db94115B51\",\n    \"date_updated\" : \"2023-11-14T08:57:10.1Z\",\n    \"date_created\" : \"2023-04-21T16:50:20.1Z\",\n    \"participant_sid\" : \"MB0d6Ab8BC473FCDAb6E1aFEa944BE29A8\",\n    \"account_sid\" : \"ACcc3F771aA3b5b4dBF5feE09AE85DcbBc\",\n    \"chat_service_sid\" : \"IS73f3B2dF7a9eEDEbe1Abaa7b63c3399D\",\n    \"error_code\" : 4355573775775767243,\n    \"message_sid\" : \"IMBb8A7F3E9f8fD1d7F38D2fDCDD148F0D\",\n    \"channel_message_sid\" : \"ok6111289300acDF83bC16e2DF5cF955dD\",\n    \"url\" : \"https://web.example.mocklab.io/390810\",\n    \"sid\" : \"DY73400eFC371aa46BAbE8B5efAA1aA3EE\",\n    \"status\" : \"read\"\n  }, {\n    \"conversation_sid\" : \"CH8FbeC2498Adc17ecbBa3f40F06835A6D\",\n    \"date_updated\" : \"2023-07-08T00:54:07.1Z\",\n    \"date_created\" : \"2022-04-12T05:28:51.1Z\",\n    \"participant_sid\" : \"MB7Db448D1FD5bc1eCD44D41fA80DfAe9A\",\n    \"account_sid\" : \"ACA2b0D5f9d9e3b53cF3Ac9c5Bdd6fA8E0\",\n    \"chat_service_sid\" : \"ISf4F1097EDe78D6Bbd9DEc7295D3FC2ee\",\n    \"error_code\" : 6385053792297533092,\n    \"message_sid\" : \"IMDDd45E6717943dEc2a1c5E305cCA9Ac2\",\n    \"channel_message_sid\" : \"Ggfc28360Fb4bfe7dcEb197A6A3454f78d\",\n    \"url\" : \"https://web.example.mocklab.io/875148\",\n    \"sid\" : \"DYeD5E9acfc0fd54860Ef881C713684981\",\n    \"status\" : \"sent\"\n  }, {\n    \"conversation_sid\" : \"CH03F5CB1794DCdA34050b87BD8AE3dC5F\",\n    \"date_updated\" : \"2023-06-10T20:38:25.1Z\",\n    \"date_created\" : \"2022-11-12T11:18:33.1Z\",\n    \"participant_sid\" : \"MBFdCADee41EDf2Cb7770CB3dcaa4fb293\",\n    \"account_sid\" : \"ACB8AD9B3deb547F28C4DCC7BA60AaCfd0\",\n    \"chat_service_sid\" : \"IS31b687E3B5be6B6a13CDfbac4f4AcA64\",\n    \"error_code\" : 7530577706146088911,\n    \"message_sid\" : \"IMbBb0EA4FB42cddaDfFa1fC66C56ddE8d\",\n    \"channel_message_sid\" : \"hlf8dcDA315fA4cD3DD85E8a4d4cbeEb44\",\n    \"url\" : \"https://web.example.mocklab.io/391677\",\n    \"sid\" : \"DY4dCeeD1EFb4DeF4f09cC7960daFEcfff\",\n    \"status\" : \"sent\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7935eb9e-bf9a-45b5-a347-7afe5a244a55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.100883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "delivery_receipts" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message.service_conversation_message_receipt"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationMessageReceiptResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "4e369efe-e60f-437d-99ed-c2f39881b739",
    "name" : "Add a new message to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/ISc5a666ff60dFDb0c54bCaabbbcf8552E/Conversations/vxnr/Messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHDED61334ccc5d53DdD3BdCDD0e61A3eC\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-09-09T18:21:30.099Z\",\n  \"author\" : \"w7elgys26b46si3j2de4nt5x1q4x5uns0921tkc7srvlrhmknbfwdu2bn\",\n  \"date_created\" : \"2023-11-15T18:51:02.099Z\",\n  \"participant_sid\" : \"MB84C5d1aF5a89C95515818C7A45AffBc1\",\n  \"chat_service_sid\" : \"IS57224552ec5c9AFdFdcBAbC4882B4c08\",\n  \"index\" : 843961408838298974,\n  \"media\" : [ { }, { }, { }, { } ],\n  \"body\" : \"Harum eum officia beatae omnis sed. Nulla ducimus est rerum vel. Qui quos voluptas sunt aspernatur adipisci necessitatibus a. Quibusdam ut vero sed placeat sed explicabo. Unde et quam omnis ut.\",\n  \"url\" : \"https://web.example.mocklab.io/261050\",\n  \"sid\" : \"IM529ee20695DD7DD39d23cdEA6F8db7af\",\n  \"account_sid\" : \"ACC2385eF7E79e5E91F7BbB85f24eAB6Fe\",\n  \"attributes\" : \"k7zl9z2bccphym8049fahwbxml4v\",\n  \"links\" : { },\n  \"content_sid\" : \"HX0Be33D34FA8Bf005b2Df9A97102Cc775\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e369efe-e60f-437d-99ed-c2f39881b739",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.099766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "f39fb5df-5e4f-4798-9fae-b6eb573b0e84",
    "name" : "Retrieve a list of all messages in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISF4Ca1ea1abaaa37d88Bfc931d8E51932/Conversations/0z5n/Messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/661276\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/604693\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/473393\",\n    \"page\" : 3461134133922735712,\n    \"key\" : \"x2m9jvmjgczlfi095hiszc04rborw1qtcq9c8dynj8hwr1cjwfv1uex6jsobwqor0fr9v4azc28bft0zqpg6avoun9y19nouyvl8tcxdxv7liz1ddcjc3jd6hg3wf3r06hp2tdgvsc6ukfm5zmibvdb0qvh1i0o2gl9az63vhs97l8wzt5rywmbh5wq36\",\n    \"url\" : \"https://web.example.mocklab.io/218877\",\n    \"page_size\" : 7908223381425882527\n  },\n  \"messages\" : [ {\n    \"conversation_sid\" : \"CH368fde4BCeeB9B981AEBA6B2Aa207A37\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-10-01T19:38:30.098Z\",\n    \"author\" : \"vmlpve675hdrltwifit19o56k9p2vdr34yuq6sn4pzszx2vkgpwxyqsxk02nj04gj5v9jrwezpfe8tm76wot8jc3h0stzjvekazzufx5clioj5isjcgl2a6wjip9hthgn51f0fpxvlditmvwwjmuwke3do36s35uny7xc4ti\",\n    \"date_created\" : \"2023-11-03T07:36:39.098Z\",\n    \"participant_sid\" : \"MBc3aeD3EB05Fb05404Fe651dfb90663d8\",\n    \"chat_service_sid\" : \"ISdFdDEafCf476CdDBb4d9D8dF036dbC16\",\n    \"index\" : 6233880233512649488,\n    \"media\" : [ { }, { }, { }, { } ],\n    \"body\" : \"Quas animi ut. Corrupti iure et ipsa quia harum commodi. Ut dolor sunt voluptatem ipsam distinctio. Eaque voluptatum tempora numquam omnis quia.\",\n    \"url\" : \"https://web.example.mocklab.io/922370\",\n    \"sid\" : \"IM48BEBeA0eCDa8F8f2fFED7EC4842dCDe\",\n    \"account_sid\" : \"ACC1f5a5DC69Cd0Ca500aDe442851eFBDc\",\n    \"attributes\" : \"qrh6gjw2xy0mp\",\n    \"links\" : { },\n    \"content_sid\" : \"HXAFC92DdcCf2Ac570aB9787FaBED84D9C\"\n  }, {\n    \"conversation_sid\" : \"CH5fA78BD7C27EE0fE88D277E1aEc19749\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-10-24T21:34:48.098Z\",\n    \"author\" : \"h7subowb4zaol7cok6uh9x9v19u28whq85a2wkdk7eyap6g7gaz891dp7da\",\n    \"date_created\" : \"2023-10-01T21:07:02.098Z\",\n    \"participant_sid\" : \"MBF91AD01B02FB3913cEfdF1f25Da1bc8d\",\n    \"chat_service_sid\" : \"IS3bE5Fc195d362b5b1faDB7e444dEc8fc\",\n    \"index\" : 4539827059148523297,\n    \"media\" : [ { }, { }, { }, { }, { } ],\n    \"body\" : \"Nam non voluptatem. Doloremque harum commodi sed laboriosam adipisci aut. Consequatur rerum dolor ab consequatur reiciendis.\",\n    \"url\" : \"https://web.example.mocklab.io/833607\",\n    \"sid\" : \"IM04FF76bE3bff5ff6C262dE3432af0079\",\n    \"account_sid\" : \"ACf58C11c7C22a912c4f1EDb0d894BbfC4\",\n    \"attributes\" : \"ndtedmgnbxea158in7amc68cqnrkagvmdm4w0irr6c51g4kfwvtlrydv2mrxs3snbm8m4bk2cssklwa5n1em10b0ckqr7hxjznq62k7pfq472mcs3hv089k285vgeboxzrwixdko2o4v194f87fz5\",\n    \"links\" : { },\n    \"content_sid\" : \"HX664345443bffba22d2b8Fb9063200fb8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f39fb5df-5e4f-4798-9fae-b6eb573b0e84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.099285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationMessage",
          "schema" : {
            "properties" : {
              "messages" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationMessageResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "926d591e-05dd-414a-8780-44ea63193d73",
    "name" : "Create a new conversation in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISd1C6DAA8ec9E9A6F40e8F7b1ae1195fd/Conversations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Ms. Lin Runolfsson\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-05-05T05:33:31.098Z\",\n  \"date_created\" : \"2023-07-24T19:09:04.098Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS702A2FC0ceBcb1Cc8F0D6eCe60CDBe1c\",\n  \"url\" : \"https://web.example.mocklab.io/017681\",\n  \"sid\" : \"CHbaA450BEcFfFB25b3713fCABaa93CfeB\",\n  \"unique_name\" : \"Jame Lindgren DVM\",\n  \"messaging_service_sid\" : \"MGB5CA8FFd4ac5a7980DC2b1a0EB03ddb4\",\n  \"account_sid\" : \"AC0cdd7ABDeeae22eb86aAaB02ef27bB9b\",\n  \"attributes\" : \"ihk5t3i4kl3f98cce2wf0634qtzzgb0tmyz0x6c6s6mbday5z2tdzw3dzzzw70vmsq26kp7ebaeakvlk36bw3t4wp62rfd6grb8upkg28ip1i5clfru7j5jmrbvv1dz1db10s5abx08zzow36fmuyfo42gqofxnigll9q2ym4i3pcugoicb5b8ec6ni\",\n  \"links\" : { },\n  \"state\" : \"inactive\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "926d591e-05dd-414a-8780-44ea63193d73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.098338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "f934da89-c8c2-4e8a-9c50-5fef3ae21fbf",
    "name" : "Retrieve a list of conversations in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS826aAF5D96FbDEb8eb66f2FDeF05BDb8/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/782039\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/360258\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/785284\",\n    \"page\" : 4456342776455141471,\n    \"key\" : \"vrgbrnx71a24rlqkai1xbmp9sgb2q16j10keatqecujsn44diobu4a2xqu4yom3yf8t0i4k040ckioxvygfpdxj6bf3kdm1g7l0h88cqv6q1099hk67aqywuusswwyggzuvl8g3r7tk68o0grr\",\n    \"url\" : \"https://web.example.mocklab.io/758496\",\n    \"page_size\" : 8993515337177080279\n  },\n  \"conversations\" : [ {\n    \"friendly_name\" : \"Corrinne O'Keefe\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-04-25T11:48:44.097Z\",\n    \"date_created\" : \"2022-08-05T19:13:55.097Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISA7Ab84A1F25a7Ab06274D4f9E4B5cC40\",\n    \"url\" : \"https://web.example.mocklab.io/254024\",\n    \"sid\" : \"CHd2c223D7B6327451da3cdDfA0dE62baE\",\n    \"unique_name\" : \"Dr. Hector Kunze\",\n    \"messaging_service_sid\" : \"MG42FB3CC5db3FA1fBcBEA67dDa590F15f\",\n    \"account_sid\" : \"AC7Fd88725F8FF5Fc66F795e2F1ee210Cf\",\n    \"attributes\" : \"6f4tfjqkzky3oz1agss3xl7mhh42gfihbay5e9xp5osz5tlfty6m0sgi7015w336nr2n3e1xwjumkrv\",\n    \"links\" : { },\n    \"state\" : \"active\"\n  }, {\n    \"friendly_name\" : \"Dwight Johns\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-07-08T15:10:47.097Z\",\n    \"date_created\" : \"2022-10-02T09:21:01.097Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS3b73aFadB1f6CDCDAAacbfCF5d3E3d9A\",\n    \"url\" : \"https://web.example.mocklab.io/771124\",\n    \"sid\" : \"CHb48e0aF3F3DcAd6eAfDBe88e5A17754A\",\n    \"unique_name\" : \"Marybelle Hodkiewicz\",\n    \"messaging_service_sid\" : \"MG0B2A5d6fc7bf8cdAc5c7E7ECBf6b39bF\",\n    \"account_sid\" : \"AC155CfbD0e7Daf4bD6aDb4B81BebBBaB3\",\n    \"attributes\" : \"gihjuu725k1gpj61r4jgevcsr5zjnnhq3tuch2waqvxgwb6h1j8wj30uny7dw2hs9wgcg3lgyju0kub5onjt078dklnpwx13pe1cpyj46jxpw3yzjcko7a138q9nqdse9r7bmietu6gy1jqd7yvkz\",\n    \"links\" : { },\n    \"state\" : \"closed\"\n  }, {\n    \"friendly_name\" : \"Adena Jenkins\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-09-13T02:32:31.097Z\",\n    \"date_created\" : \"2023-03-09T14:43:45.097Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS05B281afeb7b63eCC606e0d0DaEecAe0\",\n    \"url\" : \"https://web.example.mocklab.io/971797\",\n    \"sid\" : \"CH8dDbCdbA0bEbd691EaCeaCac18a56794\",\n    \"unique_name\" : \"Chris Hand\",\n    \"messaging_service_sid\" : \"MG235BfFAaCfcAdD2A792713Ce7aad4b4e\",\n    \"account_sid\" : \"AC16b5CA9fcA53b142885457A7BFAfe57F\",\n    \"attributes\" : \"hrzmea32\",\n    \"links\" : { },\n    \"state\" : \"active\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f934da89-c8c2-4e8a-9c50-5fef3ae21fbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.097963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "db001f32-1dd2-4ae4-893d-0d89ed6a372c",
    "name" : "Update a specific Webhook.",
    "request" : {
      "urlPath" : "/v1/Services/ISAcda57Ce7E3Aea1bc8Af801705Afe9D3/Configuration/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"GET\",\n  \"account_sid\" : \"ACDfeBb27a65BEE0BEB7aD71253c1E5a0b\",\n  \"chat_service_sid\" : \"IScB1eAfDB3e8fC67A8423bBECE7da5e2a\",\n  \"filters\" : [ \"ke95snxevako3uxdu3w1geb489nflhyvmqhuenhaiu6chfo2bmf23rf72madc4o525t3rwt5t6u1j20uk2x4bbwyuifa6omw50x37wd132mai4p9y\", \"e6f27ochceh05t5zjt25vw2rqxde7qpx8jxhoocy6h6bmo8j5nhgyl1t8wibwy74ph9lfruqw24ke5aaytmxfcn7n4b7qs\", \"ktzyjp9uoerf1j15o3q7n59o6552f0kwr32jujiqx3bw\", \"lvqfsskyjphw6wy7ms2gcuo9bcd68b7arxtobh33rzqsww1y8eb9lstcnmpkwoou655svzz28plw4mqwhx8e5mm7adl309rztkzkrxtmmnrslav17dk0vj3pxmxdkem4sy621myjulbo5xy8oxzbpbk3n5qogfvmz6rbnno2jyy4qtpxzeafx3t8khou3c1\", \"enydc3xxliwvo1gvqkh14x5lpwro3o050zn4yqgu5oqmtee0f4f1wq9vwh732wtlt0nn01afwcxfyutio6bpgc3rspmrunwtc1rscrtzu2lhjvt81v4v5j0cd5n6gnaypvbhs8guf5xab0q\", \"3gfm8yaspx25ymdn9i8cuaokxpbdsm03y0lbg9benq83z9c3aex84oqgs02ll7ji3hivty7uzu284mva7xnhcaoi3edo4mbvtn3hpactd09xaqeec3vay3moyh5ci59ilmfulrgvq1che5rdzltblwob2ktpn97oi\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/833874\",\n  \"url\" : \"https://web.example.mocklab.io/752906\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/353400\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db001f32-1dd2-4ae4-893d-0d89ed6a372c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.096839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceWebhookConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/service_webhook_configuration_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "f3ace1d4-728c-49c4-96f5-85f019bb88c1",
    "name" : "Fetch a specific service webhook configuration.",
    "request" : {
      "urlPath" : "/v1/Services/IS7B0f223eF9cEDA25dcA90c7a6bD4dDaa/Configuration/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"GET\",\n  \"account_sid\" : \"ACCE4B7Df6076Bb01C6945bC7429DD29AF\",\n  \"chat_service_sid\" : \"IS7AAF3d7710e0B029e79Dd93dD5f0dfD9\",\n  \"filters\" : [ \"xbqru52aw792j40exlxyruewh7zr3jfvzlk4kh5ha5s9p5hudwe2revrdg96n0ndymg2jmcttrz29h8uzlbpxmx0046qv1ppw7wbqu6gdye9ew7o2ierfm1bq3tre32h63fdir142hi8hn7b0izlm2apjz24hydo16l47y7k8c9xhnf7024zs2mc3v\", \"g1zf3r04ihwhrmu8gav4nhulbia8bbkbni1h7dgb\", \"hel71khfih9n5kad6l0pfewp507zk06olyek3cl74x0fd29o5md0kaj\", \"zaky843muun69we5p610ak2fdbnzk7mtvz95mj7vz5ifo7kredyv15307blrt26q29axjfe3g0d6vwb5zdit5chbklx64m0hzbc1g3c69qq3krtrahg1bbsoj1ylq94bg7du051g2jnhcrg52m9w60g1nl84rgtj0h0kofph7g09mmp33yj1zowjajruanps7l9u\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/254423\",\n  \"url\" : \"https://web.example.mocklab.io/257098\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/737115\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3ace1d4-728c-49c4-96f5-85f019bb88c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.096519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceWebhookConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/service_webhook_configuration_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "2670fc6f-858e-4c9c-90ea-4d931499868b",
    "name" : "Update push notification service settings",
    "request" : {
      "urlPath" : "/v1/Services/IS1d2566d6E60c51646037cA9BBF78DCbb/Configuration/Notifications",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"new_message\" : { },\n  \"added_to_conversation\" : { },\n  \"removed_from_conversation\" : { },\n  \"account_sid\" : \"AC3eDdAFc4B00F9efB5c8BF8EC362c54A3\",\n  \"chat_service_sid\" : \"ISAd72f7680B43cCaEDa730d9fdC07fe91\",\n  \"log_enabled\" : true,\n  \"url\" : \"https://web.example.mocklab.io/105664\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2670fc6f-858e-4c9c-90ea-4d931499868b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.096157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceNotification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "added_to_conversation" : {
                "description" : "The Push Notification configuration for being added to a Conversation.",
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "log_enabled" : {
                "description" : "Weather the notification logging is enabled.",
                "nullable" : true,
                "type" : "boolean"
              },
              "new_message" : {
                "description" : "The Push Notification configuration for New Messages.",
                "nullable" : true
              },
              "removed_from_conversation" : {
                "description" : "The Push Notification configuration for being removed from a Conversation.",
                "nullable" : true
              },
              "url" : {
                "description" : "An absolute API resource URL for this configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "45181948-b0cb-4f58-ac8e-afee2e86e288",
    "name" : "Fetch push notification service settings",
    "request" : {
      "urlPath" : "/v1/Services/ISC2ceC1eACf4DaeCbB8c579b3Dd84B8fC/Configuration/Notifications",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"new_message\" : { },\n  \"added_to_conversation\" : { },\n  \"removed_from_conversation\" : { },\n  \"account_sid\" : \"ACe8fF834bf2351BeD9Ba96377a13F9B3d\",\n  \"chat_service_sid\" : \"ISEEe3051Bd4c0af8edDfE5d4AeD2eA23D\",\n  \"log_enabled\" : false,\n  \"url\" : \"https://web.example.mocklab.io/167369\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45181948-b0cb-4f58-ac8e-afee2e86e288",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.09599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceNotification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "added_to_conversation" : {
                "description" : "The Push Notification configuration for being added to a Conversation.",
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "log_enabled" : {
                "description" : "Weather the notification logging is enabled.",
                "nullable" : true,
                "type" : "boolean"
              },
              "new_message" : {
                "description" : "The Push Notification configuration for New Messages.",
                "nullable" : true
              },
              "removed_from_conversation" : {
                "description" : "The Push Notification configuration for being removed from a Conversation.",
                "nullable" : true
              },
              "url" : {
                "description" : "An absolute API resource URL for this configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "088e340a-eac1-4222-96c4-fa220b508b80",
    "name" : "Update configuration settings of a conversation service",
    "request" : {
      "urlPath" : "/v1/Services/ISc60BD2cd069CCe9D4aaeB9CE13Cc2B4F/Configuration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reachability_enabled\" : true,\n  \"default_conversation_creator_role_sid\" : \"RL80dAcAfa6eFDaffbBF443a58A4Abde6C\",\n  \"default_chat_service_role_sid\" : \"RL19FbeDbc520944CD89Da1EA12bEdaaBD\",\n  \"chat_service_sid\" : \"ISac18e4e036c0DAccbaaC68aB109b02aF\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/248406\",\n  \"default_conversation_role_sid\" : \"RL78f917cc3AeEC7eA967E95D5E8686dEd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "088e340a-eac1-4222-96c4-fa220b508b80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.095777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConfiguration",
          "schema" : {
            "properties" : {
              "chat_service_sid" : {
                "description" : "The unique string that we created to identify the Service configuration resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_role_sid" : {
                "description" : "The service-level role assigned to users when they are added to the service. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_creator_role_sid" : {
                "description" : "The conversation-level role assigned to a conversation creator user when they join a new conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_role_sid" : {
                "description" : "The conversation-level role assigned to users when they are added to a conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the push notifications configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_enabled" : {
                "description" : "Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Conversations Service. The default is `false`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "dd1d9ea1-4067-49d0-b5c1-9f003a6bab03",
    "name" : "Fetch the configuration of a conversation service",
    "request" : {
      "urlPath" : "/v1/Services/ISc79256993fB631eC93efaF30efF1C371/Configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reachability_enabled\" : true,\n  \"default_conversation_creator_role_sid\" : \"RL72fcc845dA2C0068e4b8642b9b8934A4\",\n  \"default_chat_service_role_sid\" : \"RLD597CcE1eeA7469E4C26bF14Dabaa1E2\",\n  \"chat_service_sid\" : \"IS464FcE6b4a868a63B7cf52DBEc5eD32F\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/398088\",\n  \"default_conversation_role_sid\" : \"RLB900FfABD4F40e5f7Ae2f81BfDD63a19\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd1d9ea1-4067-49d0-b5c1-9f003a6bab03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.09559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConfiguration",
          "schema" : {
            "properties" : {
              "chat_service_sid" : {
                "description" : "The unique string that we created to identify the Service configuration resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_role_sid" : {
                "description" : "The service-level role assigned to users when they are added to the service. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_creator_role_sid" : {
                "description" : "The conversation-level role assigned to a conversation creator user when they join a new conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_role_sid" : {
                "description" : "The conversation-level role assigned to users when they are added to a conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the push notifications configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_enabled" : {
                "description" : "Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Conversations Service. The default is `false`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "6f60dc7a-d200-433c-8bcb-6c0282849c4c",
    "name" : "Fetch a push notification binding from the conversation service",
    "request" : {
      "urlPath" : "/v1/Services/IS9cb6c5fbA7fbAB0Be57cDebE9F8F100B/Bindings/BSa9fd2afa099A9FEFAee2ec92e8B8Ea51",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credential_sid\" : \"CR0dc2B6Fd51C948d2fD05E5aEDf9F6b0b\",\n  \"binding_type\" : \"gcm\",\n  \"endpoint\" : \"6mh60ckhpp2xedlsm0j1u5\",\n  \"date_updated\" : \"2023-01-19T08:11:23.095Z\",\n  \"date_created\" : \"2022-08-04T12:02:21.095Z\",\n  \"identity\" : \"gg2ye4hf8w11f97l3ktuem2j0cvi4ptd9ml18jisfsxgvfj3yxiq7oh2vfkpem5iraadiljyb7byw0rb06v0qj2oqvd1bk7uyoo77h892hntxc41923iaewei9imu8o\",\n  \"account_sid\" : \"ACbD9EdcaFAfcfEC1DFecE4aBe6EB8c907\",\n  \"chat_service_sid\" : \"IS6ecbD9b3D3ACf716c4Cfb9f3ead3c4fe\",\n  \"url\" : \"https://web.example.mocklab.io/649084\",\n  \"message_types\" : [ \"iymt23pxuryhyufnhbmsfzaofgm8yfmetc4i9n27ix0hhiw8jp6e42mbpyhm62ddbz0ima0gbtops4b94fbtidtjayou\", \"holwiz83iu3m1rv38w3d1t7znkf85c40bn2dwu807ouewqo6cml1mfn5su502rj5pqh1th931ayzkj21yex64csgl6yqai5jsgcg5c0mildzxhhkbkckrbjg6wrivopoomh\", \"k887uji04dr3hshec3i3ccrpta17xg7yh0r6zq7eahgw0ovwrj9oexhm7yvsxy43wp9fw2mm1bdxgesmye4ar6nfy75hvdezfrzvxs86crgdt00osgehxetmlfhds95s9yl5yckgw12x378upe9c5y7q0c7xbieczvmazuyqweu8yim\", \"89l43t2wheangjpwg9hsiswrv0zarqlbmzgwd337u4bjnqj9ir0efgzoe2kp7n4bk29u2mg88n5u2bslmjdwxap9gw3wpsucet51euoygctj01uw0aml08enmg7c252up\" ],\n  \"sid\" : \"BS3A97De2F207D8f346fAa6A9A868e424C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f60dc7a-d200-433c-8bcb-6c0282849c4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.095341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceBinding",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this binding.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "binding_type" : {
                "$ref" : "#/components/schemas/service_binding_enum_binding_type"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "credential_sid" : {
                "description" : "The SID of the [Credential](https://www.twilio.com/docs/conversations/api/credential-resource) for the binding. See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "endpoint" : {
                "description" : "The unique endpoint identifier for the Binding. The format of this value depends on the `binding_type`.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more info.",
                "nullable" : true,
                "type" : "string"
              },
              "message_types" : {
                "description" : "The [Conversation message types](https://www.twilio.com/docs/chat/push-notification-configuration#push-types) the binding is subscribed to.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^BS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this binding.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "078c29bd-735d-4f5e-969f-f8f192bc067b",
    "name" : "Remove a push notification binding from the conversation service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS649BA1EA745d2bce3aCc2F1baAA799CF/Bindings/BS4FbbD3b7eac589A9FcfeA675927B3ee9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "078c29bd-735d-4f5e-969f-f8f192bc067b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.095028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceBinding"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "00d784f1-7b07-4de4-833f-a0777baf8166",
    "name" : "Retrieve a list of all push notification bindings in the conversation service",
    "request" : {
      "urlPath" : "/v1/Services/ISA2f4F1a066B33B773dEE9Aca5EFfE3C7/Bindings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/798859\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/847256\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/383514\",\n    \"page\" : 6200930179643015084,\n    \"key\" : \"v6d4c3615j3r48t3fjjn3cyk5ri4axanftjab617dhgi5xisu7322125vjv8z\",\n    \"url\" : \"https://web.example.mocklab.io/199389\",\n    \"page_size\" : 2640995845450275406\n  },\n  \"bindings\" : [ {\n    \"credential_sid\" : \"CR540bdDE2332cf0a18F2dD55167cBbbEC\",\n    \"binding_type\" : \"fcm\",\n    \"endpoint\" : \"hhwdd9quvp31pepgrvx03rxknb3dzzb9ybkvnuxx1z0p0t13bpsb6aoc41jgbujzpj77j40eats0pht0\",\n    \"date_updated\" : \"2023-10-07T08:37:18.094Z\",\n    \"date_created\" : \"2023-10-27T16:53:24.094Z\",\n    \"identity\" : \"edls4f92arpf96onbbd9ms2dqqdvfu9ensofqakflnl4eya1fls9c3c53y7qvngnsjv1emi4snpymo7q0ir3r95o18ncznkzba4r47plkxiw4wjdbg02hpnhnydsgz99e9a0b8qmg4jnhkh439vuy8wv6ni\",\n    \"account_sid\" : \"AC5DdaaA2b2f31a876ee99d4bB3A6F2f2B\",\n    \"chat_service_sid\" : \"ISD32DE80CdEA99DaCea23bFEfD9E69d40\",\n    \"url\" : \"https://web.example.mocklab.io/316690\",\n    \"message_types\" : [ \"spjnor1cw25mjrxqx2uhv19llwv5i9hg26k7ovsd33h904nshrv04xndzfflo5nzbrt2v8f5a\", \"glmraoc2pm7gil0hmo21n3f7kozv9182x66a6njuvn5rajzcj2x0m2kdlzz7u1c00tinh1gvp1r1x9mu3r7flbxclc5wxrefoabqtinbfhz5jrgv0mrq0tvz7unhcfdjvq7qk60af23xhd9cy05l0k9acl7gloat297ktk863983ik6824wrz4s\" ],\n    \"sid\" : \"BS8A3f6EEFEeaab18e9bfcb7C8BFEda30A\"\n  }, {\n    \"credential_sid\" : \"CR2633D3fefCcdEc857D798A3a8ABd64b7\",\n    \"binding_type\" : \"gcm\",\n    \"endpoint\" : \"t7394v0vij94ntjskpsa8ug0jaacaxboie5mwqpaaurebn31phav050xk1okgyql14rptz4e5duan52u6ayowsqs2pulu49\",\n    \"date_updated\" : \"2022-04-09T12:46:41.094Z\",\n    \"date_created\" : \"2023-10-28T05:11:53.094Z\",\n    \"identity\" : \"cf4jvxajmpy0qrflsty1o2ocemf7c2pwrwidxkxwg2skqftjp3gr5eygs0uz50xdq41o9abf32uyt4bof28gy79wojt0bbdcoa3dkak5m66378wheh2u7l0wbozuy1ooej6g8ab5e52bo80tfhyrwcn8xnz979350f84jlgjnbs95kkse\",\n    \"account_sid\" : \"AC1E08fc7CC1A2Fae1C4eAffA7dFBC1fd3\",\n    \"chat_service_sid\" : \"ISAcCFBf6f57dadEFACEBc0Eac92eee94D\",\n    \"url\" : \"https://web.example.mocklab.io/810405\",\n    \"message_types\" : [ \"e6e4hb9b3js9\", \"hjnf7caorea17iusqg4fyemqxrnrhtnye0ofjo49k5d5im3wqrgu9cj8dj79gl7lt6yb54phk7meej0w1ppzjzjjakmqsgp2a6l2xo333zprw57b5rgq6c4q4xi9e2ns1rmlcgjw26nubkxdll3nuop0wu37ebmz7igo6ndifja\", \"2c0nnsgosze82d69wqvyzqp9x1bc3ehoqhdl9ql0im18m8smbly819opxy4v2fvjda0ilrrqbxlf1w3865yiux2udkekhfggqe22crqbo4\", \"trnla6issi9nx792yfnpjen9xdhkwobqowtzmlpq5jzzo05dr255h7k8\", \"d9ia0wb1q7856yh2m0pb8\", \"b00cvvh1cc1oqtmvplabbjlsjtshrxmcyfuhyecfi69gq77xnvymds46v0nd60gkretqwawlq44xgz2ooec7jgupn6u21m1vynghnkmv8tw2t1z7paig8gn1tx07lxz4a25xcrgwp7qwylafdry8\" ],\n    \"sid\" : \"BSEBcdfeC0c4efF6F12DEdff5Fd1cC3b36\"\n  }, {\n    \"credential_sid\" : \"CR91E153D6fbDAb2E0A83bfaf85e8C4eaD\",\n    \"binding_type\" : \"gcm\",\n    \"endpoint\" : \"h45t7yf8xi9b0cigt06z7ttgrfaghzdnz0fm6q84pv372hmt0cgi3ogrwilycw8dlsnp01npkpgb0hlvw1fm43cintxhaklr0k0bxhcin8ve307yh0lqaa7ff1lxewqdqsoi9dj8yky557536e7\",\n    \"date_updated\" : \"2024-02-04T01:20:19.094Z\",\n    \"date_created\" : \"2023-06-17T23:38:04.094Z\",\n    \"identity\" : \"xh6uiurvrtxyhzl7iy7wxphyh9f\",\n    \"account_sid\" : \"ACf5A71c464f58EFeAdeb610A8bb82BD94\",\n    \"chat_service_sid\" : \"ISe6Ad33BADd9Dfd6eFCB36bBA68F5fb94\",\n    \"url\" : \"https://web.example.mocklab.io/760399\",\n    \"message_types\" : [ \"ubm3qky2l8zmn0b\", \"bc0vmazmaufwsu8d0f4z8hbj34tply0hnlc7df8yp5chr16abmmdejkhgbo6wkib69iufmbvz4we\", \"3nod20ri3g105muhn2z27zvlt564lh3n16l0kn\", \"udtmh9owtovcxccx2b71u6qjbh4no6s6\", \"jjdyois6ejf3w5da8ts5\", \"actmczpty2wjmgw29v71k4h6zjg5y0nsm1slukrqjbzg3j38vu735nakvd0jmnlhzrl3ox05079qczip116ebvzapsx949drzrrmbme78hd\" ],\n    \"sid\" : \"BS2822bcFf9dcec4CcDEEDB5c134CBdFAB\"\n  }, {\n    \"credential_sid\" : \"CR9EE9EcC0fCae08A8e5EeFee3A4Fd011B\",\n    \"binding_type\" : \"apn\",\n    \"endpoint\" : \"v0y2hj90w7iqzdrhaz5xig0d2v0nztj2pgw1lkzdvw929jffzddkrmcdodxunh66i1shkyfyzch1gy96lmsyp10k6r91p8hx2o0zflzbeaaynuyq9fep\",\n    \"date_updated\" : \"2023-05-23T23:15:52.094Z\",\n    \"date_created\" : \"2023-08-08T03:17:45.094Z\",\n    \"identity\" : \"ccvxwvr3sz2rzsuauzz4dn4w3joy046ov1r5s5h8oe8egwbppoo51nlzv7gc5uorryao1p2q55mgz0t522e2bo0w6uyva049qflwyuwkrcpd2uwipey24w945bvqabr2meui3atmvko8sn4w63q2ooku66lqpfxbmu7xu7q1z8fev7t0hhcuec0aq8ajh19ut43r4n7\",\n    \"account_sid\" : \"ACeEdb906ceEabA82eeBabc8bCa9D20afe\",\n    \"chat_service_sid\" : \"ISD1E4cADd6AE9082754FCdFFe40dd7675\",\n    \"url\" : \"https://web.example.mocklab.io/535440\",\n    \"message_types\" : [ \"4t9gp5t7h10pwbcd34sbck1h2keh2yz2ix4m2w4ytkv1pedcboarhwrd635my32zbg\", \"fmgn5g5s8eyd2xxkgk10prl3m9memp46hupotyjei58qpns00f6gsxa67njqew10bxf0tw8k1g4i3r716s15hkp3d8cf758pjcuf3uttpjnui0j7g7k2eqx9ensjgu2gjj6kdgi1wvji81bwv2q5x9u8u55cim2p45n\", \"55xd42e80yiv9dv195zfe8usj3fs02lq9hbpg85bzb35owhvlj1a7c5b7sgqx2o499eask1s3hylozmlm6macxb8hsa5d4zrg12gpzr8c0bnhtcod4qhiz1lizzb5\", \"f18xqkwmo1di87948d39hmexqx5r0h8r8ak51z6fojm0qq405964v\", \"3rskphq4zi6f1886ngido3igyxapbrdkgx5xjr88bds1zz9oift\", \"62y170bwj8z393x6pt49fxzb3wacqufl15ln6r09001bo0t36zff5ijh48njqzwg9os1rx8t\" ],\n    \"sid\" : \"BSCecfcd4EF9Ffb37dAFC7131056a7a553\"\n  }, {\n    \"credential_sid\" : \"CRF528b3f0CFF99dA9495CFB4ABd6ceceF\",\n    \"binding_type\" : \"fcm\",\n    \"endpoint\" : \"yw350s1egst8djx4zwg6gl39ny1jotqz77wupblmhax2xvtukt6l444yxp2iwjb6aj0odvkqp3lut4cxhvlx1e2njqyldxq8meymjwbrobem8j5rq45tlqqm7noecq8ql7odr5xel3q9ngprjlit2uo8\",\n    \"date_updated\" : \"2024-02-19T23:56:16.094Z\",\n    \"date_created\" : \"2022-04-07T07:39:21.094Z\",\n    \"identity\" : \"dkpm20ivgufnoh7eukdf8va49kd91or715trt1bnqdt5ncootqvwaxviif9psa5w8dvqn5msk5gp7ihzs6ta5npz2l6nxl5yt62jwngu65j9a3pccc34h6nfqpky8emz560eo3ck3fg42c8y5k9hicattcyqdgswjmbgj167gdpal8mqe5qbc09t1rlrc8fcons\",\n    \"account_sid\" : \"ACa377baE25C68D6ce8ea5DacBAEa4a9EE\",\n    \"chat_service_sid\" : \"ISb00e1F7c0cD6fDE8343eca3e4eA10305\",\n    \"url\" : \"https://web.example.mocklab.io/669815\",\n    \"message_types\" : [ \"aynp59iwdj1qhxlk86mnjz5o6rgp514c0xarjr27ck8axtkcp8tbbay20cbgbobryonn7lmls9vs931zt9tb4wnk8gz7u3rqdf7gqcshes5q5jwpczmuu97zl31vkdfb82hf0o7rqkw5xhx20pjlht6tc1k0rfvdjeyj1c7ryyh3x05ib\", \"19pi43zn5ueh66x8djgsct\", \"vpymctmlby3ppkoxe404gcp11wnofqz3v20v29zy4w3fr2jt5qtjmm98syjz2l234rcytnfs7cev88ypdohaw7llj9je9jaym6aa2q9p3i4yiuh71da1\", \"idewm318znvnoi97l9r1ssdgu6runp4rtp3bjo3w7qsq0ej46xu5n5i7cfafn41ag6977rnf\", \"wj9vg3dqfjfvtkflcn6hp3ueqxpkmmv1x8l7kphd95ha47vw80yc99wi8v71m4fnvntolhv8x4kqhxnexno7dfxsffl\", \"bf93hrf2k8ngfehvk54oshrdk7dz8ef9uhetsisys93\" ],\n    \"sid\" : \"BSdF3dEC8CF8CFD0B2043708D9Ca53E927\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00d784f1-7b07-4de4-833f-a0777baf8166",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.094977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceBinding",
          "schema" : {
            "properties" : {
              "bindings" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_binding"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceBindingResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "e9430268-128e-4ee7-9e20-4b42d614244f",
    "name" : "Create a new conversation service on your account",
    "request" : {
      "urlPath" : "/v1/Services",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Mr. Kelly Bradtke\",\n  \"date_updated\" : \"2022-10-25T10:36:29.093Z\",\n  \"date_created\" : \"2023-09-10T12:00:07.093Z\",\n  \"account_sid\" : \"AC0a8FEE4Dfd4AcC8e7Bdf1591E8fae3ac\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/927019\",\n  \"sid\" : \"ISccec5BEeD0fFd91fBE1d41F202bF4FaE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9430268-128e-4ee7-9e20-4b42d614244f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.093673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this service, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access conversations, users, roles, bindings and configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "30f73a5d-f287-4cb5-8919-766262d8d64d",
    "name" : "Retrieve a list of all conversation services on your account",
    "request" : {
      "urlPath" : "/v1/Services",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/141542\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/415194\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/099053\",\n    \"page\" : 780682903355200363,\n    \"key\" : \"xdwbngws8dvkoy0apao1jc9ac5r4we35pwu0vjmdpisic9agstvfgxufayoul873oojq8ifcxgiq2a8o72tfsbk0l2w9lpcj8bhudybsw3l\",\n    \"url\" : \"https://web.example.mocklab.io/765231\",\n    \"page_size\" : 4750242469855839144\n  },\n  \"services\" : [ {\n    \"friendly_name\" : \"Johnetta Greenholt\",\n    \"date_updated\" : \"2022-11-09T10:29:31.093Z\",\n    \"date_created\" : \"2023-11-09T05:32:58.093Z\",\n    \"account_sid\" : \"ACA53fdCa6B51fCc2E10B8ea355789A57b\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/967533\",\n    \"sid\" : \"ISe7aBFCe8aCb3bccAFEBbc02Fd1eB16DC\"\n  }, {\n    \"friendly_name\" : \"Bryon Boyle\",\n    \"date_updated\" : \"2023-07-19T19:17:34.093Z\",\n    \"date_created\" : \"2024-02-21T18:21:22.093Z\",\n    \"account_sid\" : \"ACAEAAe0Dfbe4fD8dFd70a30FF9fAaEb2d\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/239755\",\n    \"sid\" : \"ISf6C1EEA3DDcB851Bfc673D744Abd614e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30f73a5d-f287-4cb5-8919-766262d8d64d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.093457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListService",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "services" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "fe43fc95-3003-4594-bd0c-81cc47e9f2da",
    "name" : "Update an existing user role in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles/RLbAaD5514abA8DC7EE34616AEAa0cdcDa",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Danial Breitenberg\",\n  \"date_updated\" : \"2024-03-22T08:11:00.092Z\",\n  \"date_created\" : \"2024-02-25T06:54:53.092Z\",\n  \"permissions\" : [ \"rsayrdbbd0bxt4m836j6xdpdp9yhqv4fqomdeeljenyj3d89j3q5lfj9qmp0o0td14ua844gc30c60h5mfmp9i0xv2bo05uos0f9czgwswloo9krfxbnzhcpf5ashm8kg90x3ieqh66m\", \"h906ban3s9us3w9fw33t30k2fbrum4h2hxx3mbduq6gp27qi5mw6jgwsahlwe39vgl8fgr1tvssew4u2r3am8hxmnjcg0sr0mw5ppusd8q6h3mmo2ubf2a\" ],\n  \"account_sid\" : \"ACcf4DC02B0ca2b8FC8924eB88Fefcd201\",\n  \"chat_service_sid\" : \"ISF0DfA0D7ADebb27F7bebBB2Da9bfEBF9\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/753074\",\n  \"sid\" : \"RLc0A0bD8Ab2162b128fFDbb7Bbcc8E01c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe43fc95-3003-4594-bd0c-81cc47e9f2da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.092738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "d715b18c-2f53-42cd-bd43-7476b5fd3163",
    "name" : "Fetch a user role from your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles/RLabe5cfDd9FF0e545fB194e92B0C1EC50",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Miss Thanh Kertzmann\",\n  \"date_updated\" : \"2023-05-14T11:56:15.092Z\",\n  \"date_created\" : \"2024-01-14T15:46:11.092Z\",\n  \"permissions\" : [ \"r7edqoep2g4mdmz52p2e75w2f2mhpgl2lj1emsbk5qqo0a2f42tz6831kuyz5sgh225bdogd4ppjmulofcbnldg3b9a12mdcrk3ylcumcfccz0uq7w1x800xxl3i8jyq0q6kbzsotjcrf24ic9vle9599glrujydj3bsg\", \"hqcpiz7zsp1kf7rbmmrndkkhdm2ndtgh94eny4ijc4ztbvo1yd7g67hvcr2c6kjb8fkrooxrngi8b3lfdhszoij180laayg3x72fmjcd56l43v4il1fpza0l64afrixu4nv8m2ncza1jz4shlr8newj\", \"3ujek8c26qzs13raf14x7jwm0yhfna1twxz30smy9u55rqdw016ixlk0r9b5cmvv1b5cx5b3pt2xsgqlfy9o2mph1ll9ly977\", \"dhd485nu9qpwyt9eau2jxmgbdjfn6eq0v0h0fu8i50y5b0vcb19tlnd5puk1pw4zzfmy9cl32twpoe2mcprl2bcfbvst\", \"b0j2ezcypokpqdu7vjak92v3bbuus7v6zrmk3lmsh\", \"ssqmr5sjiyzhaw8gu7i61vtjw7bwd3phqdfdr3ly74hbftqzpikoo9zwxb6bmeldzg2j9f92yy35o315s9fifmv87zs3j9nd\", \"48er2mtbwymf13smdrh68s196aigk8eoada4nb2erqhensv0spy6qvqasctfersszh4dh05tp3x5gtsn0tj0krk459awq9uy7eixg2qswmt8b5lm1crw\", \"kwqfltbcantyzi8q9hmokpi5yl3wm2agh3rnkrbab3jen4nbzhygaeaeo90uyy5a8ag8mkj0gpyv3e3k8cs70w4ln5o4s7jc\" ],\n  \"account_sid\" : \"ACCAA7Ead49aacEa00AdA8ABDeE8DB8e2d\",\n  \"chat_service_sid\" : \"ISC46bD7dcd0d58e5Ccf3e495DB3EAC7B1\",\n  \"type\" : \"service\",\n  \"url\" : \"https://web.example.mocklab.io/221939\",\n  \"sid\" : \"RLbab2Aa9a2833d37dF960De52fca172b3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d715b18c-2f53-42cd-bd43-7476b5fd3163",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.092488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "4d6dfd38-dbff-4db6-8343-4c44b113707a",
    "name" : "Remove a user role from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Roles/RLE119BA5ed6f6F2bfafDE82b07ec88DEF",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4d6dfd38-dbff-4db6-8343-4c44b113707a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.092208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteRole"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "9c32eda8-7edf-493d-a952-a5090850a273",
    "name" : "Create a new user role in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Mr. Shane Franecki\",\n  \"date_updated\" : \"2022-08-14T04:02:17.091Z\",\n  \"date_created\" : \"2023-06-18T05:33:53.091Z\",\n  \"permissions\" : [ \"k0a0yhad03demt14egxmnz4i4xuz1b0e68b71iegucxay52749a01xlugp3cp36ta7dpfr83o8ftzih0saddhyw1pu2iky802ffw1\", \"zjs5pepk8sy0iy8v7tdx1c6nxii5z3r8ofn3v4f71cx7q69a6f47gfs6edvdmo54hn570nqd7y8kmgr3nnup8jh6z7pp38ws7rycnrqw3hj8pcsj6de29zdy704ii8rxlkx2a4n15aljp9ej4l2jaqk6vdyfz8fck5zmoh6gozagk4n9g0381jz\" ],\n  \"account_sid\" : \"AC79eE2Af16FEDEF8bEaa1eB10e2CcBabd\",\n  \"chat_service_sid\" : \"IS6C6BDd7544338AA35fA46f9dede8CFEB\",\n  \"type\" : \"service\",\n  \"url\" : \"https://web.example.mocklab.io/755704\",\n  \"sid\" : \"RLB8F2AeFfD331A5a1FefBcdFCb1907e5b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c32eda8-7edf-493d-a952-a5090850a273",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.092169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "86b8d264-26d8-4ce0-a349-dcb3bf030f63",
    "name" : "Retrieve a list of all user roles in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/230923\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/542686\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/295540\",\n    \"page\" : 5389504897198376789,\n    \"key\" : \"ctfc8n0jd7gi3agdnsmg183howyhswybeyaoixuq2uzyaiwwolob0hreqysjtxueoxnfgxvlxd1u2ogpwr9qzgsi7yb\",\n    \"url\" : \"https://web.example.mocklab.io/778536\",\n    \"page_size\" : 7201985762190617659\n  },\n  \"roles\" : [ {\n    \"friendly_name\" : \"Norbert Hand\",\n    \"date_updated\" : \"2022-07-17T09:47:00.091Z\",\n    \"date_created\" : \"2023-11-14T22:24:46.091Z\",\n    \"permissions\" : [ \"cgee9iulw15t9a8yar4vdj4dcyg727funlzhz25jx3alj9s8h8pnmvi6krjfo53e6juwjr6k9p6zxekq9iny06x4lm6bgb07wh8k\", \"fxi3232bcyx4impp6sfwyzl9mkfyw3m25pul20uhi6zr3euplzb167vaxua6a961ih0d4gwsr\", \"gc68rogeljvuixfs19u5fkie09bbubgbhayarykz197l73y2n13wbfs0pjk0ks5cpb8ahidkpj\", \"lm0rbcum8sep5y0y9vfc25xbcdmnmi6lqjdfe3hjac3evdn0nky4j4xqhhdk8ip9d18j22oxy6sszez7kfp1i9szj10km6z46jxypj7mppf78ykrxutjfu\" ],\n    \"account_sid\" : \"AC5DE3b5bdd32E920ae5B5cc1BBB2cD9E4\",\n    \"chat_service_sid\" : \"IS1E4A2ECc98c96a9C0673A9ce4e3ea38f\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/023162\",\n    \"sid\" : \"RLe27EDA9A8FE99D5C5Ac31aC9F4B3bcbB\"\n  }, {\n    \"friendly_name\" : \"Ms. Jamila Douglas\",\n    \"date_updated\" : \"2023-11-18T12:01:04.091Z\",\n    \"date_created\" : \"2023-05-15T18:36:29.091Z\",\n    \"permissions\" : [ \"h2iodi4sf5oigw119cwkk3n168dnhhvx7\" ],\n    \"account_sid\" : \"ACdc2aAf2c6A2E90dA2824c0DDdceace5e\",\n    \"chat_service_sid\" : \"ISAe3FAf6aC426bfEEA1552bA0eafC671e\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/978639\",\n    \"sid\" : \"RLB52ffDBcE29fda6ad2b1bfa95444cf2f\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86b8d264-26d8-4ce0-a349-dcb3bf030f63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.0919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListRole",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "roles" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.role"
                },
                "type" : "array"
              }
            },
            "title" : "ListRoleResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "d50890ab-57e4-4a0f-a620-0c107b40a812",
    "name" : "Retrieve a list of all Conversations that this Participant belongs to by identit...",
    "request" : {
      "urlPath" : "/v1/ParticipantConversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/333397\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/325836\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/893449\",\n    \"page\" : 5535720573646455983,\n    \"key\" : \"868ql5xuz3u4lf33kqyswg4gr47t74gdbhy7mgto0jtlpzn7cmagpyqd7kje64hpsilzk6j5olyz3gq8wm9x4dmcweahgegcoqpeqjlvzz9df7qqw2ucb571ftlnb92\",\n    \"url\" : \"https://web.example.mocklab.io/995270\",\n    \"page_size\" : 1883802396168605625\n  },\n  \"conversations\" : [ {\n    \"conversation_created_by\" : \"n9gh36z4l24dn7w12wp1o4q\",\n    \"conversation_sid\" : \"CH4CDD1A8C09f8Cf3b5DFb5C50D9030E51\",\n    \"conversation_friendly_name\" : \"Joellen O'Reilly DVM\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"r5od43dq27fpeqyv5qy8tgwpmhp35jd13nukhl7zcc4z0othzej84l\",\n    \"conversation_date_created\" : \"2023-03-17T22:48:55.09Z\",\n    \"conversation_attributes\" : \"sefvhmoiwgvg8gdul6xuj6j2840eeufo5rnyv1c5zfoqsqxbv6l9kpzn0gmypad5v2lsglma\",\n    \"participant_sid\" : \"MBacf4DCeb6e6A192F8fa8DA03ADefD1ab\",\n    \"chat_service_sid\" : \"ISfAc1BDC8C7E01cFfD840f2A8dB8f890f\",\n    \"conversation_date_updated\" : \"2024-02-27T20:29:33.09Z\",\n    \"conversation_unique_name\" : \"Barrett Wyman\",\n    \"participant_user_sid\" : \"USEd231a6C7CbFaA63aC39a7f3E87dA7aA\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACE5A222D6EbDD94dcfbcaBC28a3Ee9dE9\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"o1ztxoysnzkdbs3kvm1p0ovrqxcr8gvseyltnjlelm9ndtt1dpwf4uf6kzu23mul4vt9i8xj7loi7pe30pdb2shusdwvxd54y91uxsnarx5nnl1ghci5v60ijdi4z2xxv2vrsingrjx5g4fyk9lq6im09tb14d60p4hc88060mupebv31gcxbyz6u0pw1dad\",\n    \"conversation_sid\" : \"CH8527a2161abE53B878eFa9a9e9692493\",\n    \"conversation_friendly_name\" : \"Abel Prohaska\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"3k6fc\",\n    \"conversation_date_created\" : \"2023-07-20T19:54:40.09Z\",\n    \"conversation_attributes\" : \"7y4d9ropusctnnz9a6r8msd3huceihnmxshvkf3u38l8s7ph2qt3hewgv8kzl8zj8jthv9a7zp5f22s7\",\n    \"participant_sid\" : \"MBD4b4Cb2aD0fb9f5cd70aF95A7E4dbad6\",\n    \"chat_service_sid\" : \"IS3FA86bdC106B7760B41b45eF0c9B4B90\",\n    \"conversation_date_updated\" : \"2023-12-24T00:00:01.09Z\",\n    \"conversation_unique_name\" : \"Sparkle Smitham\",\n    \"participant_user_sid\" : \"US4Db3ABCEc6Cb896aCDfB5082C7ceFeF4\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACE470ec08Eb3Db6BcA76BB7c1e0E2b53f\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"vlve974uqf483kkwwfkflcy4r14cen8arnnm325rpq1gxk909ie6j9ik95hoyui6acfxqvao6k4hs3eda1y7o8br0qqvebzpgbgwevxt3dgvmrbmxxltwf1f457k2eee7oyj7qvyge2pdq9tr5ylbi9ax\",\n    \"conversation_sid\" : \"CHDD7FAa367f4fD6b18F3dd85e33DE6faf\",\n    \"conversation_friendly_name\" : \"Jenell Johnson\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"vzjrosfg4p4xhiem1ovqqok0ayc2anm6drqu5w3cqggkamt264dnn56ltqmzh85kpxorfskkfivdt22zzh4p3w439tsyl84k02kqyzjinhupy60fknivt1ka31c5wqzm5yicpuuu2s01to931jh563fml71ib3qp8lz8tgyy122xxlrzrbpceapqxn8hh\",\n    \"conversation_date_created\" : \"2022-12-13T01:05:41.09Z\",\n    \"conversation_attributes\" : \"byw2i80oil86nv41w33sgzfmdzjgrmj2xmzohkyomjmz0sh0z3mijprjkxnybahii6fv2eky625j387jjpdoy3k7mnr1ny0b2cd10hxf6fjikiapraef98vl94ft3zfjdef9rdri9ez8kex29f\",\n    \"participant_sid\" : \"MB1bFFb22FB4C9512eb8EbeE5E80cEfD99\",\n    \"chat_service_sid\" : \"ISA767f33F945f5aea13ED8FdBBC8f2E48\",\n    \"conversation_date_updated\" : \"2023-06-14T15:08:21.09Z\",\n    \"conversation_unique_name\" : \"Geneva Lockman\",\n    \"participant_user_sid\" : \"USe83CAED4AE1dec6a9FDe44aDDB2cff93\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACCCe9CD49169c9EF0A67c9F65aFAb0d05\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"xla3l7wpj7cj5lnzq6hx2z60iiiqb7nxrs6pzhuxkodt12zafs8pwh9fj8qnh2r4oezyr9m3exf1ldgzxgekcvilipa146adcvnefqdfjy9seziv4cmfl5dza7tryz1ye\",\n    \"conversation_sid\" : \"CHA0ebFEcfaCf1CE1aDf3742bdcED34c2c\",\n    \"conversation_friendly_name\" : \"Mr. Keira Bosco\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"zf4ldxs7trwnkbhehb204ryoi\",\n    \"conversation_date_created\" : \"2023-12-31T00:09:56.09Z\",\n    \"conversation_attributes\" : \"u9unmtk7lozh1u49w383eipdl133hcoi661fb4j3993gl36zfbhq07s266u5oh6p56txilcl16veg8wp7bswm2hrns9gwc16ss840e0m66xbqdq2to8i8elsp7a0x8i0icnucuu54ebjvm321hfkmfiq7g2kczsftfydihfnmtqxognt7n\",\n    \"participant_sid\" : \"MBEe876fa84B17Cbf0f45301b73e634D0B\",\n    \"chat_service_sid\" : \"ISaEE82a21168922E4d51ae8a946243eA7\",\n    \"conversation_date_updated\" : \"2023-07-06T08:14:22.09Z\",\n    \"conversation_unique_name\" : \"Annemarie Frami\",\n    \"participant_user_sid\" : \"US323FfCC29CFF40af3Ea93a8Ffbdb1DA0\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACeFb5EcdB99e0200F8E8dc6DFcaFCdADE\",\n    \"links\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d50890ab-57e4-4a0f-a620-0c107b40a812",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.091106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListParticipantConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.participant_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListParticipantConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "48d953d6-90cd-4f05-a4bb-d4be4b33baef",
    "name" : "Update an existing push notification credential on your account",
    "request" : {
      "urlPath" : "/v1/Credentials/CR5dfE7eF29dE68Ac628D7bdFb04aEEFaa",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Bo Lakin\",\n  \"date_updated\" : \"2023-11-21T12:47:47.089Z\",\n  \"date_created\" : \"2023-01-22T21:36:56.089Z\",\n  \"sandbox\" : \"0ep2g7vurweuab0zvo68tsp0miop9hb9kkuoscoho01\",\n  \"account_sid\" : \"ACD0854b3fcFD37dfb95fbdD478BFF24E0\",\n  \"type\" : \"fcm\",\n  \"url\" : \"https://web.example.mocklab.io/752927\",\n  \"sid\" : \"CR08AF972AAe4bf376BA4E9afC01a3a513\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48d953d6-90cd-4f05-a4bb-d4be4b33baef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.089878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "96cce668-c176-4953-8461-7f8cb70eeccd",
    "name" : "Fetch a push notification credential from your account",
    "request" : {
      "urlPath" : "/v1/Credentials/CRa11cc54EB6ba4Fe1d9a4eBe7344cfDAE",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Miss Domenic Fay\",\n  \"date_updated\" : \"2022-08-18T02:28:40.089Z\",\n  \"date_created\" : \"2023-05-03T09:13:06.089Z\",\n  \"sandbox\" : \"g68iqiaziaj9fj29ttqocwfah4ogkkh2okj6wbvwgtkr51stin5zmprwzr6965exrxij0q2hol6bpydyzzbe9dhwqwjtp2sgas7hqqedro7uc9sjjbzwb9v6yfn6dol1sz0c2zft07xi2rddu5ydmpp1as\",\n  \"account_sid\" : \"AC308052e120CFe98eD7d2535DFdadcfCA\",\n  \"type\" : \"apn\",\n  \"url\" : \"https://web.example.mocklab.io/397278\",\n  \"sid\" : \"CRE3bF8F4b32eBEaE8Bfa7B1BB6eA1EaED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96cce668-c176-4953-8461-7f8cb70eeccd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.089653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "2de2a95f-c020-4d35-9e94-3d0d9517a869",
    "name" : "Remove a push notification credential from your account - 204",
    "request" : {
      "urlPath" : "/v1/Credentials/CRc38b1869dFFC5fcAFEDDf6b3a1b888a6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2de2a95f-c020-4d35-9e94-3d0d9517a869",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.089423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteCredential"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "991edc2c-83b1-4f2d-9c8c-b527de47bded",
    "name" : "Add a new push notification credential to your account",
    "request" : {
      "urlPath" : "/v1/Credentials",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Maurice Rau\",\n  \"date_updated\" : \"2023-02-18T08:56:57.089Z\",\n  \"date_created\" : \"2023-05-05T19:43:49.089Z\",\n  \"sandbox\" : \"53taq01mvmysmyikxslkkw74pdb9bkks1zfzs2r1fsrvzqawg1t9f2wt6jbrqeyn0h9tw5u\",\n  \"account_sid\" : \"ACa9d2Eb15df6a68218ff6f34BdaddD9F6\",\n  \"type\" : \"gcm\",\n  \"url\" : \"https://web.example.mocklab.io/869478\",\n  \"sid\" : \"CRdc521da66D2acd1CCd2D3Ea64d4EdAc0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "991edc2c-83b1-4f2d-9c8c-b527de47bded",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.089385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "cbca1e59-6c4c-4392-9732-ef3cc7733da9",
    "name" : "Retrieve a list of all push notification credentials on your account",
    "request" : {
      "urlPath" : "/v1/Credentials",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credentials\" : [ {\n    \"friendly_name\" : \"Abraham Champlin\",\n    \"date_updated\" : \"2022-12-18T07:48:19.088Z\",\n    \"date_created\" : \"2022-04-11T08:03:15.088Z\",\n    \"sandbox\" : \"q2baq23sl0z2888g6t4rcdrl7bf3k3x97bojp163rol1of24403kcicim4ox27hgbmbl78x5prvztwzgfg08eidr8efqama624545leukl4t2kd1nw4a51wx8an7ay9qo45bn7yrirgi81e9s\",\n    \"account_sid\" : \"AC9A49aec2BF7a0EeD22eeFc27331ceffe\",\n    \"type\" : \"fcm\",\n    \"url\" : \"https://web.example.mocklab.io/851395\",\n    \"sid\" : \"CR4d73dDaFcF51B7b764CEbE799C6824ef\"\n  }, {\n    \"friendly_name\" : \"Ela Frami\",\n    \"date_updated\" : \"2023-11-16T21:33:45.088Z\",\n    \"date_created\" : \"2023-06-30T09:07:18.088Z\",\n    \"sandbox\" : \"p134236urk6ocbkjxn6dm9z7etqx8gb1zbkyl\",\n    \"account_sid\" : \"AC6EB65AbE14b8f4dbBfEDBFF82B83b2A2\",\n    \"type\" : \"gcm\",\n    \"url\" : \"https://web.example.mocklab.io/444223\",\n    \"sid\" : \"CRDCbb8eC9Aa147C62EBd1d97F0Fe4ba2d\"\n  }, {\n    \"friendly_name\" : \"Monroe Collins DDS\",\n    \"date_updated\" : \"2023-07-30T13:04:50.088Z\",\n    \"date_created\" : \"2022-06-07T01:53:41.088Z\",\n    \"sandbox\" : \"upnfnftr\",\n    \"account_sid\" : \"ACA71cCdE8D5B054C7B14afC3FbfdCAf4D\",\n    \"type\" : \"gcm\",\n    \"url\" : \"https://web.example.mocklab.io/036308\",\n    \"sid\" : \"CRc8F1dBCe63919c3D747EACC15bE3Da0E\"\n  }, {\n    \"friendly_name\" : \"Kimberley Schmidt\",\n    \"date_updated\" : \"2023-07-08T22:20:47.088Z\",\n    \"date_created\" : \"2023-02-26T03:55:44.088Z\",\n    \"sandbox\" : \"icd275lkwrjda3uejvisy6a3jwoz8m7htsaxaclecvj7kjzp8732z4mggc9k5xbrmhjjuhvf3pncruzfi7hsa1j2lhteixsrd8z75onroafs6nxealhniebtqzbehhi1ogsmsk2mzhwcro74ezuzpn\",\n    \"account_sid\" : \"ACF7BBF61Fe6cE05C9B2BAB0b6cfeB4C1F\",\n    \"type\" : \"gcm\",\n    \"url\" : \"https://web.example.mocklab.io/340706\",\n    \"sid\" : \"CR839b3090ec3DC598D7DA13d7Fa3fafFB\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/438875\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/080988\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/575180\",\n    \"page\" : 4157695618251519555,\n    \"key\" : \"ep4fsx76zol6vypwn15ps1i8t0rfwol6gzlgjcmnmn32f73e3tptymv8w61sm8u02qsa0xq6buv90c1gtpc514en06o2naju27c5udhnm3yu5s1ozd2s6jq2fq3fax2xvnu5fv8irsv9f3likpgn8yhmr03toyk1o41evwzaijrjuy6k4tpsol2gf\",\n    \"url\" : \"https://web.example.mocklab.io/347571\",\n    \"page_size\" : 5846591838557213257\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbca1e59-6c4c-4392-9732-ef3cc7733da9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.089141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListCredential",
          "schema" : {
            "properties" : {
              "credentials" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.credential"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListCredentialResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "5518cf45-92b8-49db-abc7-e246d4d089b9",
    "name" : "Update an existing conversation in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations/q58e",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Nga Thiel\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-03-26T14:24:03.087Z\",\n  \"date_created\" : \"2023-02-02T18:36:32.087Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS3547bdbEAFdb0FB9bcD96C3eA02dcB1a\",\n  \"url\" : \"https://web.example.mocklab.io/220409\",\n  \"sid\" : \"CH78a697BA5E213eDDECc790C336b0Cf56\",\n  \"unique_name\" : \"Adela Cartwright\",\n  \"messaging_service_sid\" : \"MGCe69aeA9bfFdBD9B29D86ad6aaB8149F\",\n  \"account_sid\" : \"ACbf97D6CFc2DF69BC9B742F7BC5Cbc7fB\",\n  \"attributes\" : \"z8peehyqcvmztpgkaeqvpg868qg1o9w17i80w2j2nzlsgr4viabth9l1p6ehy0chphtudr91acsvvspm7puu7vftreft3974tpy6436893owq6uicj2i9647bdfsd506vpbvya7u3gkz80t25f44cmn28opngatdkenkzkofbe1kea1y2ao94r7zir\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5518cf45-92b8-49db-abc7-e246d4d089b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.088104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "6d3c1eed-e5b0-4631-8425-a8ae5975836d",
    "name" : "Fetch a conversation from your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations/1019",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Johnetta Rohan\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-07-06T12:03:23.087Z\",\n  \"date_created\" : \"2024-03-05T23:53:31.087Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS96a9a9Adbd0b1C9cF9496bFcF1B42c1d\",\n  \"url\" : \"https://web.example.mocklab.io/400276\",\n  \"sid\" : \"CH1dB84bdC4BE9bca220b9ffDb75AA6Ee7\",\n  \"unique_name\" : \"Jong Dooley\",\n  \"messaging_service_sid\" : \"MGDfB740eF89Cd84Be192CBcdc0d96E22C\",\n  \"account_sid\" : \"AC1FF55dfFc125Fd181bd4A7400cC8F5D8\",\n  \"attributes\" : \"534sg9fpoluddfw1ou1jt3t53ee6jbwa1bx5d2c46ty0xcns52rxy6zjwibfqbmgwr7uffmxslls0f1mbbynbeu30\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d3c1eed-e5b0-4631-8425-a8ae5975836d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.087703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "b9555e72-86f8-4bdc-839b-68735493d98d",
    "name" : "Remove a conversation from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/140i",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b9555e72-86f8-4bdc-839b-68735493d98d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.087219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversation"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "63da00c2-f7e8-4042-b8ad-be0b55fe16a1",
    "name" : "Update an existing conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Conversations/g2yu/Webhooks/WH07fac33e313eFF5EbA546F652C1160dD",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHB19bfC24b56eBAAb9fBf9bDEabee7bCD\",\n  \"date_updated\" : \"2024-02-09T15:09:05.086Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2022-09-17T01:57:22.086Z\",\n  \"account_sid\" : \"ACfDa6dce3E3FFAfAF20387BBB5E7BBFbC\",\n  \"url\" : \"https://web.example.mocklab.io/990244\",\n  \"sid\" : \"WHc0C4bCDffC6ff1a740B003B19B1F462E\",\n  \"target\" : \"xvxpzkayvag1ewrkc7lxr80kv8r1luzmllt344c2w9d8a23cej8xdsvwdus9fr9smvkylel6tf39073a6w0ged79bn3eywmxb8arryaqnz1ygql8cya7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63da00c2-f7e8-4042-b8ad-be0b55fe16a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.087127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "7edd4910-b097-4265-9194-be2280a1825e",
    "name" : "Fetch the configuration of a conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Conversations/h8kk/Webhooks/WHAc4a515e92dDaba8DBCa84FEbc1ea262",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH0A48203f7aff2dd09EFC1b6beFCF62ff\",\n  \"date_updated\" : \"2022-10-18T23:22:49.086Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2022-05-06T09:15:07.086Z\",\n  \"account_sid\" : \"ACFB641ebCD82Ce63bAE0a1dd47cDdA10E\",\n  \"url\" : \"https://web.example.mocklab.io/757831\",\n  \"sid\" : \"WHaa1f1BF95d90612c2f1eCeCFa872d4BA\",\n  \"target\" : \"tap6cfpgfd9ny3guoqmffdhqxudrxqalkkb5jqj4x50s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7edd4910-b097-4265-9194-be2280a1825e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.086875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "22cda1e7-7ff7-4abc-a1df-990f5d1ff4b8",
    "name" : "Remove an existing webhook scoped to the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/j970/Webhooks/WHafa759bd2aD7bDbFE88D84c4CA164BcC",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "22cda1e7-7ff7-4abc-a1df-990f5d1ff4b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.086626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationScopedWebhook"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "700840cb-5e89-414a-b00f-ffed12f53ec9",
    "name" : "Create a new webhook scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/0l96/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHdC5EC923b962B82Ae6CDBf37d98D62ce\",\n  \"date_updated\" : \"2022-05-11T12:48:02.086Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-04-30T18:10:13.086Z\",\n  \"account_sid\" : \"AC6e7af23Bc5Ebe9F68b7CB6Dab7DBBeA7\",\n  \"url\" : \"https://web.example.mocklab.io/127331\",\n  \"sid\" : \"WH1BDbCf46b2e3aCCd90F8Cb578CBe0D4d\",\n  \"target\" : \"mqp15q41ajss54czebwkri25ltah7ndbt9tv7pc5kw6h6q4wbonup42t79ezw2wlx4sav4hrbgscg2bw3zvbct5mk8r578fgiom3vk77ogtyt0vw1gkwlpoupvyjnf24ugm5t12l6uiamoiets15yk9zpxufy55pfd1tiz3ddpvlb1fv0mzdguikwywq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "700840cb-5e89-414a-b00f-ffed12f53ec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.086529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "d7570165-db0c-46e3-9de7-0869587d5bb8",
    "name" : "Retrieve a list of all webhooks scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/a968/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"webhooks\" : [ {\n    \"conversation_sid\" : \"CH4EeC97eF54B885dFaedF3bd00B6fE6b6\",\n    \"date_updated\" : \"2023-03-11T14:30:36.085Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-05-09T15:52:42.085Z\",\n    \"account_sid\" : \"AC64aBC01C8CBFE884a9F711e9E97837aC\",\n    \"url\" : \"https://web.example.mocklab.io/841755\",\n    \"sid\" : \"WHF9638Fd84a44eDAbB1809c739c1c4E78\",\n    \"target\" : \"3mf42d4teqvutyq3b4pulrgam1urm177ovvgok836tahnak458mbrmpkfdqu8fuzxg96z4v6f4k1bv8g\"\n  }, {\n    \"conversation_sid\" : \"CH5868Cc8F68cd8CA1BE8b2b1DeFb708ec\",\n    \"date_updated\" : \"2023-01-29T03:02:09.085Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-06-23T04:38:32.085Z\",\n    \"account_sid\" : \"AC1FAFF110BCb0AaC25eB2dE6e71EDD655\",\n    \"url\" : \"https://web.example.mocklab.io/268438\",\n    \"sid\" : \"WH1F18A75efcceB3a54Ae845F3ccbbC2C1\",\n    \"target\" : \"qtvtartt4ronttj6frk66k8e5swc4xsreqotisctbnas4rvtf4feyneowuw7aslyij9amuvxyc9jjz9loune3qifyb\"\n  }, {\n    \"conversation_sid\" : \"CH5d0a9152ddF8EFaB0EE9b908a56Cefb9\",\n    \"date_updated\" : \"2022-05-14T04:15:12.085Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-07-20T03:38:53.085Z\",\n    \"account_sid\" : \"ACE5BDdE615525F94CF05af5aAEedE48fF\",\n    \"url\" : \"https://web.example.mocklab.io/009365\",\n    \"sid\" : \"WH1ecA3abbf86EC0f49B57FF377D72E477\",\n    \"target\" : \"yr01dn8ksdzpiw6nevh531ia3g97hvz6xnklmm5y2b66la6yz1d24avl30by60xxefq5z1q6sqh3l7nalhlxipu50jmjzpyblo9gg6k5gnmiy9q7eota3kvt92inqqccpubstsi\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/286564\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/675513\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/847125\",\n    \"page\" : 2161120916715342701,\n    \"key\" : \"9752prg9wp7vvl0rlmx95vonp75qcgwlytz6h9txgsck890t71d3c0y325dmppax7hx2s5hbojz46cdx2xqal06o1y4hs7036q8pffunfuvpcpo5mimabgho\",\n    \"url\" : \"https://web.example.mocklab.io/128838\",\n    \"page_size\" : 7696109006393505552\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7570165-db0c-46e3-9de7-0869587d5bb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.086262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "webhooks" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                },
                "type" : "array"
              }
            },
            "title" : "ListConversationScopedWebhookResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "2ee90335-f1c4-4280-bd5f-51a8821715db",
    "name" : "Update an existing participant in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/s082/Participants/4ahl",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH85AB05B9288722A60F6fa2efbf31039e\",\n  \"date_updated\" : \"2022-11-19T20:05:39.085Z\",\n  \"role_sid\" : \"RL5eB4Fd931CDDa14EcBF2C614Baba8aa1\",\n  \"last_read_message_index\" : 1639057884360401177,\n  \"date_created\" : \"2023-05-22T15:31:39.085Z\",\n  \"identity\" : \"ci3rj61zf0t9yyi593c7y42zwrv3ozn1uaycdn0k4bkq8n7iqgj463liu1o4kqupd32ur2fp1lckheje7d1v261ro790nye1joefe598os57p04ft11sf4qz9pcbrbcwajrhd31fw6w4uooapszvs2fb\",\n  \"last_read_timestamp\" : \"2022-11-09T07:11:11.08513Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACEA42d12C5B3B6a93eFc0dFAAB0EAe254\",\n  \"attributes\" : \"gou9j10lbpe2k2kobrsbqijpufaujgh1d7domdopo387pfg06in0e4v4gu220n1dnn0d8yyookywfu08ck7nga4wum3kwwq660z9nlnha794dsvoihxl4\",\n  \"url\" : \"https://web.example.mocklab.io/296590\",\n  \"sid\" : \"MBecbfc0ADC97aeE7e1ABdD1B9FBACef6B\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ee90335-f1c4-4280-bd5f-51a8821715db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.085444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "34cfa89a-37bb-4895-8574-79a8a12e6197",
    "name" : "Fetch a participant of the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/vlc6/Participants/1800",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH4d8cfaaF071F44a0eEFb70B05cb1fFc8\",\n  \"date_updated\" : \"2023-10-31T11:27:00.084Z\",\n  \"role_sid\" : \"RLBC646a85e5Bd7774E3A9B92bfB8D195e\",\n  \"last_read_message_index\" : 1269294597912877424,\n  \"date_created\" : \"2022-09-12T21:19:25.084Z\",\n  \"identity\" : \"eljisqnr17wjkqv5uvhf4a7jr8yxl50wgkumh0umn4d5ebax3idb4fyv2eqevznkfj1s2o2lzdzihfyazenrz3b68zv48xdz92vfc290suu69tqdxge34j568avr5wy5r084iqwzi8h5\",\n  \"last_read_timestamp\" : \"2022-10-12T05:26:11.084749Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC51d4D671FbbBDB4324C7b3Bf3E9AaE3A\",\n  \"attributes\" : \"m7yromr8rs8imn65nsgrg\",\n  \"url\" : \"https://web.example.mocklab.io/817460\",\n  \"sid\" : \"MB5E79480fe1ff3a7AD9d734DD36b0dAdF\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34cfa89a-37bb-4895-8574-79a8a12e6197",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.085057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "3921bac1-9a3b-4278-a787-8bff82a7d62c",
    "name" : "Remove a participant from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/p2h9/Participants/p5nm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3921bac1-9a3b-4278-a787-8bff82a7d62c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.084684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationParticipant"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "f662821c-3918-484f-be95-25d8cc630eb6",
    "name" : "Add a new participant to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/ckk7/Participants",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH1B36bE49c1F37F7c517E60585eFA8eDD\",\n  \"date_updated\" : \"2022-11-16T20:48:11.084Z\",\n  \"role_sid\" : \"RLe6c08D7e2dF65bD7a7eecA1Df989E7dC\",\n  \"last_read_message_index\" : 3537804028511811565,\n  \"date_created\" : \"2023-03-05T11:49:05.084Z\",\n  \"identity\" : \"q4lk5pzrdy5q40imeaj3o6n2anhp0ky5x7jwz9wmjaba7dmvf\",\n  \"last_read_timestamp\" : \"2022-10-06T07:47:11.084247Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACFbeAf230b49429F9Aed9D3C40FE6Bf1A\",\n  \"attributes\" : \"9ibnhmxwy4qc08rirbaptwnqkpofiu8s50e9tvwcq2kxcs44a96imu7key\",\n  \"url\" : \"https://web.example.mocklab.io/186422\",\n  \"sid\" : \"MB9780C17AF76b4768665aC4E7a0BbcbE9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f662821c-3918-484f-be95-25d8cc630eb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.084526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "9a5e1816-90fe-4e50-8fbe-7cc3c8fa067e",
    "name" : "Retrieve a list of all participants of the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/a84h/Participants",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/207994\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/227714\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/539207\",\n    \"page\" : 5549023028248321290,\n    \"key\" : \"vb2plz35gzzk2ovi9xjtib73f9yvwdca1ponjupgkfndd7gy7goo1g61qmyhybpikr8wwi1qyfsp4w66rh08hcu4guadr3k4vg1kc6qby8rpnd0fbsmpfpzwilt6mfm8jhu6oqxsn1ghaku\",\n    \"url\" : \"https://web.example.mocklab.io/815027\",\n    \"page_size\" : 3591752133981433583\n  },\n  \"participants\" : [ {\n    \"conversation_sid\" : \"CH8beAd2990a1a1b6396c50a0A7eD6ed6f\",\n    \"date_updated\" : \"2022-08-27T19:59:46.083Z\",\n    \"role_sid\" : \"RL5fC91C9aF57bd9Cc263fF7AB4b8144e0\",\n    \"last_read_message_index\" : 1130781028331212913,\n    \"date_created\" : \"2024-02-13T18:18:19.083Z\",\n    \"identity\" : \"hsooqyx6pm9l465xxf8zerhq3h3pr7fp\",\n    \"last_read_timestamp\" : \"2022-07-28T08:30:11.083112Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC3629fFA6ECcDbdbeae9E60fCc8875773\",\n    \"attributes\" : \"168u8h5e70eyzge3e20if5dc9ktwm91qht7p95ve0itdklra4p480pfqs7kbqnpk6yedfaiclr45vgbvb0q2clk0kvoumldy3kjtadmb6efgpz4fyzgijtph1rncil60asza6zcvq4as08t1qhjlll91533vudfn8lucz\",\n    \"url\" : \"https://web.example.mocklab.io/523749\",\n    \"sid\" : \"MB83CFCdAF4A1DF4DFCc7eb8DedCfDB94A\"\n  }, {\n    \"conversation_sid\" : \"CHd5Ee8371fa3bd9B2D4eBAfB4a9cFEbE3\",\n    \"date_updated\" : \"2024-03-05T12:38:53.083Z\",\n    \"role_sid\" : \"RL840Db9e82A2Aba71F35FaDb9219Edef2\",\n    \"last_read_message_index\" : 2301036317380577721,\n    \"date_created\" : \"2022-09-11T00:24:29.083Z\",\n    \"identity\" : \"eqv98d5kxk30s1ueboxii06815p3p5r2h9mgeh0u809f\",\n    \"last_read_timestamp\" : \"2022-04-28T07:27:11.083286Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACBC0689A370F96BE08FD6ED7aDb3C5Cc3\",\n    \"attributes\" : \"ft2cdwgz48t0csgn41sahe2dyfyutn4r0sxh354wjumex5mjx9nj5rf6a\",\n    \"url\" : \"https://web.example.mocklab.io/186306\",\n    \"sid\" : \"MBc6f98BCB8BaDF9B38C1CEefe23DdD82B\"\n  }, {\n    \"conversation_sid\" : \"CHefe1BD187C1CedCbc4aA81dEba594A4F\",\n    \"date_updated\" : \"2022-11-30T17:24:35.083Z\",\n    \"role_sid\" : \"RLE0eA2c88cbdbD74ef6cd3dCFB674b572\",\n    \"last_read_message_index\" : 7668924917237319675,\n    \"date_created\" : \"2024-01-02T11:07:40.083Z\",\n    \"identity\" : \"im63wmbeiai3darnsguyas1s8p38zrzfmttc1v8c2q0x3tq45hr0g1entfefp2libca\",\n    \"last_read_timestamp\" : \"2022-07-15T07:38:11.083435Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC5Bbb50Bf850cc6C5475D9cb5eF2FD1BC\",\n    \"attributes\" : \"asrguwa1gwlmxoe8emijbovxf3r3bjdp5w7thajga9s1ifef4ojxcl0htxv37oqn3ttf\",\n    \"url\" : \"https://web.example.mocklab.io/931230\",\n    \"sid\" : \"MB6FfBdaF27B27A7129Be17feB1DCcD474\"\n  }, {\n    \"conversation_sid\" : \"CHcC8bd215381DE9EbA5AfFbddCe7c8a39\",\n    \"date_updated\" : \"2023-12-26T18:22:47.083Z\",\n    \"role_sid\" : \"RLACf54B07Bd0A13a2DCaE4fF424b6032b\",\n    \"last_read_message_index\" : 1938418572983723267,\n    \"date_created\" : \"2023-01-17T00:10:13.083Z\",\n    \"identity\" : \"daunlejaa887bm1fk0tpl5n08qkfslnkz0b3jnljdlgpu2607bsqdql1r0ro0d0xg8xvvq1s1tpd5wfbxo9\",\n    \"last_read_timestamp\" : \"2022-09-22T09:05:11.083579Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC10e81f7741EEA8bc6d200EF4bAeeF6be\",\n    \"attributes\" : \"e0tnmdd05274fcccx0taxejnuppde4cxpmmgqfia4s5dtmqeuqxr4chdp\",\n    \"url\" : \"https://web.example.mocklab.io/351945\",\n    \"sid\" : \"MBE043ef8Ec60b1Cd41e9FD398Cfffed83\"\n  }, {\n    \"conversation_sid\" : \"CHf6AE94f43cA0a5bbfbDd4e7Fd4e9ceF5\",\n    \"date_updated\" : \"2023-04-19T19:48:57.083Z\",\n    \"role_sid\" : \"RLf176041CD9119A2985dDFbA1BeB6e9c6\",\n    \"last_read_message_index\" : 3078670420578420708,\n    \"date_created\" : \"2023-03-31T18:53:34.083Z\",\n    \"identity\" : \"quqn7avnd3i7z476xoqyspdvbf2pss056bdxsrt53xhpyuj77v9z9gtc5spzmbcurqd2fjnxn5rn8zoenqgtbvbund8b5nz6ve86cez6vlxllwigtdkkd2clfk58mdi\",\n    \"last_read_timestamp\" : \"2023-01-18T05:39:11.083736Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC4FC3bBf8eC19ddC5fB9CbD0cEAabC7c9\",\n    \"attributes\" : \"aj77d1icqwxks0wm725ul0ezbu4fvgfhmu9pb7dhuz488wexw4r9bme85qgm0j6fuwgeaeygs6dj2mz68v98obu5r5878mykjleq6et8zglz2rche3q1wnpp9sla8d4b38o5u0v9gbsi3abzu73f67d\",\n    \"url\" : \"https://web.example.mocklab.io/129740\",\n    \"sid\" : \"MB83De5cDc1b539803AAb85fC05817A1D9\"\n  }, {\n    \"conversation_sid\" : \"CHdFFAAa90fA31EC69013eb2fCaFCCC7A0\",\n    \"date_updated\" : \"2022-11-15T06:14:10.083Z\",\n    \"role_sid\" : \"RL8afB3E0Ecb089bcFF7fCF7cfAb1cE0cC\",\n    \"last_read_message_index\" : 1635430849340347194,\n    \"date_created\" : \"2023-04-29T09:41:15.083Z\",\n    \"identity\" : \"qhcm\",\n    \"last_read_timestamp\" : \"2022-05-16T07:26:11.083885Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC9070c3907a6064FBe4eb2dD0EbD4ce64\",\n    \"attributes\" : \"zw8tnvasbayld52zpiwllg042ruvxs6mp6dxx759h1o1a06z4g1tp1a70fjo39n566\",\n    \"url\" : \"https://web.example.mocklab.io/394891\",\n    \"sid\" : \"MB8940f0E11b9E7DC73CaF4fE2884FfbCf\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a5e1816-90fe-4e50-8fbe-7cc3c8fa067e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.084174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationParticipant",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "participants" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_participant"
                },
                "type" : "array"
              }
            },
            "title" : "ListConversationParticipantResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "13ae90e0-5daf-4a88-9b75-746c98cae383",
    "name" : "Update an existing message in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/437y/Messages/IM34Aa63e1ddFcc5a4e6d2E5cBceb793EF",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHdC9F00f0C25Cb5E3eD19eEabbdBBFA67\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-11-21T22:09:19.082Z\",\n  \"author\" : \"6k7oct88jqs0ma0r6hrvkr25eklvq9f8hrgod85lanuagtjr2uke0x6duyrgwavii0p8xqxi5ikfrgf42ba0txs7kfj9wklqm1ut0fm2nuz11cgxeq6lr5gebgmittahc3abiomes\",\n  \"date_created\" : \"2023-07-07T11:31:49.082Z\",\n  \"participant_sid\" : \"MBf6a661DB72536C23cAEA1A8e81Cc282f\",\n  \"index\" : 2474487263824347142,\n  \"media\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Consequatur ullam quis. Facere et omnis iure autem explicabo sapiente. Rerum saepe repellat sit.\",\n  \"url\" : \"https://web.example.mocklab.io/641384\",\n  \"sid\" : \"IM4ec6c07F0e79eb594C90FAb2f8B34edF\",\n  \"account_sid\" : \"ACD1130AD4afff48Ce492AdB8e3a1d4eF9\",\n  \"attributes\" : \"il4ao6wihm8xoqmqaxds1uvodtkz92xdglh7qnm6eeskmeoaak4xmxr8vcke1q3sbzo9ripdyp\",\n  \"links\" : { },\n  \"content_sid\" : \"HX8f1EeF5aC147ae136efE601BFDbe7767\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13ae90e0-5daf-4a88-9b75-746c98cae383",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.08272Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "a55184c5-b0cd-4738-b7e6-0b8a291c8d3b",
    "name" : "Fetch a message from the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/r729/Messages/IM6DE2B654dEc6BE2A78bFF40123aAB1Ce",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHB746a25eEfEABBB8f8D6c81A5F3f7F7c\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-09-24T20:49:22.081Z\",\n  \"author\" : \"32wi\",\n  \"date_created\" : \"2023-07-30T06:09:45.081Z\",\n  \"participant_sid\" : \"MBAAabaDcf8EAdcEB9E5aBEe8d9fca10b4\",\n  \"index\" : 5783034230740419373,\n  \"media\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Aut incidunt et assumenda eius et quia. Quasi atque occaecati cum. Vel est possimus ea sit facilis est et. Quis rem veniam.\",\n  \"url\" : \"https://web.example.mocklab.io/100909\",\n  \"sid\" : \"IMf9DEC57c56E64d0feb86F450156DF9aa\",\n  \"account_sid\" : \"AC37bDC1Da7Ef6E72dAF3dCb33DCDC920a\",\n  \"attributes\" : \"bmn67cyb63k67nq61xi0gkc6a3m7qq\",\n  \"links\" : { },\n  \"content_sid\" : \"HXbe577Adc9A6026FA1AfbEb7FF2b5CC88\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a55184c5-b0cd-4738-b7e6-0b8a291c8d3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.082348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "6b008ebd-b8eb-4e07-b753-bb5e85086e5e",
    "name" : "Remove a message from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/525n/Messages/IM0E7AeD96eBDaa1c97e9Bd7e22F2Fa0e0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6b008ebd-b8eb-4e07-b753-bb5e85086e5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.081954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationMessage"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "2fca8b90-28fc-46f0-9317-0c8d6a98a45b",
    "name" : "Fetch the delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Conversations/c7uq/Messages/IMCf41795643a54c2A194Ffb5CfD3a66Bc/Receipts/DYffED52a44fB91cF4FddDA38ed7C17418",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHFE4d8Db3D73Ab3b3b185Afcbc02Df2C4\",\n  \"date_updated\" : \"2023-01-11T23:04:46.081Z\",\n  \"date_created\" : \"2022-11-01T09:31:12.081Z\",\n  \"participant_sid\" : \"MB481Bccee4480e40bee3d25DFD21D46A8\",\n  \"account_sid\" : \"ACB1fcCACCFc1eF34DceE3EC4eFC7C2907\",\n  \"error_code\" : 5314947940352713221,\n  \"message_sid\" : \"IM8c228c0ba8aaFfA3CE91fc3dcbDCc4dA\",\n  \"channel_message_sid\" : \"Kyd7CFff5c8db9b1Caacb3E070ef4FDe0f\",\n  \"url\" : \"https://web.example.mocklab.io/701273\",\n  \"sid\" : \"DY3Aa3fA04f581B27bAcb46CCcAfcEdCAb\",\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fca8b90-28fc-46f0-9317-0c8d6a98a45b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.081852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "channel_message_sid" : {
                "description" : "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. ",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "description" : "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, ",
                "nullable" : true,
                "type" : "integer"
              },
              "message_sid" : {
                "description" : "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "participant_sid" : {
                "description" : "The unique ID of the participant the delivery receipt belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/conversation_message_receipt_enum_delivery_status"
              },
              "url" : {
                "description" : "An absolute API resource URL for this delivery receipt.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "82101801-8717-46cc-ac16-34e491a0c9a1",
    "name" : "Retrieve a list of all delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Conversations/70f7/Messages/IMdc95AA0eEE5b74110AAcf432fd053B1B/Receipts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/221993\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/764811\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/594379\",\n    \"page\" : 8666662266428603331,\n    \"key\" : \"jpvidpp\",\n    \"url\" : \"https://web.example.mocklab.io/536571\",\n    \"page_size\" : 1761141006203129169\n  },\n  \"delivery_receipts\" : [ {\n    \"conversation_sid\" : \"CHEFf93a1eeA44C9024c9F7e7ebeCda3A2\",\n    \"date_updated\" : \"2022-12-07T03:37:55.08Z\",\n    \"date_created\" : \"2022-07-23T21:20:10.08Z\",\n    \"participant_sid\" : \"MBFBB97da62Da922911D3Bd38BfCcBbBA5\",\n    \"account_sid\" : \"ACfdA7bdAdf44b7aaA01a92d7B21dEaABA\",\n    \"error_code\" : 5463904599114401212,\n    \"message_sid\" : \"IME2e2905231FcA8Ad73570D7672c0Fe9f\",\n    \"channel_message_sid\" : \"Bq4C94ccC764A01dC8Be5Ce39e8E15786f\",\n    \"url\" : \"https://web.example.mocklab.io/649536\",\n    \"sid\" : \"DY1ccBE5Dcda01ebd0ca5Cde6F0A6Ed5Df\",\n    \"status\" : \"failed\"\n  }, {\n    \"conversation_sid\" : \"CHc29B5F66b8dbE6fCdBa6769a35E83532\",\n    \"date_updated\" : \"2022-09-19T13:30:40.08Z\",\n    \"date_created\" : \"2023-12-25T05:58:17.08Z\",\n    \"participant_sid\" : \"MBfdD1FaA3CaC0fEa96ad2eAaf0fbBB475\",\n    \"account_sid\" : \"AC8dcc5BB69F8A9eC4794aBaeB633aa2f9\",\n    \"error_code\" : 524355182291820630,\n    \"message_sid\" : \"IM2584758EC041aB0b064DAc3960Ce1c96\",\n    \"channel_message_sid\" : \"ra4ebe64e87e7Af11EcFfBf17e7EB3Faa8\",\n    \"url\" : \"https://web.example.mocklab.io/032539\",\n    \"sid\" : \"DYf0ecbAfd9BE59Fdae9d0b8D721dF2206\",\n    \"status\" : \"failed\"\n  }, {\n    \"conversation_sid\" : \"CH07E28F61F2fE653fd4cCfbe8f3a5fA41\",\n    \"date_updated\" : \"2023-02-18T14:07:16.08Z\",\n    \"date_created\" : \"2022-12-12T01:22:50.08Z\",\n    \"participant_sid\" : \"MB4867404efFF87Ef3EDCB8Af6a0a35eA7\",\n    \"account_sid\" : \"AC04aBf6f709Ffed53A38B3a7BbE305dE2\",\n    \"error_code\" : 2551053803118258622,\n    \"message_sid\" : \"IM5ADC22a3d81ffc3b9CDEe909Cdc26bc5\",\n    \"channel_message_sid\" : \"eGD6Eb77eFaAE38e6FcF032b9e5d7113FE\",\n    \"url\" : \"https://web.example.mocklab.io/812062\",\n    \"sid\" : \"DY9F2Ac1DE2120DbbD8fdDF27834da22Ec\",\n    \"status\" : \"read\"\n  }, {\n    \"conversation_sid\" : \"CHCF53dBb6eDbC3b5Da70ffc12877F1A50\",\n    \"date_updated\" : \"2022-04-02T05:44:50.081Z\",\n    \"date_created\" : \"2022-08-03T07:22:16.081Z\",\n    \"participant_sid\" : \"MB1aF5C4d79d7DeAAAAfD1e3C424bcd4CB\",\n    \"account_sid\" : \"ACA7cB0dcBEDAaa13adaa6edCfb2Be337f\",\n    \"error_code\" : 1592328668594452383,\n    \"message_sid\" : \"IM8AAD7c8E883748BCeBCaD8F5A88d494F\",\n    \"channel_message_sid\" : \"SaD3A25E43AB6E5D087bAcFEdfbCA7FcA2\",\n    \"url\" : \"https://web.example.mocklab.io/621751\",\n    \"sid\" : \"DYAa6F4DfD4F8baBacca383B6E9D0b2b43\",\n    \"status\" : \"read\"\n  }, {\n    \"conversation_sid\" : \"CH04256BcDC16468d0e392BdBB78014dF5\",\n    \"date_updated\" : \"2022-08-11T00:10:32.081Z\",\n    \"date_created\" : \"2022-11-19T09:51:36.081Z\",\n    \"participant_sid\" : \"MBF654De21F96AcEC1fFD21D8390bc1b5D\",\n    \"account_sid\" : \"ACC6066eD90dDbCc31cA4cC5b68feC141D\",\n    \"error_code\" : 7203536401659463859,\n    \"message_sid\" : \"IMEE46BEbC0C7C5FBCDc3dfB44AbD8EbE8\",\n    \"channel_message_sid\" : \"Og7A5255ce5CfC4fcFBA2413Ca20fABf6C\",\n    \"url\" : \"https://web.example.mocklab.io/338570\",\n    \"sid\" : \"DYB7b93d5bADdA2D5cD06AccB371E7C4ae\",\n    \"status\" : \"delivered\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82101801-8717-46cc-ac16-34e491a0c9a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.081504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "delivery_receipts" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_message.conversation_message_receipt"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationMessageReceiptResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "071b3448-dcf3-4bb9-bbd3-cce5c5471e6f",
    "name" : "Add a new message to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/1f1i/Messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHF70fEC120c22EcBd1EF8b35e78bCf66E\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-08-11T10:06:40.079Z\",\n  \"author\" : \"e0bugt3jitk3kb0zpxwja2pscnj9ivxxb31ksb9zpkbmbo1ditug\",\n  \"date_created\" : \"2023-05-13T18:08:15.079Z\",\n  \"participant_sid\" : \"MBF50652E5B31AfDB5577B97434CEe071D\",\n  \"index\" : 4091818793824341566,\n  \"media\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Tempora omnis voluptatem molestiae eum voluptatum. Est quaerat voluptas omnis ad officia et quo. Non non dolor dolores. Eaque ad distinctio beatae.\",\n  \"url\" : \"https://web.example.mocklab.io/743672\",\n  \"sid\" : \"IMa351DAd256DAF875E090bd1Aab4cFeFA\",\n  \"account_sid\" : \"AC32Fb2cDDD4dAACddbAFb851D9FDfa7eA\",\n  \"attributes\" : \"a90s8u8a20mvjjlyzfqdd50latzf9im7p1rjsnz52mzrdkhw5nd0bhlc48jc0neic7379gj2zcy5qib1p\",\n  \"links\" : { },\n  \"content_sid\" : \"HX8dC0bbf8b6aDffEf38795d79Ff4D4CB1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "071b3448-dcf3-4bb9-bbd3-cce5c5471e6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.080336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "5f1087d7-75e2-433d-b3bd-b852dc0cdcd5",
    "name" : "Retrieve a list of all messages in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/dr65/Messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/323798\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/109215\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/243102\",\n    \"page\" : 2265476146627357705,\n    \"key\" : \"d84rdcirf144njokjvlev70kl5m93l6mdsnmxujt9zopmeocgq\",\n    \"url\" : \"https://web.example.mocklab.io/153023\",\n    \"page_size\" : 192803988981725086\n  },\n  \"messages\" : [ {\n    \"conversation_sid\" : \"CHD0a12e38cef9554faF2cEb09feD31D6D\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-11-26T12:22:59.078Z\",\n    \"author\" : \"x8pezww5v074rqbym8urm4zb4qnvbqetzoyiycv020c7niy0jli0krxzkjdgh4n94ay1872el346j9q25dq2am608d8zj1cspybf401829oq2j462hzlti6f6vtkzmghaf7svsapz5u5ohjadhjpoikgr\",\n    \"date_created\" : \"2024-02-24T11:42:16.078Z\",\n    \"participant_sid\" : \"MBe5Fd85f959E8919B8a05dEb95F91B6aF\",\n    \"index\" : 5873283835319668419,\n    \"media\" : [ { }, { }, { }, { }, { }, { } ],\n    \"body\" : \"Nihil consequatur ea quam. Voluptatum quia provident totam totam quasi ab. Nobis excepturi aliquid fuga et voluptas.\",\n    \"url\" : \"https://web.example.mocklab.io/199673\",\n    \"sid\" : \"IM4bAda1E1b754dCED4BBaaD803f47ca9E\",\n    \"account_sid\" : \"ACafee9ad2901E8CF6c7A808f3b6B29BC1\",\n    \"attributes\" : \"0libx4xym4pbznegqa1z57nft307k0fwqu8ar8gs4wat5rlkp6u5xdxdj6qj2r6oeuhmmxqvqanhd59i7a08dzen2t6n\",\n    \"links\" : { },\n    \"content_sid\" : \"HX15DcFc3dEAD10Cf2Ba5a0031BFAdAA3c\"\n  }, {\n    \"conversation_sid\" : \"CHeE2a053D94Ed3DeAfd007A647dABA5eb\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-07-17T16:03:09.078Z\",\n    \"author\" : \"3dx0lkrkuj0koulyuwifnthqs\",\n    \"date_created\" : \"2022-09-29T01:44:52.078Z\",\n    \"participant_sid\" : \"MBB2338Df2aCFAA2E482a71D5624BE4A75\",\n    \"index\" : 3790557119633306878,\n    \"media\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"body\" : \"Sit excepturi explicabo odio sunt. Id molestiae cupiditate ut. Eligendi veritatis quia nulla. Similique et architecto voluptas esse assumenda ex maxime. Quis eius sint quis ut.\",\n    \"url\" : \"https://web.example.mocklab.io/656342\",\n    \"sid\" : \"IMc6b557583eeaFa69b37cfA01296CEFcf\",\n    \"account_sid\" : \"ACAEd2b4fDa1877892aa0c1c4aAcb6F7C6\",\n    \"attributes\" : \"so5g3fnoy5oz5pc\",\n    \"links\" : { },\n    \"content_sid\" : \"HX90d06De14620FAF36af8F78F78A7eb07\"\n  }, {\n    \"conversation_sid\" : \"CH4a3fdcb94Bd6108AaBc2deD510DD0BB7\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-12-08T18:51:01.078Z\",\n    \"author\" : \"ytmj3nbtobiby7b6173ceb7t9trra1traet0g3qvvyisooe5g6xd2w25r9r3oatjigmzd5qeqzxpil4i0ravshesjjz1rk6mzllo4itdronlcml981goey1tkcsbco0d\",\n    \"date_created\" : \"2023-07-20T12:28:40.078Z\",\n    \"participant_sid\" : \"MBCc769CCc49b12837532ac5761cEAe9Ad\",\n    \"index\" : 1341992691305485007,\n    \"media\" : [ { }, { }, { }, { } ],\n    \"body\" : \"Iste quidem dolorum. Sit ea quod voluptas voluptatem repellendus et omnis. Fugiat nesciunt voluptates voluptatem. Ut voluptates repellendus cupiditate explicabo nobis unde.\",\n    \"url\" : \"https://web.example.mocklab.io/588974\",\n    \"sid\" : \"IM6A1DFdFaEC2deeD2bafCBFEEd38E5f6b\",\n    \"account_sid\" : \"AC9Ffdf540DEe3f0DB3C3B2C73f9f71c1f\",\n    \"attributes\" : \"2nszpmehd330t1o2dmun737v29ks9w2xvc\",\n    \"links\" : { },\n    \"content_sid\" : \"HXD3a13eAfC1b9f0e1d20Efaa8FC6ECddF\"\n  }, {\n    \"conversation_sid\" : \"CH6BD53aDEbF1B8B36F5CfC26b032cf507\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-07-07T09:19:32.078Z\",\n    \"author\" : \"7aia894bw8ieqqqvfhpu4zgg0vd6bvwlhz9bg9010nsspuq9xjdpc18u1ukuq7cijv466klor3i6n2wx5fskwbejucznjdknzpbjdzaw30mnjyfgdy95smc3fm1po084z6e\",\n    \"date_created\" : \"2023-01-10T09:20:47.078Z\",\n    \"participant_sid\" : \"MB3Ac7Adbbfac38FEdD11a893C99EfCabD\",\n    \"index\" : 8564326663697444652,\n    \"media\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"body\" : \"Ullam quia saepe. Deleniti maiores quis quia qui animi reiciendis voluptatum. Quo a voluptatum ipsam neque ex.\",\n    \"url\" : \"https://web.example.mocklab.io/320432\",\n    \"sid\" : \"IM9D4edDeddF5Ff5F71ead89f4707f1FEa\",\n    \"account_sid\" : \"AC0f1580cf1eAf48dd7f69bf64d02b3d8c\",\n    \"attributes\" : \"8sa4wh9zi541vfblltozovfh4sbe09oduolqtyiww14rtiqp2bp41dg2vw9m7ovz004ngyc6tzht55jivrvqm08eukab2oy5j5zns9rpj2vugzu2yt006v3t1va9em93oqvh12\",\n    \"links\" : { },\n    \"content_sid\" : \"HXa5Bf41eADeEe9be3ffB99c4AB878FEaA\"\n  }, {\n    \"conversation_sid\" : \"CHb1eE821EBE186A5Aa95Ed6BDDf3FB596\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-10-21T08:17:42.079Z\",\n    \"author\" : \"f0k0lw0w3ede1w4myke24zybzgziw9nxywg9p1ivf08yor0zjv4w00ibiyo00in6jqfue2ytesxuy7jp00zu7uzl40bq01jpcwbes61wmqef2\",\n    \"date_created\" : \"2023-03-04T19:54:27.079Z\",\n    \"participant_sid\" : \"MBabb5d0AA61F3edaafCb19dAcC4B8B90F\",\n    \"index\" : 6273194275049164121,\n    \"media\" : [ { }, { }, { }, { } ],\n    \"body\" : \"Quod autem totam ullam illum totam. Consequuntur omnis cupiditate sapiente illum tenetur aut. Doloremque ipsa atque sapiente minus veritatis. Provident repellat odio ullam dolorum ipsam quis voluptas.\",\n    \"url\" : \"https://web.example.mocklab.io/023729\",\n    \"sid\" : \"IM13837C8b9cAEC50b5c6C7AFDF73fb963\",\n    \"account_sid\" : \"ACeA3BA9fcdF2d54A378AEEDD00348bF19\",\n    \"attributes\" : \"tvtnx90wrvir8iozbvrrkdlu7xopl51v2520g4l3nqlx6webj21339qzx97kpcm2lp2dwlnbrs0u5emx3wsyxdakwpfrhd3gv25nxdidzw7rrnl17dw0rp9b5a51\",\n    \"links\" : { },\n    \"content_sid\" : \"HXC86bdFF08C1b0BDdBA829ee660968eE5\"\n  }, {\n    \"conversation_sid\" : \"CHc16e653ac83cEEfa0B7515f7A9dB6BdC\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-02-22T15:55:56.079Z\",\n    \"author\" : \"805s52bl5nwlnf52kov3kna36zyhf4jx1089lrkhmpj6k7omihokcbqa2jlxa7waticzdmxcyiyfb3b8cdb3jjbf4jn76pat3j8sv9g0aqk8wj3q7qhzsoivb5g0p0jkbld4p\",\n    \"date_created\" : \"2022-05-03T09:47:02.079Z\",\n    \"participant_sid\" : \"MBf5B0BfcAB4FeE0832EafE70d8DCF0CFb\",\n    \"index\" : 1898077829464883426,\n    \"media\" : [ { }, { }, { }, { } ],\n    \"body\" : \"Voluptatibus atque dolores non mollitia. Quisquam perferendis tempora aliquam dolores porro labore dolor. A molestiae beatae quis. Sunt saepe voluptatum qui laudantium vel laboriosam. Magni molestiae \",\n    \"url\" : \"https://web.example.mocklab.io/003504\",\n    \"sid\" : \"IM17cB55AE9B3FDd3ffaB72c5BefAFD8A9\",\n    \"account_sid\" : \"AC60541dd08B29Ff5F758dB09aaF8c6FCb\",\n    \"attributes\" : \"vypwwstsr0kzel9p1anf5mfsk8kcqlad9qlk1qe0iho62k92cykh7qvotf\",\n    \"links\" : { },\n    \"content_sid\" : \"HXB46A8d3a5Ca4CcFdaC923Ee1c6F0f00c\"\n  }, {\n    \"conversation_sid\" : \"CHb01bA9aF00C062b3079FAF1BcCBfd474\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-12-21T02:53:04.079Z\",\n    \"author\" : \"75q26i484i1cedpmk1m\",\n    \"date_created\" : \"2024-01-16T21:19:08.079Z\",\n    \"participant_sid\" : \"MB86A07BbB4Bc8c90D17efc50dC1Ffe2B0\",\n    \"index\" : 3624442117984188941,\n    \"media\" : [ { } ],\n    \"body\" : \"Est autem qui. Ut fugiat qui consequatur rem quia autem sit. Harum praesentium nihil vel quod.\",\n    \"url\" : \"https://web.example.mocklab.io/111189\",\n    \"sid\" : \"IM9ECCac8ffcdee8BF0cA3ddC42E2237C4\",\n    \"account_sid\" : \"AC3f05Ec8caD3b988cB2e1cbFdFD50f3f9\",\n    \"attributes\" : \"lfahg2wqy6u5lt9958uy3sgxhnx30nse9d7aap2c0e81e0edxqbh4wewoxkbpnxm34ionj9lyocn8xhqz0zs7yf5a9a9xmidqttd4u9b12q87ny0rx6vo6j9z10jwo8gf3cfehq6wqtsfyhg7yjumpi3taxlp19i0owzio8xr12\",\n    \"links\" : { },\n    \"content_sid\" : \"HXEbEF0E34d28A43abd2Cee51Ab90dBcfd\"\n  }, {\n    \"conversation_sid\" : \"CHA3C6aE3B22D02A4A7E804c4De3f78Daf\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-11-17T03:25:31.079Z\",\n    \"author\" : \"suwp396aqopeyojwm8ey1ckqgwlayjhjxammpp5ivorjp0y8agadiviwngcxyuq\",\n    \"date_created\" : \"2022-04-12T20:23:39.079Z\",\n    \"participant_sid\" : \"MB6b5C5AE2bb0FDEd29d2DFDD4C2aC5aE2\",\n    \"index\" : 6545363624432667928,\n    \"media\" : [ { }, { }, { } ],\n    \"body\" : \"Optio modi enim natus officia. Ratione odit eius eligendi nisi ut. Debitis sed unde molestiae.\",\n    \"url\" : \"https://web.example.mocklab.io/659126\",\n    \"sid\" : \"IM2Da7D4FEdc6AC9Cc0d0f9e48DA5FDd5a\",\n    \"account_sid\" : \"AC492E18eb0cAA041a5F3FDA3a4B7C712F\",\n    \"attributes\" : \"9bo4tmxvxcfbdomeyqiwa2gsvg92s0hqxa\",\n    \"links\" : { },\n    \"content_sid\" : \"HXc12d5AD0aAbc98AF4DEE618Ca5C62eBd\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f1087d7-75e2-433d-b3bd-b852dc0cdcd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.079923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationMessage",
          "schema" : {
            "properties" : {
              "messages" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_message"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationMessageResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "7e1be1a3-7a0d-448f-b75c-d6fcfe09f75c",
    "name" : "Create a new conversation in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Kerstin Runte\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-12-13T14:24:59.077Z\",\n  \"date_created\" : \"2024-02-09T00:14:19.077Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"ISf6bb45E77217b34CB8569DAF3c1Cf26e\",\n  \"url\" : \"https://web.example.mocklab.io/334878\",\n  \"sid\" : \"CH0a6eEAcEa5a25dD5b0ba3A5ebAbAe0d5\",\n  \"unique_name\" : \"Ms. Jeff Orn\",\n  \"messaging_service_sid\" : \"MG3e8e7ad9C8e1e4285bEcA8aF60bD34f7\",\n  \"account_sid\" : \"AC51DA8e3F6a8A4A83fa15eE5Bde2b3ECF\",\n  \"attributes\" : \"iuucp635bpzw\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e1be1a3-7a0d-448f-b75c-d6fcfe09f75c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.077911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "c1ba9b8c-d028-4e9e-b55b-f99ddbcf15c8",
    "name" : "Retrieve a list of conversations in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/561852\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/240836\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/824552\",\n    \"page\" : 7192832489448219588,\n    \"key\" : \"frx2d5jmucywykuapi4evyp4x0d62vja1spocj9p6tb4jnulwqecmgtrf7xgopqej19zo44gbvvxi1oft5zgwksrstplh1x086b2oj9hhakvdrppwl7rj08z8ath4yd3xv65d\",\n    \"url\" : \"https://web.example.mocklab.io/681333\",\n    \"page_size\" : 4049855086976928312\n  },\n  \"conversations\" : [ {\n    \"friendly_name\" : \"Beverley Gleichner\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-04-02T21:05:44.076Z\",\n    \"date_created\" : \"2023-01-09T03:16:58.076Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISE30e680d5B5E42c4f3aAc4B1EBE6f4e0\",\n    \"url\" : \"https://web.example.mocklab.io/757283\",\n    \"sid\" : \"CH3Ae1bC0B05cb39f03BEc8F27dE46daff\",\n    \"unique_name\" : \"Rocco Towne III\",\n    \"messaging_service_sid\" : \"MG58d75B49269a739AFCC8D6eD8a4CD53a\",\n    \"account_sid\" : \"ACd0bAF35B3d75BB5eda608FBFd032ACDA\",\n    \"attributes\" : \"skh0wfjtbyhsd2eaiif79o5n3w3ke2cmos6rzm9cy3b4558c80msecjy5e019m6h5m8qnezvcb7a5inhhshb7kbm0y51eekvkogrlv359cxivito2caa78sfvf56by7n8wk0al9\",\n    \"links\" : { },\n    \"state\" : \"active\"\n  }, {\n    \"friendly_name\" : \"Forrest Olson\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-06-26T06:06:33.076Z\",\n    \"date_created\" : \"2022-04-01T09:57:06.076Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISB78Cf0da233B3B4E7219bdF6D77Fd54F\",\n    \"url\" : \"https://web.example.mocklab.io/918877\",\n    \"sid\" : \"CHD282d8C08e54FdF4B6675DcBBC9DEebc\",\n    \"unique_name\" : \"Marianela Rempel\",\n    \"messaging_service_sid\" : \"MGE6B73FDE4a20EECFA36DBd7dD4E969E6\",\n    \"account_sid\" : \"ACA302CFFCc8A75F0F25De79C7f4E8AC3E\",\n    \"attributes\" : \"ynfjuufbw965guczjzj75nlzb9dqwse9w3xa4ts7lp576aynyhocucnh1u0kn02mjxv9u\",\n    \"links\" : { },\n    \"state\" : \"inactive\"\n  }, {\n    \"friendly_name\" : \"Gertie Schoen\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-08-08T03:32:47.077Z\",\n    \"date_created\" : \"2022-09-08T21:41:49.077Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISD241d3075AB9fC0df7b18e0Aa3a926B4\",\n    \"url\" : \"https://web.example.mocklab.io/298901\",\n    \"sid\" : \"CH6D9520dBe0f8Debca90509Adaa02C8cE\",\n    \"unique_name\" : \"Stefanie Boyer\",\n    \"messaging_service_sid\" : \"MG3DFE9C6d0EB642ed2244eE4dae0FD83C\",\n    \"account_sid\" : \"ACebC227dB3b24ed29dF9ADFea2AbA8Fd7\",\n    \"attributes\" : \"tgie9kcqkp3mvst4sypvb1ozgb2bxw71b0wxsew2so7\",\n    \"links\" : { },\n    \"state\" : \"inactive\"\n  }, {\n    \"friendly_name\" : \"Hong O'Keefe\",\n    \"timers\" : { },\n    \"date_updated\" : \"2024-03-03T04:51:30.077Z\",\n    \"date_created\" : \"2024-02-16T14:09:17.077Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISEE1FfB7598bB05B9Ab4D983180Df30cF\",\n    \"url\" : \"https://web.example.mocklab.io/930486\",\n    \"sid\" : \"CH2111CE01C3eF2e4E73eef7E5fDaEC1fc\",\n    \"unique_name\" : \"Donald Brekke\",\n    \"messaging_service_sid\" : \"MGEA0fCDD2aBEf66faCaDFEd1fbcD869de\",\n    \"account_sid\" : \"ACF0A579e9C150CCA0FD5ee65A7Cbb7eC4\",\n    \"attributes\" : \"33ry1gqsus9xng7ol16488dfmeadi0ansdqq3f816glsopr5eqmhbx3r16ow7csnzqwptxblxpzmyml5w8jelwsgc4gtvfihge9eveb4etl720ky2zscyhke5khrc105rxkxzj0endrzvf96v3e2pz75zi834xma1npfj3\",\n    \"links\" : { },\n    \"state\" : \"closed\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1ba9b8c-d028-4e9e-b55b-f99ddbcf15c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.07753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "b7b6b849-96f8-4897-a67a-acdc35025881",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/Configuration/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"POST\",\n  \"account_sid\" : \"ACdC278D413c77CAcAF81a87c838d1Bc43\",\n  \"filters\" : [ \"zzdh5uzagki2oy5uvhs606bz5paaur3idjkgnd36tjndsj4c3l5ija84drbxzhb6hd5af0sj50vs0z88jy43hthvealparo3rqyjeko2j50izkwlr3fwtu0xfiqai0d724davcnhhdxw9vlxjoge0bta57shr9n3j98vudytptyhm3jem1ucg6w64tx1letye\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/578833\",\n  \"url\" : \"https://web.example.mocklab.io/450667\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/411562\",\n  \"target\" : \"flex\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7b6b849-96f8-4897-a67a-acdc35025881",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.076206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfigurationWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "target" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_target"
              },
              "url" : {
                "description" : "An absolute API resource API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "1dce32b3-f80c-46d5-ac09-53bc893f798e",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/Configuration/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"POST\",\n  \"account_sid\" : \"AC8bDCCEC92d6Ff347BCA698648bF1f9f0\",\n  \"filters\" : [ \"1fe1rkzr7hm575jsaqmjkjdk3nrniyu6y76jxrj5\", \"hrz0ql07oqifuwynawpf8c014j5ybtbkdliut8224iihufi6ece0qtyunpum853yit1cbwk5kb65h135ti4d\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/319429\",\n  \"url\" : \"https://web.example.mocklab.io/869234\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/217705\",\n  \"target\" : \"webhook\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1dce32b3-f80c-46d5-ac09-53bc893f798e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.075913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfigurationWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "target" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_target"
              },
              "url" : {
                "description" : "An absolute API resource API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "12621028-5092-45cc-aa27-c46c98ad15c0",
    "name" : "Update an existing address configuration",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/49zb",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Mr. Brandon Lebsack\",\n  \"address\" : \"0iy1sob2o12hw8yy2vfdoz04wflgf1z0zqil6luk8eli558\",\n  \"date_updated\" : \"2023-03-30T23:35:41.075Z\",\n  \"date_created\" : \"2023-10-24T20:23:12.075Z\",\n  \"account_sid\" : \"ACc8134eaeBEEFd06ff7B154f4b10aE567\",\n  \"auto_creation\" : { },\n  \"type\" : \"b97l5f9m6mwpeepo0wj8p0mqwp924seybim0l5m2kf4fwekjy0wjvnazbmd1v2eawja56bx4192osgalc7fmbd2zqe109c3fj81julw71ot6974hh7co2hfafcsbq53w4l5asg4sgvsbzbycvm7p379edxdar6wqr2lph3wflnh67l3d8axce438rtfpbdqo\",\n  \"url\" : \"https://web.example.mocklab.io/864749\",\n  \"sid\" : \"IGEf53cdcA5fFe8B04972ff744efbae066\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12621028-5092-45cc-aa27-c46c98ad15c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.075546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "5dd73157-5879-4d9b-807c-572640bf9f00",
    "name" : "Fetch an address configuration ",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/1t80",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Brianna Dicki MD\",\n  \"address\" : \"s6jiqmvr9xj073z45969qto1k9e89vekxy2dkb85s7ose02q2ga60luzp30bnk9f61llpv4xxpujke575z53rypmd67afb807eoc3uesiqthhbiw5j54ewrh0ryfj71p4mngswjcjz1h688\",\n  \"date_updated\" : \"2023-08-16T06:41:30.074Z\",\n  \"date_created\" : \"2023-05-08T09:54:51.074Z\",\n  \"account_sid\" : \"AC6682CBd79EBf6ec7Bd8DAd61b13Ce6f5\",\n  \"auto_creation\" : { },\n  \"type\" : \"b3muu5gnpjdcjz1iw2uhis6l23pvhigyaz10uu7rn1qq7wp9p48omph9xu3wmydxx1tgj0s4yi67504jgvinp1888iq7imyn4uukp7mvyapgx1t35jksr1bbjwtryfluox567grf33e6m1m6\",\n  \"url\" : \"https://web.example.mocklab.io/455923\",\n  \"sid\" : \"IGfEbff52F6efDAE8ca6291fa4FD6C4cEd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5dd73157-5879-4d9b-807c-572640bf9f00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.075226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "f48b47be-392b-4217-b526-a3df4c905da5",
    "name" : "Remove an existing address configuration - 204",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/1tbv",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f48b47be-392b-4217-b526-a3df4c905da5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.074909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConfigurationAddress"
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "94dc1dc0-d28a-4a86-a34b-3a744902ec4a",
    "name" : "Create a new address configuration",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Paulette Emard\",\n  \"address\" : \"oe6x8xo1ciiy0cajld7wmhrdfa4pr5hwib3947w7iwhyzb7e8v8p88kr2e08c3jxequjxsidv4ykgmo65nyhdd1a5vkb69rgq202g9nilumtresvtv4cew37fspuchd73brqwaz4wymglzolw61n6g1qpdsi3n4thhc0djlmy1ce5c3fadb9p64o32bql1k2\",\n  \"date_updated\" : \"2023-02-15T18:05:32.074Z\",\n  \"date_created\" : \"2022-07-17T13:47:36.074Z\",\n  \"account_sid\" : \"AC7425BACdCeD168fC34fd2feBCCc7ed0d\",\n  \"auto_creation\" : { },\n  \"type\" : \"xqzyl7r48qcedao3xtom0s0timj38yrae3l0o3fv6gud972ls8kkk850k667gg5ph5939cpsawfqafw62im2s35sq6vviuq9z3pce1wz6t82ywzraegj2kgfft6spf4vayf3l4golbd467git0fk08ef77y93xaht9kegbpfcemdu4806gf4jnj6z5civi40l\",\n  \"url\" : \"https://web.example.mocklab.io/361694\",\n  \"sid\" : \"IG9EA1EdFaee69dB6B73Bc2508BaF26feE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94dc1dc0-d28a-4a86-a34b-3a744902ec4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.074794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "1c5095be-793c-4910-b259-2968e13342e4",
    "name" : "Retrieve a list of address configurations for an account",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"address_configurations\" : [ {\n    \"friendly_name\" : \"Jeramy Hilpert\",\n    \"address\" : \"ibpmfa3u2z0je10o41ru56zk1r9bqsj3i4d4ewyv56yhddqi4g046yaf706l9isr52w2zjmgfy486i7xixjfboxgcg21ugad7z2smmp96jivqxv\",\n    \"date_updated\" : \"2023-05-17T14:37:43.073Z\",\n    \"date_created\" : \"2023-06-08T20:34:37.073Z\",\n    \"account_sid\" : \"ACEEF14c7dED2ABd6DCcb9e4DdA4f5Ca73\",\n    \"auto_creation\" : { },\n    \"type\" : \"rwlvk1jek7fx6rr9v6delzethxxzb1hb214rabcb5g7w6lk1azeptflwieg7yr83accehiey7qqq1wng36a48isgqx09lal02v9zgaqjzbkdhae0ml215tuiu6s5o4aau85opspsk4w38\",\n    \"url\" : \"https://web.example.mocklab.io/481974\",\n    \"sid\" : \"IGd0e6FD2eF94FbC4df5DBFd91BE57fb3E\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/542446\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/699148\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/903562\",\n    \"page\" : 7018985850562523189,\n    \"key\" : \"upd\",\n    \"url\" : \"https://web.example.mocklab.io/607110\",\n    \"page_size\" : 3474057289853321306\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c5095be-793c-4910-b259-2968e13342e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.074511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConfigurationAddress",
          "schema" : {
            "properties" : {
              "address_configurations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.configuration_address"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConfigurationAddressResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "76788fdb-80cc-49ba-82f1-059a3739885c",
    "name" : "Update the global configuration of conversations on your account",
    "request" : {
      "urlPath" : "/v1/Configuration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"default_chat_service_sid\" : \"ISDDC3AF8cB8c300d894FFe2d0A12a3fDe\",\n  \"default_closed_timer\" : \"2022-12-01T07:50:11.073675Z\",\n  \"default_inactive_timer\" : \"2022-09-14T06:50:11.073699Z\",\n  \"account_sid\" : \"AC40fe983bEeaA27DA3CeFe65491BD9de9\",\n  \"links\" : { },\n  \"default_messaging_service_sid\" : \"MG4fccdcFbFAE68a7cd86CdD5D2CAA43Ad\",\n  \"url\" : \"https://web.example.mocklab.io/611247\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76788fdb-80cc-49ba-82f1-059a3739885c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.07386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_sid" : {
                "description" : "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_closed_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
                "nullable" : true,
                "type" : "string"
              },
              "default_inactive_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
                "nullable" : true,
                "type" : "string"
              },
              "default_messaging_service_sid" : {
                "description" : "The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access the webhook and default service configurations.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "An absolute API resource URL for this global configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "cc9a4caf-cb5a-4bdd-afe8-e8ac0c0377de",
    "name" : "Fetch the global configuration of conversations on your account",
    "request" : {
      "urlPath" : "/v1/Configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"default_chat_service_sid\" : \"IS08ED4b2794dAb302176e77dBD1bA1EDD\",\n  \"default_closed_timer\" : \"2022-06-06T06:33:11.073333Z\",\n  \"default_inactive_timer\" : \"2022-04-02T06:12:11.073364Z\",\n  \"account_sid\" : \"ACa202FbEfc980663b261EEb895aEb7872\",\n  \"links\" : { },\n  \"default_messaging_service_sid\" : \"MGCB1C2EcC2aB6FEFf09eea29f19eD8576\",\n  \"url\" : \"https://web.example.mocklab.io/782053\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc9a4caf-cb5a-4bdd-afe8-e8ac0c0377de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:11.073614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_sid" : {
                "description" : "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_closed_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
                "nullable" : true,
                "type" : "string"
              },
              "default_inactive_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
                "nullable" : true,
                "type" : "string"
              },
              "default_messaging_service_sid" : {
                "description" : "The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access the webhook and default service configurations.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "An absolute API resource URL for this global configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  } ]
}