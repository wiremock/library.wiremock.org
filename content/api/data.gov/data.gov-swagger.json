{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Regulations.gov",
    "description" : "Provides public users access to federal regulatory content.",
    "version" : "3.0"
  },
  "externalDocs" : {
    "url" : "http://regulationsgov.github.io/developers/"
  },
  "servers" : [ {
    "url" : "https://api.data.gov/regulations/v3"
  } ],
  "security" : [ {
    "api_key" : null
  } ],
  "tags" : [ {
    "name" : "dockets",
    "description" : "Operations about Dockets"
  }, {
    "name" : "documents",
    "description" : "Operations about Documents"
  } ],
  "paths" : {
    "/docket.{response_format}" : {
      "get" : {
        "tags" : [ "dockets" ],
        "summary" : "Returns Docket information",
        "operationId" : "docket",
        "parameters" : [ {
          "name" : "response_format",
          "in" : "path",
          "description" : "Format",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "json",
            "enum" : [ "json", "xml" ]
          }
        }, {
          "name" : "docketId",
          "in" : "query",
          "description" : "Docket ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "EPA-HQ-OAR-2011-0028"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "No response was specified"
          },
          "400" : {
            "description" : "Bad request. The content is either empty or has been withdrawn."
          },
          "404" : {
            "description" : "File not found."
          }
        }
      }
    },
    "/document.{response_format}" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Returns Document information",
        "operationId" : "document",
        "parameters" : [ {
          "name" : "response_format",
          "in" : "path",
          "description" : "Format",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "json",
            "enum" : [ "json", "xml" ]
          }
        }, {
          "name" : "documentId",
          "in" : "query",
          "description" : "FDMS Document ID",
          "schema" : {
            "type" : "string",
            "default" : "EPA-HQ-OAR-2011-0028-0108"
          }
        }, {
          "name" : "federalRegisterNumber",
          "in" : "query",
          "description" : "Federal Register Document Number",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "No response was specified"
          },
          "400" : {
            "description" : "Bad request. The document is only available for comment via Regulations.gov."
          },
          "404" : {
            "description" : "File not found."
          }
        }
      }
    },
    "/documents.{response_format}" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Search for Documents",
        "description" : "This API allows users to build a query based on any of the parameters below.  If you have trouble building queries, you may wish to try them through the <a href=\"http://www.regulations.gov/#!advancedSearch\">Advanced Search</a> page on the Regulations.gov website.",
        "operationId" : "documents",
        "parameters" : [ {
          "name" : "response_format",
          "in" : "path",
          "description" : "Format",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "json",
            "enum" : [ "json", "xml" ]
          }
        }, {
          "name" : "countsOnly",
          "in" : "query",
          "description" : "Counts Only: <ul><li>1 (will return only the document count for a search query)</li><li>0 (will return documents as well)</li></ul>",
          "schema" : {
            "type" : "integer",
            "enum" : [ 0, 1 ]
          }
        }, {
          "name" : "encoded",
          "in" : "query",
          "description" : "Encoded: <ul><li>1 (will accept Regulations.gov style encoded parameters)</li><li>0 (will not accept such encoded parameters)</li></ul>",
          "schema" : {
            "type" : "integer",
            "enum" : [ 0, 1 ]
          }
        }, {
          "name" : "s",
          "in" : "query",
          "description" : "Keyword(s)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dct",
          "in" : "query",
          "description" : "Document Type: <ul><li>N: Notice</li><li>PR: Proposed Rule</li><li>FR: Rule</li><li>O: Other</li><li>SR: Supporting & Related Material</li><li>PS: Public Submission</li></ul>",
          "schema" : {
            "type" : "string",
            "enum" : [ "N", "PR", "FR", "O", "SR", "PS" ]
          }
        }, {
          "name" : "dktid",
          "in" : "query",
          "description" : "Valid Docket ID (ex. SEC-2012-0044)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dkt",
          "in" : "query",
          "description" : "Docket Type: <ul><li>R: Rulemaking</li><li>N: Nonrulemaking</li></ul><p>A Docket Type is either Rulemaking or Nonrulemaking. A Rulemaking docket includes the type of regulation that establishes a rule. While a Non-Rulemaking docket does not include a rule.</p>",
          "schema" : {
            "type" : "string",
            "enum" : [ "N", "R" ]
          }
        }, {
          "name" : "cp",
          "in" : "query",
          "description" : "Comment Period: <ul><li>O: Open</li><li>C: Closed</li></ul>",
          "schema" : {
            "type" : "string",
            "enum" : [ "O", "C" ]
          }
        }, {
          "name" : "a",
          "in" : "query",
          "description" : "Federal Agency: List of accepted Federal Agency values. This field allows multiple values. Ex. a=FMCSA%252BEPA%252BFDA",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rpp",
          "in" : "query",
          "description" : "Results Per Page 10, 25, 100, 500, 1,000.  Results per page may not exceed 1,000.",
          "schema" : {
            "type" : "string",
            "enum" : [ "10", "25", "100", "500", "1000" ]
          }
        }, {
          "name" : "po",
          "in" : "query",
          "description" : "Enter the page offset (always starts with 0). This is used in conjunction with results per page to provide large data sets. For example, if a search produces 82 results and the result per page is set to 25, this will generate 4 pages. 3 pages will have 25 results and the last page will have 7 results. Page offset values for each page will be: <pre>Page 1: po=0 Page 2: po=25 Page 3: po=50 Page 4: po=75</pre> The total number of pages is [total results/results per page] and page offset for page X is [X-1 * results per page]",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "cs",
          "in" : "query",
          "description" : "Comment Period Closing Soon: <ul><li>0 (closing today)</li><li>3 (closing within 3 days)</li><li>15 (closing within 15 days)</li><li>30 (closing within 30 days)</li><li>90 (closing within 90 days)</li></ul>",
          "schema" : {
            "type" : "integer",
            "enum" : [ 0, 3, 15, 30, 90 ]
          }
        }, {
          "name" : "np",
          "in" : "query",
          "description" : "Newly Posted: <ul><li>0 (posted today)</li><li>3 (posted within last 3 days)</li><li>15 (posted within last 15 days)</li><li>30 (posted within last 30 days)</li><li>90 (posted within last 90 days)</li></ul>  For periods of time beyond 90-days, please use a date range with the Posted Date parameter.",
          "schema" : {
            "type" : "integer",
            "enum" : [ 0, 3, 15, 30, 90 ]
          }
        }, {
          "name" : "cmsd",
          "in" : "query",
          "description" : "Comment Period Start Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period End Date is also provided, then ensure the Comment Period Start date is earlier.",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "cmd",
          "in" : "query",
          "description" : "Comment Period End Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period Start Date is also provided, then ensure the Comment Period End date is after.<br/>* Comment Period Start and End Dates are mutually exclusive with the 'closing soon' parameter. If both are provided, 'closing soon' will be ignored.",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "crd",
          "in" : "query",
          "description" : "Creation Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. <code>crd=11/06/13-03/06/14</code>",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "rd",
          "in" : "query",
          "description" : "Received Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. <code>rd=11/06/13-03/06/14</code>",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "pd",
          "in" : "query",
          "description" : "Posted Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. <code>pd=11/06/13-03/06/14</code>",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "cat",
          "in" : "query",
          "description" : "Document Category: <ul><li>AD (Aerospace and Transportation)</li> <li>AEP (Agriculture, Environment, and Public Lands)</li> <li>BFS (Banking and Financial)</li> <li>CT (Commerce and International)</li> <li>LES (Defense, Law Enforcement, and Security)</li> <li>EELS (Education, Labor, Presidential, and Government Services)</li> <li>EUMM (Energy, Natural Resources, and Utilities)</li> <li>HCFP (Food Safety, Health, and Pharmaceutical)</li> <li>PRE (Housing, Development, and Real Estate)</li> <li>ITT (Technology and Telecommunications)</li></ul>",
          "schema" : {
            "type" : "string",
            "enum" : [ "AD", "AEP", "BFS", "CT", "LES", "EELS", "EUMM", "HCFP", "PRE", "ITT" ]
          }
        }, {
          "name" : "sb",
          "in" : "query",
          "description" : "Sort By: <ul><li>docketId (Docket ID)</li><li>docId (Document ID)</li><li>title (Title)</li><li>postedDate (Posted Date)</li><li>agency (Agency)</li><li>documentType (Document Type)</li><li>submitterName (Submitter Name)</li><li>organization (Organization)</li></ul> Sort Order is REQUIRED if this parameter is included.",
          "schema" : {
            "type" : "string",
            "enum" : [ "docketId", "docId", "title", "postedDate", "agency", "documentType", "submitterName", "organization" ]
          }
        }, {
          "name" : "so",
          "in" : "query",
          "description" : "Sort Order: <ul><li>ASC: Ascending</li><li>DESC: Descending</li></ul>",
          "schema" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }, {
          "name" : "dktst",
          "in" : "query",
          "description" : "Docket Subtype: Only one docket subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dktst2",
          "in" : "query",
          "description" : "Docket Sub-subtype: Only one docket sub-subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "docst",
          "in" : "query",
          "description" : "Document Subtype: Single or multiple document subtypes may be included.  Multiple values should be passed as follows: <code>docst=%20Certificate+of+Service%252BCorrespondence</code>",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "No response was specified"
          },
          "400" : {
            "description" : "Bad request. The document is only available for comment via Regulations.gov."
          },
          "404" : {
            "description" : "File not found."
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "description" : "API Key",
        "name" : "api_key",
        "in" : "query"
      }
    }
  }
}