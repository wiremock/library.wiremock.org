{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "NetworkExperiments",
    "description" : "These are the Network Experiment APIs.\n",
    "version" : "2019-11-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "tags" : [ {
    "name" : "NetworkExperimentProfiles",
    "description" : "The configuration of Network Experiment profiles"
  }, {
    "name" : "Experiments",
    "description" : "The configuration of the Network Experiment experiments"
  }, {
    "name" : "PreconfiguredEndpoints",
    "description" : "The preconfigured endpoints and details"
  }, {
    "name" : "Reports",
    "description" : "The analysis and results of the experiments"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/NetworkExperimentProfiles" : {
      "get" : {
        "tags" : [ "NetworkExperimentProfiles" ],
        "summary" : "Gets a list of Network Experiment Profiles under a subscription",
        "operationId" : "NetworkExperimentProfiles_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles" : {
      "get" : {
        "tags" : [ "NetworkExperimentProfiles" ],
        "summary" : "Gets a list of Network Experiment Profiles within a resource group under a subscription",
        "operationId" : "NetworkExperimentProfiles_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}" : {
      "get" : {
        "tags" : [ "NetworkExperimentProfiles" ],
        "summary" : "Gets an NetworkExperiment Profile by ProfileName",
        "operationId" : "NetworkExperimentProfiles_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Profile"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "NetworkExperimentProfiles" ],
        "summary" : "Creates an NetworkExperiment Profile",
        "operationId" : "NetworkExperimentProfiles_CreateOrUpdate",
        "parameters" : [ {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "An Network Experiment Profile",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Profile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Profile"
                }
              }
            }
          },
          "201" : {
            "description" : "Created. The request has been fulfilled and a new protection policy has been created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Profile"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Profile"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "NetworkExperimentProfiles" ],
        "summary" : "Deletes an NetworkExperiment Profile by ProfileName",
        "operationId" : "NetworkExperimentProfiles_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete successful."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204" : {
            "description" : "No Content. The request has been accepted but the profile was not found."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "NetworkExperimentProfiles" ],
        "summary" : "Updates an NetworkExperimentProfiles by NetworkExperimentProfile name",
        "description" : "Updates an NetworkExperimentProfiles",
        "operationId" : "NetworkExperimentProfiles_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Profile Update Model",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileUpdateModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Profile"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Profile"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments" : {
      "get" : {
        "tags" : [ "Experiments" ],
        "summary" : "Gets a list of Experiments",
        "operationId" : "Experiments_ListByProfile",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExperimentList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}" : {
      "get" : {
        "tags" : [ "Experiments" ],
        "summary" : "Gets an Experiment by ExperimentName",
        "operationId" : "Experiments_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "experimentName",
          "in" : "path",
          "description" : "The Experiment identifier associated with the Experiment",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Experiments" ],
        "summary" : "Creates or updates an Experiment",
        "operationId" : "Experiments_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "experimentName",
          "in" : "path",
          "description" : "The Experiment identifier associated with the Experiment",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Experiment resource",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Experiment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Experiment"
                }
              }
            }
          },
          "201" : {
            "description" : "Created. The request has been fulfilled and a new experiment has been created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Experiment"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Experiments" ],
        "summary" : "Deletes an Experiment",
        "operationId" : "Experiments_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "experimentName",
          "in" : "path",
          "description" : "The Experiment identifier associated with the Experiment",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete successful."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204" : {
            "description" : "No Content. The request has been accepted but the policy was not found."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Experiments" ],
        "summary" : "Updates an Experiment by Experiment id",
        "description" : "Updates an Experiment",
        "operationId" : "Experiments_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "experimentName",
          "in" : "path",
          "description" : "The Experiment identifier associated with the Experiment",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Experiment Update Model",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentUpdateModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Experiment"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/LatencyScorecard" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Gets a Latency Scorecard for a given Experiment",
        "operationId" : "Reports_GetLatencyScorecards",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "experimentName",
          "in" : "path",
          "description" : "The Experiment identifier associated with the Experiment",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "endDateTimeUTC",
          "in" : "query",
          "description" : "The end DateTime of the Latency Scorecard in UTC",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aggregationInterval",
          "in" : "query",
          "description" : "The aggregation interval of the Latency Scorecard",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Daily", "Weekly", "Monthly" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LatencyScorecard"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/Timeseries" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Gets a Timeseries for a given Experiment",
        "operationId" : "Reports_GetTimeseries",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "experimentName",
          "in" : "path",
          "description" : "The Experiment identifier associated with the Experiment",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "startDateTimeUTC",
          "in" : "query",
          "description" : "The start DateTime of the Timeseries in UTC",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDateTimeUTC",
          "in" : "query",
          "description" : "The end DateTime of the Timeseries in UTC",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "aggregationInterval",
          "in" : "query",
          "description" : "The aggregation interval of the Timeseries",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Hourly", "Daily" ]
          }
        }, {
          "name" : "timeseriesType",
          "in" : "query",
          "description" : "The type of Timeseries",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "MeasurementCounts", "LatencyP50", "LatencyP75", "LatencyP95" ]
          }
        }, {
          "name" : "endpoint",
          "in" : "query",
          "description" : "The specific endpoint",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "The country associated with the Timeseries. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Timeseries"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/PreconfiguredEndpoints" : {
      "get" : {
        "tags" : [ "PreconfiguredEndpoints" ],
        "summary" : "Gets a list of Preconfigured Endpoints",
        "operationId" : "PreconfiguredEndpoints_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The Profile identifier associated with the Tenant and Partner",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreconfiguredEndpointList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Endpoint" : {
        "type" : "object",
        "properties" : {
          "endpoint" : {
            "type" : "string",
            "description" : "The endpoint URL"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the endpoint"
          }
        },
        "description" : "Defines the endpoint properties"
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Error message indicating why the operation failed.",
            "readOnly" : true
          }
        },
        "description" : "Error response indicates Front Door service is not able to process the incoming request. The reason is provided in the error message."
      },
      "Experiment" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the Experiment",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/ExperimentProperties"
          }
        },
        "description" : "Defines the properties of an Experiment",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID.",
              "readOnly" : true
            },
            "location" : {
              "type" : "string",
              "description" : "Resource location."
            },
            "name" : {
              "type" : "string",
              "description" : "Resource name.",
              "readOnly" : true
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            },
            "type" : {
              "type" : "string",
              "description" : "Resource type.",
              "readOnly" : true
            }
          },
          "description" : "Common resource representation."
        } ]
      },
      "ExperimentList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of Experiment objects if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Experiments within a resource group.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Experiment"
            }
          }
        },
        "description" : "Defines a list of Experiments. It contains a list of Experiment objects and a URL link to get the next set of results."
      },
      "ExperimentProperties" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the details or intents of the Experiment"
          },
          "enabledState" : {
            "type" : "string",
            "description" : "The state of the Experiment",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "endpointA" : {
            "$ref" : "#/components/schemas/Endpoint"
          },
          "endpointB" : {
            "$ref" : "#/components/schemas/Endpoint"
          },
          "resourceState" : {
            "$ref" : "#/components/schemas/NetworkExperimentResourceState"
          },
          "scriptFileUri" : {
            "type" : "string",
            "description" : "The uri to the Script used in the Experiment",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The description of Experiment status from the server side",
            "readOnly" : true
          }
        },
        "description" : "Defines the properties of an experiment"
      },
      "ExperimentUpdateModel" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ExperimentUpdateProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          }
        },
        "description" : "Defines modifiable attributes of an Experiment"
      },
      "ExperimentUpdateProperties" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the intent or details of the Experiment"
          },
          "enabledState" : {
            "type" : "string",
            "description" : "The state of the Experiment",
            "enum" : [ "Enabled", "Disabled" ]
          }
        },
        "description" : "Defines the properties of an experiment"
      },
      "LatencyMetric" : {
        "type" : "object",
        "properties" : {
          "aCLower95CI" : {
            "type" : "number",
            "description" : "The lower end of the 95% confidence interval for endpoint A",
            "readOnly" : true
          },
          "aHUpper95CI" : {
            "type" : "number",
            "description" : "The upper end of the 95% confidence interval for endpoint A",
            "readOnly" : true
          },
          "aValue" : {
            "type" : "number",
            "description" : "The metric value of the A endpoint",
            "readOnly" : true
          },
          "bCLower95CI" : {
            "type" : "number",
            "description" : "The lower end of the 95% confidence interval for endpoint B",
            "readOnly" : true
          },
          "bUpper95CI" : {
            "type" : "number",
            "description" : "The upper end of the 95% confidence interval for endpoint B",
            "readOnly" : true
          },
          "bValue" : {
            "type" : "number",
            "description" : "The metric value of the B endpoint",
            "readOnly" : true
          },
          "delta" : {
            "type" : "number",
            "description" : "The difference in value between endpoint A and B",
            "readOnly" : true
          },
          "deltaPercent" : {
            "type" : "number",
            "description" : "The percent difference between endpoint A and B",
            "readOnly" : true
          },
          "endDateTimeUTC" : {
            "type" : "string",
            "description" : "The end time of the Latency Scorecard in UTC",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Latency Metric",
            "readOnly" : true
          }
        },
        "description" : "Defines the properties of a latency metric used in the latency scorecard"
      },
      "LatencyScorecard" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LatencyScorecardProperties"
          }
        },
        "description" : "Defines the LatencyScorecard",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID.",
              "readOnly" : true
            },
            "location" : {
              "type" : "string",
              "description" : "Resource location."
            },
            "name" : {
              "type" : "string",
              "description" : "Resource name.",
              "readOnly" : true
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            },
            "type" : {
              "type" : "string",
              "description" : "Resource type.",
              "readOnly" : true
            }
          },
          "description" : "Common resource representation."
        } ]
      },
      "LatencyScorecardProperties" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "description" : "The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the Latency Scorecard",
            "readOnly" : true
          },
          "endDateTimeUTC" : {
            "type" : "string",
            "description" : "The end time of the Latency Scorecard in UTC",
            "format" : "date-time",
            "readOnly" : true
          },
          "endpointA" : {
            "type" : "string",
            "description" : "The A endpoint in the scorecard",
            "readOnly" : true
          },
          "endpointB" : {
            "type" : "string",
            "description" : "The B endpoint in the scorecard",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The unique identifier of the Latency Scorecard",
            "readOnly" : true
          },
          "latencyMetrics" : {
            "type" : "array",
            "description" : "The latency metrics of the Latency Scorecard",
            "items" : {
              "$ref" : "#/components/schemas/LatencyMetric"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Latency Scorecard",
            "readOnly" : true
          },
          "startDateTimeUTC" : {
            "type" : "string",
            "description" : "The start time of the Latency Scorecard in UTC",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Defines a the properties of a Latency Scorecard"
      },
      "NetworkExperimentResourceState" : {
        "type" : "string",
        "description" : "Defines the server side resource status",
        "enum" : [ "Creating", "Enabling", "Enabled", "Disabling", "Disabled", "Deleting" ]
      },
      "PreconfiguredEndpoint" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the endpoint"
          },
          "properties" : {
            "$ref" : "#/components/schemas/PreconfiguredEndpointProperties"
          }
        },
        "description" : "Defines the properties of a preconfigured endpoint",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID.",
              "readOnly" : true
            },
            "location" : {
              "type" : "string",
              "description" : "Resource location."
            },
            "name" : {
              "type" : "string",
              "description" : "Resource name.",
              "readOnly" : true
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            },
            "type" : {
              "type" : "string",
              "description" : "Resource type.",
              "readOnly" : true
            }
          },
          "description" : "Common resource representation."
        } ]
      },
      "PreconfiguredEndpointList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of PreconfiguredEndpoints if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of PreconfiguredEndpoints supported by NetworkExperiment.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/PreconfiguredEndpoint"
            }
          }
        },
        "description" : "Defines a list of preconfigured endpoints."
      },
      "PreconfiguredEndpointProperties" : {
        "type" : "object",
        "properties" : {
          "backend" : {
            "type" : "string",
            "description" : "The preconfigured endpoint backend"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the endpoint"
          },
          "endpoint" : {
            "type" : "string",
            "description" : "The endpoint that is preconfigured"
          },
          "endpointType" : {
            "type" : "string",
            "description" : "The type of endpoint",
            "enum" : [ "AFD", "AzureRegion", "CDN", "ATM" ]
          }
        },
        "description" : "Defines the properties of a preconfigured endpoint"
      },
      "Profile" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Gets a unique read-only string that changes whenever the resource is updated."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Profile"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ProfileProperties"
          }
        },
        "description" : "Defines an Network Experiment Profile and lists of Experiments",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID.",
              "readOnly" : true
            },
            "location" : {
              "type" : "string",
              "description" : "Resource location."
            },
            "name" : {
              "type" : "string",
              "description" : "Resource name.",
              "readOnly" : true
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            },
            "type" : {
              "type" : "string",
              "description" : "Resource type.",
              "readOnly" : true
            }
          },
          "description" : "Common resource representation."
        } ]
      },
      "ProfileList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of Profile objects if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Profiles within a resource group.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Profile"
            }
          }
        },
        "description" : "Defines a list of Profiles. It contains a list of Profile objects and a URL link to get the next set of results."
      },
      "ProfileProperties" : {
        "type" : "object",
        "properties" : {
          "enabledState" : {
            "type" : "string",
            "description" : "The state of the Experiment",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "resourceState" : {
            "$ref" : "#/components/schemas/NetworkExperimentResourceState"
          }
        },
        "description" : "Defines the properties of an experiment"
      },
      "ProfileUpdateModel" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ProfileUpdateProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          }
        },
        "description" : "Defines modifiable attributes of a Profile"
      },
      "ProfileUpdateProperties" : {
        "type" : "object",
        "properties" : {
          "enabledState" : {
            "type" : "string",
            "description" : "The enabled state of the Profile",
            "enum" : [ "Enabled", "Disabled" ]
          }
        },
        "description" : "Defines the properties of an experiment"
      },
      "Timeseries" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/TimeseriesProperties"
          }
        },
        "description" : "Defines the Timeseries",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID.",
              "readOnly" : true
            },
            "location" : {
              "type" : "string",
              "description" : "Resource location."
            },
            "name" : {
              "type" : "string",
              "description" : "Resource name.",
              "readOnly" : true
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            },
            "type" : {
              "type" : "string",
              "description" : "Resource type.",
              "readOnly" : true
            }
          },
          "description" : "Common resource representation."
        } ]
      },
      "TimeseriesDataPoint" : {
        "type" : "object",
        "properties" : {
          "dateTimeUTC" : {
            "type" : "string",
            "description" : "The DateTime of the Timeseries data point in UTC"
          },
          "value" : {
            "type" : "number",
            "description" : "The Value of the Timeseries data point"
          }
        },
        "description" : "Defines a timeseries datapoint used in a timeseries"
      },
      "TimeseriesProperties" : {
        "type" : "object",
        "properties" : {
          "aggregationInterval" : {
            "type" : "string",
            "description" : "The aggregation interval of the Timeseries",
            "enum" : [ "Hourly", "Daily" ]
          },
          "country" : {
            "type" : "string",
            "description" : "The country associated with the Timeseries. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html"
          },
          "endDateTimeUTC" : {
            "type" : "string",
            "description" : "The end DateTime of the Timeseries in UTC"
          },
          "endpoint" : {
            "type" : "string",
            "description" : "The endpoint associated with the Timeseries data point"
          },
          "startDateTimeUTC" : {
            "type" : "string",
            "description" : "The start DateTime of the Timeseries in UTC"
          },
          "timeseriesData" : {
            "type" : "array",
            "description" : "The set of data points for the timeseries",
            "items" : {
              "$ref" : "#/components/schemas/TimeseriesDataPoint"
            }
          },
          "timeseriesType" : {
            "type" : "string",
            "description" : "The type of Timeseries",
            "enum" : [ "MeasurementCounts", "LatencyP50", "LatencyP75", "LatencyP95" ]
          }
        },
        "description" : "Defines the properties of a timeseries"
      }
    },
    "parameters" : {
      "ExperimentNameParameter" : {
        "name" : "experimentName",
        "in" : "path",
        "description" : "The Experiment identifier associated with the Experiment",
        "required" : true,
        "schema" : {
          "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
          "type" : "string"
        }
      },
      "ProfileNameParameter" : {
        "name" : "profileName",
        "in" : "path",
        "description" : "The Profile identifier associated with the Tenant and Partner",
        "required" : true,
        "schema" : {
          "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
          "type" : "string"
        }
      },
      "ResourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Name of the Resource group within the Azure subscription.",
        "required" : true,
        "schema" : {
          "maxLength" : 80,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}