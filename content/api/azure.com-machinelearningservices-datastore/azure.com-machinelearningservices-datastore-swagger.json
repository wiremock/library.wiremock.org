{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure Machine Learning Datastore Management Client",
    "version" : "2019-09-30"
  },
  "servers" : [ {
    "url" : "https://azure.local/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores" : {
      "get" : {
        "tags" : [ "DataStore" ],
        "summary" : "Get Datastores list.",
        "description" : "Get the list of Datastores attached to the workspace.",
        "operationId" : "DataStores_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Name of the resource group in which the workspace is located.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataStoreNames",
          "in" : "query",
          "description" : "List of Datastore names.",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "uniqueItems" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "continuationToken",
          "in" : "query",
          "description" : "The Continuation Token.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Count of Datastores to be returned.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          }
        }, {
          "name" : "includeSecret",
          "in" : "query",
          "description" : "Whether to include the datastore secret in the response.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of Datastores are returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedDataStoreList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "DataStore" ],
        "summary" : "Create or update a Datastore.",
        "description" : "Create or update a Datastore in the given workspace.",
        "operationId" : "DataStores_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Name of the resource group in which the workspace is located.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createIfNotExists",
          "in" : "query",
          "description" : "If set to true, the call will create an Datastore if it doesn't exist.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "skipValidation",
          "in" : "query",
          "description" : "If set to true, the call will skip Datastore validation.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Datastore details.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataStore"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "The Datastore is created/updated successfully."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DataStore" ],
        "summary" : "Delete all Datastores.",
        "description" : "Delete all Datastores in the workspace.",
        "operationId" : "DataStores_DeleteAll",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Name of the resource group in which the workspace is located.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "All the Datastores in the workspace are deleted successfully."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}" : {
      "get" : {
        "tags" : [ "DataStore" ],
        "summary" : "Get Datastore details.",
        "description" : "Get details of a Datastore with a specific name.",
        "operationId" : "DataStores_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Name of the resource group in which the workspace is located.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The Datastore name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The Datastore details are returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataStore"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DataStore" ],
        "summary" : "Update or create a Datastore.",
        "description" : "Update or create a Datastore in the given workspace.",
        "operationId" : "DataStores_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Name of the resource group in which the workspace is located.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The Datastore name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createIfNotExists",
          "in" : "query",
          "description" : "If set to true, the call will create an Datastore if it doesn't exist.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "skipValidation",
          "in" : "query",
          "description" : "If set to true, the call will skip Datastore validation.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Datastore details.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataStore"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "The Datastore is created/updated successfully."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DataStore" ],
        "summary" : "Delete a Datastore.",
        "description" : "Delete a Datastore with a specific name.",
        "operationId" : "DataStores_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Name of the resource group in which the workspace is located.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The Datastore name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The Datastore is deleted successfully."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/default" : {
      "get" : {
        "tags" : [ "DataStoreDefault" ],
        "summary" : "Get the default Datastore.",
        "description" : "Get the default Datastore in the workspace.",
        "operationId" : "DataStores_GetDefault",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Name of the resource group in which the workspace is located.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The default Datastore is returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataStore"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/default/{name}" : {
      "put" : {
        "tags" : [ "DataStoreDefault" ],
        "summary" : "Set a default Datastore.",
        "description" : "Set a default Datastore in the workspace.",
        "operationId" : "DataStores_SetDefault",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Name of the resource group in which the workspace is located.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The Datastore name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The default Datastore is set successfully."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AzureDataLake" : {
        "type" : "object",
        "properties" : {
          "authorityUrl" : {
            "type" : "string",
            "description" : "The authority URL used for authentication"
          },
          "certificate" : {
            "type" : "string",
            "description" : "The content of the certificate used for authentication"
          },
          "clientId" : {
            "type" : "string",
            "description" : "The Client ID/Application ID",
            "format" : "uuid"
          },
          "clientSecret" : {
            "type" : "string",
            "description" : "The client secret"
          },
          "isCertAuth" : {
            "type" : "boolean",
            "description" : "Is it using certificate to authenticate. If false then use client secret"
          },
          "resourceGroup" : {
            "type" : "string",
            "description" : "Resource Group Name"
          },
          "resourceUri" : {
            "type" : "string",
            "description" : "The resource the service principal/app has access to"
          },
          "storeName" : {
            "type" : "string",
            "description" : "The Azure Data Lake store name"
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "Subscription Id",
            "format" : "uuid"
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The ID of the tenant the service principal/app belongs to",
            "format" : "uuid"
          },
          "thumbprint" : {
            "type" : "string",
            "description" : "The thumbprint of the certificate above"
          }
        }
      },
      "AzurePostgreSql" : {
        "type" : "object",
        "properties" : {
          "databaseName" : {
            "type" : "string",
            "description" : "The Azure PostgreSQL database name"
          },
          "endpoint" : {
            "type" : "string",
            "description" : "The Azure PostgreSQL server host endpoint"
          },
          "portNumber" : {
            "type" : "string",
            "description" : "The Azure PostgreSQL port number"
          },
          "resourceGroup" : {
            "type" : "string",
            "description" : "Resource Group Name"
          },
          "serverName" : {
            "type" : "string",
            "description" : "The Azure PostgreSQL server name"
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "Subscription Id",
            "format" : "uuid"
          },
          "userId" : {
            "type" : "string",
            "description" : "The Azure PostgreSQL user id"
          },
          "userPassword" : {
            "type" : "string",
            "description" : "The Azure PostgreSQL user password"
          }
        }
      },
      "AzureSqlDatabase" : {
        "type" : "object",
        "properties" : {
          "authorityUrl" : {
            "type" : "string",
            "description" : "The authority URL used for authentication"
          },
          "certificate" : {
            "type" : "string",
            "description" : "The content of the certificate used for authentication"
          },
          "clientId" : {
            "type" : "string",
            "description" : "The Client ID/Application ID",
            "format" : "uuid"
          },
          "clientSecret" : {
            "type" : "string",
            "description" : "The client secret"
          },
          "databaseName" : {
            "type" : "string",
            "description" : "The Azure SQL database name"
          },
          "endpoint" : {
            "type" : "string",
            "description" : "The server host endpoint"
          },
          "isCertAuth" : {
            "type" : "boolean",
            "description" : "Is it using certificate to authenticate. If false then use client secret"
          },
          "resourceGroup" : {
            "type" : "string",
            "description" : "Resource Group Name"
          },
          "resourceUri" : {
            "type" : "string",
            "description" : "The resource the service principal/app has access to"
          },
          "serverName" : {
            "type" : "string",
            "description" : "The Azure SQL server name"
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "Subscription Id",
            "format" : "uuid"
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The ID of the tenant the service principal/app belongs to",
            "format" : "uuid"
          },
          "thumbprint" : {
            "type" : "string",
            "description" : "The thumbprint of the certificate above"
          }
        }
      },
      "AzureStorage" : {
        "type" : "object",
        "properties" : {
          "accountKey" : {
            "type" : "string",
            "description" : "Storage Account Key (Deprecated)"
          },
          "accountName" : {
            "type" : "string",
            "description" : "Storage Account Name"
          },
          "areWorkspaceManagedIdentitiesAllowed" : {
            "type" : "boolean",
            "description" : "Indicate if we are using Workspace ManagedIdentities/MSI token"
          },
          "blobCacheTimeout" : {
            "type" : "integer",
            "description" : "If this is an Microsoft.MachineLearning.DataStore.Contracts.DataStoreType.AzureBlob, the length of time (in seconds) to cache files locally after they are accessed (downloaded).",
            "format" : "int32"
          },
          "clientCredentials" : {
            "$ref" : "#/components/schemas/ClientCredentials"
          },
          "containerName" : {
            "type" : "string",
            "description" : "The storage container name"
          },
          "credential" : {
            "type" : "string",
            "description" : "The credential"
          },
          "credentialType" : {
            "type" : "string",
            "description" : "The credential type",
            "enum" : [ "None", "Sas", "AccountKey", "ClientCredentials" ]
          },
          "endpoint" : {
            "type" : "string",
            "description" : "The host of the container"
          },
          "isSas" : {
            "type" : "boolean",
            "description" : "Indicate if we are using SAS token or Account Key (Deprecated)"
          },
          "protocol" : {
            "type" : "string",
            "description" : "The protocol to use. Defaults to https"
          },
          "resourceGroup" : {
            "type" : "string",
            "description" : "Resource Group Name"
          },
          "sasToken" : {
            "type" : "string",
            "description" : "SAS Token for the container (Deprecated)"
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "Subscription Id",
            "format" : "uuid"
          }
        }
      },
      "ClientCredentials" : {
        "type" : "object",
        "properties" : {
          "authorityUrl" : {
            "type" : "string",
            "description" : "The authority URL used for authentication"
          },
          "certificate" : {
            "type" : "string",
            "description" : "The content of the certificate used for authentication"
          },
          "clientId" : {
            "type" : "string",
            "description" : "The Client ID/Application ID",
            "format" : "uuid"
          },
          "clientSecret" : {
            "type" : "string",
            "description" : "The client secret"
          },
          "isCertAuth" : {
            "type" : "boolean",
            "description" : "Is it using certificate to authenticate. If false then use client secret"
          },
          "resourceGroup" : {
            "type" : "string",
            "description" : "Resource Group Name"
          },
          "resourceUri" : {
            "type" : "string",
            "description" : "The resource the service principal/app has access to"
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "Subscription Id",
            "format" : "uuid"
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The ID of the tenant the service principal/app belongs to",
            "format" : "uuid"
          },
          "thumbprint" : {
            "type" : "string",
            "description" : "The thumbprint of the certificate above"
          }
        }
      },
      "DataStore" : {
        "type" : "object",
        "properties" : {
          "azureDataLakeSection" : {
            "$ref" : "#/components/schemas/AzureDataLake"
          },
          "azurePostgreSqlSection" : {
            "$ref" : "#/components/schemas/AzurePostgreSql"
          },
          "azureSqlDatabaseSection" : {
            "$ref" : "#/components/schemas/AzureSqlDatabase"
          },
          "azureStorageSection" : {
            "$ref" : "#/components/schemas/AzureStorage"
          },
          "dataStoreType" : {
            "type" : "string",
            "description" : "The Azure storage service this datastore points to.",
            "enum" : [ "AzureBlob", "AzureFile", "AzureDataLake", "AzureSqlDatabase", "AzurePostgreSql", "DBFS", "AzureDataLakeGen2", "GlusterFs" ]
          },
          "glusterFsSection" : {
            "$ref" : "#/components/schemas/GlusterFs"
          },
          "hasBeenValidated" : {
            "type" : "boolean",
            "description" : "A read only property that denotes whether the service datastore has been validated with credentials."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the datastore"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Tags to datastore"
          }
        }
      },
      "ErrorDetails" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The error code."
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error (e.g., the name of the property in error)."
          }
        },
        "description" : "The error details."
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "correlation" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Dictionary containing correlation details for the error."
          },
          "environment" : {
            "type" : "string",
            "description" : "The hosting environment."
          },
          "error" : {
            "$ref" : "#/components/schemas/RootError"
          },
          "location" : {
            "type" : "string",
            "description" : "The Azure region."
          },
          "time" : {
            "type" : "string",
            "description" : "The time in UTC.",
            "format" : "date-time"
          }
        },
        "description" : "The error response."
      },
      "GlusterFs" : {
        "type" : "object",
        "properties" : {
          "serverAddress" : {
            "type" : "string",
            "description" : "The server address of one of the servers that hosts the GlusterFS. Can be either the IP address\r\nor server name."
          },
          "volumeName" : {
            "type" : "string",
            "description" : "The name of the created GlusterFS volume."
          }
        }
      },
      "InnerErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The error code."
          },
          "innerError" : {
            "$ref" : "#/components/schemas/InnerErrorResponse"
          }
        },
        "description" : "A nested structure of errors."
      },
      "PaginatedDataStoreList" : {
        "type" : "object",
        "properties" : {
          "continuationToken" : {
            "type" : "string",
            "description" : "The token used in retrieving the next page.  If null, there are no additional pages."
          },
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page constructed using the continuationToken.  If null, there are no additional pages."
          },
          "value" : {
            "type" : "array",
            "description" : "An array of objects of type DataStore.",
            "items" : {
              "$ref" : "#/components/schemas/DataStore"
            }
          }
        },
        "description" : "A paginated list of DataStores."
      },
      "RootError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The service-defined error code. Supported error codes: ServiceError, UserError, ValidationError, AzureStorageError, TransientError, RequestThrottled."
          },
          "details" : {
            "type" : "array",
            "description" : "The related errors that occurred during the request.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetails"
            }
          },
          "innerError" : {
            "$ref" : "#/components/schemas/InnerErrorResponse"
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable representation of the error."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error (e.g., the name of the property in error)."
          }
        },
        "description" : "The root error."
      }
    },
    "parameters" : {
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The Name of the resource group in which the workspace is located.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The Azure Subscription ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "workspaceNameParameter" : {
        "name" : "workspaceName",
        "in" : "path",
        "description" : "The name of the workspace.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2"
      }
    }
  }
}