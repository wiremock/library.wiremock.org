{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure Media Services",
    "description" : "This Swagger was generated by the API Framework.",
    "version" : "2018-07-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets" : {
      "get" : {
        "summary" : "List Assets",
        "description" : "List Assets in the Media Services account with optional filtering and ordering",
        "operationId" : "Assets_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Restricts the set of items returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Specifies the key by which the result collection should be ordered.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}" : {
      "get" : {
        "summary" : "Get an Asset",
        "description" : "Get the details of an Asset in the Media Services account",
        "operationId" : "Assets_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Asset"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Create or update an Asset",
        "description" : "Creates or updates an Asset in the Media Services account",
        "operationId" : "Assets_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Asset"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Asset"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Asset"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete an Asset.",
        "description" : "Deletes an Asset in the Media Services account",
        "operationId" : "Assets_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "NoContent"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update an Asset",
        "description" : "Updates an existing Asset in the Media Services account",
        "operationId" : "Assets_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Asset"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Asset"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters" : {
      "get" : {
        "summary" : "List Asset Filters",
        "description" : "List Asset Filters associated with the specified Asset.",
        "operationId" : "AssetFilters_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetFilterCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters/{filterName}" : {
      "get" : {
        "summary" : "Get an Asset Filter.",
        "description" : "Get the details of an Asset Filter associated with the specified Asset.",
        "operationId" : "AssetFilters_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterName",
          "in" : "path",
          "description" : "The Asset Filter name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetFilter"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Create or update an Asset Filter",
        "description" : "Creates or updates an Asset Filter associated with the specified Asset.",
        "operationId" : "AssetFilters_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterName",
          "in" : "path",
          "description" : "The Asset Filter name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssetFilter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetFilter"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetFilter"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete an Asset Filter.",
        "description" : "Deletes an Asset Filter associated with the specified Asset.",
        "operationId" : "AssetFilters_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterName",
          "in" : "path",
          "description" : "The Asset Filter name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "NoContent"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update an Asset Filter",
        "description" : "Updates an existing Asset Filter associated with the specified Asset.",
        "operationId" : "AssetFilters_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterName",
          "in" : "path",
          "description" : "The Asset Filter name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssetFilter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetFilter"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/getEncryptionKey" : {
      "post" : {
        "summary" : "Gets the Asset storage key",
        "description" : "Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API",
        "operationId" : "Assets_GetEncryptionKey",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageEncryptedAssetDecryptionData"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/listContainerSas" : {
      "post" : {
        "summary" : "List the Asset URLs",
        "description" : "Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys.",
        "operationId" : "Assets_ListContainerSas",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListContainerSasInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetContainerSas"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/listStreamingLocators" : {
      "post" : {
        "summary" : "List Streaming Locators",
        "description" : "Lists Streaming Locators which are associated with this asset.",
        "operationId" : "Assets_ListStreamingLocators",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetName",
          "in" : "path",
          "description" : "The Asset name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListStreamingLocatorsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ODataError"
          }
        },
        "description" : "The API error."
      },
      "Asset" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AssetProperties"
          }
        },
        "description" : "An Asset.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "AssetCollection" : {
        "type" : "object",
        "properties" : {
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "A link to the next page of the collection (when the collection contains too many results to return in one response)."
          },
          "value" : {
            "type" : "array",
            "description" : "A collection of Asset items.",
            "items" : {
              "$ref" : "#/components/schemas/Asset"
            }
          }
        },
        "description" : "A collection of Asset items."
      },
      "AssetContainerSas" : {
        "type" : "object",
        "properties" : {
          "assetContainerSasUrls" : {
            "type" : "array",
            "description" : "The list of Asset container SAS URLs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The Asset Storage container SAS URLs."
      },
      "AssetFileEncryptionMetadata" : {
        "required" : [ "assetFileId" ],
        "type" : "object",
        "properties" : {
          "assetFileId" : {
            "type" : "string",
            "description" : "The Asset File Id.",
            "format" : "uuid"
          },
          "assetFileName" : {
            "type" : "string",
            "description" : "The Asset File name."
          },
          "initializationVector" : {
            "type" : "string",
            "description" : "The Asset File initialization vector."
          }
        },
        "description" : "The Asset File Storage encryption metadata."
      },
      "AssetFilter" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MediaFilterProperties"
          }
        },
        "description" : "An Asset Filter.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "AssetFilterCollection" : {
        "type" : "object",
        "properties" : {
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "A link to the next page of the collection (when the collection contains too many results to return in one response)."
          },
          "value" : {
            "type" : "array",
            "description" : "A collection of AssetFilter items.",
            "items" : {
              "$ref" : "#/components/schemas/AssetFilter"
            }
          }
        },
        "description" : "A collection of AssetFilter items."
      },
      "AssetProperties" : {
        "type" : "object",
        "properties" : {
          "alternateId" : {
            "type" : "string",
            "description" : "The alternate ID of the Asset."
          },
          "assetId" : {
            "type" : "string",
            "description" : "The Asset ID.",
            "format" : "uuid",
            "nullable" : false,
            "readOnly" : true
          },
          "container" : {
            "type" : "string",
            "description" : "The name of the asset blob container."
          },
          "created" : {
            "type" : "string",
            "description" : "The creation date of the Asset.",
            "format" : "date-time",
            "nullable" : false,
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The Asset description."
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The last modified date of the Asset.",
            "format" : "date-time",
            "nullable" : false,
            "readOnly" : true
          },
          "storageAccountName" : {
            "type" : "string",
            "description" : "The name of the storage account."
          },
          "storageEncryptionFormat" : {
            "type" : "string",
            "description" : "The Asset encryption format. One of None or MediaStorageEncryption.",
            "nullable" : false,
            "readOnly" : true,
            "enum" : [ "None", "MediaStorageClientEncryption" ]
          }
        },
        "description" : "The Asset properties."
      },
      "AssetStreamingLocator" : {
        "type" : "object",
        "properties" : {
          "assetName" : {
            "type" : "string",
            "description" : "Asset Name.",
            "readOnly" : true
          },
          "created" : {
            "type" : "string",
            "description" : "The creation time of the Streaming Locator.",
            "format" : "date-time",
            "nullable" : false,
            "readOnly" : true
          },
          "defaultContentKeyPolicyName" : {
            "type" : "string",
            "description" : "Name of the default ContentKeyPolicy used by this Streaming Locator.",
            "readOnly" : true
          },
          "endTime" : {
            "type" : "string",
            "description" : "The end time of the Streaming Locator.",
            "format" : "date-time",
            "nullable" : false,
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Streaming Locator name.",
            "readOnly" : true
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the Streaming Locator.",
            "format" : "date-time",
            "nullable" : false,
            "readOnly" : true
          },
          "streamingLocatorId" : {
            "type" : "string",
            "description" : "StreamingLocatorId of the Streaming Locator.",
            "format" : "uuid",
            "nullable" : false,
            "readOnly" : true
          },
          "streamingPolicyName" : {
            "type" : "string",
            "description" : "Name of the Streaming Policy used by this Streaming Locator.",
            "readOnly" : true
          }
        },
        "description" : "Properties of the Streaming Locator."
      },
      "FilterTrackPropertyCondition" : {
        "required" : [ "operation", "property", "value" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "description" : "The track property condition operation.",
            "enum" : [ "Equal", "NotEqual" ]
          },
          "property" : {
            "type" : "string",
            "description" : "The track property type.",
            "enum" : [ "Unknown", "Type", "Name", "Language", "FourCC", "Bitrate" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The track property value."
          }
        },
        "description" : "The class to specify one track property condition."
      },
      "FilterTrackSelection" : {
        "required" : [ "trackSelections" ],
        "type" : "object",
        "properties" : {
          "trackSelections" : {
            "type" : "array",
            "description" : "The track selections.",
            "items" : {
              "$ref" : "#/components/schemas/FilterTrackPropertyCondition"
            }
          }
        },
        "description" : "Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation."
      },
      "FirstQuality" : {
        "required" : [ "bitrate" ],
        "type" : "object",
        "properties" : {
          "bitrate" : {
            "type" : "integer",
            "description" : "The first quality bitrate.",
            "format" : "int32"
          }
        },
        "description" : "Filter First Quality"
      },
      "ListContainerSasInput" : {
        "type" : "object",
        "properties" : {
          "expiryTime" : {
            "type" : "string",
            "description" : "The SAS URL expiration time.  This must be less than 24 hours from the current time.",
            "format" : "date-time"
          },
          "permissions" : {
            "type" : "string",
            "description" : "The permissions to set on the SAS URL.",
            "enum" : [ "Read", "ReadWrite", "ReadWriteDelete" ]
          }
        },
        "description" : "The parameters to the list SAS request."
      },
      "ListStreamingLocatorsResponse" : {
        "type" : "object",
        "properties" : {
          "streamingLocators" : {
            "type" : "array",
            "description" : "The list of Streaming Locators.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AssetStreamingLocator"
            }
          }
        },
        "description" : "The Streaming Locators associated with this Asset."
      },
      "MediaFilterProperties" : {
        "type" : "object",
        "properties" : {
          "firstQuality" : {
            "$ref" : "#/components/schemas/FirstQuality"
          },
          "presentationTimeRange" : {
            "$ref" : "#/components/schemas/PresentationTimeRange"
          },
          "tracks" : {
            "type" : "array",
            "description" : "The tracks selection conditions.",
            "items" : {
              "$ref" : "#/components/schemas/FilterTrackSelection"
            }
          }
        },
        "description" : "The Media Filter properties."
      },
      "ODataError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A language-independent error name."
          },
          "details" : {
            "type" : "array",
            "description" : "The error details.",
            "items" : {
              "$ref" : "#/components/schemas/ODataError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error (for example, the name of the property in error)."
          }
        },
        "description" : "Information about an error."
      },
      "PresentationTimeRange" : {
        "type" : "object",
        "properties" : {
          "endTimestamp" : {
            "type" : "integer",
            "description" : "The absolute end time boundary.",
            "format" : "int64"
          },
          "forceEndTimestamp" : {
            "type" : "boolean",
            "description" : "The indicator of forcing existing of end time stamp."
          },
          "liveBackoffDuration" : {
            "type" : "integer",
            "description" : "The relative to end right edge.",
            "format" : "int64"
          },
          "presentationWindowDuration" : {
            "type" : "integer",
            "description" : "The relative to end sliding window.",
            "format" : "int64"
          },
          "startTimestamp" : {
            "type" : "integer",
            "description" : "The absolute start time boundary.",
            "format" : "int64"
          },
          "timescale" : {
            "type" : "integer",
            "description" : "The time scale of time stamps.",
            "format" : "int64"
          }
        },
        "description" : "The presentation time range, this is asset related and not recommended for Account Filter."
      },
      "StorageEncryptedAssetDecryptionData" : {
        "type" : "object",
        "properties" : {
          "assetFileEncryptionMetadata" : {
            "type" : "array",
            "description" : "Asset File encryption metadata.",
            "items" : {
              "$ref" : "#/components/schemas/AssetFileEncryptionMetadata"
            }
          },
          "key" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "The Asset File storage encryption key.",
            "format" : "byte"
          }
        },
        "description" : "Data needed to decrypt asset files encrypted with legacy storage encryption."
      }
    },
    "parameters" : {
      "ApiVersion" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The Version of the API to be used with the client request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "MediaServicesAccountName" : {
        "name" : "accountName",
        "in" : "path",
        "description" : "The Media Services account name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group within the Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The unique identifier for a Microsoft Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}