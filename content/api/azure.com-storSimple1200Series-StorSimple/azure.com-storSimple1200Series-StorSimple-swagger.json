{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "StorSimpleManagementClient",
    "version" : "2016-10-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.StorSimple/operations" : {
      "get" : {
        "tags" : [ "AvailableProviderOperations" ],
        "description" : "List of AvailableProviderOperations",
        "operationId" : "AvailableProviderOperations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableProviderOperations"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorSimple/managers" : {
      "get" : {
        "tags" : [ "Managers" ],
        "description" : "Retrieves all the managers in a subscription.",
        "operationId" : "Managers_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of StorSimple managers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagerList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers" : {
      "get" : {
        "tags" : [ "Managers" ],
        "description" : "Retrieves all the managers in a resource group.",
        "operationId" : "Managers_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of StorSimple managers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagerList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}" : {
      "get" : {
        "tags" : [ "Managers" ],
        "description" : "Returns the properties of the specified manager name.",
        "operationId" : "Managers_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The StorSimple manager.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Manager"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Managers" ],
        "description" : "Creates or updates the manager.",
        "operationId" : "Managers_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The manager.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Manager"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The StorSimple manager has been successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Manager"
                }
              }
            }
          },
          "201" : {
            "description" : "The StorSimple manager has been successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Manager"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Managers" ],
        "description" : "Deletes the manager.",
        "operationId" : "Managers_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The StorSimple manager has been successfully deleted"
          },
          "204" : {
            "description" : "The StorSimple manager is already in a deleted state"
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Managers" ],
        "description" : "Updates the StorSimple Manager.",
        "operationId" : "Managers_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The manager update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagerPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The StorSimple manager has been successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Manager"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords" : {
      "get" : {
        "tags" : [ "AccessControlRecords" ],
        "description" : "Retrieves all the access control records in a manager.",
        "operationId" : "AccessControlRecords_ListByManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of access control records.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessControlRecordList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}" : {
      "get" : {
        "tags" : [ "AccessControlRecords" ],
        "description" : "Returns the properties of the specified access control record name.",
        "operationId" : "AccessControlRecords_Get",
        "parameters" : [ {
          "name" : "accessControlRecordName",
          "in" : "path",
          "description" : "Name of access control record to be fetched.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The access control record.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessControlRecord"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "AccessControlRecords" ],
        "description" : "Creates or Updates an access control record.",
        "operationId" : "AccessControlRecords_CreateOrUpdate",
        "parameters" : [ {
          "name" : "accessControlRecordName",
          "in" : "path",
          "description" : "The name of the access control record.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The access control record to be added or updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccessControlRecord"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the access control record.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessControlRecord"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the access control record."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "AccessControlRecords" ],
        "description" : "Deletes the access control record.",
        "operationId" : "AccessControlRecords_Delete",
        "parameters" : [ {
          "name" : "accessControlRecordName",
          "in" : "path",
          "description" : "The name of the access control record to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the access control record."
          },
          "204" : {
            "description" : "Successfully deleted the access control record."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/alerts" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "description" : "Retrieves all the alerts in a manager.",
        "operationId" : "Alerts_ListByManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of alerts.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/backups" : {
      "get" : {
        "tags" : [ "Backups" ],
        "description" : "Retrieves all the backups in a manager.",
        "operationId" : "Backups_ListByManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of backups.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/certificates/{certificateName}" : {
      "put" : {
        "tags" : [ "Managers" ],
        "description" : "Upload Vault Cred Certificate.\r\nReturns UploadCertificateResponse",
        "operationId" : "Managers_UploadRegistrationCertificate",
        "parameters" : [ {
          "name" : "certificateName",
          "in" : "path",
          "description" : "Certificate Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "UploadCertificateRequest Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadCertificateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Upload Vault Certificate",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCertificateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/clearAlerts" : {
      "post" : {
        "tags" : [ "Alerts" ],
        "description" : "Clear the alerts.",
        "operationId" : "Alerts_Clear",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The clear alert request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClearAlertRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Successfully cleared the alerts."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Retrieves all the devices in a manager.",
        "operationId" : "Devices_ListByManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify $expand=details to populate additional fields related to the device.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of devices.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Returns the properties of the specified device name.",
        "operationId" : "Devices_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify $expand=details to populate additional fields related to the device.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The device.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Device"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "Deletes the device.",
        "operationId" : "Devices_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the device."
          },
          "204" : {
            "description" : "Successfully deleted the device."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Devices" ],
        "description" : "Patches the device.",
        "operationId" : "Devices_Patch",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device Name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Patch representation of the device.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DevicePatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully patched the device.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Device"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to patch the device."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/alertSettings/default" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Returns the alert settings of the specified device name.",
        "operationId" : "Devices_GetAlertSettings",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The alert settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertSettings"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "Creates or updates the alert settings",
        "operationId" : "Devices_CreateOrUpdateAlertSettings",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The alert settings.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the network settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertSettings"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the network settings."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups" : {
      "get" : {
        "tags" : [ "BackupScheduleGroups" ],
        "description" : "Retrieves all the backup schedule groups in a device.",
        "operationId" : "BackupScheduleGroups_ListByDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The name of the device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of backup schedule groups.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupScheduleGroupList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups/{scheduleGroupName}" : {
      "get" : {
        "tags" : [ "BackupScheduleGroups" ],
        "description" : "Returns the properties of the specified backup schedule group name.",
        "operationId" : "BackupScheduleGroups_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The name of the device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scheduleGroupName",
          "in" : "path",
          "description" : "The name of the schedule group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The backup schedule group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupScheduleGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "BackupScheduleGroups" ],
        "description" : "Creates or Updates the backup schedule Group.",
        "operationId" : "BackupScheduleGroups_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The name of the device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scheduleGroupName",
          "in" : "path",
          "description" : "The name of the schedule group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The schedule group to be created",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupScheduleGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the backup schedule group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupScheduleGroup"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the backup schedule group."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "BackupScheduleGroups" ],
        "description" : "Deletes the backup schedule group.",
        "operationId" : "BackupScheduleGroups_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The name of the device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scheduleGroupName",
          "in" : "path",
          "description" : "The name of the schedule group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the backup schedule group."
          },
          "204" : {
            "description" : "Successfully deleted the backup schedule group."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups" : {
      "get" : {
        "tags" : [ "Backups" ],
        "description" : "Retrieves all the backups in a device. Can be used to get the backups for failover also.",
        "operationId" : "Backups_ListByDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forFailover",
          "in" : "query",
          "description" : "Set to true if you need backups which can be used for failover.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of backups.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}" : {
      "delete" : {
        "tags" : [ "Backups" ],
        "description" : "Deletes the backup.",
        "operationId" : "Backups_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupName",
          "in" : "path",
          "description" : "The backup name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the backup."
          },
          "204" : {
            "description" : "Successfully deleted the backup."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}/elements/{elementName}/clone" : {
      "post" : {
        "tags" : [ "Backups" ],
        "description" : "Clones the given backup element to a new disk or share with given details.",
        "operationId" : "Backups_Clone",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupName",
          "in" : "path",
          "description" : "The backup name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elementName",
          "in" : "path",
          "description" : "The backup element name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The clone request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloneRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully cloned."
          },
          "202" : {
            "description" : "Accepted the request to clone."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings" : {
      "get" : {
        "tags" : [ "ChapSettings" ],
        "description" : "Retrieves all the chap settings in a device.",
        "operationId" : "ChapSettings_ListByDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The name of the device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of chap settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChapSettingsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings/{chapUserName}" : {
      "get" : {
        "tags" : [ "ChapSettings" ],
        "description" : "Returns the properties of the specified chap setting name.",
        "operationId" : "ChapSettings_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "chapUserName",
          "in" : "path",
          "description" : "The user name of chap to be fetched.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The chap setting.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChapSettings"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "ChapSettings" ],
        "description" : "Creates or updates the chap setting.",
        "operationId" : "ChapSettings_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "chapUserName",
          "in" : "path",
          "description" : "The chap user name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The chap setting to be added or updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChapSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the chap setting.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChapSettings"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the chap setting."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "ChapSettings" ],
        "description" : "Deletes the chap setting.",
        "operationId" : "ChapSettings_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "chapUserName",
          "in" : "path",
          "description" : "The chap user name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the chap setting."
          },
          "204" : {
            "description" : "Successfully deleted the chap setting."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/deactivate" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "Deactivates the device.",
        "operationId" : "Devices_Deactivate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to deactivate the device."
          },
          "204" : {
            "description" : "Successfully deactivated the device."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/disks" : {
      "get" : {
        "tags" : [ "IscsiDisks" ],
        "description" : "Retrieves all the iSCSI disks in a device.",
        "operationId" : "IscsiDisks_ListByDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of iSCSI disks.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ISCSIDiskList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/download" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "Downloads updates on the device.",
        "operationId" : "Devices_DownloadUpdates",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to download updates."
          },
          "204" : {
            "description" : "Successfully downloaded updates."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failover" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "Fails over the device to another device.",
        "operationId" : "Devices_Failover",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The failover request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailoverRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted the request to failover the device."
          },
          "204" : {
            "description" : "Successfully completed failover of the device."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failoverTargets" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Retrieves all the devices which can be used as failover targets for the given device.",
        "operationId" : "Devices_ListFailoverTarget",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify $expand=details to populate additional fields related to the device.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of devices for failover.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers" : {
      "get" : {
        "tags" : [ "FileServers" ],
        "description" : "Retrieves all the file servers in a device.",
        "operationId" : "FileServers_ListByDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of file servers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileServerList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}" : {
      "get" : {
        "tags" : [ "FileServers" ],
        "description" : "Returns the properties of the specified file server name.",
        "operationId" : "FileServers_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The file server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileServer"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "FileServers" ],
        "description" : "Creates or updates the file server.",
        "operationId" : "FileServers_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The file server.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FileServer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the file server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileServer"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the file server."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "FileServers" ],
        "description" : "Deletes the file server.",
        "operationId" : "FileServers_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the file server."
          },
          "204" : {
            "description" : "Successfully deleted the file server."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/backup" : {
      "post" : {
        "tags" : [ "FileServers" ],
        "description" : "Backup the file server now.",
        "operationId" : "FileServers_BackupNow",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to backup the file server."
          },
          "204" : {
            "description" : "Successfully completed backup of the file server."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metrics" : {
      "get" : {
        "tags" : [ "FileServers" ],
        "description" : "Gets the file server metrics.",
        "operationId" : "FileServers_ListMetrics",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The name of the device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The name of the file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metrics.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metricsDefinitions" : {
      "get" : {
        "tags" : [ "FileServers" ],
        "description" : "Retrieves metric definitions of all metrics aggregated at the file server.",
        "operationId" : "FileServers_ListMetricDefinition",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The name of the device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The name of the file server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metric definitions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares" : {
      "get" : {
        "tags" : [ "FileShares" ],
        "description" : "Retrieves all the file shares in a file server.",
        "operationId" : "FileShares_ListByFileServer",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of file shares.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileShareList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}" : {
      "get" : {
        "tags" : [ "FileShares" ],
        "description" : "Returns the properties of the specified file share name.",
        "operationId" : "FileShares_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shareName",
          "in" : "path",
          "description" : "The file share name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The file share.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileShare"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "FileShares" ],
        "description" : "Creates or updates the file share.",
        "operationId" : "FileShares_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shareName",
          "in" : "path",
          "description" : "The file share name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The file share.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FileShare"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the file share.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileShare"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the file share."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "FileShares" ],
        "description" : "Deletes the file share.",
        "operationId" : "FileShares_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shareName",
          "in" : "path",
          "description" : "The file share Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the file share."
          },
          "204" : {
            "description" : "Successfully deleted the file share."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metrics" : {
      "get" : {
        "tags" : [ "FileShares" ],
        "description" : "Gets the file share metrics",
        "operationId" : "FileShares_ListMetrics",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shareName",
          "in" : "path",
          "description" : "The file share name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metrics.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metricsDefinitions" : {
      "get" : {
        "tags" : [ "FileShares" ],
        "description" : "Retrieves metric definitions of all metrics aggregated at the file share.",
        "operationId" : "FileShares_ListMetricDefinition",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileServerName",
          "in" : "path",
          "description" : "The file server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shareName",
          "in" : "path",
          "description" : "The file share name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metric definitions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/install" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "Installs the updates on the device.",
        "operationId" : "Devices_InstallUpdates",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to install updates."
          },
          "204" : {
            "description" : "Successfully installed updates."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers" : {
      "get" : {
        "tags" : [ "IscsiServers" ],
        "description" : "Retrieves all the iSCSI in a device.",
        "operationId" : "IscsiServers_ListByDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of iSCSI servers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ISCSIServerList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}" : {
      "get" : {
        "tags" : [ "IscsiServers" ],
        "description" : "Returns the properties of the specified iSCSI server name.",
        "operationId" : "IscsiServers_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The iSCSI server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ISCSIServer"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "IscsiServers" ],
        "description" : "Creates or updates the iSCSI server.",
        "operationId" : "IscsiServers_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The iSCSI server.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ISCSIServer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the iSCSI server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ISCSIServer"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the iSCSI server."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "IscsiServers" ],
        "description" : "Deletes the iSCSI server.",
        "operationId" : "IscsiServers_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the iSCSI server."
          },
          "204" : {
            "description" : "Successfully deleted the iSCSI server."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/backup" : {
      "post" : {
        "tags" : [ "IscsiServers" ],
        "description" : "Backup the iSCSI server now.",
        "operationId" : "IscsiServers_BackupNow",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to backup the iSCSI server."
          },
          "204" : {
            "description" : "Successfully completed backup of the iSCSI server."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks" : {
      "get" : {
        "tags" : [ "IscsiDisks" ],
        "description" : "Retrieves all the disks in a iSCSI server.",
        "operationId" : "IscsiDisks_ListByIscsiServer",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of iSCSI disks.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ISCSIDiskList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}" : {
      "get" : {
        "tags" : [ "IscsiDisks" ],
        "description" : "Returns the properties of the specified iSCSI disk name.",
        "operationId" : "IscsiDisks_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "diskName",
          "in" : "path",
          "description" : "The disk name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The iSCSI disk.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ISCSIDisk"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "IscsiDisks" ],
        "description" : "Creates or updates the iSCSI disk.",
        "operationId" : "IscsiDisks_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "diskName",
          "in" : "path",
          "description" : "The disk name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The iSCSI disk.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ISCSIDisk"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the iSCSI disk.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ISCSIDisk"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the iSCSI disk."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "IscsiDisks" ],
        "description" : "Deletes the iSCSI disk.",
        "operationId" : "IscsiDisks_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "diskName",
          "in" : "path",
          "description" : "The disk name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the iSCSI disk."
          },
          "204" : {
            "description" : "Successfully deleted the iSCSI disk."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metrics" : {
      "get" : {
        "tags" : [ "IscsiDisks" ],
        "description" : "Gets the iSCSI disk metrics",
        "operationId" : "IscsiDisks_ListMetrics",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "diskName",
          "in" : "path",
          "description" : "The iSCSI disk name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metrics.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metricsDefinitions" : {
      "get" : {
        "tags" : [ "IscsiDisks" ],
        "description" : "Retrieves metric definitions for all metric aggregated at the iSCSI disk.",
        "operationId" : "IscsiDisks_ListMetricDefinition",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "diskName",
          "in" : "path",
          "description" : "The iSCSI disk name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metric definitions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metrics" : {
      "get" : {
        "tags" : [ "IscsiServers" ],
        "description" : "Gets the iSCSI server metrics",
        "operationId" : "IscsiServers_ListMetrics",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metrics.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metricsDefinitions" : {
      "get" : {
        "tags" : [ "IscsiServers" ],
        "description" : "Retrieves metric definitions for all metrics aggregated at iSCSI server.",
        "operationId" : "IscsiServers_ListMetricDefinition",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iscsiServerName",
          "in" : "path",
          "description" : "The iSCSI server name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metric definitions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Retrieves all the jobs in a device.",
        "operationId" : "Jobs_ListByDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of jobs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs/{jobName}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Returns the properties of the specified job name.",
        "operationId" : "Jobs_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The job name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metrics" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Retrieves the device metrics.",
        "operationId" : "Devices_ListMetrics",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The name of the appliance.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metrics.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metricsDefinitions" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Retrieves metric definition of all metrics aggregated at device.",
        "operationId" : "Devices_ListMetricDefinition",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The name of the appliance.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metric definitions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/networkSettings/default" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Returns the network settings of the specified device name.",
        "operationId" : "Devices_GetNetworkSettings",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The network settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkSettings"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/scanForUpdates" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "Scans for updates on the device.",
        "operationId" : "Devices_ScanForUpdates",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to scan for updates."
          },
          "204" : {
            "description" : "Successfully scanned for updates."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/securitySettings/default/update" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "Creates or updates the security settings.",
        "operationId" : "Devices_CreateOrUpdateSecuritySettings",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The security settings.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecuritySettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted the request to create or update the security settings."
          },
          "204" : {
            "description" : "Successfully updated security settings."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/sendTestAlertEmail" : {
      "post" : {
        "tags" : [ "Alerts" ],
        "description" : "Sends a test alert email.",
        "operationId" : "Alerts_SendTestEmail",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The send test alert email request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendTestAlertEmailRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Successfully sent the test email."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/shares" : {
      "get" : {
        "tags" : [ "FileShares" ],
        "description" : "Retrieves all the file shares in a device.",
        "operationId" : "FileShares_ListByDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of file shares.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileShareList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/timeSettings/default" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Returns the time settings of the specified device name.",
        "operationId" : "Devices_GetTimeSettings",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The time settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeSettings"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/updateSummary/default" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Returns the update summary of the specified device name.",
        "operationId" : "Devices_GetUpdateSummary",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The update summary.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Updates"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/encryptionSettings/default" : {
      "get" : {
        "tags" : [ "Managers" ],
        "description" : "Returns the encryption settings of the manager.",
        "operationId" : "Managers_GetEncryptionSettings",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The encryption settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EncryptionSettings"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo" : {
      "get" : {
        "tags" : [ "Managers" ],
        "description" : "Returns the extended information of the specified manager name.",
        "operationId" : "Managers_GetExtendedInfo",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The manager extended information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagerExtendedInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Managers" ],
        "description" : "Creates the extended info of the manager.",
        "operationId" : "Managers_CreateExtendedInfo",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The manager extended information.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagerExtendedInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The extended information on the manager has been successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagerExtendedInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Managers" ],
        "description" : "Deletes the extended info of the manager.",
        "operationId" : "Managers_DeleteExtendedInfo",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The extended information on the manager has been successfully deleted"
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Managers" ],
        "description" : "Updates the extended info of the manager.",
        "operationId" : "Managers_UpdateExtendedInfo",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "Pass the ETag of ExtendedInfo fetched from GET call",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The manager extended information.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagerExtendedInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The extended information on the manager has been successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagerExtendedInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/fileservers" : {
      "get" : {
        "tags" : [ "FileServers" ],
        "description" : "Retrieves all the file servers in a manager.",
        "operationId" : "FileServers_ListByManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of file servers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileServerList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/getEncryptionKey" : {
      "post" : {
        "tags" : [ "Managers" ],
        "description" : "Returns the symmetric encryption key of the manager.",
        "operationId" : "Managers_GetEncryptionKey",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The encryption key.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymmetricEncryptedSecret"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/iscsiservers" : {
      "get" : {
        "tags" : [ "IscsiServers" ],
        "description" : "Retrieves all the iSCSI servers in a manager.",
        "operationId" : "IscsiServers_ListByManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of iSCSI servers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ISCSIServerList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Retrieves all the jobs in a manager.",
        "operationId" : "Jobs_ListByManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of jobs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metrics" : {
      "get" : {
        "tags" : [ "Managers" ],
        "description" : "Gets the  manager metrics",
        "operationId" : "Managers_ListMetrics",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metrics.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metricsDefinitions" : {
      "get" : {
        "tags" : [ "Managers" ],
        "description" : "Retrieves metric definition of all metrics aggregated at manager.",
        "operationId" : "Managers_ListMetricDefinition",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of metric definitions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials" : {
      "get" : {
        "tags" : [ "StorageAccountCredentials" ],
        "description" : "Retrieves all the storage account credentials in a manager.",
        "operationId" : "StorageAccountCredentials_ListByManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of storage account credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccountCredentialList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials/{credentialName}" : {
      "get" : {
        "tags" : [ "StorageAccountCredentials" ],
        "description" : "Returns the properties of the specified storage account credential name.",
        "operationId" : "StorageAccountCredentials_Get",
        "parameters" : [ {
          "name" : "credentialName",
          "in" : "path",
          "description" : "The name of storage account credential to be fetched.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The storage account credential.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccountCredential"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "StorageAccountCredentials" ],
        "description" : "Creates or updates the storage account credential",
        "operationId" : "StorageAccountCredentials_CreateOrUpdate",
        "parameters" : [ {
          "name" : "credentialName",
          "in" : "path",
          "description" : "The credential name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The storage account credential to be added or updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageAccountCredential"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the storage account credential.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccountCredential"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the storage account credential."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "StorageAccountCredentials" ],
        "description" : "Deletes the storage account credential",
        "operationId" : "StorageAccountCredentials_Delete",
        "parameters" : [ {
          "name" : "credentialName",
          "in" : "path",
          "description" : "The name of the storage account credential.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the storage account credential."
          },
          "204" : {
            "description" : "Successfully deleted the storage account credential."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains" : {
      "get" : {
        "tags" : [ "StorageDomains" ],
        "description" : "Retrieves all the storage domains in a manager.",
        "operationId" : "StorageDomains_ListByManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of storage domains.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageDomainList"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains/{storageDomainName}" : {
      "get" : {
        "tags" : [ "StorageDomains" ],
        "description" : "Returns the properties of the specified storage domain name.",
        "operationId" : "StorageDomains_Get",
        "parameters" : [ {
          "name" : "storageDomainName",
          "in" : "path",
          "description" : "The storage domain name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The storage domain.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageDomain"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "StorageDomains" ],
        "description" : "Creates or updates the storage domain.",
        "operationId" : "StorageDomains_CreateOrUpdate",
        "parameters" : [ {
          "name" : "storageDomainName",
          "in" : "path",
          "description" : "The storage domain name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The storageDomain.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageDomain"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the storage domain.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageDomain"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the storage domain."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "StorageDomains" ],
        "description" : "Deletes the storage domain.",
        "operationId" : "StorageDomains_Delete",
        "parameters" : [ {
          "name" : "storageDomainName",
          "in" : "path",
          "description" : "The storage domain name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managerName",
          "in" : "path",
          "description" : "The manager name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted the request to delete the storage domain."
          },
          "204" : {
            "description" : "Successfully deleted the storage domain."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccessControlRecord" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AccessControlRecordProperties"
          }
        },
        "description" : "The access control record",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "AccessControlRecordList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlRecord"
            }
          }
        },
        "description" : "Collection of AccessControlRecords"
      },
      "AccessControlRecordProperties" : {
        "required" : [ "initiatorName" ],
        "type" : "object",
        "properties" : {
          "initiatorName" : {
            "type" : "string",
            "description" : "The Iscsi initiator name (IQN)"
          }
        },
        "description" : "Properties of access control record"
      },
      "Alert" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AlertProperties"
          }
        },
        "description" : "Alert class",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "AlertErrorDetails" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string",
            "description" : "Error code."
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Error Message"
          },
          "occurences" : {
            "type" : "integer",
            "description" : "Number of occurrences.",
            "format" : "int32"
          }
        },
        "description" : "Error details for the alert"
      },
      "AlertFilter" : {
        "type" : "object",
        "properties" : {
          "appearedOnTime" : {
            "type" : "string",
            "description" : "UTC time on which the alert appeared",
            "format" : "date-time"
          },
          "severity" : {
            "type" : "string",
            "description" : "Severity of the alert",
            "enum" : [ "Informational", "Warning", "Critical" ]
          },
          "sourceName" : {
            "type" : "string",
            "description" : "Source name of the alert"
          },
          "sourceType" : {
            "type" : "string",
            "description" : "Source of the alert",
            "enum" : [ "Resource", "Device" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the alert",
            "enum" : [ "Active", "Cleared" ]
          }
        },
        "description" : "Filters that can be specified on the alert"
      },
      "AlertList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Id of the next page of alerts"
          },
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/Alert"
            }
          }
        },
        "description" : "Collection of Alerts"
      },
      "AlertProperties" : {
        "required" : [ "alertType", "appearedAtSourceTime", "appearedAtTime", "scope", "severity", "source", "status", "title" ],
        "type" : "object",
        "properties" : {
          "alertType" : {
            "type" : "string",
            "description" : "Type of the alert"
          },
          "appearedAtSourceTime" : {
            "type" : "string",
            "description" : "UTC time at which the alert appeared on the source",
            "format" : "date-time"
          },
          "appearedAtTime" : {
            "type" : "string",
            "description" : "UTC time at which the alert appeared",
            "format" : "date-time"
          },
          "clearedAtSourceTime" : {
            "type" : "string",
            "description" : "UTC time at which the alert was cleared on the source",
            "format" : "date-time"
          },
          "clearedAtTime" : {
            "type" : "string",
            "description" : "UTC time at which the alert got cleared",
            "format" : "date-time"
          },
          "detailedInformation" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Other information about the alert"
          },
          "errorDetails" : {
            "$ref" : "#/components/schemas/AlertErrorDetails"
          },
          "recommendation" : {
            "type" : "string",
            "description" : "Recommendation for acting on the alert"
          },
          "resolutionReason" : {
            "type" : "string",
            "description" : "Reason for resolving the alert"
          },
          "scope" : {
            "type" : "string",
            "description" : "Device or Resource alert",
            "enum" : [ "Resource", "Device" ]
          },
          "severity" : {
            "type" : "string",
            "description" : "Severity of the alert",
            "enum" : [ "Informational", "Warning", "Critical" ]
          },
          "source" : {
            "$ref" : "#/components/schemas/AlertSource"
          },
          "status" : {
            "type" : "string",
            "description" : "Current status of the alert",
            "enum" : [ "Active", "Cleared" ]
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the alert"
          }
        },
        "description" : "Properties of alert"
      },
      "AlertSettings" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AlertSettingsProperties"
          }
        },
        "description" : "AlertSettings on the device which represents how alerts will be processed",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "AlertSettingsProperties" : {
        "required" : [ "alertNotificationCulture", "emailNotification", "notificationToServiceOwners" ],
        "type" : "object",
        "properties" : {
          "additionalRecipientEmailList" : {
            "type" : "array",
            "description" : "List of email addresses (apart from admin/co-admin of subscription) to whom the alert emails need to be sent",
            "items" : {
              "type" : "string"
            }
          },
          "alertNotificationCulture" : {
            "type" : "string",
            "description" : "Culture setting to be used while building alert emails. For eg: \"en-US\""
          },
          "emailNotification" : {
            "type" : "string",
            "description" : "Value indicating whether user/admins will receive emails when an alert condition occurs on the system",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "notificationToServiceOwners" : {
            "type" : "string",
            "description" : "Value indicating whether service owners will receive emails when an alert condition occurs on the system. Applicable only if emailNotification flag is Enabled.",
            "enum" : [ "Enabled", "Disabled" ]
          }
        },
        "description" : "Class containing the properties of AlertSettings"
      },
      "AlertSource" : {
        "type" : "object",
        "properties" : {
          "alertSourceType" : {
            "type" : "string",
            "description" : "Source type of the alert.",
            "enum" : [ "Resource", "Device" ]
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the source."
          },
          "timeZone" : {
            "type" : "string",
            "description" : "The time zone."
          }
        },
        "description" : "source at which the alert can be raised"
      },
      "AsymmetricEncryptedSecret" : {
        "required" : [ "encryptionAlgorithm", "value" ],
        "type" : "object",
        "properties" : {
          "encryptionAlgorithm" : {
            "type" : "string",
            "description" : "Algorithm used to encrypt \"Value\"",
            "enum" : [ "None", "AES256", "RSAES_PKCS1_v_1_5" ]
          },
          "encryptionCertificateThumbprint" : {
            "type" : "string",
            "description" : "Thumbprint certificate that was used to encrypt \"Value\""
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null."
          }
        },
        "description" : "This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms."
      },
      "AvailableProviderOperation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/AvailableProviderOperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name of the operation being performed on this particular object\r\nReturn value format: \"{resourceProviderNamespace}/{resourceType}/{read|write|deletion|action}\"\r\nEg: Microsoft.StorSimple/managers/devices/fileServers/read\r\n    Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action"
          },
          "origin" : {
            "type" : "string",
            "description" : "Gets or sets Origin\r\nThe intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\r\nDefault value is “user,system”"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AvailableProviderOperationProperties"
          }
        },
        "description" : "Class represents provider operation"
      },
      "AvailableProviderOperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Gets or sets Description\r\nThe localized friendly description for the operation, as it should be shown to the user. \r\nIt should be thorough, yet concise – it will be used in tool tips and detailed views."
          },
          "operation" : {
            "type" : "string",
            "description" : "Gets or sets Operation\r\nThe localized friendly name for the operation, as it should be shown to the user. \r\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies."
          },
          "provider" : {
            "type" : "string",
            "description" : "Gets or sets Provider\r\nThe localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. \r\nIt should use Title Casing and begin with “Microsoft” for 1st party services."
          },
          "resource" : {
            "type" : "string",
            "description" : "Gets or sets Resource\r\nThe localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider. \r\nIt should use Title Casing – for examples, please refer to the “name” section."
          }
        },
        "description" : "Contains the localized display information for this particular operation / action. \r\nThese value will be used by several clients for \r\n(1) custom role definitions for RBAC; \r\n(2) complex query filters for the event service; and (3) audit history / records for management operations."
      },
      "AvailableProviderOperationProperties" : {
        "type" : "object",
        "description" : "Class represents Properties in AvailableProviderOperations"
      },
      "AvailableProviderOperations" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The NextLink."
          },
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/AvailableProviderOperation"
            }
          }
        },
        "description" : "Class for set of operations used for discovery of available provider operations."
      },
      "Backup" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/BackupProperties"
          }
        },
        "description" : "The backup.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "BackupElement" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/BackupElementProperties"
          }
        },
        "description" : "Class represents BackupElement",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "BackupElementProperties" : {
        "required" : [ "dataPolicy", "endpointName", "sizeInBytes" ],
        "type" : "object",
        "properties" : {
          "dataPolicy" : {
            "type" : "string",
            "description" : "The data policy of backed up endpoint.",
            "enum" : [ "Invalid", "Local", "Tiered", "Cloud" ]
          },
          "endpointName" : {
            "type" : "string",
            "description" : "The name of the endpoint."
          },
          "sizeInBytes" : {
            "type" : "integer",
            "description" : "The size in bytes.",
            "format" : "int64"
          }
        },
        "description" : "The backup element properties"
      },
      "BackupFilter" : {
        "type" : "object",
        "properties" : {
          "createdTime" : {
            "type" : "string",
            "description" : "Gets or sets CreatedTime",
            "format" : "date-time"
          },
          "initiatedBy" : {
            "type" : "string",
            "description" : "Gets or sets InitiatedBy",
            "enum" : [ "Manual", "Scheduled" ]
          }
        },
        "description" : "Backup OData filter class"
      },
      "BackupList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The NextLink."
          },
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/Backup"
            }
          }
        },
        "description" : "Collection of backups"
      },
      "BackupProperties" : {
        "required" : [ "deviceId", "elements", "initiatedBy", "sizeInBytes" ],
        "type" : "object",
        "properties" : {
          "createdTime" : {
            "type" : "string",
            "description" : "The time when the backup was created.",
            "format" : "date-time"
          },
          "deviceId" : {
            "type" : "string",
            "description" : "The Device Identifier."
          },
          "elements" : {
            "type" : "array",
            "description" : "The backup elements.",
            "items" : {
              "$ref" : "#/components/schemas/BackupElement"
            }
          },
          "expirationTime" : {
            "type" : "string",
            "description" : "The time when the backup will expire.",
            "format" : "date-time"
          },
          "initiatedBy" : {
            "type" : "string",
            "description" : "Indicates how the backup was initiated \"Manual | Scheduled\".",
            "enum" : [ "Manual", "Scheduled" ]
          },
          "sizeInBytes" : {
            "type" : "integer",
            "description" : "The backup size in bytes.",
            "format" : "int64"
          },
          "targetId" : {
            "type" : "string",
            "description" : "The path id of the target FileServer or IscsiServer for which the backup was taken."
          },
          "targetType" : {
            "type" : "string",
            "description" : "Type of target, FileServer or IscsiServer"
          }
        },
        "description" : "Class represents Backup properties"
      },
      "BackupScheduleGroup" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/BackupScheduleGroupProperties"
          }
        },
        "description" : "The Backup Schedule Group",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "BackupScheduleGroupList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/BackupScheduleGroup"
            }
          }
        },
        "description" : "The list response of backup schedule groups"
      },
      "BackupScheduleGroupProperties" : {
        "required" : [ "startTime" ],
        "type" : "object",
        "properties" : {
          "startTime" : {
            "$ref" : "#/components/schemas/Time"
          }
        },
        "description" : "The Backup Schedule Group Properties"
      },
      "BaseModel" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type.",
            "readOnly" : true
          }
        },
        "description" : "Base class for models"
      },
      "ChapProperties" : {
        "required" : [ "password" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "$ref" : "#/components/schemas/AsymmetricEncryptedSecret"
          }
        },
        "description" : "Chap properties"
      },
      "ChapSettings" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ChapProperties"
          }
        },
        "description" : "Challenge-Handshake Authentication Protocol (CHAP) setting",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "ChapSettingsList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The chap settings entity collection",
            "items" : {
              "$ref" : "#/components/schemas/ChapSettings"
            }
          }
        },
        "description" : "Collection of Chap setting entities"
      },
      "ClearAlertRequest" : {
        "required" : [ "alerts" ],
        "type" : "object",
        "properties" : {
          "alerts" : {
            "type" : "array",
            "description" : "List of alert Ids to be cleared",
            "items" : {
              "type" : "string"
            }
          },
          "resolutionMessage" : {
            "type" : "string",
            "description" : "Resolution message while clearing the request"
          }
        },
        "description" : "Request for clearing the alert"
      },
      "CloneRequest" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CloneRequestProperties"
          }
        },
        "description" : "Clone Job Request Model."
      },
      "CloneRequestProperties" : {
        "required" : [ "newEndpointName", "targetAccessPointId", "targetDeviceId" ],
        "type" : "object",
        "properties" : {
          "disk" : {
            "$ref" : "#/components/schemas/ISCSIDisk"
          },
          "newEndpointName" : {
            "type" : "string",
            "description" : "Name of new endpoint which will created as part of clone job."
          },
          "share" : {
            "$ref" : "#/components/schemas/FileShare"
          },
          "targetAccessPointId" : {
            "type" : "string",
            "description" : "Access point Id on which clone job will performed."
          },
          "targetDeviceId" : {
            "type" : "string",
            "description" : "DeviceId of the device which will act as the Clone target"
          }
        },
        "description" : "Properties of CloneRequest"
      },
      "Device" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DeviceProperties"
          }
        },
        "description" : "Represents a StorSimple device object along with its properties",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "DeviceDetails" : {
        "type" : "object",
        "properties" : {
          "availableLocalStorageInBytes" : {
            "type" : "integer",
            "description" : "Local pending storage available on the device in bytes",
            "format" : "int64"
          },
          "availableStorageInBytes" : {
            "type" : "integer",
            "description" : "Total pending available storage on the device in bytes",
            "format" : "int64"
          },
          "endpointCount" : {
            "type" : "integer",
            "description" : "Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes on IscsiServer)",
            "format" : "int32"
          },
          "provisionedLocalStorageInBytes" : {
            "type" : "integer",
            "description" : "Storage in bytes that has been provisioned locally on the device",
            "format" : "int64"
          },
          "provisionedStorageInBytes" : {
            "type" : "integer",
            "description" : "Storage in bytes that has been provisioned on the device including both local and cloud",
            "format" : "int64"
          },
          "totalBackupSizeInBytes" : {
            "type" : "integer",
            "description" : "Total size taken up by backups in bytes",
            "format" : "int64"
          },
          "totalLocalStorageInBytes" : {
            "type" : "integer",
            "description" : "Total local storage capacity in device in bytes.",
            "format" : "int64"
          },
          "totalStorageInBytes" : {
            "type" : "integer",
            "description" : "Total storage available on the device in bytes.",
            "format" : "int64"
          },
          "usingLocalStorageInBytes" : {
            "type" : "integer",
            "description" : "Local Storage that is being currently used in bytes",
            "format" : "int64"
          },
          "usingStorageInBytes" : {
            "type" : "integer",
            "description" : "Storage that is being currently used in bytes including both local and cloud",
            "format" : "int64"
          }
        },
        "description" : "Class containing more granular details about the device"
      },
      "DeviceList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/Device"
            }
          }
        },
        "description" : "Collection of Devices"
      },
      "DevicePatch" : {
        "type" : "object",
        "properties" : {
          "deviceDescription" : {
            "type" : "string",
            "description" : "Short description given for the device"
          }
        },
        "description" : "Class that represents the Input for the PATCH call on Device. Currently the only patchable property on device is \"DeviceDescription\""
      },
      "DeviceProperties" : {
        "type" : "object",
        "properties" : {
          "activationTime" : {
            "type" : "string",
            "description" : "The UTC time at which the device was activated",
            "format" : "date-time"
          },
          "allowedDeviceOperations" : {
            "type" : "array",
            "description" : "Operations that are allowed on the device based on its current state",
            "items" : {
              "type" : "string",
              "enum" : [ "None", "Delete", "DeleteWithWarning", "DRSource", "DRTarget", "Browsable", "ReadOnlyForDR", "Deactivate" ]
            }
          },
          "culture" : {
            "type" : "string",
            "description" : "Language culture setting on the device. For eg: \"en-US\""
          },
          "details" : {
            "$ref" : "#/components/schemas/DeviceDetails"
          },
          "deviceCapabilities" : {
            "type" : "array",
            "description" : "Device can be configured either as FileServer or IscsiServer",
            "items" : {
              "type" : "string",
              "enum" : [ "Invalid", "FileServer", "IscsiServer" ]
            }
          },
          "deviceConfigurationStatus" : {
            "type" : "string",
            "description" : "\"Complete\" if the device has been successfully registered as File/IscsiServer and the creation of share/volume is complete, \"Pending\" if the device is only registered but the creation of share/volume is complete is still pending",
            "enum" : [ "Complete", "Pending" ]
          },
          "deviceDescription" : {
            "type" : "string",
            "description" : "Short description given for the device"
          },
          "deviceSoftwareVersion" : {
            "type" : "string",
            "description" : "Version number of the software running on the device"
          },
          "domainName" : {
            "type" : "string",
            "description" : "Fully qualified name of the domain to which the device is attached"
          },
          "friendlySoftwareName" : {
            "type" : "string",
            "description" : "Friendly name for the software version"
          },
          "modelDescription" : {
            "type" : "string",
            "description" : "Name of the device model"
          },
          "status" : {
            "type" : "string",
            "description" : "Current status of the device",
            "enum" : [ "Unknown", "Online", "Offline", "RequiresAttention", "MaintenanceMode", "Creating", "Provisioning", "Deleted", "ReadyToSetup", "Deactivated", "Deactivating" ]
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the device",
            "enum" : [ "Invalid", "Appliance", "VirtualAppliance", "Series9000OnPremVirtualAppliance", "Series9000VirtualAppliance", "Series9000PhysicalAppliance" ]
          }
        },
        "description" : "Encases all the properties of the Device"
      },
      "EncryptionSettings" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/EncryptionSettingsProperties"
          }
        },
        "description" : "The EncryptionSettings",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "EncryptionSettingsProperties" : {
        "required" : [ "encryptionStatus", "keyRolloverStatus" ],
        "type" : "object",
        "properties" : {
          "encryptionStatus" : {
            "type" : "string",
            "description" : "The encryption status which indicates if encryption is enabled or not.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "keyRolloverStatus" : {
            "type" : "string",
            "description" : "The key rollover status which indicates if key rollover is required or not. If secrets encryption has been upgraded, then it requires key rollover.",
            "enum" : [ "Required", "NotRequired" ]
          }
        },
        "description" : "The properties of EncryptionSettings"
      },
      "Error" : {
        "required" : [ "errorCode", "message" ],
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "message" : {
            "$ref" : "#/components/schemas/Message"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Item"
            }
          }
        }
      },
      "FailoverRequest" : {
        "type" : "object",
        "properties" : {
          "accesspointIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "keepSourceDevice" : {
            "type" : "boolean"
          },
          "skipValidation" : {
            "type" : "boolean"
          },
          "targetDeviceId" : {
            "type" : "string"
          }
        },
        "description" : "The Failover request object."
      },
      "FileServer" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FileServerProperties"
          }
        },
        "description" : "The file server.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "FileServerList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/FileServer"
            }
          }
        },
        "description" : "Collection of file servers"
      },
      "FileServerProperties" : {
        "required" : [ "backupScheduleGroupId", "domainName", "storageDomainId" ],
        "type" : "object",
        "properties" : {
          "backupScheduleGroupId" : {
            "type" : "string",
            "description" : "The backup policy id."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the file server"
          },
          "domainName" : {
            "type" : "string",
            "description" : "Domain of the file server"
          },
          "storageDomainId" : {
            "type" : "string",
            "description" : "The storage domain id."
          }
        },
        "description" : "The file server properties."
      },
      "FileShare" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FileShareProperties"
          }
        },
        "description" : "The File Share.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "FileShareList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/FileShare"
            }
          }
        },
        "description" : "Collection of file shares"
      },
      "FileShareProperties" : {
        "required" : [ "adminUser", "dataPolicy", "monitoringStatus", "provisionedCapacityInBytes", "shareStatus" ],
        "type" : "object",
        "properties" : {
          "adminUser" : {
            "type" : "string",
            "description" : "The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz."
          },
          "dataPolicy" : {
            "type" : "string",
            "description" : "The data policy",
            "enum" : [ "Invalid", "Local", "Tiered", "Cloud" ]
          },
          "description" : {
            "type" : "string",
            "description" : "Description for file share"
          },
          "localUsedCapacityInBytes" : {
            "type" : "integer",
            "description" : "The local used capacity in Bytes.",
            "format" : "int64",
            "readOnly" : true
          },
          "monitoringStatus" : {
            "type" : "string",
            "description" : "The monitoring status",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "provisionedCapacityInBytes" : {
            "type" : "integer",
            "description" : "The total provisioned capacity in Bytes",
            "format" : "int64"
          },
          "shareStatus" : {
            "type" : "string",
            "description" : "The Share Status",
            "enum" : [ "Online", "Offline" ]
          },
          "usedCapacityInBytes" : {
            "type" : "integer",
            "description" : "The used capacity in Bytes.",
            "format" : "int64",
            "readOnly" : true
          }
        },
        "description" : "The File Share."
      },
      "IPConfig" : {
        "required" : [ "gateway", "ipAddress" ],
        "type" : "object",
        "properties" : {
          "gateway" : {
            "type" : "string",
            "description" : "The gateway of the network adapter."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IP address of the network adapter, either ipv4 or ipv6."
          },
          "prefixLength" : {
            "type" : "integer",
            "description" : "The prefix length of the network adapter.",
            "format" : "int32"
          }
        },
        "description" : "Details related to the IP address configuration"
      },
      "ISCSIDisk" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ISCSIDiskProperties"
          }
        },
        "description" : "The iSCSI disk.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "ISCSIDiskList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/ISCSIDisk"
            }
          }
        },
        "description" : "Collection of Iscsi disk"
      },
      "ISCSIDiskProperties" : {
        "required" : [ "accessControlRecords", "dataPolicy", "diskStatus", "monitoringStatus", "provisionedCapacityInBytes" ],
        "type" : "object",
        "properties" : {
          "accessControlRecords" : {
            "type" : "array",
            "description" : "The access control records.",
            "items" : {
              "type" : "string"
            }
          },
          "dataPolicy" : {
            "type" : "string",
            "description" : "The data policy.",
            "enum" : [ "Invalid", "Local", "Tiered", "Cloud" ]
          },
          "description" : {
            "type" : "string",
            "description" : "The description."
          },
          "diskStatus" : {
            "type" : "string",
            "description" : "The disk status.",
            "enum" : [ "Online", "Offline" ]
          },
          "localUsedCapacityInBytes" : {
            "type" : "integer",
            "description" : "The local used capacity in bytes.",
            "format" : "int64",
            "readOnly" : true
          },
          "monitoringStatus" : {
            "type" : "string",
            "description" : "The monitoring.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "provisionedCapacityInBytes" : {
            "type" : "integer",
            "description" : "The provisioned capacity in bytes.",
            "format" : "int64"
          },
          "usedCapacityInBytes" : {
            "type" : "integer",
            "description" : "The used capacity in bytes.",
            "format" : "int64",
            "readOnly" : true
          }
        },
        "description" : "The iSCSI disk properties."
      },
      "ISCSIServer" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ISCSIServerProperties"
          }
        },
        "description" : "The iSCSI server.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "ISCSIServerList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/ISCSIServer"
            }
          }
        },
        "description" : "Collection of Iscsi servers"
      },
      "ISCSIServerProperties" : {
        "required" : [ "backupScheduleGroupId", "storageDomainId" ],
        "type" : "object",
        "properties" : {
          "backupScheduleGroupId" : {
            "type" : "string",
            "description" : "The backup policy id."
          },
          "chapId" : {
            "type" : "string",
            "description" : "The chap id."
          },
          "description" : {
            "type" : "string",
            "description" : "The description."
          },
          "reverseChapId" : {
            "type" : "string",
            "description" : "The reverse chap id."
          },
          "storageDomainId" : {
            "type" : "string",
            "description" : "The storage domain id."
          }
        },
        "description" : "The iSCSI server properties."
      },
      "Item" : {
        "required" : [ "key", "value" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "Job" : {
        "required" : [ "percentComplete", "status" ],
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "The UTC time at which the job completed",
            "format" : "date-time"
          },
          "error" : {
            "$ref" : "#/components/schemas/JobErrorDetails"
          },
          "percentComplete" : {
            "type" : "integer",
            "description" : "The percentage of the job that is already complete",
            "format" : "int32"
          },
          "properties" : {
            "$ref" : "#/components/schemas/JobProperties"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The UTC time at which the job was started",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "Current status of the job",
            "enum" : [ "Invalid", "Running", "Succeeded", "Failed", "Canceled", "Paused", "Scheduled" ]
          }
        },
        "description" : "The Job.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "JobErrorDetails" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The code intended for programmatic access"
          },
          "errorDetails" : {
            "type" : "array",
            "description" : "The error details.",
            "items" : {
              "$ref" : "#/components/schemas/JobErrorItem"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The message intended to describe the error in detail"
          }
        },
        "description" : "The job error information containing List of JobErrorItem."
      },
      "JobErrorItem" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The code intended for programmatic access"
          },
          "message" : {
            "type" : "string",
            "description" : "The message intended to describe the error in detail"
          },
          "recommendations" : {
            "type" : "array",
            "description" : "The recommended actions.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The job error items."
      },
      "JobFilter" : {
        "required" : [ "jobType", "status" ],
        "type" : "object",
        "properties" : {
          "jobType" : {
            "type" : "string",
            "description" : "The job type.",
            "enum" : [ "Backup", "Clone", "Failover", "DownloadUpdates", "InstallUpdates" ]
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the job.",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "The job status.",
            "enum" : [ "Invalid", "Running", "Succeeded", "Failed", "Canceled", "Paused", "Scheduled" ]
          }
        },
        "description" : "Filters that can be specified for the job"
      },
      "JobList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The NextLink."
          },
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/Job"
            }
          }
        },
        "description" : "Collection of jobs"
      },
      "JobProperties" : {
        "required" : [ "jobType" ],
        "type" : "object",
        "properties" : {
          "backupPointInTime" : {
            "type" : "string",
            "description" : "The time of the backup used for the failover.",
            "format" : "date-time"
          },
          "deviceId" : {
            "type" : "string",
            "description" : "The device id in which the job is currently running"
          },
          "downloadProgress" : {
            "$ref" : "#/components/schemas/UpdateDownloadProgress"
          },
          "entityId" : {
            "type" : "string",
            "description" : "The entity identifier for which the job ran."
          },
          "entityType" : {
            "type" : "string",
            "description" : "The entity type for which the job ran."
          },
          "installProgress" : {
            "$ref" : "#/components/schemas/UpdateInstallProgress"
          },
          "isCancellable" : {
            "type" : "boolean",
            "description" : "Represents whether the job is cancellable or not"
          },
          "jobStages" : {
            "type" : "array",
            "description" : "The job stages.",
            "items" : {
              "$ref" : "#/components/schemas/JobStage"
            }
          },
          "jobType" : {
            "type" : "string",
            "description" : "Type of the job",
            "enum" : [ "Backup", "Clone", "Failover", "DownloadUpdates", "InstallUpdates" ]
          },
          "sourceDeviceId" : {
            "type" : "string",
            "description" : "The source device identifier of the failover job."
          },
          "stats" : {
            "$ref" : "#/components/schemas/JobStats"
          },
          "targetId" : {
            "type" : "string",
            "description" : "Id of the object that is created by the job"
          },
          "targetType" : {
            "type" : "string",
            "description" : "The target type of the backup.",
            "enum" : [ "FileServer", "DiskServer" ]
          }
        },
        "description" : "properties for the job"
      },
      "JobStage" : {
        "required" : [ "stageStatus" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "type" : "string",
            "description" : "The details of the stage."
          },
          "errorCode" : {
            "type" : "string",
            "description" : "The error code of the stage if any."
          },
          "message" : {
            "type" : "string",
            "description" : "The message of the job stage."
          },
          "stageStatus" : {
            "type" : "string",
            "description" : "The stage status.",
            "enum" : [ "Invalid", "Running", "Succeeded", "Failed", "Canceled", "Paused", "Scheduled" ]
          }
        },
        "description" : "Contains details about the multiple job stages of a job"
      },
      "JobStats" : {
        "type" : "object",
        "properties" : {
          "completedWorkItemCount" : {
            "type" : "integer",
            "description" : "Completed work item count.",
            "format" : "int32"
          },
          "estimatedTimeRemaining" : {
            "type" : "integer",
            "description" : "The estimated time remaining.",
            "format" : "int32"
          },
          "totalWorkItemCount" : {
            "type" : "integer",
            "description" : "Total work item count.",
            "format" : "int32"
          }
        },
        "description" : "Stats that are available for all jobs in common"
      },
      "Manager" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "ETag of the Manager"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ManagerProperties"
          }
        },
        "description" : "The StorSimple Manager",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ManagerExtendedInfo" : {
        "required" : [ "properties" ],
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "ETag of the Resource"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ManagerExtendedInfoProperties"
          }
        },
        "description" : "The extended info of the manager.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "ManagerExtendedInfoProperties" : {
        "required" : [ "algorithm", "integrityKey" ],
        "type" : "object",
        "properties" : {
          "algorithm" : {
            "type" : "string",
            "description" : "Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format. AlgorithmName - if encryption is used"
          },
          "encryptionKey" : {
            "type" : "string",
            "description" : "Represents the CEK of the resource"
          },
          "encryptionKeyThumbprint" : {
            "type" : "string",
            "description" : "Represents the Cert thumbprint that was used to encrypt the CEK"
          },
          "integrityKey" : {
            "type" : "string",
            "description" : "Represents the CIK of the resource"
          },
          "portalCertificateThumbprint" : {
            "type" : "string",
            "description" : "Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it."
          },
          "version" : {
            "type" : "string",
            "description" : "Represents the version of the ExtendedInfo object being persisted"
          }
        },
        "description" : "Properties of the ManagerExtendedInfo"
      },
      "ManagerIntrinsicSettings" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Refers to the type of the StorSimple Manager",
            "enum" : [ "GardaV1", "HelsinkiV1" ]
          }
        },
        "description" : "Intrinsic settings which refers to the type of the StorSimple manager"
      },
      "ManagerList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "List of Managers",
            "items" : {
              "$ref" : "#/components/schemas/Manager"
            }
          }
        },
        "description" : "List of StorSimple Managers under a particular resourceGroup"
      },
      "ManagerPatch" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags attached to the StorSimple Manager."
          }
        },
        "description" : "The StorSimple Manager patch."
      },
      "ManagerProperties" : {
        "type" : "object",
        "properties" : {
          "cisIntrinsicSettings" : {
            "$ref" : "#/components/schemas/ManagerIntrinsicSettings"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Specifies the state of the resource as it is getting provisioned. Value of \"Succeeded\" means the Manager was successfully created",
            "readOnly" : true
          },
          "sku" : {
            "$ref" : "#/components/schemas/ManagerSku"
          }
        },
        "description" : "The properties of the Manager"
      },
      "ManagerSku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Refers to the sku name which should be \"Standard\"",
            "enum" : [ "Standard" ]
          }
        },
        "description" : "The Sku."
      },
      "Message" : {
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "MetricAvailablity" : {
        "required" : [ "retention", "timeGrain" ],
        "type" : "object",
        "properties" : {
          "retention" : {
            "type" : "string",
            "description" : "The retention period for the metric at the specified timegrain"
          },
          "timeGrain" : {
            "type" : "string",
            "description" : "The time grain, specifies the aggregation interval for the metric."
          }
        },
        "description" : "Metric availability specifies the time grain (aggregation interval or frequency) and the retention period for that time grain"
      },
      "MetricData" : {
        "required" : [ "average", "count", "maximum", "minimum", "sum", "timeStamp" ],
        "type" : "object",
        "properties" : {
          "average" : {
            "type" : "number",
            "description" : "The average of all sample for the given instance",
            "format" : "double"
          },
          "count" : {
            "type" : "integer",
            "description" : "The count of samples of the metric data available for the given instance",
            "format" : "int32"
          },
          "maximum" : {
            "type" : "number",
            "description" : "The maximum of all samples available",
            "format" : "double"
          },
          "minimum" : {
            "type" : "number",
            "description" : "The minimum of all samples available",
            "format" : "double"
          },
          "sum" : {
            "type" : "number",
            "description" : "The sum of all the samples available in the given instance of time for the specific metric data",
            "format" : "double"
          },
          "timeStamp" : {
            "type" : "string",
            "description" : "The time when the metric data is fetched",
            "format" : "date-time"
          }
        },
        "description" : "The metric data."
      },
      "MetricDefinition" : {
        "required" : [ "dimensions", "metricAvailabilities", "name", "primaryAggregationType", "resourceId", "type", "unit" ],
        "type" : "object",
        "properties" : {
          "dimensions" : {
            "type" : "array",
            "description" : "The supported dimensions",
            "items" : {
              "$ref" : "#/components/schemas/MetricDimension"
            }
          },
          "metricAvailabilities" : {
            "type" : "array",
            "description" : "The available metric granularities",
            "items" : {
              "$ref" : "#/components/schemas/MetricAvailablity"
            }
          },
          "name" : {
            "$ref" : "#/components/schemas/MetricName"
          },
          "primaryAggregationType" : {
            "type" : "string",
            "description" : "The metric aggregation type",
            "enum" : [ "Average", "Last", "Maximum", "Minimum", "None", "Total" ]
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The metric source id"
          },
          "type" : {
            "type" : "string",
            "description" : "The metric definition type"
          },
          "unit" : {
            "type" : "string",
            "description" : "The metric unit",
            "enum" : [ "Bytes", "BytesPerSecond", "Count", "CountPerSecond", "Percent", "Seconds" ]
          }
        },
        "description" : "Monitoring metric definition represents the metadata of the metrics."
      },
      "MetricDefinitionList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of metric definition",
            "items" : {
              "$ref" : "#/components/schemas/MetricDefinition"
            }
          }
        },
        "description" : "List of metric definition"
      },
      "MetricDimension" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Metric dimension name"
          },
          "value" : {
            "type" : "string",
            "description" : "Metric dimension values"
          }
        },
        "description" : "Metric dimension"
      },
      "MetricFilter" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "endtime for fetching metrics",
            "format" : "date-time"
          },
          "name" : {
            "$ref" : "#/components/schemas/MetricNameFilter"
          },
          "startTime" : {
            "type" : "string",
            "description" : "starttime for fetching metrics",
            "format" : "date-time"
          },
          "timeGrain" : {
            "type" : "string",
            "description" : "timegrain of the metrics"
          }
        },
        "description" : "class representing the filters to be passed while fetching metrics"
      },
      "MetricList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/Metrics"
            }
          }
        },
        "description" : "Collection of metrics"
      },
      "MetricName" : {
        "required" : [ "localizedValue", "value" ],
        "type" : "object",
        "properties" : {
          "localizedValue" : {
            "type" : "string",
            "description" : "Localized name of the metric"
          },
          "value" : {
            "type" : "string",
            "description" : "Name of the metric"
          }
        },
        "description" : "The name of the metric"
      },
      "MetricNameFilter" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The value."
          }
        },
        "description" : "Class representing the name filter to be passed while fetching metrics"
      },
      "Metrics" : {
        "required" : [ "dimensions", "endTime", "name", "primaryAggregation", "resourceId", "startTime", "timeGrain", "type", "unit", "values" ],
        "type" : "object",
        "properties" : {
          "dimensions" : {
            "type" : "array",
            "description" : "The Metric dimension which indicates the source of the metric",
            "items" : {
              "$ref" : "#/components/schemas/MetricDimension"
            }
          },
          "endTime" : {
            "type" : "string",
            "description" : "The metric end time",
            "format" : "date-time"
          },
          "name" : {
            "$ref" : "#/components/schemas/MetricName"
          },
          "primaryAggregation" : {
            "type" : "string",
            "description" : "The metric aggregation type",
            "enum" : [ "Average", "Last", "Maximum", "Minimum", "None", "Total" ]
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The id of metric source"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The metric start time",
            "format" : "date-time"
          },
          "timeGrain" : {
            "type" : "string",
            "description" : "The time grain, time grain indicates frequency of the metric data"
          },
          "type" : {
            "type" : "string",
            "description" : "The Type of the metric data"
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric data",
            "enum" : [ "Bytes", "BytesPerSecond", "Count", "CountPerSecond", "Percent", "Seconds" ]
          },
          "values" : {
            "type" : "array",
            "description" : "The metric data",
            "items" : {
              "$ref" : "#/components/schemas/MetricData"
            }
          }
        },
        "description" : "Monitoring metric"
      },
      "NetworkAdapter" : {
        "required" : [ "dhcpStatus", "networkAdapterName" ],
        "type" : "object",
        "properties" : {
          "dhcpStatus" : {
            "type" : "string",
            "description" : "Represents state of DHCP.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "iPv4Info" : {
            "$ref" : "#/components/schemas/IPConfig"
          },
          "iPv6Info" : {
            "$ref" : "#/components/schemas/IPConfig"
          },
          "linkSpeed" : {
            "type" : "integer",
            "description" : "The speed of the network adapter.",
            "format" : "int64"
          },
          "networkAdapterName" : {
            "type" : "string",
            "description" : "The name of the network adapter."
          }
        },
        "description" : "Represents a networkAdapter in a particular node."
      },
      "NetworkSettings" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/NetworkSettingsProperties"
          }
        },
        "description" : "The NetworkSettings of a device",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "NetworkSettingsProperties" : {
        "required" : [ "nodeNetworks", "primaryDnsServer" ],
        "type" : "object",
        "properties" : {
          "nodeNetworks" : {
            "type" : "array",
            "description" : "The NetworkAdapters under each node of the device.",
            "items" : {
              "$ref" : "#/components/schemas/NodeNetwork"
            }
          },
          "primaryDnsServer" : {
            "type" : "string",
            "description" : "The Primary DNS server for the device"
          },
          "secondaryDnsServer" : {
            "type" : "string",
            "description" : "The secondary DNS server for the device"
          }
        },
        "description" : "The properties of NetworkSettings"
      },
      "NodeNetwork" : {
        "required" : [ "networkAdapters" ],
        "type" : "object",
        "properties" : {
          "networkAdapters" : {
            "type" : "array",
            "description" : "The array of network adapters in the node.",
            "items" : {
              "$ref" : "#/components/schemas/NetworkAdapter"
            }
          }
        },
        "description" : "Represents a single node in a device."
      },
      "RawCertificateData" : {
        "required" : [ "certificate" ],
        "type" : "object",
        "properties" : {
          "authType" : {
            "type" : "string",
            "description" : "Specify the Authentication type",
            "enum" : [ "Invalid", "AccessControlService", "AzureActiveDirectory" ]
          },
          "certificate" : {
            "type" : "string",
            "description" : "Gets or sets the base64 encoded certificate raw data string"
          }
        },
        "description" : "Raw Certificate Data From IDM"
      },
      "Resource" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Resource Id",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "The Geo location of the Manager"
          },
          "name" : {
            "type" : "string",
            "description" : "The Resource Name",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Tags attached to the Manager"
          },
          "type" : {
            "type" : "string",
            "description" : "The Resource type",
            "readOnly" : true
          }
        },
        "description" : "The Azure Resource."
      },
      "ResourceCertificateAndAADDetails" : {
        "required" : [ "aadAuthority", "aadTenantId", "azureManagementEndpointAudience", "certificate", "friendlyName", "issuer", "resourceId", "servicePrincipalClientId", "servicePrincipalObjectId", "subject", "thumbprint", "validFrom", "validTo" ],
        "type" : "object",
        "properties" : {
          "aadAuthority" : {
            "type" : "string",
            "description" : "AAD tenant authority"
          },
          "aadTenantId" : {
            "type" : "string",
            "description" : "AAD tenant Id"
          },
          "authType" : {
            "type" : "string",
            "description" : "Specify the Authentication type",
            "enum" : [ "Invalid", "AccessControlService", "AzureActiveDirectory" ]
          },
          "azureManagementEndpointAudience" : {
            "type" : "string",
            "description" : "Azure Management Endpoint Audience"
          },
          "certificate" : {
            "type" : "string",
            "description" : "Gets or sets the base64 encoded certificate raw data string"
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Certificate friendly name"
          },
          "issuer" : {
            "type" : "string",
            "description" : "Certificate issuer"
          },
          "resourceId" : {
            "type" : "integer",
            "description" : "Gets or Sets the ResourceId",
            "format" : "int64"
          },
          "servicePrincipalClientId" : {
            "type" : "string",
            "description" : "AAD service principal clientId"
          },
          "servicePrincipalObjectId" : {
            "type" : "string",
            "description" : "AAD service principal ObjectId"
          },
          "subject" : {
            "type" : "string",
            "description" : "Certificate Subject Name"
          },
          "thumbprint" : {
            "type" : "string",
            "description" : "Certificate thumbprint"
          },
          "validFrom" : {
            "type" : "string",
            "description" : "Certificate Validity start Date time",
            "format" : "date-time"
          },
          "validTo" : {
            "type" : "string",
            "description" : "Certificate Validity End Date time",
            "format" : "date-time"
          }
        },
        "description" : "Resource Certificate And AAD Details from IDM"
      },
      "SecuritySettings" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SecuritySettingsProperties"
          }
        },
        "description" : "The SecuritySettings of a device",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "SecuritySettingsProperties" : {
        "required" : [ "deviceAdminPassword" ],
        "type" : "object",
        "properties" : {
          "deviceAdminPassword" : {
            "$ref" : "#/components/schemas/AsymmetricEncryptedSecret"
          }
        },
        "description" : "The properties of SecuritySettings"
      },
      "SendTestAlertEmailRequest" : {
        "required" : [ "emailList" ],
        "type" : "object",
        "properties" : {
          "emailList" : {
            "type" : "array",
            "description" : "List of emails to send the test alerts",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Request for sending test alert email"
      },
      "StorageAccountCredential" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StorageAccountCredentialProperties"
          }
        },
        "description" : "The storage account credential",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "StorageAccountCredentialList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/StorageAccountCredential"
            }
          }
        },
        "description" : "Collection of Storage account credential entities"
      },
      "StorageAccountCredentialProperties" : {
        "required" : [ "cloudType", "enableSSL", "endPoint", "login" ],
        "type" : "object",
        "properties" : {
          "accessKey" : {
            "$ref" : "#/components/schemas/AsymmetricEncryptedSecret"
          },
          "cloudType" : {
            "type" : "string",
            "description" : "The cloud service provider",
            "enum" : [ "Azure", "S3", "S3_RRS", "OpenStack", "HP" ]
          },
          "enableSSL" : {
            "type" : "string",
            "description" : "SSL needs to be enabled or not",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "endPoint" : {
            "type" : "string",
            "description" : "The storage endpoint"
          },
          "location" : {
            "type" : "string",
            "description" : "The storage account's geo location"
          },
          "login" : {
            "type" : "string",
            "description" : "The storage account login"
          }
        },
        "description" : "Storage account properties"
      },
      "StorageDomain" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StorageDomainProperties"
          }
        },
        "description" : "The storage domain.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "StorageDomainList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/StorageDomain"
            }
          }
        },
        "description" : "Collection of storage domains"
      },
      "StorageDomainProperties" : {
        "required" : [ "encryptionStatus", "storageAccountCredentialIds" ],
        "type" : "object",
        "properties" : {
          "encryptionKey" : {
            "$ref" : "#/components/schemas/AsymmetricEncryptedSecret"
          },
          "encryptionStatus" : {
            "type" : "string",
            "description" : "The encryption status \"Enabled | Disabled\".",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "storageAccountCredentialIds" : {
            "type" : "array",
            "description" : "The storage account credentials.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The storage domain properties."
      },
      "SymmetricEncryptedSecret" : {
        "required" : [ "encryptionAlgorithm", "value" ],
        "type" : "object",
        "properties" : {
          "encryptionAlgorithm" : {
            "type" : "string",
            "description" : "Algorithm used to encrypt \"Value\"",
            "enum" : [ "None", "AES256", "RSAES_PKCS1_v_1_5" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none"
          },
          "valueCertificateThumbprint" : {
            "type" : "string",
            "description" : "Thumbprint cert that was used to encrypt \"Value\""
          }
        },
        "description" : "This class can be used as the Type for any secret entity represented as Value, ValueCertificateThumbprint, EncryptionAlgorithm. In this case, \"Value\" is a secret and the \"valueThumbprint\" represents the certificate thumbprint of the value. The algorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms."
      },
      "Time" : {
        "required" : [ "hour", "minute" ],
        "type" : "object",
        "properties" : {
          "hour" : {
            "maximum" : 23,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The hour.",
            "format" : "int32"
          },
          "minute" : {
            "maximum" : 59,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The minute.",
            "format" : "int32"
          }
        },
        "description" : "The Time."
      },
      "TimeSettings" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/TimeSettingsProperties"
          }
        },
        "description" : "The TimeSettings of a device",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "TimeSettingsProperties" : {
        "required" : [ "primaryTimeServer", "timeZone" ],
        "type" : "object",
        "properties" : {
          "primaryTimeServer" : {
            "type" : "string",
            "description" : "The primary Network Time Protocol (NTP) server name, like 'time.windows.com'."
          },
          "secondaryTimeServer" : {
            "type" : "string",
            "description" : "The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional."
          },
          "timeZone" : {
            "type" : "string",
            "description" : "The timezone of device, like '(UTC -06:00) Central America'"
          }
        },
        "description" : "The properties of TimeSettings"
      },
      "UpdateDownloadProgress" : {
        "type" : "object",
        "properties" : {
          "downloadPhase" : {
            "type" : "string",
            "description" : "The download phase.",
            "enum" : [ "Unknown", "Initializing", "Downloading", "Verifying" ]
          },
          "numberOfUpdatesDownloaded" : {
            "type" : "integer",
            "description" : "Number of updates downloaded.",
            "format" : "int32"
          },
          "numberOfUpdatesToDownload" : {
            "type" : "integer",
            "description" : "Number of updates to download.",
            "format" : "int32"
          },
          "percentComplete" : {
            "type" : "integer",
            "description" : "Percentage of completion.",
            "format" : "int32"
          },
          "totalBytesDownloaded" : {
            "type" : "number",
            "description" : "Total bytes downloaded.",
            "format" : "double"
          },
          "totalBytesToDownload" : {
            "type" : "number",
            "description" : "Total bytes to download.",
            "format" : "double"
          }
        },
        "description" : "details available during the download"
      },
      "UpdateInstallProgress" : {
        "type" : "object",
        "properties" : {
          "numberOfUpdatesInstalled" : {
            "type" : "integer",
            "description" : "Number of updates installed.",
            "format" : "int32"
          },
          "numberOfUpdatesToInstall" : {
            "type" : "integer",
            "description" : "Number of updates to install.",
            "format" : "int32"
          },
          "percentComplete" : {
            "type" : "integer",
            "description" : "Percentage of completion.",
            "format" : "int32"
          }
        },
        "description" : "Class representing the progress during installation of updates"
      },
      "Updates" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdatesProperties"
          }
        },
        "description" : "The updates profile",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      },
      "UpdatesProperties" : {
        "type" : "object",
        "properties" : {
          "deviceLastScannedTime" : {
            "type" : "string",
            "description" : "The last time when the device did an update scan.",
            "format" : "date-time"
          },
          "deviceVersion" : {
            "type" : "string",
            "description" : "The current Device version."
          },
          "inProgressDownloadJobId" : {
            "type" : "string",
            "description" : "If a download is in progress, this field contains the JobId of that particular download job"
          },
          "inProgressDownloadJobStartedTime" : {
            "type" : "string",
            "description" : "The time when the currently running download (if any) started",
            "format" : "date-time"
          },
          "inProgressInstallJobId" : {
            "type" : "string",
            "description" : "If an install is in progress, this field contains the JobId of that particular install job"
          },
          "inProgressInstallJobStartedTime" : {
            "type" : "string",
            "description" : "The time when the currently running install (if any) started",
            "format" : "date-time"
          },
          "inProgressScanStartedTime" : {
            "type" : "string",
            "description" : "The time when the currently running scan (if any) started",
            "format" : "date-time"
          },
          "lastCompletedDownloadJobTime" : {
            "type" : "string",
            "description" : "The time when the last Download job was completed (success|cancelled|failed) on the device.",
            "format" : "date-time"
          },
          "lastCompletedInstallJobTime" : {
            "type" : "string",
            "description" : "The time when the last Install job was completed (success|cancelled|failed) on the device.",
            "format" : "date-time"
          },
          "lastCompletedScanTime" : {
            "type" : "string",
            "description" : "The time when the last scan job was completed (success|cancelled|failed) on the device.",
            "format" : "date-time"
          },
          "rebootRequiredForInstall" : {
            "type" : "boolean",
            "description" : "Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install."
          },
          "regularUpdatesAvailable" : {
            "type" : "boolean",
            "description" : "Set to true if regular updates were detected for the current version of the device."
          },
          "status" : {
            "type" : "string",
            "description" : "The current update operation.",
            "enum" : [ "Idle", "Scanning", "Downloading", "Installing" ]
          },
          "totalItemsPendingForDownload" : {
            "type" : "integer",
            "description" : "The total number of items pending for download.",
            "format" : "int32"
          },
          "totalItemsPendingForInstall" : {
            "type" : "integer",
            "description" : "The total number of items pending for install.",
            "format" : "int32"
          }
        },
        "description" : "Properties of the update profile"
      },
      "UploadCertificateRequest" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "contractVersion" : {
            "type" : "string",
            "description" : "Gets ContractVersion",
            "readOnly" : true,
            "enum" : [ "InvalidVersion", "V2011_09", "V2012_02", "V2012_05", "V2012_12", "V2013_04", "V2013_10", "V2013_11", "V2014_04", "V2014_06", "V2014_07", "V2014_09", "V2014_10", "V2014_12", "V2015_01", "V2015_02", "V2015_04", "V2015_05", "V2015_06", "V2015_07", "V2015_08", "V2015_10", "V2015_12", "V2016_01", "V2016_02", "V2016_04", "V2016_05", "V2016_07", "V2016_08" ]
          },
          "properties" : {
            "$ref" : "#/components/schemas/RawCertificateData"
          }
        },
        "description" : "Upload Certificate Request to IDM"
      },
      "UploadCertificateResponse" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ResourceCertificateAndAADDetails"
          }
        },
        "description" : "Upload Certificate Response from IDM",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseModel"
        } ]
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The api version",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "managerNameParameter" : {
        "name" : "managerName",
        "in" : "path",
        "description" : "The manager name",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 2,
          "type" : "string"
        }
      },
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The resource group name",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}