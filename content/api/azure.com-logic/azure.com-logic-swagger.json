{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "LogicManagementClient",
    "description" : "REST API for Azure Logic Apps.",
    "version" : "2019-05-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.Logic/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available Logic REST API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationAccounts" : {
      "get" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Gets a list of integration accounts by subscription.",
        "operationId" : "IntegrationAccounts_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments" : {
      "get" : {
        "tags" : [ "integrationServiceEnvironments" ],
        "description" : "Gets a list of integration service environments by subscription.",
        "operationId" : "IntegrationServiceEnvironments_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationServiceEnvironmentListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/workflows" : {
      "get" : {
        "tags" : [ "Workflows" ],
        "description" : "Gets a list of workflows by subscription.",
        "operationId" : "Workflows_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts" : {
      "get" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Gets a list of integration accounts by resource group.",
        "operationId" : "IntegrationAccounts_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}" : {
      "get" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Gets an integration account.",
        "operationId" : "IntegrationAccounts_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Creates or updates an integration account.",
        "operationId" : "IntegrationAccounts_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration account.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccount"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Deletes an integration account.",
        "operationId" : "IntegrationAccounts_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Updates an integration account.",
        "operationId" : "IntegrationAccounts_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration account.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements" : {
      "get" : {
        "tags" : [ "IntegrationAccountAgreements" ],
        "description" : "Gets a list of integration account agreements.",
        "operationId" : "IntegrationAccountAgreements_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: AgreementType.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountAgreementListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}" : {
      "get" : {
        "tags" : [ "IntegrationAccountAgreements" ],
        "description" : "Gets an integration account agreement.",
        "operationId" : "IntegrationAccountAgreements_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementName",
          "in" : "path",
          "description" : "The integration account agreement name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountAgreement"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationAccountAgreements" ],
        "description" : "Creates or updates an integration account agreement.",
        "operationId" : "IntegrationAccountAgreements_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementName",
          "in" : "path",
          "description" : "The integration account agreement name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration account agreement.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationAccountAgreement"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountAgreement"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountAgreement"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationAccountAgreements" ],
        "description" : "Deletes an integration account agreement.",
        "operationId" : "IntegrationAccountAgreements_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementName",
          "in" : "path",
          "description" : "The integration account agreement name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}/listContentCallbackUrl" : {
      "post" : {
        "tags" : [ "IntegrationAccountAgreements" ],
        "description" : "Get the content callback url.",
        "operationId" : "IntegrationAccountAgreements_ListContentCallbackUrl",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agreementName",
          "in" : "path",
          "description" : "The integration account agreement name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies" : {
      "get" : {
        "tags" : [ "IntegrationAccountAssemblies" ],
        "description" : "List the assemblies for an integration account.",
        "operationId" : "IntegrationAccountAssemblies_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssemblyCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}" : {
      "get" : {
        "tags" : [ "IntegrationAccountAssemblies" ],
        "description" : "Get an assembly for an integration account.",
        "operationId" : "IntegrationAccountAssemblies_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assemblyArtifactName",
          "in" : "path",
          "description" : "The assembly artifact name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssemblyDefinition"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationAccountAssemblies" ],
        "description" : "Create or update an assembly for an integration account.",
        "operationId" : "IntegrationAccountAssemblies_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assemblyArtifactName",
          "in" : "path",
          "description" : "The assembly artifact name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The assembly artifact.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssemblyDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssemblyDefinition"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssemblyDefinition"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationAccountAssemblies" ],
        "description" : "Delete an assembly for an integration account.",
        "operationId" : "IntegrationAccountAssemblies_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assemblyArtifactName",
          "in" : "path",
          "description" : "The assembly artifact name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}/listContentCallbackUrl" : {
      "post" : {
        "tags" : [ "IntegrationAccountAssemblies" ],
        "description" : "Get the content callback url for an integration account assembly.",
        "operationId" : "IntegrationAccountAssemblies_ListContentCallbackUrl",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assemblyArtifactName",
          "in" : "path",
          "description" : "The assembly artifact name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations" : {
      "get" : {
        "tags" : [ "IntegrationAccountBatchConfigurations" ],
        "description" : "List the batch configurations for an integration account.",
        "operationId" : "IntegrationAccountBatchConfigurations_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchConfigurationCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations/{batchConfigurationName}" : {
      "get" : {
        "tags" : [ "IntegrationAccountBatchConfigurations" ],
        "description" : "Get a batch configuration for an integration account.",
        "operationId" : "IntegrationAccountBatchConfigurations_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "batchConfigurationName",
          "in" : "path",
          "description" : "The batch configuration name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchConfiguration"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationAccountBatchConfigurations" ],
        "description" : "Create or update a batch configuration for an integration account.",
        "operationId" : "IntegrationAccountBatchConfigurations_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "batchConfigurationName",
          "in" : "path",
          "description" : "The batch configuration name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The batch configuration.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchConfiguration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchConfiguration"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchConfiguration"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationAccountBatchConfigurations" ],
        "description" : "Delete a batch configuration for an integration account.",
        "operationId" : "IntegrationAccountBatchConfigurations_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "batchConfigurationName",
          "in" : "path",
          "description" : "The batch configuration name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates" : {
      "get" : {
        "tags" : [ "IntegrationAccountCertificates" ],
        "description" : "Gets a list of integration account certificates.",
        "operationId" : "IntegrationAccountCertificates_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountCertificateListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}" : {
      "get" : {
        "tags" : [ "IntegrationAccountCertificates" ],
        "description" : "Gets an integration account certificate.",
        "operationId" : "IntegrationAccountCertificates_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The integration account certificate name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountCertificate"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationAccountCertificates" ],
        "description" : "Creates or updates an integration account certificate.",
        "operationId" : "IntegrationAccountCertificates_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The integration account certificate name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration account certificate.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationAccountCertificate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountCertificate"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountCertificate"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationAccountCertificates" ],
        "description" : "Deletes an integration account certificate.",
        "operationId" : "IntegrationAccountCertificates_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The integration account certificate name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listCallbackUrl" : {
      "post" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Gets the integration account callback URL.",
        "operationId" : "IntegrationAccounts_ListCallbackUrl",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The callback URL parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CallbackUrl"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listKeyVaultKeys" : {
      "post" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Gets the integration account's Key Vault keys.",
        "operationId" : "IntegrationAccounts_ListKeyVaultKeys",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The key vault parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListKeyVaultKeysDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyVaultKeyCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/logTrackingEvents" : {
      "post" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Logs the integration account's tracking events.",
        "operationId" : "IntegrationAccounts_LogTrackingEvents",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The callback URL parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrackingEventsDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps" : {
      "get" : {
        "tags" : [ "IntegrationAccountMaps" ],
        "description" : "Gets a list of integration account maps.",
        "operationId" : "IntegrationAccountMaps_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: MapType.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountMapListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}" : {
      "get" : {
        "tags" : [ "IntegrationAccountMaps" ],
        "description" : "Gets an integration account map.",
        "operationId" : "IntegrationAccountMaps_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mapName",
          "in" : "path",
          "description" : "The integration account map name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountMap"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationAccountMaps" ],
        "description" : "Creates or updates an integration account map.",
        "operationId" : "IntegrationAccountMaps_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mapName",
          "in" : "path",
          "description" : "The integration account map name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration account map.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationAccountMap"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountMap"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountMap"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationAccountMaps" ],
        "description" : "Deletes an integration account map.",
        "operationId" : "IntegrationAccountMaps_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mapName",
          "in" : "path",
          "description" : "The integration account map name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}/listContentCallbackUrl" : {
      "post" : {
        "tags" : [ "IntegrationAccountMaps" ],
        "description" : "Get the content callback url.",
        "operationId" : "IntegrationAccountMaps_ListContentCallbackUrl",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mapName",
          "in" : "path",
          "description" : "The integration account map name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners" : {
      "get" : {
        "tags" : [ "IntegrationAccountPartners" ],
        "description" : "Gets a list of integration account partners.",
        "operationId" : "IntegrationAccountPartners_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: PartnerType.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountPartnerListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}" : {
      "get" : {
        "tags" : [ "IntegrationAccountPartners" ],
        "description" : "Gets an integration account partner.",
        "operationId" : "IntegrationAccountPartners_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partnerName",
          "in" : "path",
          "description" : "The integration account partner name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountPartner"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationAccountPartners" ],
        "description" : "Creates or updates an integration account partner.",
        "operationId" : "IntegrationAccountPartners_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partnerName",
          "in" : "path",
          "description" : "The integration account partner name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration account partner.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationAccountPartner"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountPartner"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountPartner"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationAccountPartners" ],
        "description" : "Deletes an integration account partner.",
        "operationId" : "IntegrationAccountPartners_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partnerName",
          "in" : "path",
          "description" : "The integration account partner name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}/listContentCallbackUrl" : {
      "post" : {
        "tags" : [ "IntegrationAccountPartners" ],
        "description" : "Get the content callback url.",
        "operationId" : "IntegrationAccountPartners_ListContentCallbackUrl",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partnerName",
          "in" : "path",
          "description" : "The integration account partner name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/regenerateAccessKey" : {
      "post" : {
        "tags" : [ "IntegrationAccounts" ],
        "description" : "Regenerates the integration account access key.",
        "operationId" : "IntegrationAccounts_RegenerateAccessKey",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The access key type.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegenerateActionParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas" : {
      "get" : {
        "tags" : [ "IntegrationAccountSchemas" ],
        "description" : "Gets a list of integration account schemas.",
        "operationId" : "IntegrationAccountSchemas_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: SchemaType.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountSchemaListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}" : {
      "get" : {
        "tags" : [ "IntegrationAccountSchemas" ],
        "description" : "Gets an integration account schema.",
        "operationId" : "IntegrationAccountSchemas_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaName",
          "in" : "path",
          "description" : "The integration account schema name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountSchema"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationAccountSchemas" ],
        "description" : "Creates or updates an integration account schema.",
        "operationId" : "IntegrationAccountSchemas_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaName",
          "in" : "path",
          "description" : "The integration account schema name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration account schema.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationAccountSchema"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountSchema"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountSchema"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationAccountSchemas" ],
        "description" : "Deletes an integration account schema.",
        "operationId" : "IntegrationAccountSchemas_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaName",
          "in" : "path",
          "description" : "The integration account schema name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}/listContentCallbackUrl" : {
      "post" : {
        "tags" : [ "IntegrationAccountSchemas" ],
        "description" : "Get the content callback url.",
        "operationId" : "IntegrationAccountSchemas_ListContentCallbackUrl",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaName",
          "in" : "path",
          "description" : "The integration account schema name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions" : {
      "get" : {
        "tags" : [ "IntegrationAccountSessions" ],
        "description" : "Gets a list of integration account sessions.",
        "operationId" : "IntegrationAccountSessions_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: ChangedTime.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountSessionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions/{sessionName}" : {
      "get" : {
        "tags" : [ "IntegrationAccountSessions" ],
        "description" : "Gets an integration account session.",
        "operationId" : "IntegrationAccountSessions_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionName",
          "in" : "path",
          "description" : "The integration account session name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountSession"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationAccountSessions" ],
        "description" : "Creates or updates an integration account session.",
        "operationId" : "IntegrationAccountSessions_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionName",
          "in" : "path",
          "description" : "The integration account session name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration account session.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationAccountSession"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountSession"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccountSession"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationAccountSessions" ],
        "description" : "Deletes an integration account session.",
        "operationId" : "IntegrationAccountSessions_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationAccountName",
          "in" : "path",
          "description" : "The integration account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionName",
          "in" : "path",
          "description" : "The integration account session name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/locations/{location}/workflows/{workflowName}/validate" : {
      "post" : {
        "tags" : [ "Workflows" ],
        "description" : "Validates the workflow definition.",
        "operationId" : "Workflows_ValidateByLocation",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "The workflow location.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows" : {
      "get" : {
        "tags" : [ "Workflows" ],
        "description" : "Gets a list of workflows by resource group.",
        "operationId" : "Workflows_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}" : {
      "get" : {
        "tags" : [ "Workflows" ],
        "description" : "Gets a workflow.",
        "operationId" : "Workflows_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workflow"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Workflows" ],
        "description" : "Creates or updates a workflow.",
        "operationId" : "Workflows_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The workflow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Workflow"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workflow"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workflow"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Workflows" ],
        "description" : "Deletes a workflow.",
        "operationId" : "Workflows_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Workflows" ],
        "description" : "Updates a workflow.",
        "operationId" : "Workflows_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The workflow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Workflow"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workflow"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/disable" : {
      "post" : {
        "tags" : [ "Workflows" ],
        "description" : "Disables a workflow.",
        "operationId" : "Workflows_Disable",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/enable" : {
      "post" : {
        "tags" : [ "Workflows" ],
        "description" : "Enables a workflow.",
        "operationId" : "Workflows_Enable",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/generateUpgradedDefinition" : {
      "post" : {
        "tags" : [ "Workflows" ],
        "description" : "Generates the upgraded definition for a workflow.",
        "operationId" : "Workflows_GenerateUpgradedDefinition",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for generating an upgraded definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateUpgradedDefinitionParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listCallbackUrl" : {
      "post" : {
        "tags" : [ "Workflows" ],
        "description" : "Get the workflow callback Url.",
        "operationId" : "Workflows_ListCallbackUrl",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Which callback url to list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listSwagger" : {
      "post" : {
        "tags" : [ "Workflows" ],
        "description" : "Gets an OpenAPI definition for the workflow.",
        "operationId" : "Workflows_ListSwagger",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/move" : {
      "post" : {
        "tags" : [ "Workflows" ],
        "description" : "Moves an existing workflow.",
        "operationId" : "Workflows_Move",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The workflow to move.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Workflow"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/regenerateAccessKey" : {
      "post" : {
        "tags" : [ "Workflows" ],
        "description" : "Regenerates the callback URL access key for request triggers.",
        "operationId" : "Workflows_RegenerateAccessKey",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The access key type.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegenerateActionParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs" : {
      "get" : {
        "tags" : [ "WorkflowRuns" ],
        "description" : "Gets a list of workflow runs.",
        "operationId" : "WorkflowRuns_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowRunListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}" : {
      "get" : {
        "tags" : [ "WorkflowRuns" ],
        "description" : "Gets a workflow run.",
        "operationId" : "WorkflowRuns_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowRun"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "Gets a list of workflow run actions.",
        "operationId" : "WorkflowRunActions_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: Status.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowRunActionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "Gets a workflow run action.",
        "operationId" : "WorkflowRunActions_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowRunAction"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/listExpressionTraces" : {
      "post" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "Lists a workflow run expression trace.",
        "operationId" : "WorkflowRunActions_ListExpressionTraces",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExpressionTraces"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "Get all of a workflow run action repetitions.",
        "operationId" : "WorkflowRunActionRepetitions_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowRunActionRepetitionDefinitionCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "Get a workflow run action repetition.",
        "operationId" : "WorkflowRunActionRepetitions_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repetitionName",
          "in" : "path",
          "description" : "The workflow repetition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowRunActionRepetitionDefinition"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/listExpressionTraces" : {
      "post" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "Lists a workflow run expression trace.",
        "operationId" : "WorkflowRunActionRepetitions_ListExpressionTraces",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repetitionName",
          "in" : "path",
          "description" : "The workflow repetition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExpressionTraces"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "List a workflow run repetition request history.",
        "operationId" : "WorkflowRunActionRepetitionsRequestHistories_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repetitionName",
          "in" : "path",
          "description" : "The workflow repetition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestHistoryListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories/{requestHistoryName}" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "Gets a workflow run repetition request history.",
        "operationId" : "WorkflowRunActionRepetitionsRequestHistories_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repetitionName",
          "in" : "path",
          "description" : "The workflow repetition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requestHistoryName",
          "in" : "path",
          "description" : "The request history name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestHistory"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/requestHistories" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "List a workflow run request history.",
        "operationId" : "WorkflowRunActionRequestHistories_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestHistoryListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/requestHistories/{requestHistoryName}" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "Gets a workflow run request history.",
        "operationId" : "WorkflowRunActionRequestHistories_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requestHistoryName",
          "in" : "path",
          "description" : "The request history name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestHistory"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "List the workflow run action scoped repetitions.",
        "operationId" : "WorkflowRunActionScopeRepetitions_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowRunActionRepetitionDefinitionCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions/{repetitionName}" : {
      "get" : {
        "tags" : [ "WorkflowRunActions" ],
        "description" : "Get a workflow run action scoped repetition.",
        "operationId" : "WorkflowRunActionScopeRepetitions_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The workflow action name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repetitionName",
          "in" : "path",
          "description" : "The workflow repetition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowRunActionRepetitionDefinition"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/cancel" : {
      "post" : {
        "tags" : [ "WorkflowRuns" ],
        "description" : "Cancels a workflow run.",
        "operationId" : "WorkflowRuns_Cancel",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "WorkflowRunOperations" ],
        "description" : "Gets an operation for a run.",
        "operationId" : "WorkflowRunOperations_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runName",
          "in" : "path",
          "description" : "The workflow run name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "The workflow operation id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowRun"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers" : {
      "get" : {
        "tags" : [ "WorkflowTriggers" ],
        "description" : "Gets a list of workflow triggers.",
        "operationId" : "WorkflowTriggers_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}" : {
      "get" : {
        "tags" : [ "WorkflowTriggers" ],
        "description" : "Gets a workflow trigger.",
        "operationId" : "WorkflowTriggers_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTrigger"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories" : {
      "get" : {
        "tags" : [ "WorkflowTriggerHistories" ],
        "description" : "Gets a list of workflow trigger histories.",
        "operationId" : "WorkflowTriggerHistories_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerHistoryListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}" : {
      "get" : {
        "tags" : [ "WorkflowTriggerHistories" ],
        "description" : "Gets a workflow trigger history.",
        "operationId" : "WorkflowTriggerHistories_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "historyName",
          "in" : "path",
          "description" : "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerHistory"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}/resubmit" : {
      "post" : {
        "tags" : [ "WorkflowTriggerHistories" ],
        "description" : "Resubmits a workflow run based on the trigger history.",
        "operationId" : "WorkflowTriggerHistories_Resubmit",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "historyName",
          "in" : "path",
          "description" : "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/listCallbackUrl" : {
      "post" : {
        "tags" : [ "WorkflowTriggers" ],
        "description" : "Get the callback URL for a workflow trigger.",
        "operationId" : "WorkflowTriggers_ListCallbackUrl",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/reset" : {
      "post" : {
        "tags" : [ "WorkflowTriggers" ],
        "description" : "Resets a workflow trigger.",
        "operationId" : "WorkflowTriggers_Reset",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/run" : {
      "post" : {
        "tags" : [ "WorkflowTriggers" ],
        "description" : "Runs a workflow trigger.",
        "operationId" : "WorkflowTriggers_Run",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "All status codes are acceptable.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/schemas/json" : {
      "get" : {
        "tags" : [ "WorkflowTriggers" ],
        "description" : "Get the trigger schema as JSON.",
        "operationId" : "WorkflowTriggers_GetSchemaJson",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonSchema"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/setState" : {
      "post" : {
        "tags" : [ "WorkflowTriggers" ],
        "description" : "Sets the state of a workflow trigger.",
        "operationId" : "WorkflowTriggers_SetState",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The workflow trigger state.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetTriggerStateActionDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/validate" : {
      "post" : {
        "tags" : [ "Workflows" ],
        "description" : "Validates the workflow.",
        "operationId" : "Workflows_ValidateByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The workflow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Workflow"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions" : {
      "get" : {
        "tags" : [ "WorkflowVersions" ],
        "description" : "Gets a list of workflow versions.",
        "operationId" : "WorkflowVersions_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowVersionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}" : {
      "get" : {
        "tags" : [ "WorkflowVersions" ],
        "description" : "Gets a workflow version.",
        "operationId" : "WorkflowVersions_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The workflow versionId.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowVersion"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}/triggers/{triggerName}/listCallbackUrl" : {
      "post" : {
        "tags" : [ "WorkflowTriggers" ],
        "description" : "Get the callback url for a trigger of a workflow version.",
        "operationId" : "WorkflowVersionTriggers_ListCallbackUrl",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowName",
          "in" : "path",
          "description" : "The workflow name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The workflow versionId.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The workflow trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The callback URL parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments" : {
      "get" : {
        "tags" : [ "IntegrationServiceEnvironments" ],
        "description" : "Gets a list of integration service environments by resource group.",
        "operationId" : "IntegrationServiceEnvironments_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of items to be included in the result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationServiceEnvironmentListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}" : {
      "get" : {
        "tags" : [ "IntegrationServiceEnvironments" ],
        "description" : "Gets an integration service environment.",
        "operationId" : "IntegrationServiceEnvironments_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationServiceEnvironment"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IntegrationServiceEnvironments" ],
        "description" : "Creates or updates an integration service environment.",
        "operationId" : "IntegrationServiceEnvironments_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration service environment.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationServiceEnvironment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationServiceEnvironment"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationServiceEnvironment"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IntegrationServiceEnvironments" ],
        "description" : "Deletes an integration service environment.",
        "operationId" : "IntegrationServiceEnvironments_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "IntegrationServiceEnvironments" ],
        "description" : "Updates an integration service environment.",
        "operationId" : "IntegrationServiceEnvironments_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The integration service environment.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationServiceEnvironment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationServiceEnvironment"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/health/network" : {
      "get" : {
        "tags" : [ "integrationServiceEnvironmentNetworkHealth" ],
        "description" : "Gets the integration service environment network health.",
        "operationId" : "IntegrationServiceEnvironmentNetworkHealth_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationServiceEnvironmentNetworkHealth"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis" : {
      "get" : {
        "tags" : [ "integrationServiceEnvironmentManagedApis" ],
        "description" : "Gets the integration service environment managed Apis.",
        "operationId" : "IntegrationServiceEnvironmentManagedApis_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedApiListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}" : {
      "get" : {
        "tags" : [ "integrationServiceEnvironmentManagedApi" ],
        "description" : "Gets the integration service environment managed Api.",
        "operationId" : "IntegrationServiceEnvironmentManagedApis_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiName",
          "in" : "path",
          "description" : "The api name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedApi"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "integrationServiceEnvironmentManagedApi" ],
        "description" : "Puts the integration service environment managed Api.",
        "operationId" : "IntegrationServiceEnvironmentManagedApis_Put",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiName",
          "in" : "path",
          "description" : "The api name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedApi"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedApi"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "integrationServiceEnvironmentManagedApi" ],
        "description" : "Deletes the integration service environment managed Api.",
        "operationId" : "IntegrationServiceEnvironmentManagedApis_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiName",
          "in" : "path",
          "description" : "The api name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}/apiOperations" : {
      "get" : {
        "tags" : [ "integrationServiceEnvironmentManagedApis" ],
        "description" : "Gets the managed Api operations.",
        "operationId" : "IntegrationServiceEnvironmentManagedApiOperations_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiName",
          "in" : "path",
          "description" : "The api name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiOperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/restart" : {
      "post" : {
        "tags" : [ "integrationServiceEnvironmentRestart" ],
        "description" : "Restarts an integration service environment.",
        "operationId" : "IntegrationServiceEnvironments_Restart",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/skus" : {
      "get" : {
        "tags" : [ "integrationServiceEnvironmentSkus" ],
        "description" : "Gets a list of integration service environment Skus.",
        "operationId" : "IntegrationServiceEnvironmentSkus_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroup",
          "in" : "path",
          "description" : "The resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationServiceEnvironmentName",
          "in" : "path",
          "description" : "The integration service environment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationServiceEnvironmentSkuList"
                }
              }
            }
          },
          "default" : {
            "description" : "Logic error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AS2AcknowledgementConnectionSettings" : {
        "required" : [ "ignoreCertificateNameMismatch", "keepHttpConnectionAlive", "supportHttpStatusCodeContinue", "unfoldHttpHeaders" ],
        "type" : "object",
        "properties" : {
          "ignoreCertificateNameMismatch" : {
            "type" : "boolean",
            "description" : "Indicates whether to ignore mismatch in certificate name."
          },
          "keepHttpConnectionAlive" : {
            "type" : "boolean",
            "description" : "Indicates whether to keep the connection alive."
          },
          "supportHttpStatusCodeContinue" : {
            "type" : "boolean",
            "description" : "Indicates whether to support HTTP status code 'CONTINUE'."
          },
          "unfoldHttpHeaders" : {
            "type" : "boolean",
            "description" : "Indicates whether to unfold the HTTP headers."
          }
        },
        "description" : "The AS2 agreement acknowledgement connection settings."
      },
      "AS2AgreementContent" : {
        "required" : [ "receiveAgreement", "sendAgreement" ],
        "type" : "object",
        "properties" : {
          "receiveAgreement" : {
            "$ref" : "#/components/schemas/AS2OneWayAgreement"
          },
          "sendAgreement" : {
            "$ref" : "#/components/schemas/AS2OneWayAgreement"
          }
        },
        "description" : "The integration account AS2 agreement content."
      },
      "AS2EnvelopeSettings" : {
        "required" : [ "autogenerateFileName", "fileNameTemplate", "messageContentType", "suspendMessageOnFileNameGenerationError", "transmitFileNameInMimeHeader" ],
        "type" : "object",
        "properties" : {
          "autogenerateFileName" : {
            "type" : "boolean",
            "description" : "The value indicating whether to auto generate file name."
          },
          "fileNameTemplate" : {
            "type" : "string",
            "description" : "The template for file name."
          },
          "messageContentType" : {
            "type" : "string",
            "description" : "The message content type."
          },
          "suspendMessageOnFileNameGenerationError" : {
            "type" : "boolean",
            "description" : "The value indicating whether to suspend message on file name generation error."
          },
          "transmitFileNameInMimeHeader" : {
            "type" : "boolean",
            "description" : "The value indicating whether to transmit file name in mime header."
          }
        },
        "description" : "The AS2 agreement envelope settings."
      },
      "AS2ErrorSettings" : {
        "required" : [ "resendIfMDNNotReceived", "suspendDuplicateMessage" ],
        "type" : "object",
        "properties" : {
          "resendIfMDNNotReceived" : {
            "type" : "boolean",
            "description" : "The value indicating whether to resend message If MDN is not received."
          },
          "suspendDuplicateMessage" : {
            "type" : "boolean",
            "description" : "The value indicating whether to suspend duplicate message."
          }
        },
        "description" : "The AS2 agreement error settings."
      },
      "AS2MdnSettings" : {
        "required" : [ "micHashingAlgorithm", "needMDN", "sendInboundMDNToMessageBox", "sendMDNAsynchronously", "signMDN", "signOutboundMDNIfOptional" ],
        "type" : "object",
        "properties" : {
          "dispositionNotificationTo" : {
            "type" : "string",
            "description" : "The disposition notification to header value."
          },
          "mdnText" : {
            "type" : "string",
            "description" : "The MDN text."
          },
          "micHashingAlgorithm" : {
            "$ref" : "#/components/schemas/HashingAlgorithm"
          },
          "needMDN" : {
            "type" : "boolean",
            "description" : "The value indicating whether to send or request a MDN."
          },
          "receiptDeliveryUrl" : {
            "type" : "string",
            "description" : "The receipt delivery URL."
          },
          "sendInboundMDNToMessageBox" : {
            "type" : "boolean",
            "description" : "The value indicating whether to send inbound MDN to message box."
          },
          "sendMDNAsynchronously" : {
            "type" : "boolean",
            "description" : "The value indicating whether to send the asynchronous MDN."
          },
          "signMDN" : {
            "type" : "boolean",
            "description" : "The value indicating whether the MDN needs to be signed or not."
          },
          "signOutboundMDNIfOptional" : {
            "type" : "boolean",
            "description" : "The value indicating whether to sign the outbound MDN if optional."
          }
        },
        "description" : "The AS2 agreement mdn settings."
      },
      "AS2MessageConnectionSettings" : {
        "required" : [ "ignoreCertificateNameMismatch", "keepHttpConnectionAlive", "supportHttpStatusCodeContinue", "unfoldHttpHeaders" ],
        "type" : "object",
        "properties" : {
          "ignoreCertificateNameMismatch" : {
            "type" : "boolean",
            "description" : "The value indicating whether to ignore mismatch in certificate name."
          },
          "keepHttpConnectionAlive" : {
            "type" : "boolean",
            "description" : "The value indicating whether to keep the connection alive."
          },
          "supportHttpStatusCodeContinue" : {
            "type" : "boolean",
            "description" : "The value indicating whether to support HTTP status code 'CONTINUE'."
          },
          "unfoldHttpHeaders" : {
            "type" : "boolean",
            "description" : "The value indicating whether to unfold the HTTP headers."
          }
        },
        "description" : "The AS2 agreement message connection settings."
      },
      "AS2OneWayAgreement" : {
        "required" : [ "protocolSettings", "receiverBusinessIdentity", "senderBusinessIdentity" ],
        "type" : "object",
        "properties" : {
          "protocolSettings" : {
            "$ref" : "#/components/schemas/AS2ProtocolSettings"
          },
          "receiverBusinessIdentity" : {
            "$ref" : "#/components/schemas/BusinessIdentity"
          },
          "senderBusinessIdentity" : {
            "$ref" : "#/components/schemas/BusinessIdentity"
          }
        },
        "description" : "The integration account AS2 one-way agreement."
      },
      "AS2ProtocolSettings" : {
        "required" : [ "acknowledgementConnectionSettings", "envelopeSettings", "errorSettings", "mdnSettings", "messageConnectionSettings", "securitySettings", "validationSettings" ],
        "type" : "object",
        "properties" : {
          "acknowledgementConnectionSettings" : {
            "$ref" : "#/components/schemas/AS2AcknowledgementConnectionSettings"
          },
          "envelopeSettings" : {
            "$ref" : "#/components/schemas/AS2EnvelopeSettings"
          },
          "errorSettings" : {
            "$ref" : "#/components/schemas/AS2ErrorSettings"
          },
          "mdnSettings" : {
            "$ref" : "#/components/schemas/AS2MdnSettings"
          },
          "messageConnectionSettings" : {
            "$ref" : "#/components/schemas/AS2MessageConnectionSettings"
          },
          "securitySettings" : {
            "$ref" : "#/components/schemas/AS2SecuritySettings"
          },
          "validationSettings" : {
            "$ref" : "#/components/schemas/AS2ValidationSettings"
          }
        },
        "description" : "The AS2 agreement protocol settings."
      },
      "AS2SecuritySettings" : {
        "required" : [ "enableNRRForInboundDecodedMessages", "enableNRRForInboundEncodedMessages", "enableNRRForInboundMDN", "enableNRRForOutboundDecodedMessages", "enableNRRForOutboundEncodedMessages", "enableNRRForOutboundMDN", "overrideGroupSigningCertificate" ],
        "type" : "object",
        "properties" : {
          "enableNRRForInboundDecodedMessages" : {
            "type" : "boolean",
            "description" : "The value indicating whether to enable NRR for inbound decoded messages."
          },
          "enableNRRForInboundEncodedMessages" : {
            "type" : "boolean",
            "description" : "The value indicating whether to enable NRR for inbound encoded messages."
          },
          "enableNRRForInboundMDN" : {
            "type" : "boolean",
            "description" : "The value indicating whether to enable NRR for inbound MDN."
          },
          "enableNRRForOutboundDecodedMessages" : {
            "type" : "boolean",
            "description" : "The value indicating whether to enable NRR for outbound decoded messages."
          },
          "enableNRRForOutboundEncodedMessages" : {
            "type" : "boolean",
            "description" : "The value indicating whether to enable NRR for outbound encoded messages."
          },
          "enableNRRForOutboundMDN" : {
            "type" : "boolean",
            "description" : "The value indicating whether to enable NRR for outbound MDN."
          },
          "encryptionCertificateName" : {
            "type" : "string",
            "description" : "The name of the encryption certificate."
          },
          "overrideGroupSigningCertificate" : {
            "type" : "boolean",
            "description" : "The value indicating whether to send or request a MDN."
          },
          "sha2AlgorithmFormat" : {
            "type" : "string",
            "description" : "The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize."
          },
          "signingCertificateName" : {
            "type" : "string",
            "description" : "The name of the signing certificate."
          }
        },
        "description" : "The AS2 agreement security settings."
      },
      "AS2ValidationSettings" : {
        "required" : [ "checkCertificateRevocationListOnReceive", "checkCertificateRevocationListOnSend", "checkDuplicateMessage", "compressMessage", "encryptMessage", "encryptionAlgorithm", "interchangeDuplicatesValidityDays", "overrideMessageProperties", "signMessage" ],
        "type" : "object",
        "properties" : {
          "checkCertificateRevocationListOnReceive" : {
            "type" : "boolean",
            "description" : "The value indicating whether to check for certificate revocation list on receive."
          },
          "checkCertificateRevocationListOnSend" : {
            "type" : "boolean",
            "description" : "The value indicating whether to check for certificate revocation list on send."
          },
          "checkDuplicateMessage" : {
            "type" : "boolean",
            "description" : "The value indicating whether to check for duplicate message."
          },
          "compressMessage" : {
            "type" : "boolean",
            "description" : "The value indicating whether the message has to be compressed."
          },
          "encryptMessage" : {
            "type" : "boolean",
            "description" : "The value indicating whether the message has to be encrypted."
          },
          "encryptionAlgorithm" : {
            "$ref" : "#/components/schemas/EncryptionAlgorithm"
          },
          "interchangeDuplicatesValidityDays" : {
            "type" : "integer",
            "description" : "The number of days to look back for duplicate interchange.",
            "format" : "int32"
          },
          "overrideMessageProperties" : {
            "type" : "boolean",
            "description" : "The value indicating whether to override incoming message properties with those in agreement."
          },
          "signMessage" : {
            "type" : "boolean",
            "description" : "The value indicating whether the message has to be signed."
          },
          "signingAlgorithm" : {
            "$ref" : "#/components/schemas/SigningAlgorithm"
          }
        },
        "description" : "The AS2 agreement validation settings."
      },
      "AgreementContent" : {
        "type" : "object",
        "properties" : {
          "aS2" : {
            "$ref" : "#/components/schemas/AS2AgreementContent"
          },
          "edifact" : {
            "$ref" : "#/components/schemas/EdifactAgreementContent"
          },
          "x12" : {
            "$ref" : "#/components/schemas/X12AgreementContent"
          }
        },
        "description" : "The integration account agreement content."
      },
      "AgreementType" : {
        "type" : "string",
        "description" : "The agreement type.",
        "enum" : [ "NotSpecified", "AS2", "X12", "Edifact" ]
      },
      "ApiDeploymentParameterMetadata" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name."
          },
          "isRequired" : {
            "type" : "boolean",
            "description" : "Indicates whether its required."
          },
          "type" : {
            "type" : "string",
            "description" : "The type."
          },
          "visibility" : {
            "$ref" : "#/components/schemas/ApiDeploymentParameterVisibility"
          }
        },
        "description" : "The API deployment parameter metadata."
      },
      "ApiDeploymentParameterMetadataSet" : {
        "type" : "object",
        "properties" : {
          "packageContentLink" : {
            "$ref" : "#/components/schemas/ApiDeploymentParameterMetadata"
          },
          "redisCacheConnectionString" : {
            "$ref" : "#/components/schemas/ApiDeploymentParameterMetadata"
          }
        },
        "description" : "The API deployment parameters metadata."
      },
      "ApiDeploymentParameterVisibility" : {
        "type" : "string",
        "description" : "The Api deployment parameter visibility.",
        "enum" : [ "NotSpecified", "Default", "Internal" ]
      },
      "ApiOperation" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ApiOperationPropertiesDefinition"
          }
        },
        "description" : "The api operation.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ApiOperationAnnotation" : {
        "type" : "object",
        "properties" : {
          "family" : {
            "type" : "string",
            "description" : "The family."
          },
          "revision" : {
            "type" : "integer",
            "description" : "The revision."
          },
          "status" : {
            "$ref" : "#/components/schemas/StatusAnnotation"
          }
        },
        "description" : "The Api Operation Annotation."
      },
      "ApiOperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The api operation definitions for an API.",
            "items" : {
              "$ref" : "#/components/schemas/ApiOperation"
            }
          }
        },
        "description" : "The list of managed API operations."
      },
      "ApiOperationPropertiesDefinition" : {
        "type" : "object",
        "properties" : {
          "annotation" : {
            "$ref" : "#/components/schemas/ApiOperationAnnotation"
          },
          "api" : {
            "$ref" : "#/components/schemas/ApiReference"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the api operation."
          },
          "inputsDefinition" : {
            "$ref" : "#/components/schemas/SwaggerSchema"
          },
          "isNotification" : {
            "type" : "boolean",
            "description" : "Indicates whether the API operation is notification or not."
          },
          "isWebhook" : {
            "type" : "boolean",
            "description" : "Indicates whether the API operation is webhook or not."
          },
          "pageable" : {
            "type" : "boolean",
            "description" : "Indicates whether the api operation is pageable."
          },
          "responsesDefinition" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SwaggerSchema"
            },
            "description" : "The operation responses definition schemas."
          },
          "summary" : {
            "type" : "string",
            "description" : "The summary of the api operation."
          },
          "trigger" : {
            "type" : "string",
            "description" : "The trigger type of api operation."
          },
          "triggerHint" : {
            "type" : "string",
            "description" : "The trigger hint for the api operation."
          },
          "visibility" : {
            "type" : "string",
            "description" : "The visibility of the api operation."
          }
        },
        "description" : "The api operations properties"
      },
      "ApiReference" : {
        "properties" : {
          "brandColor" : {
            "type" : "string",
            "description" : "The brand color of the api."
          },
          "category" : {
            "$ref" : "#/components/schemas/ApiTier"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the api."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the api."
          },
          "iconUri" : {
            "type" : "string",
            "description" : "The icon uri of the api."
          },
          "integrationServiceEnvironment" : {
            "$ref" : "#/components/schemas/ResourceReference"
          },
          "swagger" : {
            "$ref" : "#/components/schemas/Object"
          }
        },
        "description" : "The Api reference.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceReference"
        } ]
      },
      "ApiResourceBackendService" : {
        "type" : "object",
        "properties" : {
          "serviceUrl" : {
            "type" : "string",
            "description" : "The service URL."
          }
        },
        "description" : "The API backend service."
      },
      "ApiResourceDefinitions" : {
        "type" : "object",
        "properties" : {
          "modifiedSwaggerUrl" : {
            "type" : "string",
            "description" : "The modified swagger url."
          },
          "originalSwaggerUrl" : {
            "type" : "string",
            "description" : "The original swagger url."
          }
        },
        "description" : "The Api resource definition."
      },
      "ApiResourceGeneralInformation" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name."
          },
          "iconUrl" : {
            "type" : "string",
            "description" : "The icon url."
          },
          "releaseTag" : {
            "type" : "string",
            "description" : "The release tag."
          },
          "termsOfUseUrl" : {
            "type" : "string",
            "description" : "The terms of use url."
          },
          "tier" : {
            "$ref" : "#/components/schemas/ApiTier"
          }
        },
        "description" : "The API general information."
      },
      "ApiResourceMetadata" : {
        "type" : "object",
        "properties" : {
          "ApiType" : {
            "$ref" : "#/components/schemas/ApiType"
          },
          "brandColor" : {
            "type" : "string",
            "description" : "The brand color."
          },
          "connectionType" : {
            "type" : "string",
            "description" : "The connection type."
          },
          "deploymentParameters" : {
            "$ref" : "#/components/schemas/ApiDeploymentParameterMetadataSet"
          },
          "hideKey" : {
            "type" : "string",
            "description" : "The hide key."
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/WorkflowProvisioningState"
          },
          "source" : {
            "type" : "string",
            "description" : "The source."
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags."
          },
          "wsdlImportMethod" : {
            "$ref" : "#/components/schemas/WsdlImportMethod"
          },
          "wsdlService" : {
            "$ref" : "#/components/schemas/WsdlService"
          }
        },
        "description" : "The api resource metadata."
      },
      "ApiResourcePolicies" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "The API level only policies XML as embedded content."
          },
          "contentLink" : {
            "type" : "string",
            "description" : "The content link to the policies."
          }
        },
        "description" : "The API resource policies."
      },
      "ApiResourceProperties" : {
        "type" : "object",
        "properties" : {
          "apiDefinitionUrl" : {
            "type" : "string",
            "description" : "The API definition."
          },
          "apiDefinitions" : {
            "$ref" : "#/components/schemas/ApiResourceDefinitions"
          },
          "backendService" : {
            "$ref" : "#/components/schemas/ApiResourceBackendService"
          },
          "capabilities" : {
            "type" : "array",
            "description" : "The capabilities.",
            "items" : {
              "type" : "string"
            }
          },
          "category" : {
            "$ref" : "#/components/schemas/ApiTier"
          },
          "connectionParameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Object"
            },
            "description" : "The connection parameters."
          },
          "generalInformation" : {
            "$ref" : "#/components/schemas/ApiResourceGeneralInformation"
          },
          "integrationServiceEnvironment" : {
            "$ref" : "#/components/schemas/ResourceReference"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ApiResourceMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name"
          },
          "policies" : {
            "$ref" : "#/components/schemas/ApiResourcePolicies"
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/WorkflowProvisioningState"
          },
          "runtimeUrls" : {
            "type" : "array",
            "description" : "The runtime urls.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The API resource properties."
      },
      "ApiTier" : {
        "type" : "string",
        "description" : "The Api tier.",
        "enum" : [ "NotSpecified", "Enterprise", "Standard", "Premium" ]
      },
      "ApiType" : {
        "type" : "string",
        "enum" : [ "NotSpecified", "Rest", "Soap" ]
      },
      "ArtifactContentPropertiesDefinition" : {
        "properties" : {
          "content" : {
            "type" : "object"
          },
          "contentLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "contentType" : {
            "type" : "string",
            "description" : "The content type."
          }
        },
        "description" : "The artifact content properties definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ArtifactProperties"
        } ]
      },
      "ArtifactProperties" : {
        "type" : "object",
        "properties" : {
          "changedTime" : {
            "type" : "string",
            "description" : "The artifact changed time.",
            "format" : "date-time"
          },
          "createdTime" : {
            "type" : "string",
            "description" : "The artifact creation time.",
            "format" : "date-time"
          },
          "metadata" : {
            "type" : "object"
          }
        },
        "additionalProperties" : false,
        "description" : "The artifact properties definition."
      },
      "AssemblyCollection" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssemblyDefinition"
            }
          }
        },
        "description" : "A collection of assembly definitions."
      },
      "AssemblyDefinition" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AssemblyProperties"
          }
        },
        "description" : "The assembly definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "AssemblyProperties" : {
        "required" : [ "assemblyName" ],
        "properties" : {
          "assemblyCulture" : {
            "type" : "string",
            "description" : "The assembly culture."
          },
          "assemblyName" : {
            "type" : "string",
            "description" : "The assembly name."
          },
          "assemblyPublicKeyToken" : {
            "type" : "string",
            "description" : "The assembly public key token."
          },
          "assemblyVersion" : {
            "type" : "string",
            "description" : "The assembly version."
          }
        },
        "description" : "The assembly properties definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ArtifactContentPropertiesDefinition"
        } ]
      },
      "AzureAsyncOperationState" : {
        "type" : "string",
        "description" : "The Azure async operation state.",
        "enum" : [ "Failed", "Succeeded", "Pending", "Canceled" ]
      },
      "AzureResourceErrorInfo" : {
        "required" : [ "message" ],
        "properties" : {
          "details" : {
            "type" : "array",
            "description" : "The error details.",
            "items" : {
              "$ref" : "#/components/schemas/AzureResourceErrorInfo"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          }
        },
        "description" : "The azure resource error info.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ErrorInfo"
        } ]
      },
      "B2BPartnerContent" : {
        "type" : "object",
        "properties" : {
          "businessIdentities" : {
            "type" : "array",
            "description" : "The list of partner business identities.",
            "items" : {
              "$ref" : "#/components/schemas/BusinessIdentity"
            }
          }
        },
        "description" : "The B2B partner content."
      },
      "BatchConfiguration" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/BatchConfigurationProperties"
          }
        },
        "description" : "The batch configuration resource definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "BatchConfigurationCollection" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BatchConfiguration"
            }
          }
        },
        "description" : "A collection of batch configurations."
      },
      "BatchConfigurationProperties" : {
        "required" : [ "batchGroupName", "releaseCriteria" ],
        "properties" : {
          "batchGroupName" : {
            "type" : "string",
            "description" : "The name of the batch group."
          },
          "changedTime" : {
            "type" : "string",
            "description" : "The changed time.",
            "format" : "date-time"
          },
          "createdTime" : {
            "type" : "string",
            "description" : "The created time.",
            "format" : "date-time"
          },
          "releaseCriteria" : {
            "$ref" : "#/components/schemas/BatchReleaseCriteria"
          }
        },
        "description" : "The batch configuration properties definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ArtifactProperties"
        } ]
      },
      "BatchReleaseCriteria" : {
        "type" : "object",
        "properties" : {
          "batchSize" : {
            "type" : "integer",
            "description" : "The batch size in bytes.",
            "format" : "int32"
          },
          "messageCount" : {
            "type" : "integer",
            "description" : "The message count.",
            "format" : "int32"
          },
          "recurrence" : {
            "$ref" : "#/components/schemas/WorkflowTriggerRecurrence"
          }
        },
        "additionalProperties" : false,
        "description" : "The batch release criteria."
      },
      "BusinessIdentity" : {
        "required" : [ "qualifier", "value" ],
        "type" : "object",
        "properties" : {
          "qualifier" : {
            "type" : "string",
            "description" : "The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32"
          },
          "value" : {
            "type" : "string",
            "description" : "The user defined business identity value."
          }
        },
        "description" : "The integration account partner's business identity."
      },
      "CallbackUrl" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The URL value."
          }
        },
        "description" : "The callback url."
      },
      "ContentHash" : {
        "type" : "object",
        "properties" : {
          "algorithm" : {
            "type" : "string",
            "description" : "The algorithm of the content hash."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the content hash."
          }
        },
        "description" : "The content hash."
      },
      "ContentLink" : {
        "type" : "object",
        "properties" : {
          "contentHash" : {
            "$ref" : "#/components/schemas/ContentHash"
          },
          "contentSize" : {
            "type" : "integer",
            "description" : "The content size.",
            "format" : "int64"
          },
          "contentVersion" : {
            "type" : "string",
            "description" : "The content version."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/Object"
          },
          "uri" : {
            "type" : "string",
            "description" : "The content link URI."
          }
        },
        "description" : "The content link."
      },
      "Correlation" : {
        "type" : "object",
        "properties" : {
          "clientTrackingId" : {
            "type" : "string",
            "description" : "The client tracking id."
          }
        },
        "description" : "The correlation property."
      },
      "DayOfWeek" : {
        "type" : "string",
        "description" : "The day of the week.",
        "enum" : [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ]
      },
      "EdifactAcknowledgementSettings" : {
        "required" : [ "acknowledgementControlNumberLowerBound", "acknowledgementControlNumberUpperBound", "batchFunctionalAcknowledgements", "batchTechnicalAcknowledgements", "needFunctionalAcknowledgement", "needLoopForValidMessages", "needTechnicalAcknowledgement", "rolloverAcknowledgementControlNumber", "sendSynchronousAcknowledgement" ],
        "type" : "object",
        "properties" : {
          "acknowledgementControlNumberLowerBound" : {
            "type" : "integer",
            "description" : "The acknowledgement control number lower bound.",
            "format" : "int32"
          },
          "acknowledgementControlNumberPrefix" : {
            "type" : "string",
            "description" : "The acknowledgement control number prefix."
          },
          "acknowledgementControlNumberSuffix" : {
            "type" : "string",
            "description" : "The acknowledgement control number suffix."
          },
          "acknowledgementControlNumberUpperBound" : {
            "type" : "integer",
            "description" : "The acknowledgement control number upper bound.",
            "format" : "int32"
          },
          "batchFunctionalAcknowledgements" : {
            "type" : "boolean",
            "description" : "The value indicating whether to batch functional acknowledgements."
          },
          "batchTechnicalAcknowledgements" : {
            "type" : "boolean",
            "description" : "The value indicating whether to batch the technical acknowledgements."
          },
          "needFunctionalAcknowledgement" : {
            "type" : "boolean",
            "description" : "The value indicating whether functional acknowledgement is needed."
          },
          "needLoopForValidMessages" : {
            "type" : "boolean",
            "description" : "The value indicating whether a loop is needed for valid messages."
          },
          "needTechnicalAcknowledgement" : {
            "type" : "boolean",
            "description" : "The value indicating whether technical acknowledgement is needed."
          },
          "rolloverAcknowledgementControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to rollover acknowledgement control number."
          },
          "sendSynchronousAcknowledgement" : {
            "type" : "boolean",
            "description" : "The value indicating whether to send synchronous acknowledgement."
          }
        },
        "description" : "The Edifact agreement acknowledgement settings."
      },
      "EdifactAgreementContent" : {
        "required" : [ "receiveAgreement", "sendAgreement" ],
        "type" : "object",
        "properties" : {
          "receiveAgreement" : {
            "$ref" : "#/components/schemas/EdifactOneWayAgreement"
          },
          "sendAgreement" : {
            "$ref" : "#/components/schemas/EdifactOneWayAgreement"
          }
        },
        "description" : "The Edifact agreement content."
      },
      "EdifactCharacterSet" : {
        "type" : "string",
        "description" : "The edifact character set.",
        "enum" : [ "NotSpecified", "UNOB", "UNOA", "UNOC", "UNOD", "UNOE", "UNOF", "UNOG", "UNOH", "UNOI", "UNOJ", "UNOK", "UNOX", "UNOY", "KECA" ]
      },
      "EdifactDecimalIndicator" : {
        "type" : "string",
        "description" : "The edifact decimal indicator.",
        "enum" : [ "NotSpecified", "Comma", "Decimal" ]
      },
      "EdifactDelimiterOverride" : {
        "required" : [ "componentSeparator", "dataElementSeparator", "decimalPointIndicator", "releaseIndicator", "repetitionSeparator", "segmentTerminator", "segmentTerminatorSuffix" ],
        "type" : "object",
        "properties" : {
          "componentSeparator" : {
            "type" : "integer",
            "description" : "The component separator.",
            "format" : "int32"
          },
          "dataElementSeparator" : {
            "type" : "integer",
            "description" : "The data element separator.",
            "format" : "int32"
          },
          "decimalPointIndicator" : {
            "$ref" : "#/components/schemas/EdifactDecimalIndicator"
          },
          "messageAssociationAssignedCode" : {
            "type" : "string",
            "description" : "The message association assigned code."
          },
          "messageId" : {
            "type" : "string",
            "description" : "The message id."
          },
          "messageRelease" : {
            "type" : "string",
            "description" : "The message release."
          },
          "messageVersion" : {
            "type" : "string",
            "description" : "The message version."
          },
          "releaseIndicator" : {
            "type" : "integer",
            "description" : "The release indicator.",
            "format" : "int32"
          },
          "repetitionSeparator" : {
            "type" : "integer",
            "description" : "The repetition separator.",
            "format" : "int32"
          },
          "segmentTerminator" : {
            "type" : "integer",
            "description" : "The segment terminator.",
            "format" : "int32"
          },
          "segmentTerminatorSuffix" : {
            "$ref" : "#/components/schemas/SegmentTerminatorSuffix"
          },
          "targetNamespace" : {
            "type" : "string",
            "description" : "The target namespace on which this delimiter settings has to be applied."
          }
        },
        "description" : "The Edifact delimiter override settings."
      },
      "EdifactEnvelopeOverride" : {
        "type" : "object",
        "properties" : {
          "applicationPassword" : {
            "type" : "string",
            "description" : "The application password."
          },
          "associationAssignedCode" : {
            "type" : "string",
            "description" : "The association assigned code."
          },
          "controllingAgencyCode" : {
            "type" : "string",
            "description" : "The controlling agency code."
          },
          "functionalGroupId" : {
            "type" : "string",
            "description" : "The functional group id."
          },
          "groupHeaderMessageRelease" : {
            "type" : "string",
            "description" : "The group header message release."
          },
          "groupHeaderMessageVersion" : {
            "type" : "string",
            "description" : "The group header message version."
          },
          "messageAssociationAssignedCode" : {
            "type" : "string",
            "description" : "The message association assigned code."
          },
          "messageId" : {
            "type" : "string",
            "description" : "The message id on which this envelope settings has to be applied."
          },
          "messageRelease" : {
            "type" : "string",
            "description" : "The message release version on which this envelope settings has to be applied."
          },
          "messageVersion" : {
            "type" : "string",
            "description" : "The message version on which this envelope settings has to be applied."
          },
          "receiverApplicationId" : {
            "type" : "string",
            "description" : "The receiver application id."
          },
          "receiverApplicationQualifier" : {
            "type" : "string",
            "description" : "The receiver application qualifier."
          },
          "senderApplicationId" : {
            "type" : "string",
            "description" : "The sender application id."
          },
          "senderApplicationQualifier" : {
            "type" : "string",
            "description" : "The sender application qualifier."
          },
          "targetNamespace" : {
            "type" : "string",
            "description" : "The target namespace on which this envelope settings has to be applied."
          }
        },
        "description" : "The Edifact envelope override settings."
      },
      "EdifactEnvelopeSettings" : {
        "required" : [ "applyDelimiterStringAdvice", "createGroupingSegments", "enableDefaultGroupHeaders", "groupControlNumberLowerBound", "groupControlNumberUpperBound", "interchangeControlNumberLowerBound", "interchangeControlNumberUpperBound", "isTestInterchange", "overwriteExistingTransactionSetControlNumber", "rolloverGroupControlNumber", "rolloverInterchangeControlNumber", "rolloverTransactionSetControlNumber", "transactionSetControlNumberLowerBound", "transactionSetControlNumberUpperBound" ],
        "type" : "object",
        "properties" : {
          "applicationReferenceId" : {
            "type" : "string",
            "description" : "The application reference id."
          },
          "applyDelimiterStringAdvice" : {
            "type" : "boolean",
            "description" : "The value indicating whether to apply delimiter string advice."
          },
          "communicationAgreementId" : {
            "type" : "string",
            "description" : "The communication agreement id."
          },
          "createGroupingSegments" : {
            "type" : "boolean",
            "description" : "The value indicating whether to create grouping segments."
          },
          "enableDefaultGroupHeaders" : {
            "type" : "boolean",
            "description" : "The value indicating whether to enable default group headers."
          },
          "functionalGroupId" : {
            "type" : "string",
            "description" : "The functional group id."
          },
          "groupApplicationPassword" : {
            "type" : "string",
            "description" : "The group application password."
          },
          "groupApplicationReceiverId" : {
            "type" : "string",
            "description" : "The group application receiver id."
          },
          "groupApplicationReceiverQualifier" : {
            "type" : "string",
            "description" : "The group application receiver qualifier."
          },
          "groupApplicationSenderId" : {
            "type" : "string",
            "description" : "The group application sender id."
          },
          "groupApplicationSenderQualifier" : {
            "type" : "string",
            "description" : "The group application sender qualifier."
          },
          "groupAssociationAssignedCode" : {
            "type" : "string",
            "description" : "The group association assigned code."
          },
          "groupControlNumberLowerBound" : {
            "type" : "integer",
            "description" : "The group control number lower bound.",
            "format" : "int64"
          },
          "groupControlNumberPrefix" : {
            "type" : "string",
            "description" : "The group control number prefix."
          },
          "groupControlNumberSuffix" : {
            "type" : "string",
            "description" : "The group control number suffix."
          },
          "groupControlNumberUpperBound" : {
            "type" : "integer",
            "description" : "The group control number upper bound.",
            "format" : "int64"
          },
          "groupControllingAgencyCode" : {
            "type" : "string",
            "description" : "The group controlling agency code."
          },
          "groupMessageRelease" : {
            "type" : "string",
            "description" : "The group message release."
          },
          "groupMessageVersion" : {
            "type" : "string",
            "description" : "The group message version."
          },
          "interchangeControlNumberLowerBound" : {
            "type" : "integer",
            "description" : "The interchange control number lower bound.",
            "format" : "int64"
          },
          "interchangeControlNumberPrefix" : {
            "type" : "string",
            "description" : "The interchange control number prefix."
          },
          "interchangeControlNumberSuffix" : {
            "type" : "string",
            "description" : "The interchange control number suffix."
          },
          "interchangeControlNumberUpperBound" : {
            "type" : "integer",
            "description" : "The interchange control number upper bound.",
            "format" : "int64"
          },
          "isTestInterchange" : {
            "type" : "boolean",
            "description" : "The value indicating whether the message is a test interchange."
          },
          "overwriteExistingTransactionSetControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to overwrite existing transaction set control number."
          },
          "processingPriorityCode" : {
            "type" : "string",
            "description" : "The processing priority code."
          },
          "receiverInternalIdentification" : {
            "type" : "string",
            "description" : "The receiver internal identification."
          },
          "receiverInternalSubIdentification" : {
            "type" : "string",
            "description" : "The receiver internal sub identification."
          },
          "receiverReverseRoutingAddress" : {
            "type" : "string",
            "description" : "The receiver reverse routing address."
          },
          "recipientReferencePasswordQualifier" : {
            "type" : "string",
            "description" : "The recipient reference password qualifier."
          },
          "recipientReferencePasswordValue" : {
            "type" : "string",
            "description" : "The recipient reference password value."
          },
          "rolloverGroupControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to rollover group control number."
          },
          "rolloverInterchangeControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to rollover interchange control number."
          },
          "rolloverTransactionSetControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to rollover transaction set control number."
          },
          "senderInternalIdentification" : {
            "type" : "string",
            "description" : "The sender internal identification."
          },
          "senderInternalSubIdentification" : {
            "type" : "string",
            "description" : "The sender internal sub identification."
          },
          "senderReverseRoutingAddress" : {
            "type" : "string",
            "description" : "The sender reverse routing address."
          },
          "transactionSetControlNumberLowerBound" : {
            "type" : "integer",
            "description" : "The transaction set control number lower bound.",
            "format" : "int64"
          },
          "transactionSetControlNumberPrefix" : {
            "type" : "string",
            "description" : "The transaction set control number prefix."
          },
          "transactionSetControlNumberSuffix" : {
            "type" : "string",
            "description" : "The transaction set control number suffix."
          },
          "transactionSetControlNumberUpperBound" : {
            "type" : "integer",
            "description" : "The transaction set control number upper bound.",
            "format" : "int64"
          }
        },
        "description" : "The Edifact agreement envelope settings."
      },
      "EdifactFramingSettings" : {
        "required" : [ "characterSet", "componentSeparator", "dataElementSeparator", "decimalPointIndicator", "protocolVersion", "releaseIndicator", "repetitionSeparator", "segmentTerminator", "segmentTerminatorSuffix" ],
        "type" : "object",
        "properties" : {
          "characterEncoding" : {
            "type" : "string",
            "description" : "The character encoding."
          },
          "characterSet" : {
            "$ref" : "#/components/schemas/EdifactCharacterSet"
          },
          "componentSeparator" : {
            "type" : "integer",
            "description" : "The component separator.",
            "format" : "int32"
          },
          "dataElementSeparator" : {
            "type" : "integer",
            "description" : "The data element separator.",
            "format" : "int32"
          },
          "decimalPointIndicator" : {
            "$ref" : "#/components/schemas/EdifactDecimalIndicator"
          },
          "protocolVersion" : {
            "type" : "integer",
            "description" : "The protocol version.",
            "format" : "int32"
          },
          "releaseIndicator" : {
            "type" : "integer",
            "description" : "The release indicator.",
            "format" : "int32"
          },
          "repetitionSeparator" : {
            "type" : "integer",
            "description" : "The repetition separator.",
            "format" : "int32"
          },
          "segmentTerminator" : {
            "type" : "integer",
            "description" : "The segment terminator.",
            "format" : "int32"
          },
          "segmentTerminatorSuffix" : {
            "$ref" : "#/components/schemas/SegmentTerminatorSuffix"
          },
          "serviceCodeListDirectoryVersion" : {
            "type" : "string",
            "description" : "The service code list directory version."
          }
        },
        "description" : "The Edifact agreement framing settings."
      },
      "EdifactMessageFilter" : {
        "required" : [ "messageFilterType" ],
        "type" : "object",
        "properties" : {
          "messageFilterType" : {
            "$ref" : "#/components/schemas/MessageFilterType"
          }
        },
        "description" : "The Edifact message filter for odata query."
      },
      "EdifactMessageIdentifier" : {
        "required" : [ "messageId" ],
        "type" : "object",
        "properties" : {
          "messageId" : {
            "type" : "string",
            "description" : "The message id on which this envelope settings has to be applied."
          }
        },
        "description" : "The Edifact message identifier."
      },
      "EdifactOneWayAgreement" : {
        "required" : [ "protocolSettings", "receiverBusinessIdentity", "senderBusinessIdentity" ],
        "type" : "object",
        "properties" : {
          "protocolSettings" : {
            "$ref" : "#/components/schemas/EdifactProtocolSettings"
          },
          "receiverBusinessIdentity" : {
            "$ref" : "#/components/schemas/BusinessIdentity"
          },
          "senderBusinessIdentity" : {
            "$ref" : "#/components/schemas/BusinessIdentity"
          }
        },
        "description" : "The Edifact one way agreement."
      },
      "EdifactProcessingSettings" : {
        "required" : [ "createEmptyXmlTagsForTrailingSeparators", "maskSecurityInfo", "preserveInterchange", "suspendInterchangeOnError", "useDotAsDecimalSeparator" ],
        "type" : "object",
        "properties" : {
          "createEmptyXmlTagsForTrailingSeparators" : {
            "type" : "boolean",
            "description" : "The value indicating whether to create empty xml tags for trailing separators."
          },
          "maskSecurityInfo" : {
            "type" : "boolean",
            "description" : "The value indicating whether to mask security information."
          },
          "preserveInterchange" : {
            "type" : "boolean",
            "description" : "The value indicating whether to preserve interchange."
          },
          "suspendInterchangeOnError" : {
            "type" : "boolean",
            "description" : "The value indicating whether to suspend interchange on error."
          },
          "useDotAsDecimalSeparator" : {
            "type" : "boolean",
            "description" : "The value indicating whether to use dot as decimal separator."
          }
        },
        "description" : "The Edifact agreement protocol settings."
      },
      "EdifactProtocolSettings" : {
        "required" : [ "acknowledgementSettings", "envelopeSettings", "framingSettings", "messageFilter", "processingSettings", "schemaReferences", "validationSettings" ],
        "type" : "object",
        "properties" : {
          "acknowledgementSettings" : {
            "$ref" : "#/components/schemas/EdifactAcknowledgementSettings"
          },
          "edifactDelimiterOverrides" : {
            "type" : "array",
            "description" : "The EDIFACT delimiter override settings.",
            "items" : {
              "$ref" : "#/components/schemas/EdifactDelimiterOverride"
            }
          },
          "envelopeOverrides" : {
            "type" : "array",
            "description" : "The EDIFACT envelope override settings.",
            "items" : {
              "$ref" : "#/components/schemas/EdifactEnvelopeOverride"
            }
          },
          "envelopeSettings" : {
            "$ref" : "#/components/schemas/EdifactEnvelopeSettings"
          },
          "framingSettings" : {
            "$ref" : "#/components/schemas/EdifactFramingSettings"
          },
          "messageFilter" : {
            "$ref" : "#/components/schemas/EdifactMessageFilter"
          },
          "messageFilterList" : {
            "type" : "array",
            "description" : "The EDIFACT message filter list.",
            "items" : {
              "$ref" : "#/components/schemas/EdifactMessageIdentifier"
            }
          },
          "processingSettings" : {
            "$ref" : "#/components/schemas/EdifactProcessingSettings"
          },
          "schemaReferences" : {
            "type" : "array",
            "description" : "The EDIFACT schema references.",
            "items" : {
              "$ref" : "#/components/schemas/EdifactSchemaReference"
            }
          },
          "validationOverrides" : {
            "type" : "array",
            "description" : "The EDIFACT validation override settings.",
            "items" : {
              "$ref" : "#/components/schemas/EdifactValidationOverride"
            }
          },
          "validationSettings" : {
            "$ref" : "#/components/schemas/EdifactValidationSettings"
          }
        },
        "description" : "The Edifact agreement protocol settings."
      },
      "EdifactSchemaReference" : {
        "required" : [ "messageId", "messageRelease", "messageVersion", "schemaName" ],
        "type" : "object",
        "properties" : {
          "associationAssignedCode" : {
            "type" : "string",
            "description" : "The association assigned code."
          },
          "messageId" : {
            "type" : "string",
            "description" : "The message id."
          },
          "messageRelease" : {
            "type" : "string",
            "description" : "The message release version."
          },
          "messageVersion" : {
            "type" : "string",
            "description" : "The message version."
          },
          "schemaName" : {
            "type" : "string",
            "description" : "The schema name."
          },
          "senderApplicationId" : {
            "type" : "string",
            "description" : "The sender application id."
          },
          "senderApplicationQualifier" : {
            "type" : "string",
            "description" : "The sender application qualifier."
          }
        },
        "description" : "The Edifact schema reference."
      },
      "EdifactValidationOverride" : {
        "required" : [ "allowLeadingAndTrailingSpacesAndZeroes", "enforceCharacterSet", "messageId", "trailingSeparatorPolicy", "trimLeadingAndTrailingSpacesAndZeroes", "validateEDITypes", "validateXSDTypes" ],
        "type" : "object",
        "properties" : {
          "allowLeadingAndTrailingSpacesAndZeroes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to allow leading and trailing spaces and zeroes."
          },
          "enforceCharacterSet" : {
            "type" : "boolean",
            "description" : "The value indicating whether to validate character Set."
          },
          "messageId" : {
            "type" : "string",
            "description" : "The message id on which the validation settings has to be applied."
          },
          "trailingSeparatorPolicy" : {
            "$ref" : "#/components/schemas/TrailingSeparatorPolicy"
          },
          "trimLeadingAndTrailingSpacesAndZeroes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to trim leading and trailing spaces and zeroes."
          },
          "validateEDITypes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to validate EDI types."
          },
          "validateXSDTypes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to validate XSD types."
          }
        },
        "description" : "The Edifact validation override settings."
      },
      "EdifactValidationSettings" : {
        "required" : [ "allowLeadingAndTrailingSpacesAndZeroes", "checkDuplicateGroupControlNumber", "checkDuplicateInterchangeControlNumber", "checkDuplicateTransactionSetControlNumber", "interchangeControlNumberValidityDays", "trailingSeparatorPolicy", "trimLeadingAndTrailingSpacesAndZeroes", "validateCharacterSet", "validateEDITypes", "validateXSDTypes" ],
        "type" : "object",
        "properties" : {
          "allowLeadingAndTrailingSpacesAndZeroes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to allow leading and trailing spaces and zeroes."
          },
          "checkDuplicateGroupControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to check for duplicate group control number."
          },
          "checkDuplicateInterchangeControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to check for duplicate interchange control number."
          },
          "checkDuplicateTransactionSetControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to check for duplicate transaction set control number."
          },
          "interchangeControlNumberValidityDays" : {
            "type" : "integer",
            "description" : "The validity period of interchange control number.",
            "format" : "int32"
          },
          "trailingSeparatorPolicy" : {
            "$ref" : "#/components/schemas/TrailingSeparatorPolicy"
          },
          "trimLeadingAndTrailingSpacesAndZeroes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to trim leading and trailing spaces and zeroes."
          },
          "validateCharacterSet" : {
            "type" : "boolean",
            "description" : "The value indicating whether to validate character set in the message."
          },
          "validateEDITypes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to Whether to validate EDI types."
          },
          "validateXSDTypes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to Whether to validate XSD types."
          }
        },
        "description" : "The Edifact agreement validation settings."
      },
      "EncryptionAlgorithm" : {
        "type" : "string",
        "description" : "The encryption algorithm.",
        "enum" : [ "NotSpecified", "None", "DES3", "RC2", "AES128", "AES192", "AES256" ]
      },
      "ErrorInfo" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The error code."
          }
        },
        "additionalProperties" : false,
        "description" : "The error info."
      },
      "ErrorProperties" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code."
          },
          "message" : {
            "type" : "string",
            "description" : "Error message indicating why the operation failed."
          }
        },
        "description" : "Error properties indicate why the Logic service was not able to process the incoming request. The reason is provided in the error message."
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ErrorProperties"
          }
        },
        "description" : "Error response indicates Logic service is not able to process the incoming request. The error property contains the error details."
      },
      "ErrorResponseCode" : {
        "type" : "string",
        "description" : "The error response code.",
        "enum" : [ "NotSpecified", "IntegrationServiceEnvironmentNotFound", "InternalServerError", "InvalidOperationId" ]
      },
      "EventLevel" : {
        "type" : "string",
        "description" : "The event level.",
        "enum" : [ "LogAlways", "Critical", "Error", "Warning", "Informational", "Verbose" ]
      },
      "Expression" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/AzureResourceErrorInfo"
          },
          "subexpressions" : {
            "type" : "array",
            "description" : "The sub expressions.",
            "items" : {
              "$ref" : "#/components/schemas/Expression"
            }
          },
          "text" : {
            "type" : "string",
            "description" : "The text."
          },
          "value" : {
            "type" : "object"
          }
        },
        "additionalProperties" : false,
        "description" : "The expression."
      },
      "ExpressionRoot" : {
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "The path."
          }
        },
        "description" : "The expression root.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Expression"
        } ]
      },
      "ExpressionTraces" : {
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExpressionRoot"
            }
          }
        },
        "description" : "The expression traces."
      },
      "ExtendedErrorInfo" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/ErrorResponseCode"
          },
          "details" : {
            "type" : "array",
            "description" : "The error message details.",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedErrorInfo"
            }
          },
          "innerError" : {
            "$ref" : "#/components/schemas/Object"
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          }
        },
        "description" : "The extended error info."
      },
      "FlowEndpoints" : {
        "type" : "object",
        "properties" : {
          "accessEndpointIpAddresses" : {
            "type" : "array",
            "description" : "The access endpoint ip address.",
            "items" : {
              "$ref" : "#/components/schemas/IpAddress"
            }
          },
          "outgoingIpAddresses" : {
            "type" : "array",
            "description" : "The outgoing ip address.",
            "items" : {
              "$ref" : "#/components/schemas/IpAddress"
            }
          }
        },
        "description" : "The flow endpoints configuration."
      },
      "FlowEndpointsConfiguration" : {
        "type" : "object",
        "properties" : {
          "connector" : {
            "$ref" : "#/components/schemas/FlowEndpoints"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/FlowEndpoints"
          }
        },
        "description" : "The endpoints configuration."
      },
      "GenerateUpgradedDefinitionParameters" : {
        "type" : "object",
        "properties" : {
          "targetSchemaVersion" : {
            "type" : "string",
            "description" : "The target schema version."
          }
        },
        "description" : "The parameters to generate upgraded definition."
      },
      "GetCallbackUrlParameters" : {
        "type" : "object",
        "properties" : {
          "keyType" : {
            "$ref" : "#/components/schemas/KeyType"
          },
          "notAfter" : {
            "type" : "string",
            "description" : "The expiry time.",
            "format" : "date-time"
          }
        },
        "description" : "The callback url parameters."
      },
      "HashingAlgorithm" : {
        "type" : "string",
        "description" : "The signing or hashing algorithm.",
        "enum" : [ "NotSpecified", "None", "MD5", "SHA1", "SHA2256", "SHA2384", "SHA2512" ]
      },
      "IntegrationAccount" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/IntegrationAccountProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/IntegrationAccountSku"
          }
        },
        "description" : "The integration account.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "IntegrationAccountAgreement" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/IntegrationAccountAgreementProperties"
          }
        },
        "description" : "The integration account agreement.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "IntegrationAccountAgreementFilter" : {
        "required" : [ "agreementType" ],
        "type" : "object",
        "properties" : {
          "agreementType" : {
            "$ref" : "#/components/schemas/AgreementType"
          }
        },
        "description" : "The integration account agreement filter for odata query."
      },
      "IntegrationAccountAgreementListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of integration account agreements.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationAccountAgreement"
            }
          }
        },
        "description" : "The list of integration account agreements."
      },
      "IntegrationAccountAgreementProperties" : {
        "required" : [ "agreementType", "content", "guestIdentity", "guestPartner", "hostIdentity", "hostPartner" ],
        "type" : "object",
        "properties" : {
          "agreementType" : {
            "$ref" : "#/components/schemas/AgreementType"
          },
          "changedTime" : {
            "type" : "string",
            "description" : "The changed time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "content" : {
            "$ref" : "#/components/schemas/AgreementContent"
          },
          "createdTime" : {
            "type" : "string",
            "description" : "The created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "guestIdentity" : {
            "$ref" : "#/components/schemas/BusinessIdentity"
          },
          "guestPartner" : {
            "type" : "string",
            "description" : "The integration account partner that is set as guest partner for this agreement."
          },
          "hostIdentity" : {
            "$ref" : "#/components/schemas/BusinessIdentity"
          },
          "hostPartner" : {
            "type" : "string",
            "description" : "The integration account partner that is set as host partner for this agreement."
          },
          "metadata" : {
            "type" : "object",
            "description" : "The metadata."
          }
        },
        "description" : "The integration account agreement properties."
      },
      "IntegrationAccountCertificate" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/IntegrationAccountCertificateProperties"
          }
        },
        "description" : "The integration account certificate.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "IntegrationAccountCertificateListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of integration account certificates.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationAccountCertificate"
            }
          }
        },
        "description" : "The list of integration account certificates."
      },
      "IntegrationAccountCertificateProperties" : {
        "type" : "object",
        "properties" : {
          "changedTime" : {
            "type" : "string",
            "description" : "The changed time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "createdTime" : {
            "type" : "string",
            "description" : "The created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "key" : {
            "$ref" : "#/components/schemas/KeyVaultKeyReference"
          },
          "metadata" : {
            "type" : "object",
            "description" : "The metadata."
          },
          "publicCertificate" : {
            "type" : "string",
            "description" : "The public certificate."
          }
        },
        "description" : "The integration account certificate properties."
      },
      "IntegrationAccountListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of integration accounts.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationAccount"
            }
          }
        },
        "description" : "The list of integration accounts."
      },
      "IntegrationAccountMap" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/IntegrationAccountMapProperties"
          }
        },
        "description" : "The integration account map.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "IntegrationAccountMapFilter" : {
        "required" : [ "mapType" ],
        "type" : "object",
        "properties" : {
          "mapType" : {
            "$ref" : "#/components/schemas/MapType"
          }
        },
        "description" : "The integration account map filter for odata query."
      },
      "IntegrationAccountMapListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of integration account maps.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationAccountMap"
            }
          }
        },
        "description" : "The list of integration account maps."
      },
      "IntegrationAccountMapProperties" : {
        "required" : [ "mapType" ],
        "type" : "object",
        "properties" : {
          "changedTime" : {
            "type" : "string",
            "description" : "The changed time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "content" : {
            "type" : "object",
            "description" : "The content."
          },
          "contentLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "contentType" : {
            "type" : "string",
            "description" : "The content type."
          },
          "createdTime" : {
            "type" : "string",
            "description" : "The created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "mapType" : {
            "$ref" : "#/components/schemas/MapType"
          },
          "metadata" : {
            "type" : "object",
            "description" : "The metadata."
          },
          "parametersSchema" : {
            "type" : "object",
            "properties" : {
              "ref" : {
                "type" : "string",
                "description" : "The reference name."
              }
            },
            "description" : "The parameters schema of integration account map."
          }
        },
        "description" : "The integration account map."
      },
      "IntegrationAccountPartner" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/IntegrationAccountPartnerProperties"
          }
        },
        "description" : "The integration account partner.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "IntegrationAccountPartnerFilter" : {
        "required" : [ "partnerType" ],
        "type" : "object",
        "properties" : {
          "partnerType" : {
            "$ref" : "#/components/schemas/PartnerType"
          }
        },
        "description" : "The integration account partner filter for odata query."
      },
      "IntegrationAccountPartnerListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of integration account partners.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationAccountPartner"
            }
          }
        },
        "description" : "The list of integration account partners."
      },
      "IntegrationAccountPartnerProperties" : {
        "required" : [ "content", "partnerType" ],
        "type" : "object",
        "properties" : {
          "changedTime" : {
            "type" : "string",
            "description" : "The changed time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "content" : {
            "$ref" : "#/components/schemas/PartnerContent"
          },
          "createdTime" : {
            "type" : "string",
            "description" : "The created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "metadata" : {
            "type" : "object",
            "description" : "The metadata."
          },
          "partnerType" : {
            "$ref" : "#/components/schemas/PartnerType"
          }
        },
        "description" : "The integration account partner properties."
      },
      "IntegrationAccountProperties" : {
        "type" : "object",
        "properties" : {
          "integrationServiceEnvironment" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironment"
          },
          "state" : {
            "$ref" : "#/components/schemas/WorkflowState"
          }
        },
        "description" : "The integration account properties."
      },
      "IntegrationAccountSchema" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/IntegrationAccountSchemaProperties"
          }
        },
        "description" : "The integration account schema.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "IntegrationAccountSchemaFilter" : {
        "required" : [ "schemaType" ],
        "type" : "object",
        "properties" : {
          "schemaType" : {
            "$ref" : "#/components/schemas/SchemaType"
          }
        },
        "description" : "The integration account schema filter for odata query."
      },
      "IntegrationAccountSchemaListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of integration account schemas.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationAccountSchema"
            }
          }
        },
        "description" : "The list of integration account schemas."
      },
      "IntegrationAccountSchemaProperties" : {
        "required" : [ "schemaType" ],
        "type" : "object",
        "properties" : {
          "changedTime" : {
            "type" : "string",
            "description" : "The changed time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "content" : {
            "type" : "object",
            "description" : "The content."
          },
          "contentLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "contentType" : {
            "type" : "string",
            "description" : "The content type."
          },
          "createdTime" : {
            "type" : "string",
            "description" : "The created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "documentName" : {
            "type" : "string",
            "description" : "The document name."
          },
          "fileName" : {
            "type" : "string",
            "description" : "The file name."
          },
          "metadata" : {
            "type" : "object",
            "description" : "The metadata."
          },
          "schemaType" : {
            "$ref" : "#/components/schemas/SchemaType"
          },
          "targetNamespace" : {
            "type" : "string",
            "description" : "The target namespace of the schema."
          }
        },
        "description" : "The integration account schema properties."
      },
      "IntegrationAccountSession" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/IntegrationAccountSessionProperties"
          }
        },
        "description" : "The integration account session.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "IntegrationAccountSessionFilter" : {
        "required" : [ "changedTime" ],
        "type" : "object",
        "properties" : {
          "changedTime" : {
            "type" : "string",
            "description" : "The changed time of integration account sessions.",
            "format" : "date-time"
          }
        },
        "description" : "The integration account session filter."
      },
      "IntegrationAccountSessionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of integration account sessions.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationAccountSession"
            }
          }
        },
        "description" : "The list of integration account sessions."
      },
      "IntegrationAccountSessionProperties" : {
        "type" : "object",
        "properties" : {
          "changedTime" : {
            "type" : "string",
            "description" : "The changed time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "content" : {
            "$ref" : "#/components/schemas/Object"
          },
          "createdTime" : {
            "type" : "string",
            "description" : "The created time.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "The integration account session properties."
      },
      "IntegrationAccountSku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/IntegrationAccountSkuName"
          }
        },
        "description" : "The integration account sku."
      },
      "IntegrationAccountSkuName" : {
        "type" : "string",
        "description" : "The integration account sku name.",
        "enum" : [ "NotSpecified", "Free", "Basic", "Standard" ]
      },
      "IntegrationServiceEnvironment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentSku"
          }
        },
        "description" : "The integration service environment.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "IntegrationServiceEnvironmentAccessEndpoint" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentAccessEndpointType"
          }
        },
        "description" : "The integration service environment access endpoint."
      },
      "IntegrationServiceEnvironmentAccessEndpointType" : {
        "type" : "string",
        "description" : "The integration service environment access endpoint type.",
        "enum" : [ "NotSpecified", "External", "Internal" ]
      },
      "IntegrationServiceEnvironmentListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationServiceEnvironment"
            }
          }
        },
        "description" : "The list of integration service environments."
      },
      "IntegrationServiceEnvironmentNetworkDependency" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentNetworkDependencyCategoryType"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name."
          },
          "endpoints" : {
            "type" : "array",
            "description" : "The endpoints.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationServiceEnvironmentNetworkEndpoint"
            }
          }
        },
        "description" : "The azure async operation resource."
      },
      "IntegrationServiceEnvironmentNetworkDependencyCategoryType" : {
        "type" : "string",
        "description" : "The integration service environment network dependency category type.",
        "enum" : [ "NotSpecified", "AzureStorage", "AzureManagement", "AzureActiveDirectory", "SSLCertificateVerification", "DiagnosticLogsAndMetrics", "IntegrationServiceEnvironmentConnectors", "RedisCache", "AccessEndpoints", "RecoveryService", "SQL", "RegionalService" ]
      },
      "IntegrationServiceEnvironmentNetworkDependencyHealth" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ExtendedErrorInfo"
          },
          "state" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentNetworkDependencyHealthState"
          }
        },
        "description" : "The integration service environment subnet network health."
      },
      "IntegrationServiceEnvironmentNetworkDependencyHealthState" : {
        "type" : "string",
        "description" : "The integration service environment network dependency health state.",
        "enum" : [ "NotSpecified", "Healthy", "Unhealthy", "Unknown" ]
      },
      "IntegrationServiceEnvironmentNetworkEndPointAccessibilityState" : {
        "type" : "string",
        "description" : "The integration service environment network endpoint accessibility state.",
        "enum" : [ "NotSpecified", "Unknown", "Available", "NotAvailable" ]
      },
      "IntegrationServiceEnvironmentNetworkEndpoint" : {
        "type" : "object",
        "properties" : {
          "accessibility" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentNetworkEndPointAccessibilityState"
          },
          "domainName" : {
            "type" : "string",
            "description" : "The domain name."
          },
          "ports" : {
            "type" : "array",
            "description" : "The ports.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The network endpoint."
      },
      "IntegrationServiceEnvironmentNetworkHealth" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/IntegrationServiceEnvironmentSubnetNetworkHealth"
        },
        "description" : "The integration service environment network health of all the subnets."
      },
      "IntegrationServiceEnvironmentProperties" : {
        "type" : "object",
        "properties" : {
          "endpointsConfiguration" : {
            "$ref" : "#/components/schemas/FlowEndpointsConfiguration"
          },
          "integrationServiceEnvironmentId" : {
            "type" : "string",
            "description" : "Gets the tracking id."
          },
          "networkConfiguration" : {
            "$ref" : "#/components/schemas/NetworkConfiguration"
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/WorkflowProvisioningState"
          },
          "state" : {
            "$ref" : "#/components/schemas/WorkflowState"
          }
        },
        "description" : "The integration service environment properties."
      },
      "IntegrationServiceEnvironmentSku" : {
        "type" : "object",
        "properties" : {
          "capacity" : {
            "type" : "integer",
            "description" : "The sku capacity.",
            "format" : "int32"
          },
          "name" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentSkuName"
          }
        },
        "description" : "The integration service environment sku."
      },
      "IntegrationServiceEnvironmentSkuCapacity" : {
        "type" : "object",
        "properties" : {
          "default" : {
            "type" : "integer",
            "description" : "The default capacity.",
            "format" : "int32"
          },
          "maximum" : {
            "type" : "integer",
            "description" : "The maximum capacity.",
            "format" : "int32"
          },
          "minimum" : {
            "type" : "integer",
            "description" : "The minimum capacity.",
            "format" : "int32"
          },
          "scaleType" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentSkuScaleType"
          }
        },
        "description" : "The integration service environment sku capacity."
      },
      "IntegrationServiceEnvironmentSkuDefinition" : {
        "type" : "object",
        "properties" : {
          "capacity" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentSkuCapacity"
          },
          "resourceType" : {
            "type" : "string",
            "description" : "The resource type."
          },
          "sku" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "$ref" : "#/components/schemas/IntegrationServiceEnvironmentSkuName"
              },
              "tier" : {
                "type" : "string",
                "description" : "The sku tier."
              }
            },
            "description" : "The sku."
          }
        },
        "description" : "The integration service environment sku definition."
      },
      "IntegrationServiceEnvironmentSkuList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of integration service environment skus.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationServiceEnvironmentSkuDefinition"
            }
          }
        },
        "description" : "The list of integration service environment skus."
      },
      "IntegrationServiceEnvironmentSkuName" : {
        "type" : "string",
        "description" : "The integration service environment sku name.",
        "enum" : [ "NotSpecified", "Premium", "Developer" ]
      },
      "IntegrationServiceEnvironmentSkuScaleType" : {
        "type" : "string",
        "description" : "The integration service environment sku scale type.",
        "enum" : [ "Manual", "Automatic", "None" ]
      },
      "IntegrationServiceEnvironmentSubnetNetworkHealth" : {
        "required" : [ "networkDependencyHealthState" ],
        "type" : "object",
        "properties" : {
          "networkDependencyHealthState" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentNetworkEndPointAccessibilityState"
          },
          "outboundNetworkDependencies" : {
            "type" : "array",
            "description" : "The outbound network dependencies.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationServiceEnvironmentNetworkDependency"
            }
          },
          "outboundNetworkHealth" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentNetworkDependencyHealth"
          }
        },
        "description" : "The integration service environment subnet network health."
      },
      "IpAddress" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "The address."
          }
        },
        "description" : "The ip address."
      },
      "JsonSchema" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "The JSON content."
          },
          "title" : {
            "type" : "string",
            "description" : "The JSON title."
          }
        },
        "description" : "The JSON schema."
      },
      "KeyType" : {
        "type" : "string",
        "description" : "The key type.",
        "enum" : [ "NotSpecified", "Primary", "Secondary" ]
      },
      "KeyVaultKey" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "object",
            "properties" : {
              "created" : {
                "type" : "integer",
                "description" : "When the key was created.",
                "format" : "int64"
              },
              "enabled" : {
                "type" : "boolean",
                "description" : "Whether the key is enabled or not."
              },
              "updated" : {
                "type" : "integer",
                "description" : "When the key was updated.",
                "format" : "int64"
              }
            },
            "description" : "The key attributes."
          },
          "kid" : {
            "type" : "string",
            "description" : "The key id."
          }
        },
        "description" : "The key vault key."
      },
      "KeyVaultKeyCollection" : {
        "type" : "object",
        "properties" : {
          "skipToken" : {
            "type" : "string",
            "description" : "The skip token."
          },
          "value" : {
            "type" : "array",
            "description" : "The key vault keys.",
            "items" : {
              "$ref" : "#/components/schemas/KeyVaultKey"
            }
          }
        },
        "description" : "Collection of key vault keys."
      },
      "KeyVaultKeyReference" : {
        "required" : [ "keyName", "keyVault" ],
        "type" : "object",
        "properties" : {
          "keyName" : {
            "type" : "string",
            "description" : "The private key name in key vault."
          },
          "keyVault" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The resource id."
              },
              "name" : {
                "type" : "string",
                "description" : "The resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The resource type.",
                "readOnly" : true
              }
            },
            "description" : "The key vault reference."
          },
          "keyVersion" : {
            "type" : "string",
            "description" : "The private key version in key vault."
          }
        },
        "description" : "The reference to the key vault key."
      },
      "KeyVaultReference" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The key vault name."
          }
        },
        "description" : "The key vault reference.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceReference"
        } ]
      },
      "ListKeyVaultKeysDefinition" : {
        "required" : [ "keyVault" ],
        "type" : "object",
        "properties" : {
          "keyVault" : {
            "$ref" : "#/components/schemas/KeyVaultReference"
          },
          "skipToken" : {
            "type" : "string",
            "description" : "The skip token."
          }
        },
        "additionalProperties" : false,
        "description" : "The list key vault keys definition."
      },
      "ManagedApi" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ApiResourceProperties"
          }
        },
        "description" : "The managed api definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ManagedApiListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The managed APIs.",
            "items" : {
              "$ref" : "#/components/schemas/ManagedApi"
            }
          }
        },
        "description" : "The list of managed APIs."
      },
      "MapType" : {
        "type" : "string",
        "description" : "The map type.",
        "enum" : [ "NotSpecified", "Xslt", "Xslt20", "Xslt30", "Liquid" ]
      },
      "MessageFilterType" : {
        "type" : "string",
        "description" : "The message filter type.",
        "enum" : [ "NotSpecified", "Include", "Exclude" ]
      },
      "NetworkConfiguration" : {
        "type" : "object",
        "properties" : {
          "accessEndpoint" : {
            "$ref" : "#/components/schemas/IntegrationServiceEnvironmentAccessEndpoint"
          },
          "subnets" : {
            "type" : "array",
            "description" : "The subnets.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceReference"
            }
          },
          "virtualNetworkAddressSpace" : {
            "type" : "string",
            "description" : "Gets the virtual network address space."
          }
        },
        "description" : "The network configuration."
      },
      "Object" : {
        "type" : "object"
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "operation" : {
                "type" : "string",
                "description" : "Operation type: Read, write, delete, etc."
              },
              "provider" : {
                "type" : "string",
                "description" : "Service provider: Microsoft.Logic"
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource on which the operation is performed: Profile, endpoint, etc."
              }
            },
            "description" : "The object that represents the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}"
          }
        },
        "description" : "Logic REST API operation"
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Logic operations supported by the Logic resource provider.",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Result of the request to list Logic operations. It contains a list of operations and a URL link to get the next set of results."
      },
      "OperationResult" : {
        "properties" : {
          "inputs" : {
            "$ref" : "#/components/schemas/Object"
          },
          "inputsLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "iterationCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "outputs" : {
            "$ref" : "#/components/schemas/Object"
          },
          "outputsLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "retryHistory" : {
            "type" : "array",
            "description" : "Gets the retry histories.",
            "items" : {
              "$ref" : "#/components/schemas/RetryHistory"
            }
          },
          "trackedProperties" : {
            "$ref" : "#/components/schemas/Object"
          },
          "trackingId" : {
            "type" : "string",
            "description" : "Gets the tracking id.",
            "readOnly" : true
          }
        },
        "description" : "The operation result definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/OperationResultProperties"
        } ]
      },
      "OperationResultProperties" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The workflow scope repetition code."
          },
          "correlation" : {
            "$ref" : "#/components/schemas/RunActionCorrelation"
          },
          "endTime" : {
            "type" : "string",
            "description" : "The end time of the workflow scope repetition.",
            "format" : "date-time"
          },
          "error" : {
            "type" : "object"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the workflow scope repetition.",
            "format" : "date-time"
          },
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          }
        },
        "additionalProperties" : false,
        "description" : "The run operation result properties."
      },
      "ParameterType" : {
        "type" : "string",
        "description" : "The parameter type.",
        "enum" : [ "NotSpecified", "String", "SecureString", "Int", "Float", "Bool", "Array", "Object", "SecureObject" ]
      },
      "PartnerContent" : {
        "type" : "object",
        "properties" : {
          "b2b" : {
            "$ref" : "#/components/schemas/B2BPartnerContent"
          }
        },
        "description" : "The integration account partner content."
      },
      "PartnerType" : {
        "type" : "string",
        "description" : "The partner type.",
        "enum" : [ "NotSpecified", "B2B" ]
      },
      "RecurrenceFrequency" : {
        "type" : "string",
        "description" : "The recurrence frequency.",
        "enum" : [ "NotSpecified", "Second", "Minute", "Hour", "Day", "Week", "Month", "Year" ]
      },
      "RecurrenceSchedule" : {
        "type" : "object",
        "properties" : {
          "hours" : {
            "type" : "array",
            "description" : "The hours.",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "minutes" : {
            "type" : "array",
            "description" : "The minutes.",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "monthDays" : {
            "type" : "array",
            "description" : "The month days.",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "monthlyOccurrences" : {
            "type" : "array",
            "description" : "The monthly occurrences.",
            "items" : {
              "$ref" : "#/components/schemas/RecurrenceScheduleOccurrence"
            }
          },
          "weekDays" : {
            "type" : "array",
            "description" : "The days of the week.",
            "items" : {
              "type" : "string",
              "enum" : [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ]
            }
          }
        },
        "description" : "The recurrence schedule."
      },
      "RecurrenceScheduleOccurrence" : {
        "type" : "object",
        "properties" : {
          "day" : {
            "$ref" : "#/components/schemas/DayOfWeek"
          },
          "occurrence" : {
            "type" : "integer",
            "description" : "The occurrence.",
            "format" : "int32"
          }
        },
        "description" : "The recurrence schedule occurrence."
      },
      "RegenerateActionParameter" : {
        "type" : "object",
        "properties" : {
          "keyType" : {
            "$ref" : "#/components/schemas/KeyType"
          }
        },
        "description" : "The access key regenerate action content."
      },
      "RepetitionIndex" : {
        "required" : [ "itemIndex" ],
        "type" : "object",
        "properties" : {
          "itemIndex" : {
            "type" : "integer",
            "description" : "The index.",
            "format" : "int32"
          },
          "scopeName" : {
            "type" : "string",
            "description" : "The scope."
          }
        },
        "additionalProperties" : false,
        "description" : "The workflow run action repetition index."
      },
      "Request" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "$ref" : "#/components/schemas/Object"
          },
          "method" : {
            "type" : "string",
            "description" : "The HTTP method used for the request."
          },
          "uri" : {
            "type" : "string",
            "description" : "The destination for the request."
          }
        },
        "additionalProperties" : false,
        "description" : "A request."
      },
      "RequestHistory" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RequestHistoryProperties"
          }
        },
        "description" : "The request history.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RequestHistoryListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of workflow request histories.",
            "items" : {
              "$ref" : "#/components/schemas/RequestHistory"
            }
          }
        },
        "description" : "The list of workflow request histories."
      },
      "RequestHistoryProperties" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "The time the request ended.",
            "format" : "date-time"
          },
          "request" : {
            "$ref" : "#/components/schemas/Request"
          },
          "response" : {
            "$ref" : "#/components/schemas/Response"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The time the request started.",
            "format" : "date-time"
          }
        },
        "additionalProperties" : false,
        "description" : "The request history."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The resource id.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "The resource location."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets the resource name.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The resource tags."
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the resource type.",
            "readOnly" : true
          }
        },
        "description" : "The base resource type."
      },
      "ResourceReference" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The resource id."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets the resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the resource type.",
            "readOnly" : true
          }
        },
        "description" : "The resource reference."
      },
      "Response" : {
        "type" : "object",
        "properties" : {
          "bodyLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "headers" : {
            "$ref" : "#/components/schemas/Object"
          },
          "statusCode" : {
            "type" : "integer",
            "description" : "The status code of the response.",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "A response."
      },
      "RetryHistory" : {
        "type" : "object",
        "properties" : {
          "clientRequestId" : {
            "type" : "string",
            "description" : "Gets the client request Id."
          },
          "code" : {
            "type" : "string",
            "description" : "Gets the status code."
          },
          "endTime" : {
            "type" : "string",
            "description" : "Gets the end time.",
            "format" : "date-time"
          },
          "error" : {
            "$ref" : "#/components/schemas/ErrorResponse"
          },
          "serviceRequestId" : {
            "type" : "string",
            "description" : "Gets the service request Id."
          },
          "startTime" : {
            "type" : "string",
            "description" : "Gets the start time.",
            "format" : "date-time"
          }
        },
        "description" : "The retry history."
      },
      "RunActionCorrelation" : {
        "properties" : {
          "actionTrackingId" : {
            "type" : "string",
            "description" : "The action tracking identifier."
          }
        },
        "description" : "The workflow run action correlation properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RunCorrelation"
        } ]
      },
      "RunCorrelation" : {
        "type" : "object",
        "properties" : {
          "clientKeywords" : {
            "type" : "array",
            "description" : "The client keywords.",
            "items" : {
              "type" : "string"
            }
          },
          "clientTrackingId" : {
            "type" : "string",
            "description" : "The client tracking identifier."
          }
        },
        "additionalProperties" : false,
        "description" : "The correlation properties."
      },
      "SchemaType" : {
        "type" : "string",
        "description" : "The schema type.",
        "enum" : [ "NotSpecified", "Xml" ]
      },
      "SegmentTerminatorSuffix" : {
        "type" : "string",
        "description" : "The segment terminator suffix.",
        "enum" : [ "NotSpecified", "None", "CR", "LF", "CRLF" ]
      },
      "SetTriggerStateActionDefinition" : {
        "required" : [ "source" ],
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/WorkflowTrigger"
          }
        },
        "additionalProperties" : false,
        "description" : "The set trigger state action definition."
      },
      "SigningAlgorithm" : {
        "type" : "string",
        "description" : "The signing or hashing algorithm.",
        "enum" : [ "NotSpecified", "Default", "SHA1", "SHA2256", "SHA2384", "SHA2512" ]
      },
      "Sku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/SkuName"
          },
          "plan" : {
            "$ref" : "#/components/schemas/ResourceReference"
          }
        },
        "description" : "The sku type."
      },
      "SkuName" : {
        "type" : "string",
        "description" : "The sku name.",
        "enum" : [ "NotSpecified", "Free", "Shared", "Basic", "Standard", "Premium" ]
      },
      "StatusAnnotation" : {
        "type" : "string",
        "description" : "The status annotation.",
        "enum" : [ "NotSpecified", "Preview", "Production" ]
      },
      "SubResource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The resource id.",
            "readOnly" : true
          }
        },
        "description" : "The sub resource type."
      },
      "SwaggerCustomDynamicList" : {
        "type" : "object",
        "properties" : {
          "builtInOperation" : {
            "type" : "string",
            "description" : "The built in operation."
          },
          "itemTitlePath" : {
            "type" : "string",
            "description" : "The path to an item property which defines the display name of the item."
          },
          "itemValuePath" : {
            "type" : "string",
            "description" : "The path to a property which defines the value which should be used."
          },
          "itemsPath" : {
            "type" : "string",
            "description" : "The path to a response property (relative to the response object, not the response body) which contains an array of dynamic value items."
          },
          "operationId" : {
            "type" : "string",
            "description" : "The operation id to fetch dynamic schema."
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SwaggerCustomDynamicProperties"
            },
            "description" : "The parameters."
          }
        },
        "description" : "The swagger custom dynamic list."
      },
      "SwaggerCustomDynamicProperties" : {
        "type" : "object",
        "properties" : {
          "operationId" : {
            "type" : "string",
            "description" : "The operation id to fetch dynamic schema."
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SwaggerCustomDynamicProperties"
            },
            "description" : "The operation parameters."
          },
          "valuePath" : {
            "type" : "string",
            "description" : "Json pointer to the dynamic schema on the response body."
          }
        },
        "description" : "The swagger custom dynamic properties."
      },
      "SwaggerCustomDynamicSchema" : {
        "type" : "object",
        "properties" : {
          "operationId" : {
            "type" : "string",
            "description" : "The operation id to fetch dynamic schema."
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Object"
            },
            "description" : "The operation parameters."
          },
          "valuePath" : {
            "type" : "string",
            "description" : "Json pointer to the dynamic schema on the response body."
          }
        },
        "description" : "The swagger custom dynamic schema."
      },
      "SwaggerCustomDynamicTree" : {
        "type" : "object",
        "properties" : {
          "browse" : {
            "$ref" : "#/components/schemas/SwaggerCustomDynamicTreeCommand"
          },
          "open" : {
            "$ref" : "#/components/schemas/SwaggerCustomDynamicTreeCommand"
          },
          "settings" : {
            "$ref" : "#/components/schemas/SwaggerCustomDynamicTreeSettings"
          }
        },
        "description" : "The swagger custom dynamic tree."
      },
      "SwaggerCustomDynamicTreeCommand" : {
        "type" : "object",
        "properties" : {
          "itemFullTitlePath" : {
            "type" : "string",
            "description" : "The path to an item property which defines the display name of the item."
          },
          "itemIsParent" : {
            "type" : "string",
            "description" : "The path to an item property which defines the display name of the item."
          },
          "itemTitlePath" : {
            "type" : "string",
            "description" : "The path to an item property which defines the display name of the item."
          },
          "itemValuePath" : {
            "type" : "string",
            "description" : "The path to an item property which defines the display name of the item."
          },
          "itemsPath" : {
            "type" : "string",
            "description" : "The path to an item property which defines the display name of the item."
          },
          "operationId" : {
            "type" : "string",
            "description" : "The path to an item property which defines the display name of the item."
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SwaggerCustomDynamicTreeParameter"
            }
          },
          "selectableFilter" : {
            "type" : "string",
            "description" : "The path to an item property which defines the display name of the item."
          }
        },
        "description" : "The swagger tree command."
      },
      "SwaggerCustomDynamicTreeParameter" : {
        "type" : "object",
        "properties" : {
          "parameterReference" : {
            "type" : "string",
            "description" : "The parameter reference."
          },
          "required" : {
            "type" : "boolean",
            "description" : "Indicates whether the parameter is required."
          },
          "selectedItemValuePath" : {
            "type" : "string",
            "description" : "Gets or sets a path to a property in the currently selected item to pass as a value to a parameter for the given operation."
          },
          "value" : {
            "$ref" : "#/components/schemas/Object"
          }
        },
        "description" : "The swagger custom dynamic tree parameter."
      },
      "SwaggerCustomDynamicTreeSettings" : {
        "type" : "object",
        "properties" : {
          "CanSelectLeafNodes" : {
            "type" : "boolean",
            "description" : "Indicates whether leaf nodes can be selected."
          },
          "CanSelectParentNodes" : {
            "type" : "boolean",
            "description" : "Indicates whether parent nodes can be selected."
          }
        },
        "description" : "The swagger custom dynamic tree settings."
      },
      "SwaggerExternalDocumentation" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The document description."
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Object"
            },
            "description" : "The vendor extensions."
          },
          "uri" : {
            "type" : "string",
            "description" : "The documentation Uri."
          }
        },
        "description" : "The swagger external documentation"
      },
      "SwaggerSchema" : {
        "type" : "object",
        "properties" : {
          "additionalProperties" : {
            "$ref" : "#/components/schemas/Object"
          },
          "allOf" : {
            "type" : "array",
            "description" : "The schemas which must pass validation when this schema is used.",
            "items" : {
              "$ref" : "#/components/schemas/SwaggerSchema"
            }
          },
          "discriminator" : {
            "type" : "string",
            "description" : "The discriminator."
          },
          "dynamicListNew" : {
            "$ref" : "#/components/schemas/SwaggerCustomDynamicList"
          },
          "dynamicSchemaNew" : {
            "$ref" : "#/components/schemas/SwaggerCustomDynamicProperties"
          },
          "dynamicSchemaOld" : {
            "$ref" : "#/components/schemas/SwaggerCustomDynamicSchema"
          },
          "dynamicTree" : {
            "$ref" : "#/components/schemas/SwaggerCustomDynamicTree"
          },
          "example" : {
            "$ref" : "#/components/schemas/Object"
          },
          "externalDocs" : {
            "$ref" : "#/components/schemas/SwaggerExternalDocumentation"
          },
          "items" : {
            "$ref" : "#/components/schemas/SwaggerSchema"
          },
          "maxProperties" : {
            "type" : "integer",
            "description" : "The maximum number of allowed properties."
          },
          "minProperties" : {
            "type" : "integer",
            "description" : "The minimum number of allowed properties."
          },
          "notificationUrlExtension" : {
            "type" : "boolean",
            "description" : "Indicates the notification url extension. If this is set, the property's value should be a callback url for a webhook."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SwaggerSchema"
            },
            "description" : "The object properties"
          },
          "readOnly" : {
            "type" : "boolean",
            "description" : "Indicates whether this property must be present in the a request."
          },
          "ref" : {
            "type" : "string",
            "description" : "The reference."
          },
          "required" : {
            "type" : "array",
            "description" : "The object required properties.",
            "items" : {
              "type" : "string"
            }
          },
          "title" : {
            "type" : "string",
            "description" : "The title."
          },
          "type" : {
            "$ref" : "#/components/schemas/SwaggerSchemaType"
          },
          "xml" : {
            "$ref" : "#/components/schemas/SwaggerXml"
          }
        },
        "description" : "The swagger schema."
      },
      "SwaggerSchemaType" : {
        "type" : "string",
        "description" : "The swagger schema type.",
        "enum" : [ "String", "Number", "Integer", "Boolean", "Array", "File", "Object", "Null" ]
      },
      "SwaggerXml" : {
        "type" : "object",
        "properties" : {
          "attribute" : {
            "type" : "boolean",
            "description" : "Indicates whether the property should be an attribute instead of an element."
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Object"
            },
            "description" : "The vendor extensions."
          },
          "name" : {
            "type" : "string",
            "description" : "The xml element or attribute name."
          },
          "namespace" : {
            "type" : "string",
            "description" : "The xml namespace."
          },
          "prefix" : {
            "type" : "string",
            "description" : "The name prefix."
          },
          "wrapped" : {
            "type" : "boolean",
            "description" : "Indicates whether the array elements are wrapped in a container element."
          }
        },
        "description" : "The Swagger XML."
      },
      "TrackEventsOperationOptions" : {
        "type" : "string",
        "description" : "The track events operation options.",
        "enum" : [ "None", "DisableSourceInfoEnrich" ]
      },
      "TrackingEvent" : {
        "required" : [ "eventLevel", "eventTime", "recordType" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/TrackingEventErrorInfo"
          },
          "eventLevel" : {
            "$ref" : "#/components/schemas/EventLevel"
          },
          "eventTime" : {
            "type" : "string",
            "description" : "The event time.",
            "format" : "date-time"
          },
          "recordType" : {
            "$ref" : "#/components/schemas/TrackingRecordType"
          }
        },
        "additionalProperties" : false,
        "description" : "The tracking event."
      },
      "TrackingEventErrorInfo" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The code."
          },
          "message" : {
            "type" : "string",
            "description" : "The message."
          }
        },
        "additionalProperties" : false,
        "description" : "The tracking event error info."
      },
      "TrackingEventsDefinition" : {
        "required" : [ "events", "sourceType" ],
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "description" : "The events.",
            "items" : {
              "$ref" : "#/components/schemas/TrackingEvent"
            }
          },
          "sourceType" : {
            "type" : "string",
            "description" : "The source type."
          },
          "trackEventsOptions" : {
            "$ref" : "#/components/schemas/TrackEventsOperationOptions"
          }
        },
        "additionalProperties" : false,
        "description" : "The tracking events definition."
      },
      "TrackingRecordType" : {
        "type" : "string",
        "description" : "The tracking record type.",
        "enum" : [ "NotSpecified", "Custom", "AS2Message", "AS2MDN", "X12Interchange", "X12FunctionalGroup", "X12TransactionSet", "X12InterchangeAcknowledgment", "X12FunctionalGroupAcknowledgment", "X12TransactionSetAcknowledgment", "EdifactInterchange", "EdifactFunctionalGroup", "EdifactTransactionSet", "EdifactInterchangeAcknowledgment", "EdifactFunctionalGroupAcknowledgment", "EdifactTransactionSetAcknowledgment" ]
      },
      "TrailingSeparatorPolicy" : {
        "type" : "string",
        "description" : "The trailing separator policy.",
        "enum" : [ "NotSpecified", "NotAllowed", "Optional", "Mandatory" ]
      },
      "UsageIndicator" : {
        "type" : "string",
        "description" : "The usage indicator.",
        "enum" : [ "NotSpecified", "Test", "Information", "Production" ]
      },
      "Workflow" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/WorkflowProperties"
          }
        },
        "description" : "The workflow type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "WorkflowFilter" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/WorkflowState"
          }
        },
        "description" : "The workflow filter."
      },
      "WorkflowListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of workflows.",
            "items" : {
              "$ref" : "#/components/schemas/Workflow"
            }
          }
        },
        "description" : "The list of workflows."
      },
      "WorkflowOutputParameter" : {
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/Object"
          }
        },
        "description" : "The workflow output parameter.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WorkflowParameter"
        } ]
      },
      "WorkflowParameter" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/Object"
          },
          "type" : {
            "$ref" : "#/components/schemas/ParameterType"
          },
          "value" : {
            "$ref" : "#/components/schemas/Object"
          }
        },
        "description" : "The workflow parameters."
      },
      "WorkflowProperties" : {
        "type" : "object",
        "properties" : {
          "accessEndpoint" : {
            "type" : "string",
            "description" : "Gets the access endpoint.",
            "readOnly" : true
          },
          "changedTime" : {
            "type" : "string",
            "description" : "Gets the changed time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "createdTime" : {
            "type" : "string",
            "description" : "Gets the created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "definition" : {
            "$ref" : "#/components/schemas/Object"
          },
          "endpointsConfiguration" : {
            "$ref" : "#/components/schemas/FlowEndpointsConfiguration"
          },
          "integrationAccount" : {
            "$ref" : "#/components/schemas/ResourceReference"
          },
          "integrationServiceEnvironment" : {
            "$ref" : "#/components/schemas/ResourceReference"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WorkflowParameter"
            },
            "description" : "The parameters."
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/WorkflowProvisioningState"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "state" : {
            "$ref" : "#/components/schemas/WorkflowState"
          },
          "version" : {
            "type" : "string",
            "description" : "Gets the version.",
            "readOnly" : true
          }
        },
        "description" : "The workflow properties."
      },
      "WorkflowProvisioningState" : {
        "type" : "string",
        "description" : "The workflow provisioning state.",
        "enum" : [ "NotSpecified", "Accepted", "Running", "Ready", "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "Moving", "Updating", "Registering", "Registered", "Unregistering", "Unregistered", "Completed" ]
      },
      "WorkflowRun" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets the workflow run name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/WorkflowRunProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the workflow run type.",
            "readOnly" : true
          }
        },
        "description" : "The workflow run.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "WorkflowRunAction" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets the workflow run action name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/WorkflowRunActionProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the workflow run action type.",
            "readOnly" : true
          }
        },
        "description" : "The workflow run action.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "WorkflowRunActionFilter" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          }
        },
        "description" : "The workflow run action filter."
      },
      "WorkflowRunActionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of workflow run actions.",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowRunAction"
            }
          }
        },
        "description" : "The list of workflow run actions."
      },
      "WorkflowRunActionProperties" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Gets the code.",
            "readOnly" : true
          },
          "correlation" : {
            "$ref" : "#/components/schemas/Correlation"
          },
          "endTime" : {
            "type" : "string",
            "description" : "Gets the end time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "error" : {
            "$ref" : "#/components/schemas/Object"
          },
          "inputsLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "outputsLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "retryHistory" : {
            "type" : "array",
            "description" : "Gets the retry histories.",
            "items" : {
              "$ref" : "#/components/schemas/RetryHistory"
            }
          },
          "startTime" : {
            "type" : "string",
            "description" : "Gets the start time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          },
          "trackedProperties" : {
            "$ref" : "#/components/schemas/Object"
          },
          "trackingId" : {
            "type" : "string",
            "description" : "Gets the tracking id.",
            "readOnly" : true
          }
        },
        "description" : "The workflow run action properties."
      },
      "WorkflowRunActionRepetitionDefinition" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/WorkflowRunActionRepetitionProperties"
          }
        },
        "description" : "The workflow run action repetition definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "WorkflowRunActionRepetitionDefinitionCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link used to get the next page of recommendations."
          },
          "value" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowRunActionRepetitionDefinition"
            }
          }
        },
        "description" : "A collection of workflow run action repetitions."
      },
      "WorkflowRunActionRepetitionProperties" : {
        "properties" : {
          "repetitionIndexes" : {
            "type" : "array",
            "description" : "The repetition indexes.",
            "items" : {
              "$ref" : "#/components/schemas/RepetitionIndex"
            }
          }
        },
        "description" : "The workflow run action repetition properties definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/OperationResult"
        } ]
      },
      "WorkflowRunFilter" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          }
        },
        "description" : "The workflow run filter."
      },
      "WorkflowRunListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of workflow runs.",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowRun"
            }
          }
        },
        "description" : "The list of workflow runs."
      },
      "WorkflowRunProperties" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Gets the code.",
            "readOnly" : true
          },
          "correlation" : {
            "$ref" : "#/components/schemas/Correlation"
          },
          "correlationId" : {
            "type" : "string",
            "description" : "Gets the correlation id.",
            "readOnly" : true
          },
          "endTime" : {
            "type" : "string",
            "description" : "Gets the end time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "error" : {
            "$ref" : "#/components/schemas/Object"
          },
          "outputs" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WorkflowOutputParameter"
            },
            "description" : "Gets the outputs.",
            "readOnly" : true
          },
          "response" : {
            "$ref" : "#/components/schemas/WorkflowRunTrigger"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Gets the start time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          },
          "trigger" : {
            "$ref" : "#/components/schemas/WorkflowRunTrigger"
          },
          "waitEndTime" : {
            "type" : "string",
            "description" : "Gets the wait end time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "workflow" : {
            "$ref" : "#/components/schemas/ResourceReference"
          }
        },
        "description" : "The workflow run properties."
      },
      "WorkflowRunTrigger" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Gets the code.",
            "readOnly" : true
          },
          "correlation" : {
            "$ref" : "#/components/schemas/Correlation"
          },
          "endTime" : {
            "type" : "string",
            "description" : "Gets the end time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "error" : {
            "$ref" : "#/components/schemas/Object"
          },
          "inputs" : {
            "$ref" : "#/components/schemas/Object"
          },
          "inputsLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets the name.",
            "readOnly" : true
          },
          "outputs" : {
            "$ref" : "#/components/schemas/Object"
          },
          "outputsLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "scheduledTime" : {
            "type" : "string",
            "description" : "Gets the scheduled time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "startTime" : {
            "type" : "string",
            "description" : "Gets the start time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          },
          "trackedProperties" : {
            "$ref" : "#/components/schemas/Object"
          },
          "trackingId" : {
            "type" : "string",
            "description" : "Gets the tracking id.",
            "readOnly" : true
          }
        },
        "description" : "The workflow run trigger."
      },
      "WorkflowState" : {
        "type" : "string",
        "description" : "The workflow state.",
        "enum" : [ "NotSpecified", "Completed", "Enabled", "Disabled", "Deleted", "Suspended" ]
      },
      "WorkflowStatus" : {
        "type" : "string",
        "description" : "The workflow status.",
        "enum" : [ "NotSpecified", "Paused", "Running", "Waiting", "Succeeded", "Skipped", "Suspended", "Cancelled", "Failed", "Faulted", "TimedOut", "Aborted", "Ignored" ]
      },
      "WorkflowTrigger" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets the workflow trigger name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/WorkflowTriggerProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the workflow trigger type.",
            "readOnly" : true
          }
        },
        "description" : "The workflow trigger.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "WorkflowTriggerCallbackUrl" : {
        "type" : "object",
        "properties" : {
          "basePath" : {
            "type" : "string",
            "description" : "Gets the workflow trigger callback URL base path.",
            "readOnly" : true
          },
          "method" : {
            "type" : "string",
            "description" : "Gets the workflow trigger callback URL HTTP method.",
            "readOnly" : true
          },
          "queries" : {
            "$ref" : "#/components/schemas/WorkflowTriggerListCallbackUrlQueries"
          },
          "relativePath" : {
            "type" : "string",
            "description" : "Gets the workflow trigger callback URL relative path.",
            "readOnly" : true
          },
          "relativePathParameters" : {
            "type" : "array",
            "description" : "Gets the workflow trigger callback URL relative path parameters.",
            "items" : {
              "type" : "string"
            }
          },
          "value" : {
            "type" : "string",
            "description" : "Gets the workflow trigger callback URL.",
            "readOnly" : true
          }
        },
        "description" : "The workflow trigger callback URL."
      },
      "WorkflowTriggerFilter" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/WorkflowState"
          }
        },
        "description" : "The workflow trigger filter."
      },
      "WorkflowTriggerHistory" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets the workflow trigger history name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/WorkflowTriggerHistoryProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the workflow trigger history type.",
            "readOnly" : true
          }
        },
        "description" : "The workflow trigger history.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "WorkflowTriggerHistoryFilter" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          }
        },
        "description" : "The workflow trigger history filter."
      },
      "WorkflowTriggerHistoryListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of workflow trigger histories.",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowTriggerHistory"
            }
          }
        },
        "description" : "The list of workflow trigger histories."
      },
      "WorkflowTriggerHistoryProperties" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Gets the code.",
            "readOnly" : true
          },
          "correlation" : {
            "$ref" : "#/components/schemas/Correlation"
          },
          "endTime" : {
            "type" : "string",
            "description" : "Gets the end time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "error" : {
            "$ref" : "#/components/schemas/Object"
          },
          "fired" : {
            "type" : "boolean",
            "description" : "The value indicating whether trigger was fired.",
            "readOnly" : true
          },
          "inputsLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "outputsLink" : {
            "$ref" : "#/components/schemas/ContentLink"
          },
          "run" : {
            "$ref" : "#/components/schemas/ResourceReference"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Gets the start time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          },
          "trackingId" : {
            "type" : "string",
            "description" : "Gets the tracking id.",
            "readOnly" : true
          }
        },
        "description" : "The workflow trigger history properties."
      },
      "WorkflowTriggerListCallbackUrlQueries" : {
        "type" : "object",
        "properties" : {
          "api-version" : {
            "type" : "string",
            "description" : "The api version."
          },
          "se" : {
            "type" : "string",
            "description" : "The SAS timestamp."
          },
          "sig" : {
            "type" : "string",
            "description" : "The SAS signature."
          },
          "sp" : {
            "type" : "string",
            "description" : "The SAS permissions."
          },
          "sv" : {
            "type" : "string",
            "description" : "The SAS version."
          }
        },
        "description" : "Gets the workflow trigger callback URL query parameters."
      },
      "WorkflowTriggerListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of workflow triggers.",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowTrigger"
            }
          }
        },
        "description" : "The list of workflow triggers."
      },
      "WorkflowTriggerProperties" : {
        "type" : "object",
        "properties" : {
          "changedTime" : {
            "type" : "string",
            "description" : "Gets the changed time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "createdTime" : {
            "type" : "string",
            "description" : "Gets the created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastExecutionTime" : {
            "type" : "string",
            "description" : "Gets the last execution time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "nextExecutionTime" : {
            "type" : "string",
            "description" : "Gets the next execution time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/WorkflowTriggerProvisioningState"
          },
          "recurrence" : {
            "$ref" : "#/components/schemas/WorkflowTriggerRecurrence"
          },
          "state" : {
            "$ref" : "#/components/schemas/WorkflowState"
          },
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/ResourceReference"
          }
        },
        "description" : "The workflow trigger properties."
      },
      "WorkflowTriggerProvisioningState" : {
        "type" : "string",
        "description" : "The workflow trigger provisioning state.",
        "enum" : [ "NotSpecified", "Accepted", "Running", "Ready", "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "Moving", "Updating", "Registering", "Registered", "Unregistering", "Unregistered", "Completed" ]
      },
      "WorkflowTriggerRecurrence" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "The end time."
          },
          "frequency" : {
            "$ref" : "#/components/schemas/RecurrenceFrequency"
          },
          "interval" : {
            "type" : "integer",
            "description" : "The interval.",
            "format" : "int32"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/RecurrenceSchedule"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time."
          },
          "timeZone" : {
            "type" : "string",
            "description" : "The time zone."
          }
        },
        "description" : "The workflow trigger recurrence."
      },
      "WorkflowVersion" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/WorkflowVersionProperties"
          }
        },
        "description" : "The workflow version.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "WorkflowVersionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of workflow versions.",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowVersion"
            }
          }
        },
        "description" : "The list of workflow versions."
      },
      "WorkflowVersionProperties" : {
        "type" : "object",
        "properties" : {
          "accessEndpoint" : {
            "type" : "string",
            "description" : "Gets the access endpoint.",
            "readOnly" : true
          },
          "changedTime" : {
            "type" : "string",
            "description" : "Gets the changed time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "createdTime" : {
            "type" : "string",
            "description" : "Gets the created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "definition" : {
            "$ref" : "#/components/schemas/Object"
          },
          "integrationAccount" : {
            "$ref" : "#/components/schemas/ResourceReference"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WorkflowParameter"
            },
            "description" : "The parameters."
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "state" : {
            "$ref" : "#/components/schemas/WorkflowState"
          },
          "version" : {
            "type" : "string",
            "description" : "Gets the version.",
            "readOnly" : true
          }
        },
        "description" : "The workflow version properties."
      },
      "WsdlImportMethod" : {
        "type" : "string",
        "description" : "The WSDL import method.",
        "enum" : [ "NotSpecified", "SoapToRest", "SoapPassThrough" ]
      },
      "WsdlService" : {
        "type" : "object",
        "properties" : {
          "EndpointQualifiedNames" : {
            "type" : "array",
            "description" : "The list of endpoints' qualified names.",
            "items" : {
              "type" : "string"
            }
          },
          "qualifiedName" : {
            "type" : "string",
            "description" : "The qualified name."
          }
        },
        "description" : "The WSDL service."
      },
      "X12AcknowledgementSettings" : {
        "required" : [ "acknowledgementControlNumberLowerBound", "acknowledgementControlNumberUpperBound", "batchFunctionalAcknowledgements", "batchImplementationAcknowledgements", "batchTechnicalAcknowledgements", "needFunctionalAcknowledgement", "needImplementationAcknowledgement", "needLoopForValidMessages", "needTechnicalAcknowledgement", "rolloverAcknowledgementControlNumber", "sendSynchronousAcknowledgement" ],
        "type" : "object",
        "properties" : {
          "acknowledgementControlNumberLowerBound" : {
            "type" : "integer",
            "description" : "The acknowledgement control number lower bound.",
            "format" : "int32"
          },
          "acknowledgementControlNumberPrefix" : {
            "type" : "string",
            "description" : "The acknowledgement control number prefix."
          },
          "acknowledgementControlNumberSuffix" : {
            "type" : "string",
            "description" : "The acknowledgement control number suffix."
          },
          "acknowledgementControlNumberUpperBound" : {
            "type" : "integer",
            "description" : "The acknowledgement control number upper bound.",
            "format" : "int32"
          },
          "batchFunctionalAcknowledgements" : {
            "type" : "boolean",
            "description" : "The value indicating whether to batch functional acknowledgements."
          },
          "batchImplementationAcknowledgements" : {
            "type" : "boolean",
            "description" : "The value indicating whether to batch implementation acknowledgements."
          },
          "batchTechnicalAcknowledgements" : {
            "type" : "boolean",
            "description" : "The value indicating whether to batch the technical acknowledgements."
          },
          "functionalAcknowledgementVersion" : {
            "type" : "string",
            "description" : "The functional acknowledgement version."
          },
          "implementationAcknowledgementVersion" : {
            "type" : "string",
            "description" : "The implementation acknowledgement version."
          },
          "needFunctionalAcknowledgement" : {
            "type" : "boolean",
            "description" : "The value indicating whether functional acknowledgement is needed."
          },
          "needImplementationAcknowledgement" : {
            "type" : "boolean",
            "description" : "The value indicating whether implementation acknowledgement is needed."
          },
          "needLoopForValidMessages" : {
            "type" : "boolean",
            "description" : "The value indicating whether a loop is needed for valid messages."
          },
          "needTechnicalAcknowledgement" : {
            "type" : "boolean",
            "description" : "The value indicating whether technical acknowledgement is needed."
          },
          "rolloverAcknowledgementControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to rollover acknowledgement control number."
          },
          "sendSynchronousAcknowledgement" : {
            "type" : "boolean",
            "description" : "The value indicating whether to send synchronous acknowledgement."
          }
        },
        "description" : "The X12 agreement acknowledgement settings."
      },
      "X12AgreementContent" : {
        "required" : [ "receiveAgreement", "sendAgreement" ],
        "type" : "object",
        "properties" : {
          "receiveAgreement" : {
            "$ref" : "#/components/schemas/X12OneWayAgreement"
          },
          "sendAgreement" : {
            "$ref" : "#/components/schemas/X12OneWayAgreement"
          }
        },
        "description" : "The X12 agreement content."
      },
      "X12CharacterSet" : {
        "type" : "string",
        "description" : "The X12 character set.",
        "enum" : [ "NotSpecified", "Basic", "Extended", "UTF8" ]
      },
      "X12DateFormat" : {
        "type" : "string",
        "description" : "The x12 date format.",
        "enum" : [ "NotSpecified", "CCYYMMDD", "YYMMDD" ]
      },
      "X12DelimiterOverrides" : {
        "required" : [ "componentSeparator", "dataElementSeparator", "replaceCharacter", "replaceSeparatorsInPayload", "segmentTerminator", "segmentTerminatorSuffix" ],
        "type" : "object",
        "properties" : {
          "componentSeparator" : {
            "type" : "integer",
            "description" : "The component separator.",
            "format" : "int32"
          },
          "dataElementSeparator" : {
            "type" : "integer",
            "description" : "The data element separator.",
            "format" : "int32"
          },
          "messageId" : {
            "type" : "string",
            "description" : "The message id."
          },
          "protocolVersion" : {
            "type" : "string",
            "description" : "The protocol version."
          },
          "replaceCharacter" : {
            "type" : "integer",
            "description" : "The replacement character.",
            "format" : "int32"
          },
          "replaceSeparatorsInPayload" : {
            "type" : "boolean",
            "description" : "The value indicating whether to replace separators in payload."
          },
          "segmentTerminator" : {
            "type" : "integer",
            "description" : "The segment terminator.",
            "format" : "int32"
          },
          "segmentTerminatorSuffix" : {
            "$ref" : "#/components/schemas/SegmentTerminatorSuffix"
          },
          "targetNamespace" : {
            "type" : "string",
            "description" : "The target namespace on which this delimiter settings has to be applied."
          }
        },
        "description" : "The X12 delimiter override settings."
      },
      "X12EnvelopeOverride" : {
        "required" : [ "dateFormat", "headerVersion", "messageId", "protocolVersion", "receiverApplicationId", "responsibleAgencyCode", "senderApplicationId", "targetNamespace", "timeFormat" ],
        "type" : "object",
        "properties" : {
          "dateFormat" : {
            "$ref" : "#/components/schemas/X12DateFormat"
          },
          "functionalIdentifierCode" : {
            "type" : "string",
            "description" : "The functional identifier code."
          },
          "headerVersion" : {
            "type" : "string",
            "description" : "The header version."
          },
          "messageId" : {
            "type" : "string",
            "description" : "The message id on which this envelope settings has to be applied."
          },
          "protocolVersion" : {
            "type" : "string",
            "description" : "The protocol version on which this envelope settings has to be applied."
          },
          "receiverApplicationId" : {
            "type" : "string",
            "description" : "The receiver application id."
          },
          "responsibleAgencyCode" : {
            "type" : "string",
            "description" : "The responsible agency code."
          },
          "senderApplicationId" : {
            "type" : "string",
            "description" : "The sender application id."
          },
          "targetNamespace" : {
            "type" : "string",
            "description" : "The target namespace on which this envelope settings has to be applied."
          },
          "timeFormat" : {
            "$ref" : "#/components/schemas/X12TimeFormat"
          }
        },
        "description" : "The X12 envelope override settings."
      },
      "X12EnvelopeSettings" : {
        "required" : [ "controlStandardsId", "controlVersionNumber", "enableDefaultGroupHeaders", "groupControlNumberLowerBound", "groupControlNumberUpperBound", "groupHeaderAgencyCode", "groupHeaderDateFormat", "groupHeaderTimeFormat", "groupHeaderVersion", "interchangeControlNumberLowerBound", "interchangeControlNumberUpperBound", "overwriteExistingTransactionSetControlNumber", "receiverApplicationId", "rolloverGroupControlNumber", "rolloverInterchangeControlNumber", "rolloverTransactionSetControlNumber", "senderApplicationId", "transactionSetControlNumberLowerBound", "transactionSetControlNumberUpperBound", "usageIndicator", "useControlStandardsIdAsRepetitionCharacter" ],
        "type" : "object",
        "properties" : {
          "controlStandardsId" : {
            "type" : "integer",
            "description" : "The controls standards id.",
            "format" : "int32"
          },
          "controlVersionNumber" : {
            "type" : "string",
            "description" : "The control version number."
          },
          "enableDefaultGroupHeaders" : {
            "type" : "boolean",
            "description" : "The value indicating whether to enable default group headers."
          },
          "functionalGroupId" : {
            "type" : "string",
            "description" : "The functional group id."
          },
          "groupControlNumberLowerBound" : {
            "type" : "integer",
            "description" : "The group control number lower bound.",
            "format" : "int32"
          },
          "groupControlNumberUpperBound" : {
            "type" : "integer",
            "description" : "The group control number upper bound.",
            "format" : "int32"
          },
          "groupHeaderAgencyCode" : {
            "type" : "string",
            "description" : "The group header agency code."
          },
          "groupHeaderDateFormat" : {
            "$ref" : "#/components/schemas/X12DateFormat"
          },
          "groupHeaderTimeFormat" : {
            "$ref" : "#/components/schemas/X12TimeFormat"
          },
          "groupHeaderVersion" : {
            "type" : "string",
            "description" : "The group header version."
          },
          "interchangeControlNumberLowerBound" : {
            "type" : "integer",
            "description" : "The interchange  control number lower bound.",
            "format" : "int32"
          },
          "interchangeControlNumberUpperBound" : {
            "type" : "integer",
            "description" : "The interchange  control number upper bound.",
            "format" : "int32"
          },
          "overwriteExistingTransactionSetControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to overwrite existing transaction set control number."
          },
          "receiverApplicationId" : {
            "type" : "string",
            "description" : "The receiver application id."
          },
          "rolloverGroupControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to rollover group control number."
          },
          "rolloverInterchangeControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to rollover interchange control number."
          },
          "rolloverTransactionSetControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to rollover transaction set control number."
          },
          "senderApplicationId" : {
            "type" : "string",
            "description" : "The sender application id."
          },
          "transactionSetControlNumberLowerBound" : {
            "type" : "integer",
            "description" : "The transaction set control number lower bound.",
            "format" : "int32"
          },
          "transactionSetControlNumberPrefix" : {
            "type" : "string",
            "description" : "The transaction set control number prefix."
          },
          "transactionSetControlNumberSuffix" : {
            "type" : "string",
            "description" : "The transaction set control number suffix."
          },
          "transactionSetControlNumberUpperBound" : {
            "type" : "integer",
            "description" : "The transaction set control number upper bound.",
            "format" : "int32"
          },
          "usageIndicator" : {
            "$ref" : "#/components/schemas/UsageIndicator"
          },
          "useControlStandardsIdAsRepetitionCharacter" : {
            "type" : "boolean",
            "description" : "The value indicating whether to use control standards id as repetition character."
          }
        },
        "description" : "The X12 agreement envelope settings."
      },
      "X12FramingSettings" : {
        "required" : [ "characterSet", "componentSeparator", "dataElementSeparator", "replaceCharacter", "replaceSeparatorsInPayload", "segmentTerminator", "segmentTerminatorSuffix" ],
        "type" : "object",
        "properties" : {
          "characterSet" : {
            "$ref" : "#/components/schemas/X12CharacterSet"
          },
          "componentSeparator" : {
            "type" : "integer",
            "description" : "The component separator.",
            "format" : "int32"
          },
          "dataElementSeparator" : {
            "type" : "integer",
            "description" : "The data element separator.",
            "format" : "int32"
          },
          "replaceCharacter" : {
            "type" : "integer",
            "description" : "The replacement character.",
            "format" : "int32"
          },
          "replaceSeparatorsInPayload" : {
            "type" : "boolean",
            "description" : "The value indicating whether to replace separators in payload."
          },
          "segmentTerminator" : {
            "type" : "integer",
            "description" : "The segment terminator.",
            "format" : "int32"
          },
          "segmentTerminatorSuffix" : {
            "$ref" : "#/components/schemas/SegmentTerminatorSuffix"
          }
        },
        "description" : "The X12 agreement framing settings."
      },
      "X12MessageFilter" : {
        "required" : [ "messageFilterType" ],
        "type" : "object",
        "properties" : {
          "messageFilterType" : {
            "$ref" : "#/components/schemas/MessageFilterType"
          }
        },
        "description" : "The X12 message filter for odata query."
      },
      "X12MessageIdentifier" : {
        "required" : [ "messageId" ],
        "type" : "object",
        "properties" : {
          "messageId" : {
            "type" : "string",
            "description" : "The message id."
          }
        },
        "description" : "The X12 message identifier."
      },
      "X12OneWayAgreement" : {
        "required" : [ "protocolSettings", "receiverBusinessIdentity", "senderBusinessIdentity" ],
        "type" : "object",
        "properties" : {
          "protocolSettings" : {
            "$ref" : "#/components/schemas/X12ProtocolSettings"
          },
          "receiverBusinessIdentity" : {
            "$ref" : "#/components/schemas/BusinessIdentity"
          },
          "senderBusinessIdentity" : {
            "$ref" : "#/components/schemas/BusinessIdentity"
          }
        },
        "description" : "The X12 one-way agreement."
      },
      "X12ProcessingSettings" : {
        "required" : [ "convertImpliedDecimal", "createEmptyXmlTagsForTrailingSeparators", "maskSecurityInfo", "preserveInterchange", "suspendInterchangeOnError", "useDotAsDecimalSeparator" ],
        "type" : "object",
        "properties" : {
          "convertImpliedDecimal" : {
            "type" : "boolean",
            "description" : "The value indicating whether to convert numerical type to implied decimal."
          },
          "createEmptyXmlTagsForTrailingSeparators" : {
            "type" : "boolean",
            "description" : "The value indicating whether to create empty xml tags for trailing separators."
          },
          "maskSecurityInfo" : {
            "type" : "boolean",
            "description" : "The value indicating whether to mask security information."
          },
          "preserveInterchange" : {
            "type" : "boolean",
            "description" : "The value indicating whether to preserve interchange."
          },
          "suspendInterchangeOnError" : {
            "type" : "boolean",
            "description" : "The value indicating whether to suspend interchange on error."
          },
          "useDotAsDecimalSeparator" : {
            "type" : "boolean",
            "description" : "The value indicating whether to use dot as decimal separator."
          }
        },
        "description" : "The X12 processing settings."
      },
      "X12ProtocolSettings" : {
        "required" : [ "acknowledgementSettings", "envelopeSettings", "framingSettings", "messageFilter", "processingSettings", "schemaReferences", "securitySettings", "validationSettings" ],
        "type" : "object",
        "properties" : {
          "acknowledgementSettings" : {
            "$ref" : "#/components/schemas/X12AcknowledgementSettings"
          },
          "envelopeOverrides" : {
            "type" : "array",
            "description" : "The X12 envelope override settings.",
            "items" : {
              "$ref" : "#/components/schemas/X12EnvelopeOverride"
            }
          },
          "envelopeSettings" : {
            "$ref" : "#/components/schemas/X12EnvelopeSettings"
          },
          "framingSettings" : {
            "$ref" : "#/components/schemas/X12FramingSettings"
          },
          "messageFilter" : {
            "$ref" : "#/components/schemas/X12MessageFilter"
          },
          "messageFilterList" : {
            "type" : "array",
            "description" : "The X12 message filter list.",
            "items" : {
              "$ref" : "#/components/schemas/X12MessageIdentifier"
            }
          },
          "processingSettings" : {
            "$ref" : "#/components/schemas/X12ProcessingSettings"
          },
          "schemaReferences" : {
            "type" : "array",
            "description" : "The X12 schema references.",
            "items" : {
              "$ref" : "#/components/schemas/X12SchemaReference"
            }
          },
          "securitySettings" : {
            "$ref" : "#/components/schemas/X12SecuritySettings"
          },
          "validationOverrides" : {
            "type" : "array",
            "description" : "The X12 validation override settings.",
            "items" : {
              "$ref" : "#/components/schemas/X12ValidationOverride"
            }
          },
          "validationSettings" : {
            "$ref" : "#/components/schemas/X12ValidationSettings"
          },
          "x12DelimiterOverrides" : {
            "type" : "array",
            "description" : "The X12 delimiter override settings.",
            "items" : {
              "$ref" : "#/components/schemas/X12DelimiterOverrides"
            }
          }
        },
        "description" : "The X12 agreement protocol settings."
      },
      "X12SchemaReference" : {
        "required" : [ "messageId", "schemaName", "schemaVersion" ],
        "type" : "object",
        "properties" : {
          "messageId" : {
            "type" : "string",
            "description" : "The message id."
          },
          "schemaName" : {
            "type" : "string",
            "description" : "The schema name."
          },
          "schemaVersion" : {
            "type" : "string",
            "description" : "The schema version."
          },
          "senderApplicationId" : {
            "type" : "string",
            "description" : "The sender application id."
          }
        },
        "description" : "The X12 schema reference."
      },
      "X12SecuritySettings" : {
        "required" : [ "authorizationQualifier", "securityQualifier" ],
        "type" : "object",
        "properties" : {
          "authorizationQualifier" : {
            "type" : "string",
            "description" : "The authorization qualifier."
          },
          "authorizationValue" : {
            "type" : "string",
            "description" : "The authorization value."
          },
          "passwordValue" : {
            "type" : "string",
            "description" : "The password value."
          },
          "securityQualifier" : {
            "type" : "string",
            "description" : "The security qualifier."
          }
        },
        "description" : "The X12 agreement security settings."
      },
      "X12TimeFormat" : {
        "type" : "string",
        "description" : "The x12 time format.",
        "enum" : [ "NotSpecified", "HHMM", "HHMMSS", "HHMMSSdd", "HHMMSSd" ]
      },
      "X12ValidationOverride" : {
        "required" : [ "allowLeadingAndTrailingSpacesAndZeroes", "messageId", "trailingSeparatorPolicy", "trimLeadingAndTrailingSpacesAndZeroes", "validateCharacterSet", "validateEDITypes", "validateXSDTypes" ],
        "type" : "object",
        "properties" : {
          "allowLeadingAndTrailingSpacesAndZeroes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to allow leading and trailing spaces and zeroes."
          },
          "messageId" : {
            "type" : "string",
            "description" : "The message id on which the validation settings has to be applied."
          },
          "trailingSeparatorPolicy" : {
            "$ref" : "#/components/schemas/TrailingSeparatorPolicy"
          },
          "trimLeadingAndTrailingSpacesAndZeroes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to trim leading and trailing spaces and zeroes."
          },
          "validateCharacterSet" : {
            "type" : "boolean",
            "description" : "The value indicating whether to validate character Set."
          },
          "validateEDITypes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to validate EDI types."
          },
          "validateXSDTypes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to validate XSD types."
          }
        },
        "description" : "The X12 validation override settings."
      },
      "X12ValidationSettings" : {
        "required" : [ "allowLeadingAndTrailingSpacesAndZeroes", "checkDuplicateGroupControlNumber", "checkDuplicateInterchangeControlNumber", "checkDuplicateTransactionSetControlNumber", "interchangeControlNumberValidityDays", "trailingSeparatorPolicy", "trimLeadingAndTrailingSpacesAndZeroes", "validateCharacterSet", "validateEDITypes", "validateXSDTypes" ],
        "type" : "object",
        "properties" : {
          "allowLeadingAndTrailingSpacesAndZeroes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to allow leading and trailing spaces and zeroes."
          },
          "checkDuplicateGroupControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to check for duplicate group control number."
          },
          "checkDuplicateInterchangeControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to check for duplicate interchange control number."
          },
          "checkDuplicateTransactionSetControlNumber" : {
            "type" : "boolean",
            "description" : "The value indicating whether to check for duplicate transaction set control number."
          },
          "interchangeControlNumberValidityDays" : {
            "type" : "integer",
            "description" : "The validity period of interchange control number.",
            "format" : "int32"
          },
          "trailingSeparatorPolicy" : {
            "$ref" : "#/components/schemas/TrailingSeparatorPolicy"
          },
          "trimLeadingAndTrailingSpacesAndZeroes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to trim leading and trailing spaces and zeroes."
          },
          "validateCharacterSet" : {
            "type" : "boolean",
            "description" : "The value indicating whether to validate character set in the message."
          },
          "validateEDITypes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to Whether to validate EDI types."
          },
          "validateXSDTypes" : {
            "type" : "boolean",
            "description" : "The value indicating whether to Whether to validate XSD types."
          }
        },
        "description" : "The X12 agreement validation settings."
      }
    },
    "parameters" : {
      "api-version" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription id.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}