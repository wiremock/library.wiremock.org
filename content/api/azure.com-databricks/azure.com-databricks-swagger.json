{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "DatabricksClient",
    "description" : "ARM Databricks",
    "version" : "2018-04-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.Databricks/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available RP operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Resource Provider error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Databricks/workspaces" : {
      "get" : {
        "tags" : [ "Workspaces" ],
        "description" : "Gets all the workspaces within a subscription.",
        "operationId" : "Workspaces_ListBySubscription",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of workspaces.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces" : {
      "get" : {
        "tags" : [ "Workspaces" ],
        "description" : "Gets all the workspaces within a resource group.",
        "operationId" : "Workspaces_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of workspaces.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}" : {
      "get" : {
        "tags" : [ "Workspaces" ],
        "description" : "Gets the workspace.",
        "operationId" : "Workspaces_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns the workspace.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workspace"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Workspaces" ],
        "description" : "Creates a new workspace.",
        "operationId" : "Workspaces_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the create or update a workspace.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Workspace"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Created - Returns information about the workspace, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workspace"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the workspace, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workspace"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Workspaces" ],
        "description" : "Deletes the workspace.",
        "operationId" : "Workspaces_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204" : {
            "description" : "NoContent"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Workspaces" ],
        "description" : "Updates a workspace.",
        "operationId" : "Workspaces_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The update to the workspace.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkspaceUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the workspace.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workspace"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorDetail" : {
        "title" : "Error details.",
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The error's code."
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable error message."
          },
          "target" : {
            "type" : "string",
            "description" : "Indicates which property in the request is responsible for the error."
          }
        }
      },
      "ErrorInfo" : {
        "title" : "The code and message for an error.",
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A machine readable error code."
          },
          "details" : {
            "type" : "array",
            "description" : "error details.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "innererror" : {
            "type" : "string",
            "description" : "Inner error details if they exist."
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable error message."
          }
        }
      },
      "ErrorResponse" : {
        "title" : "Error response.",
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ErrorInfo"
          }
        },
        "description" : "Contains details when the response code indicates an error."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "operation" : {
                "type" : "string",
                "description" : "Operation type: Read, write, delete, etc."
              },
              "provider" : {
                "type" : "string",
                "description" : "Service provider: Microsoft.ResourceProvider"
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource on which the operation is performed."
              }
            },
            "description" : "The object that represents the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}"
          }
        },
        "description" : "REST API operation"
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Resource Provider operations supported by the Resource Provider resource provider.",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results."
      },
      "ProvisioningState" : {
        "type" : "string",
        "description" : "Provisioning status of the workspace.",
        "enum" : [ "Accepted", "Running", "Ready", "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "Updating" ]
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
            "readOnly" : true
          }
        },
        "description" : "The core properties of ARM resources"
      },
      "Sku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The SKU name."
          },
          "tier" : {
            "type" : "string",
            "description" : "The SKU tier."
          }
        },
        "description" : "SKU for the resource."
      },
      "TrackedResource" : {
        "required" : [ "location" ],
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The geo-location where the resource lives"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          }
        },
        "description" : "The resource model definition for a ARM tracked top level resource",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "Workspace" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/WorkspaceProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          }
        },
        "description" : "Information about workspace.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "WorkspaceCustomBooleanParameter" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/WorkspaceCustomParameterType"
          },
          "value" : {
            "type" : "boolean",
            "description" : "The value which should be used for this field."
          }
        },
        "description" : "The value which should be used for this field."
      },
      "WorkspaceCustomObjectParameter" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/WorkspaceCustomParameterType"
          },
          "value" : {
            "type" : "object",
            "description" : "The value which should be used for this field."
          }
        },
        "description" : "The value which should be used for this field."
      },
      "WorkspaceCustomParameterType" : {
        "type" : "string",
        "description" : "Provisioning status of the workspace.",
        "enum" : [ "Bool", "Object", "String" ]
      },
      "WorkspaceCustomParameters" : {
        "type" : "object",
        "properties" : {
          "amlWorkspaceId" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          },
          "customPrivateSubnetName" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          },
          "customPublicSubnetName" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          },
          "customVirtualNetworkId" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          },
          "enableNoPublicIp" : {
            "$ref" : "#/components/schemas/WorkspaceCustomBooleanParameter"
          },
          "loadBalancerBackendPoolName" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          },
          "loadBalancerId" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          },
          "relayNamespaceName" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          },
          "resourceTags" : {
            "$ref" : "#/components/schemas/WorkspaceCustomObjectParameter"
          },
          "storageAccountName" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          },
          "storageAccountSkuName" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          },
          "vnetAddressPrefix" : {
            "$ref" : "#/components/schemas/WorkspaceCustomStringParameter"
          }
        },
        "description" : "Custom Parameters used for Cluster Creation."
      },
      "WorkspaceCustomStringParameter" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/WorkspaceCustomParameterType"
          },
          "value" : {
            "type" : "string",
            "description" : "The value which should be used for this field."
          }
        },
        "description" : "The Value."
      },
      "WorkspaceListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The array of workspaces.",
            "items" : {
              "$ref" : "#/components/schemas/Workspace"
            }
          }
        },
        "description" : "List of workspaces."
      },
      "WorkspaceProperties" : {
        "required" : [ "managedResourceGroupId" ],
        "type" : "object",
        "properties" : {
          "authorizations" : {
            "type" : "array",
            "description" : "The workspace provider authorizations.",
            "items" : {
              "$ref" : "#/components/schemas/WorkspaceProviderAuthorization"
            }
          },
          "managedResourceGroupId" : {
            "type" : "string",
            "description" : "The managed resource group Id."
          },
          "parameters" : {
            "$ref" : "#/components/schemas/WorkspaceCustomParameters"
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ProvisioningState"
          },
          "uiDefinitionUri" : {
            "type" : "string",
            "description" : "The blob URI where the UI definition file is located."
          }
        },
        "description" : "The workspace properties."
      },
      "WorkspaceProviderAuthorization" : {
        "required" : [ "principalId", "roleDefinitionId" ],
        "type" : "object",
        "properties" : {
          "principalId" : {
            "type" : "string",
            "description" : "The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the workspace resources.",
            "format" : "uuid"
          },
          "roleDefinitionId" : {
            "type" : "string",
            "description" : "The provider's role definition identifier. This role will define all the permissions that the provider must have on the workspace's container resource group. This role definition cannot have permission to delete the resource group.",
            "format" : "uuid"
          }
        },
        "description" : "The workspace provider authorization."
      },
      "WorkspaceUpdate" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          }
        },
        "description" : "An update to a workspace."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for this operation.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group. The name is case insensitive.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "pattern" : "^[-\\w\\._\\(\\)]+$",
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The ID of the target subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "WorkspaceName" : {
        "name" : "workspaceName",
        "in" : "path",
        "description" : "The name of the workspace.",
        "required" : true,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 3,
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}