{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "import.io",
    "version" : "1.0"
  },
  "externalDocs" : {
    "url" : "http://api.docs.import.io/"
  },
  "servers" : [ {
    "url" : "https://data.import.io/"
  } ],
  "tags" : [ {
    "name" : "run",
    "description" : "APIs that exist on the run.import.io endpoint"
  }, {
    "name" : "data",
    "description" : "APIs that exist on the data.import.io endpoint"
  }, {
    "name" : "extraction",
    "description" : "APIs that exist on the extraction.import.io endpoint"
  }, {
    "name" : "rss",
    "description" : "APIs that exist on the rss.import.io endpoint"
  }, {
    "name" : "store",
    "description" : "APIs that exist on the store.import.io endpoint"
  }, {
    "name" : "schedule",
    "description" : "APIs that exist on the schedule.import.io endpoint"
  }, {
    "name" : "api",
    "description" : "APIs that exist on the api.import.io endpoint"
  }, {
    "name" : "run.import.io"
  }, {
    "name" : "data.import.io"
  }, {
    "name" : "extraction.import.io"
  }, {
    "name" : "rss.import.io"
  }, {
    "name" : "store.import.io"
  }, {
    "name" : "schedule.import.io"
  }, {
    "name" : "api.import.io"
  } ],
  "paths" : {
    "/extractor/{extractorId}/csv/latest" : {
      "get" : {
        "tags" : [ "data.import.io" ],
        "summary" : "Get the latest crawl run results as a csv",
        "parameters" : [ {
          "name" : "extractorId",
          "in" : "path",
          "description" : "the id of the extractor to start get the latest crawl run data",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User doesn't own this extractor, or doesn't have a valid session.",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIError"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found: Extractor has not been run.",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIError"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    },
    "/extractor/{extractorId}/json/latest" : {
      "get" : {
        "tags" : [ "data.import.io" ],
        "summary" : "Get the latest crawl run results as json",
        "parameters" : [ {
          "name" : "extractorId",
          "in" : "path",
          "description" : "The id of the extractor to start get the latest crawl run data",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json; boundary=NL" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User doesn't own this extractor, or doesn't have a valid session.",
            "content" : {
              "application/json; boundary=NL" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIError"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found: Extractor has not been run.",
            "content" : {
              "application/json; boundary=NL" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIError"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "APIError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "Internal error code",
            "format" : "int"
          },
          "error" : {
            "type" : "string",
            "description" : "(deprecated) A message containing a brief description of the error"
          },
          "message" : {
            "type" : "string",
            "description" : "A message containing a brief description of the error"
          }
        }
      },
      "CrawlRun" : {
        "type" : "object",
        "properties" : {
          "extractorId" : {
            "type" : "string"
          },
          "failedUrlCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "guid" : {
            "type" : "string"
          },
          "rowCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "runtimeConfigId" : {
            "type" : "string"
          },
          "startedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "state" : {
            "type" : "string"
          },
          "stoppedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "successUrlCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalUrlCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "urlListId" : {
            "type" : "string"
          }
        }
      },
      "Inputs" : {
        "required" : [ "_url" ],
        "type" : "object",
        "properties" : {
          "Example Input" : {
            "type" : "string"
          },
          "_url" : {
            "type" : "string"
          }
        }
      },
      "ObjectStoreSearchResult" : {
        "type" : "object",
        "properties" : {
          "hits" : {
            "type" : "object",
            "properties" : {
              "hits" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "_id" : {
                      "type" : "string"
                    },
                    "_score" : {
                      "type" : "integer"
                    },
                    "_type" : {
                      "type" : "string"
                    },
                    "fields" : {
                      "$ref" : "#/components/schemas/CrawlRun"
                    }
                  }
                }
              },
              "total" : {
                "type" : "integer"
              }
            }
          },
          "timed_out" : {
            "type" : "boolean"
          },
          "took" : {
            "type" : "integer"
          }
        }
      },
      "QueryResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string"
          },
          "exceptionType" : {
            "type" : "string"
          },
          "extractorData" : {
            "type" : "object"
          },
          "pageData" : {
            "type" : "object"
          },
          "runtimeConfigId" : {
            "type" : "string"
          },
          "sequenceNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "Report" : {
        "type" : "object",
        "properties" : {
          "configId" : {
            "type" : "string"
          },
          "guid" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "published" : {
            "type" : "boolean"
          },
          "reportId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "object"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "ReportRun" : {
        "type" : "object",
        "properties" : {
          "autoPublish" : {
            "type" : "boolean"
          },
          "guid" : {
            "type" : "string"
          },
          "latestConfigId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "Schedule" : {
        "type" : "object",
        "properties" : {
          "extractorId" : {
            "type" : "string"
          },
          "interval" : {
            "type" : "string"
          },
          "intervalData" : {
            "type" : "object",
            "properties" : {
              "minutes" : {
                "type" : "string"
              },
              "time" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              }
            }
          },
          "nextRunAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ownerId" : {
            "type" : "string"
          },
          "startTimestamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ScheduleRequest" : {
        "required" : [ "extractorId", "interval" ],
        "type" : "object",
        "properties" : {
          "extractorId" : {
            "type" : "string",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "interval" : {
            "type" : "string",
            "example" : "15 * * * *"
          },
          "startTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1485448509727
          }
        }
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "_apikey",
        "in" : "query"
      }
    }
  }
}