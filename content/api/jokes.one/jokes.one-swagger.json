{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Jokes One API",
    "description" : " Jokes One API offers a complete feature rich REST API access to its jokes platform.  This is the documentation for the world famous [jokes API](https://jokes.one/api/joke/).  If you are a subscriber and you are trying this from a console add 'X-JokesOne-Api-Secret' header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points and subscribing to the API please visit https://jokes.one/api/joke/.",
    "termsOfService" : "https://jokes.one/terms",
    "contact" : {
      "name" : "Jokes One",
      "url" : "https://jokes.one/api/joke/"
    },
    "version" : "1.1"
  },
  "servers" : [ {
    "url" : "https://api.jokes.one/"
  }, {
    "url" : "http://api.jokes.one/"
  } ],
  "tags" : [ {
    "name" : "jod",
    "description" : "Access joke of the day service. Use this to get the joke of the day in various categories. This is a free API that is available to public. You must credit Jokes One if you are using the free version. ",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://jokes.one/api#joke-of-the-day"
    }
  }, {
    "name" : "joke",
    "description" : "Access random joke service. Use this to get random jokes , jokes filtered by authors or tags etc. You need an API key to access this service."
  } ],
  "paths" : {
    "/jod" : {
      "get" : {
        "tags" : [ "jod" ],
        "description" : "Gets `Joke of the Day`.\nOptional `category` param determines\nthe category of returned joke of the day\n",
        "parameters" : [ {
          "name" : "category",
          "in" : "query",
          "description" : "JOD Category",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JokeOfTheDayResponse"
                },
                "example" : "{\n    \"success\": {\n  \"total\": 1\n    },\n    \"contents\": {\n  \"jokes\": [\n      {\n    \"category\": \"animal\",\n    \"title\": \"Animal Joke of the day \",\n    \"description\": \"Animal Joke of the day \",\n    \"background\": \"\",\n    \"joke\": {\n        \"title\": \"Elephant with Diarrhea\",\n        \"length\": \"67\",\n        \"clean\": \"0\",\n        \"racial\": \"0\",\n        \"date\": \"2018-11-05\",\n        \"id\": \"1tO_XKcm3_qYMkk0k19HEgeF\",\n        \"text\": \"What do you give an elephant with diarrhea? \\r\\n\\r\\n\\r\\nLots of room.\\r\\n\\r\\n\"\n    }\n      }\n  ],\n  \"copyright\": \"2018-20 https://jokes.one\"\n    }\n}"
              },
              "application/xml" : {
                "example" : "<?xml version=\"1.0\"?>\n<response>\n  <success>\n    <total>1</total>\n  </success>\n  <contents>\n    <jokes>\n      <category>animal</category>\n      <title>Animal Joke of the day </title>\n      <description>Animal Joke of the day </description>\n      <background/>\n      <joke>\n        <title>Elephant with Diarrhea</title>\n        <length>67</length>\n        <clean>0</clean>\n        <racial>0</racial>\n        <date>2018-11-05</date>\n        <id>1tO_XKcm3_qYMkk0k19HEgeF</id>\n        <text>What do you give an elephant with diarrhea? &#xD; &#xD; &#xD; Lots of room.&#xD; &#xD;</text>\n      </joke>\n    </jokes>\n    <copyright>2018-20 https://jokes.one</copyright>\n  </contents>\n</response>"
              }
            }
          }
        },
        "security" : [ {
          "X-JokesOne-Api-Secret" : null
        } ]
      }
    },
    "/jod/categories" : {
      "get" : {
        "tags" : [ "jod" ],
        "description" : "Gets a list of `Joke of the Day` Categories.\n",
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"success\": {\n  \"total\": 3\n    },\n    \"contents\": {\n  \"categories\": {\n      \"jod\": {\n    \"category\": \"jod\",\n    \"title\": \"Joke of the day \",\n    \"description\": \"Joke of the day \",\n    \"background\": \"\"\n      },\n      \"animal\": {\n    \"category\": \"animal\",\n    \"title\": \"Animal Joke of the day \",\n    \"description\": \"Animal Joke of the day \",\n    \"background\": \"\"\n      },\n      \"blonde\": {\n    \"category\": \"blonde\",\n    \"title\": \"Blonde joke of the day!\",\n    \"description\": \"Blonde joke of the day!\",\n    \"background\": \"\"\n      }\n  },\n  \"copyright\": \"2018-20 https://jokes.one\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-JokesOne-Api-Secret" : null
        } ]
      }
    },
    "/joke" : {
      "get" : {
        "tags" : [ "joke" ],
        "description" : "Gets a `Joke` with a given `id`.",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Joke ID",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JokeResponse"
                },
                "example" : "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"jokes\": [\n            {\n                \"title\": \"Anti aircraft weapon\",\n                \"length\": \"212\",\n                \"clean\": null,\n                \"racial\": null,\n                \"id\": \"pZdOqARLsLVZ84EkBcWptAeF\",\n                \"text\": \"\\nThe USA blamed the Russian companies that they were supplying Bagdad with the elastic band for pants. Iraq engineers made the catapults of them and now Iraq soldiers are striking a blow to American air forces.\\n\\n\"\n            }\n        ],\n        \"copyright\": \"2018-20 https://jokes.one\"\n    }\n}"
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JokeResponse"
                },
                "example" : "<?xml version=\"1.0\"?>\n<response>\n  <success>\n    <total>1</total>\n  </success>\n  <contents>\n    <jokes>\n      <title>Anti aircraft weapon</title>\n      <length>212</length>\n      <clean/>\n      <racial/>\n      <id>pZdOqARLsLVZ84EkBcWptAeF</id>\n      <text>\nThe USA blamed the Russian companies that they were supplying Bagdad with the elastic band for pants. Iraq engineers made the catapults of them and now Iraq soldiers are striking a blow to American air forces.\n\n</text>\n    </jokes>\n    <copyright>2018-20 https://jokes.one</copyright>\n  </contents>\n</response>"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-JokesOne-Api-Secret" : null
        } ]
      },
      "put" : {
        "tags" : [ "joke" ],
        "description" : "Add a new joke to your private collection.",
        "parameters" : [ {
          "name" : "title",
          "in" : "query",
          "description" : "Joke Title",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "text",
          "in" : "query",
          "description" : "Joke Text",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Joke Author",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "Comma Separated tags",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"content\": {\n    \"joke\": {\n      \"id\": \"0tztT1wYHRzdTf7jIccAzweF\"\n    }\n  }\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}              "
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "joke" ],
        "description" : "Delete a joke. The user needs to be the owner of the joke to be able to delete it.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Joke ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/xml" : {
                "example" : "{}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          },
          "404" : {
            "description" : "404  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 404,\n        \"message\": \"Not Found: Joke not found\"\n    }\n}                      "
              }
            }
          }
        },
        "security" : [ {
          "X-JokesOne-Api-Secret" : null
        } ]
      },
      "patch" : {
        "tags" : [ "joke" ],
        "description" : "Update a joke",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Joke ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "title",
          "in" : "query",
          "description" : "title",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "text",
          "in" : "query",
          "description" : "text",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Joke Author",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "Comma Separated tags",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"content\": {\n    \"joke\": {\n      \"id\": \"0tztT1wYHRzdTf7jIccAzweF\"\n    }\n  }\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}              "
              }
            }
          }
        }
      }
    },
    "/joke/categories/search" : {
      "get" : {
        "tags" : [ "joke" ],
        "description" : "Gets a list of `Joke` Categories, based on a query term.\n",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Search Query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Response is paged. This parameter controls where response starts the listing at",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"success\": {\n        \"total\": 8\n    },\n    \"contents\": {\n        \"categories\": {\n            \"jod\": \"Joke of the day\",\n            \"work\": \"Work Related Joke of the day\",\n            \"kids\": \"Joke of the day for kids\"\n        },\n        \"copyright\": \"2018-20 https://jokes.one\"\n    }\n}    "
              }
            }
          }
        },
        "security" : [ {
          "X-JokesOne-Api-Secret" : null
        } ]
      }
    },
    "/joke/list" : {
      "get" : {
        "tags" : [ "joke" ],
        "description" : "Get the list of jokes in your private collection.",
        "parameters" : [ {
          "name" : "start",
          "in" : "query",
          "description" : "Response is paged. This parameter controls where response starts the listing at",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"success\": {\n        \"total\": \"263\",\n        \"range\": {\n            \"start\": 0,\n            \"end\": 5\n        }\n    },\n    \"contents\": {\n        \"jokes\": [\n            {\n                \"joke\": \"I think you should defend to the death their right to march, and then go down and meet them with baseball bats.\",\n                \"length\": \"111\",\n                \"author\": \"Woody Allen\",\n                \"tags\": [],\n                \"id\": \"GkeLUydBfiAH0Tcs2w_gwAeF\"\n            },\n            {\n                \"joke\": \"We have come to dedicate a portion of that field, as a final resting place for those who here gave their lives that that nation might live. It is altogether fitting and proper that we should do this. ... The world will little note nor long remember what we say here, but it can never forget what they did here.\",\n                \"length\": \"310\",\n                \"author\": \"Abraham Lincoln\",\n                \"tags\": [],\n                \"id\": \"u6fD9eRFA2NFMHuEoeujaAeF\"\n            },\n            {\n                \"joke\": \"Eighty percent of success is showing up.\",\n                \"length\": \"40\",\n                \"author\": \"Woody Allen\",\n                \"tags\": [\n                    \"success\",\n                    \"tso-top-100\"\n                ],\n                \"id\": \"nLvp0vLfofW06PILxmERHgeF\"\n            },\n            {\n                \"joke\": \"Great ambition is the passion of a great character.  Those endowed with it may perform very good or very bad acts.  All depends on the principals which direct them.\",\n                \"length\": \"164\",\n                \"author\": \"Napoleon Bonaparte\",\n                \"tags\": [\n                    \"ambition\",\n                    \"inspire\",\n                    \"passion\"\n                ],\n                \"id\": \"X8juAoTtvxSEdgA0sGbYeQeF\"\n            },\n            {\n                \"joke\": \"I have had dreams, and I have had nightmares. I overcame the nightmares because of my dreams.\",\n                \"length\": \"93\",\n                \"author\": \"Dr. Jonas Salk\",\n                \"tags\": [\n                    \"dream\",\n                    \"nightmare\"\n                ],\n                \"id\": \"m_6Fj8QcXlVsQiiW7SAMLAeF\"\n            }\n        ]\n    }\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
              }
            }
          }
        }
      }
    },
    "/joke/random" : {
      "get" : {
        "tags" : [ "joke" ],
        "description" : "Gets a `Random Joke`. When you are in a hurry this is what you call to get a random famous joke.",
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JokeResponse"
                },
                "example" : "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"jokes\": [\n            {\n                \"title\": \"Blonde tap dancer\",\n                \"length\": \"86\",\n                \"clean\": \"0\",\n                \"racial\": \"0\",\n                \"id\": \"SVEPCMsk3SbyeWZbERGzKQeF\",\n                \"text\": \"What happened to the blonde tap dancer? \\r\\nShe slipped off and fell down the drain.\\r\\n\\r\\n\"\n            }\n        ],\n        \"copyright\": \"2018-20 https://jokes.one\"\n    }\n}"
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JokeResponse"
                },
                "example" : "<?xml version=\"1.0\"?>\n<response>\n  <success>\n    <total>1</total>\n  </success>\n  <contents>\n    <jokes>\n      <title>Blonde tap dancer</title>\n      <length>86</length>\n      <clean>0</clean>\n      <racial>0</racial>\n      <id>SVEPCMsk3SbyeWZbERGzKQeF</id>\n      <text>What happened to the blonde tap dancer? &#xD;\nShe slipped off and fell down the drain.&#xD;\n&#xD;\n</text>\n    </jokes>\n    <copyright>2018-20 https://jokes.one</copyright>\n  </contents>\n</response>"
              },
              "application/js" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JokeResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        }
      }
    },
    "/joke/search" : {
      "get" : {
        "tags" : [ "joke" ],
        "description" : "Search for a `Joke` in Jokes One platform. Optional `category` , `author`, `minlength`, `maxlength` params determines the filters applied while searching for the joke. ",
        "parameters" : [ {
          "name" : "category",
          "in" : "query",
          "description" : "Joke Category",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "keyword to search for in the joke",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "minlength",
          "in" : "query",
          "description" : "Joke minimum Length",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "maxlength",
          "in" : "query",
          "description" : "Joke maximum Length",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Joke Author",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "private",
          "in" : "query",
          "description" : "Should search private collection? Default searches public collection.",
          "schema" : {
            "type" : "boolean",
            "format" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JokeResponse"
                },
                "example" : "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"jokes\": [\n            {\n                \"title\": \"Blonde tap dancer\",\n                \"length\": \"86\",\n                \"clean\": \"0\",\n                \"racial\": \"0\",\n                \"id\": \"SVEPCMsk3SbyeWZbERGzKQeF\",\n                \"text\": \"What happened to the blonde tap dancer? \\r\\nShe slipped off and fell down the drain.\\r\\n\\r\\n\"\n            }\n        ],\n        \"copyright\": \"2018-20 https://jokes.one\"\n    }\n}"
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JokeResponse"
                },
                "example" : "<?xml version=\"1.0\"?>\n<response>\n  <success>\n    <total>1</total>\n  </success>\n  <contents>\n    <jokes>\n      <title>Blonde tap dancer</title>\n      <length>86</length>\n      <clean>0</clean>\n      <racial>0</racial>\n      <id>SVEPCMsk3SbyeWZbERGzKQeF</id>\n      <text>What happened to the blonde tap dancer? &#xD;\nShe slipped off and fell down the drain.&#xD;\n&#xD;\n</text>\n    </jokes>\n    <copyright>2018-20 https://jokes.one</copyright>\n  </contents>\n</response>        "
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-JokesOne-Api-Secret" : null
        } ]
      }
    },
    "/joke/tags/add" : {
      "post" : {
        "tags" : [ "joke" ],
        "description" : "Add a tag to a given Joke.",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Joke ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "Comma Separated tags",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          },
          "404" : {
            "description" : "404  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 404,\n        \"message\": \"Not Found: Joke not found\"\n    }\n}                      "
              }
            }
          }
        }
      }
    },
    "/joke/tags/remove" : {
      "post" : {
        "tags" : [ "joke" ],
        "description" : "Remove a tag from a given joke.",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Joke ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "Comma Separated tags",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          },
          "404" : {
            "description" : "404  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 404,\n        \"message\": \"Not Found: Joke not found\"\n    }\n}                      "
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Joke" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/NewJoke"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Unique identifier representing a specific joke in jokes.one."
            },
            "image" : {
              "type" : "string",
              "description" : "Image URL that can be used for background to display this joke."
            },
            "length" : {
              "type" : "integer",
              "description" : "Length of the joke string.",
              "format" : "int32"
            }
          }
        } ]
      },
      "JokeOfTheDay" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Joke"
        }, {
          "required" : [ "date" ],
          "type" : "object",
          "properties" : {
            "date" : {
              "type" : "string",
              "description" : "Date this joke of the day belongs to"
            }
          }
        } ]
      },
      "JokeOfTheDayResponse" : {
        "type" : "object",
        "properties" : {
          "contents" : {
            "type" : "object",
            "properties" : {
              "jokes" : {
                "type" : "array",
                "description" : "List of jokes",
                "items" : {
                  "$ref" : "#/components/schemas/JokeOfTheDay"
                }
              }
            }
          },
          "success" : {
            "type" : "string",
            "description" : "Metadata about this successful call"
          }
        }
      },
      "JokeResponse" : {
        "type" : "object",
        "properties" : {
          "contents" : {
            "type" : "object",
            "properties" : {
              "jokes" : {
                "type" : "array",
                "description" : "List of jokes",
                "items" : {
                  "$ref" : "#/components/schemas/Joke"
                }
              }
            }
          },
          "success" : {
            "type" : "string",
            "description" : "Metadata about this successful call"
          }
        }
      },
      "NewJoke" : {
        "required" : [ "joke", "title" ],
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "description" : "Author name of joke."
          },
          "joke" : {
            "type" : "string",
            "description" : "The Joke."
          },
          "tags" : {
            "type" : "array",
            "description" : "Array of tags/categories.",
            "items" : {
              "type" : "string"
            }
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the Joke."
          }
        }
      }
    },
    "securitySchemes" : {
      "X-JokesOne-Api-Secret" : {
        "type" : "apiKey",
        "name" : "X-JokesOne-Api-Secret",
        "in" : "header"
      }
    }
  }
}