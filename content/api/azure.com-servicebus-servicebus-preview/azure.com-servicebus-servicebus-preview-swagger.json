{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ServiceBusManagementClient",
    "description" : "Azure Service Bus client for managing Namespace, IPFilter Rules, VirtualNetworkRules and Zone Redundant",
    "version" : "2018-01-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.ServiceBus/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available ServiceBus REST API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets all the available namespaces within the subscription, irrespective of the resource groups.",
        "externalDocs" : {
          "url" : "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "operationId" : "Namespaces_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespaces successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SBNamespaceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets the available namespaces within a resource group.",
        "externalDocs" : {
          "url" : "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "operationId" : "Namespaces_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespaces successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SBNamespaceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets a description for the specified namespace.",
        "externalDocs" : {
          "url" : "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "operationId" : "Namespaces_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SBNamespace"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Namespaces" ],
        "description" : "Creates or updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "externalDocs" : {
          "url" : "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "operationId" : "Namespaces_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to create a namespace resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SBNamespace"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Namespace created successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SBNamespace"
                }
              }
            }
          },
          "201" : {
            "description" : "Namespace create request accepted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SBNamespace"
                }
              }
            }
          },
          "202" : {
            "description" : "Namespace create or update request accepted."
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Namespaces" ],
        "description" : "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "externalDocs" : {
          "url" : "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "operationId" : "Namespaces_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace successfully deleted."
          },
          "202" : {
            "description" : "Namespace delete request accepted."
          },
          "204" : {
            "description" : "No content."
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Namespaces" ],
        "description" : "Updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "operationId" : "Namespaces_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to update a namespace resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SBNamespaceUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Namespace updated successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SBNamespace"
                }
              }
            }
          },
          "201" : {
            "description" : "Namespace update request accepted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SBNamespace"
                }
              }
            }
          },
          "202" : {
            "description" : "Namespace update request accepted."
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/ipfilterrules" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets a list of IP Filter rules for a Namespace.",
        "operationId" : "Namespaces_ListIpFilterRules",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace IpFilterRule successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpFilterRuleListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/ipfilterrules/{ipFilterRuleName}" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets an IpFilterRule for a Namespace by rule name.",
        "operationId" : "Namespaces_GetIpFilterRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "ipFilterRuleName",
          "in" : "path",
          "description" : "The IP Filter Rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace IpFilterRule returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpFilterRule"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Namespaces" ],
        "description" : "Creates or updates an IpFilterRule for a Namespace.",
        "operationId" : "Namespaces_CreateOrUpdateIpFilterRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "ipFilterRuleName",
          "in" : "path",
          "description" : "The IP Filter Rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Namespace IpFilterRule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpFilterRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Namespace IpFilterRule created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpFilterRule"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Namespaces" ],
        "description" : "Deletes an IpFilterRule for a Namespace.",
        "operationId" : "Namespaces_DeleteIpFilterRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "ipFilterRuleName",
          "in" : "path",
          "description" : "The IP Filter Rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace IpFilterRule successfully deleted."
          },
          "204" : {
            "description" : "No content."
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/networkrulesets/default" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets NetworkRuleSet for a Namespace.",
        "operationId" : "Namespaces_GetNetworkRuleSet",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace NetworkRuleSet successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkRuleSet"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets NetworkRuleSet for a Namespace.",
        "operationId" : "Namespaces_CreateOrUpdateNetworkRuleSet",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Namespace IpFilterRule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkRuleSet"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Namespace NetworkRuleSet successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkRuleSet"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/virtualnetworkrules" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets a list of VirtualNetwork rules for a Namespace.",
        "operationId" : "Namespaces_ListVirtualNetworkRules",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace VirtualNetworkRule successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRuleListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/virtualnetworkrules/{virtualNetworkRuleName}" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets an VirtualNetworkRule for a Namespace by rule name.",
        "operationId" : "Namespaces_GetVirtualNetworkRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "virtualNetworkRuleName",
          "in" : "path",
          "description" : "The Virtual Network Rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace VirtualNetworkRule returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Namespaces" ],
        "description" : "Creates or updates an VirtualNetworkRule for a Namespace.",
        "operationId" : "Namespaces_CreateOrUpdateVirtualNetworkRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "virtualNetworkRuleName",
          "in" : "path",
          "description" : "The Virtual Network Rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Namespace VirtualNetworkRule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VirtualNetworkRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Namespace VirtualNetworkRule created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            }
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Namespaces" ],
        "description" : "Deletes an VirtualNetworkRule for a Namespace.",
        "operationId" : "Namespaces_DeleteVirtualNetworkRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "virtualNetworkRuleName",
          "in" : "path",
          "description" : "The Virtual Network Rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace VirtualNetworkRule successfully deleted."
          },
          "204" : {
            "description" : "No content."
          },
          "default" : {
            "description" : "ServiceBus error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Encryption" : {
        "type" : "object",
        "properties" : {
          "keySource" : {
            "type" : "string",
            "description" : "Enumerates the possible value of keySource for Encryption",
            "default" : "Microsoft.KeyVault",
            "enum" : [ "Microsoft.KeyVault" ]
          },
          "keyVaultProperties" : {
            "$ref" : "#/components/schemas/KeyVaultProperties"
          }
        },
        "description" : "Properties to configure Encryption"
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code."
          },
          "message" : {
            "type" : "string",
            "description" : "Error message indicating why the operation failed."
          }
        },
        "description" : "Error response indicates ServiceBus service is not able to process the incoming request. The reason is provided in the error message."
      },
      "Identity" : {
        "type" : "object",
        "properties" : {
          "principalId" : {
            "type" : "string",
            "description" : "ObjectId from the KeyVault"
          },
          "tenantId" : {
            "type" : "string",
            "description" : "TenantId from the KeyVault"
          },
          "type" : {
            "type" : "string",
            "description" : "Enumerates the possible value Identity type, which currently supports only 'SystemAssigned'",
            "default" : "SystemAssigned",
            "enum" : [ "SystemAssigned" ]
          }
        },
        "description" : "Properties to configure Identity for Bring your Own Keys"
      },
      "IpFilterRule" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "action" : {
                "type" : "string",
                "description" : "The IP Filter Action",
                "enum" : [ "Accept", "Reject" ]
              },
              "filterName" : {
                "type" : "string",
                "description" : "IP Filter name"
              },
              "ipMask" : {
                "type" : "string",
                "description" : "IP Mask"
              }
            },
            "description" : "Properties supplied to create or update IpFilterRules"
          }
        },
        "description" : "Single item in a List or Get IpFilterRules operation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "IpFilterRuleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of IpFilter Rules"
          },
          "value" : {
            "type" : "array",
            "description" : "Result of the List IpFilter Rules operation.",
            "items" : {
              "$ref" : "#/components/schemas/IpFilterRule"
            }
          }
        },
        "description" : "The response from the List namespace operation."
      },
      "KeyVaultProperties" : {
        "type" : "object",
        "properties" : {
          "keyName" : {
            "type" : "string",
            "description" : "Name of the Key from KeyVault"
          },
          "keyVaultUri" : {
            "type" : "string",
            "description" : "Uri of KeyVault"
          }
        },
        "description" : "Properties to configure keyVault Properties"
      },
      "NWRuleSetIpRules" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "description" : "The IP Filter Action",
            "enum" : [ "Allow" ]
          },
          "ipMask" : {
            "type" : "string",
            "description" : "IP Mask"
          }
        },
        "description" : "The response from the List namespace operation."
      },
      "NWRuleSetVirtualNetworkRules" : {
        "type" : "object",
        "properties" : {
          "ignoreMissingVnetServiceEndpoint" : {
            "type" : "boolean",
            "description" : "Value that indicates whether to ignore missing Vnet Service Endpoint"
          },
          "subnet" : {
            "$ref" : "#/components/schemas/Subnet"
          }
        },
        "description" : "The response from the List namespace operation."
      },
      "NetworkRuleSet" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "defaultAction" : {
                "type" : "string",
                "description" : "Default Action for Network Rule Set",
                "enum" : [ "Allow", "Deny" ]
              },
              "ipRules" : {
                "type" : "array",
                "description" : "List of IpRules",
                "items" : {
                  "$ref" : "#/components/schemas/NWRuleSetIpRules"
                }
              },
              "virtualNetworkRules" : {
                "type" : "array",
                "description" : "List VirtualNetwork Rules",
                "items" : {
                  "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                }
              }
            },
            "description" : "NetworkRuleSet properties"
          }
        },
        "description" : "Description of topic resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "operation" : {
                "type" : "string",
                "description" : "Operation type: Read, write, delete, etc.",
                "readOnly" : true
              },
              "provider" : {
                "type" : "string",
                "description" : "Service provider: Microsoft.ServiceBus",
                "readOnly" : true
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource on which the operation is performed: Invoice, etc.",
                "readOnly" : true
              }
            },
            "description" : "The object that represents the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}",
            "readOnly" : true
          }
        },
        "description" : "A ServiceBus REST API operation"
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of ServiceBus operations supported by the Microsoft.ServiceBus resource provider.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Result of the request to list ServiceBus operations. It contains a list of operations and a URL link to get the next set of results."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource Id",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "readOnly" : true
          }
        },
        "description" : "The Resource definition for other than namespace."
      },
      "ResourceNamespacePatch" : {
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Resource location"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags"
          }
        },
        "description" : "The Resource definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SBNamespace" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SBNamespaceProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/SBSku"
          }
        },
        "description" : "Description of a namespace resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "SBNamespaceListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
          },
          "value" : {
            "type" : "array",
            "description" : "Result of the List Namespace operation.",
            "items" : {
              "$ref" : "#/components/schemas/SBNamespace"
            }
          }
        },
        "description" : "The response of the List Namespace operation."
      },
      "SBNamespaceProperties" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "description" : "The time the namespace was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "encryption" : {
            "$ref" : "#/components/schemas/Encryption"
          },
          "identity" : {
            "$ref" : "#/components/schemas/Identity"
          },
          "metricId" : {
            "type" : "string",
            "description" : "Identifier for Azure Insights metrics",
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Provisioning state of the namespace.",
            "readOnly" : true
          },
          "serviceBusEndpoint" : {
            "type" : "string",
            "description" : "Endpoint you can use to perform Service Bus operations.",
            "readOnly" : true
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "The time the namespace was updated.",
            "format" : "date-time",
            "readOnly" : true
          },
          "zoneRedundant" : {
            "type" : "boolean",
            "description" : "Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones."
          }
        },
        "description" : "Properties of the namespace."
      },
      "SBNamespaceUpdateParameters" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SBNamespaceProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/SBSku"
          }
        },
        "description" : "Description of a namespace resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceNamespacePatch"
        } ]
      },
      "SBSku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "capacity" : {
            "type" : "integer",
            "description" : "The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of this SKU.",
            "enum" : [ "Basic", "Standard", "Premium" ]
          },
          "tier" : {
            "type" : "string",
            "description" : "The billing tier of this particular SKU.",
            "enum" : [ "Basic", "Standard", "Premium" ]
          }
        },
        "description" : "SKU of the namespace."
      },
      "Subnet" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID of Virtual Network Subnet"
          }
        },
        "description" : "Properties supplied for Subnet"
      },
      "TrackedResource" : {
        "required" : [ "location" ],
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The Geo-location where the resource lives"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags"
          }
        },
        "description" : "The Resource definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VirtualNetworkRule" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "virtualNetworkSubnetId" : {
                "type" : "string",
                "description" : "Resource ID of Virtual Network Subnet"
              }
            },
            "description" : "Properties supplied to create or update VirtualNetworkRules"
          }
        },
        "description" : "Single item in a List or Get VirtualNetworkRules operation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VirtualNetworkRuleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of VirtualNetwork Rules"
          },
          "value" : {
            "type" : "array",
            "description" : "Result of the List VirtualNetwork Rules operation.",
            "items" : {
              "$ref" : "#/components/schemas/VirtualNetworkRule"
            }
          }
        },
        "description" : "The response from the List namespace operation."
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client API version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ipFilterRuleNameParameter" : {
        "name" : "ipFilterRuleName",
        "in" : "path",
        "description" : "The IP Filter Rule name.",
        "required" : true,
        "schema" : {
          "minLength" : 1,
          "type" : "string"
        }
      },
      "namespaceNameParameter" : {
        "name" : "namespaceName",
        "in" : "path",
        "description" : "The namespace name",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 6,
          "type" : "string"
        }
      },
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Name of the Resource group within the Azure subscription.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "type" : "string"
        }
      },
      "skipParameter" : {
        "name" : "$skip",
        "in" : "query",
        "description" : "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
        "schema" : {
          "maximum" : 1000,
          "minimum" : 0,
          "type" : "integer"
        }
      },
      "skuNameParameter" : {
        "name" : "sku",
        "in" : "path",
        "description" : "The sku type.",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 1,
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "topParameter" : {
        "name" : "$top",
        "in" : "query",
        "description" : "May be used to limit the number of results to the most recent N usageDetails.",
        "schema" : {
          "maximum" : 1000,
          "minimum" : 1,
          "type" : "integer"
        }
      },
      "virtualNetworkRuleNameParameter" : {
        "name" : "virtualNetworkRuleName",
        "in" : "path",
        "description" : "The Virtual Network Rule name.",
        "required" : true,
        "schema" : {
          "minLength" : 1,
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}