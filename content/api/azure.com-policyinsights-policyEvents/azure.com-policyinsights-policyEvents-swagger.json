{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "PolicyEventsClient",
    "version" : "2018-04-04"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults" : {
      "post" : {
        "description" : "Queries policy events for the resources under the management group.",
        "operationId" : "PolicyEvents_ListQueryResultsForManagementGroup",
        "parameters" : [ {
          "name" : "policyEventsResource",
          "in" : "path",
          "description" : "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "managementGroupsNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Management" ]
          }
        }, {
          "name" : "managementGroupName",
          "in" : "path",
          "description" : "Management group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version to use with the client requests.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$from",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$to",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "OData apply expression for aggregations.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Query results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyEventsQueryResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryFailure"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults" : {
      "post" : {
        "description" : "Queries policy events for the resources under the subscription.",
        "operationId" : "PolicyEvents_ListQueryResultsForSubscription",
        "parameters" : [ {
          "name" : "policyEventsResource",
          "in" : "path",
          "description" : "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version to use with the client requests.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$from",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$to",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "OData apply expression for aggregations.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Query results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyEventsQueryResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryFailure"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults" : {
      "post" : {
        "description" : "Queries policy events for the subscription level policy assignment.",
        "operationId" : "PolicyEvents_ListQueryResultsForSubscriptionLevelPolicyAssignment",
        "parameters" : [ {
          "name" : "policyEventsResource",
          "in" : "path",
          "description" : "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Authorization" ]
          }
        }, {
          "name" : "policyAssignmentName",
          "in" : "path",
          "description" : "Policy assignment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version to use with the client requests.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$from",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$to",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "OData apply expression for aggregations.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Query results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyEventsQueryResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryFailure"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults" : {
      "post" : {
        "description" : "Queries policy events for the subscription level policy definition.",
        "operationId" : "PolicyEvents_ListQueryResultsForPolicyDefinition",
        "parameters" : [ {
          "name" : "policyEventsResource",
          "in" : "path",
          "description" : "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Authorization" ]
          }
        }, {
          "name" : "policyDefinitionName",
          "in" : "path",
          "description" : "Policy definition name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version to use with the client requests.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$from",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$to",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "OData apply expression for aggregations.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Query results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyEventsQueryResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryFailure"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policySetDefinitions/{policySetDefinitionName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults" : {
      "post" : {
        "description" : "Queries policy events for the subscription level policy set definition.",
        "operationId" : "PolicyEvents_ListQueryResultsForPolicySetDefinition",
        "parameters" : [ {
          "name" : "policyEventsResource",
          "in" : "path",
          "description" : "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Authorization" ]
          }
        }, {
          "name" : "policySetDefinitionName",
          "in" : "path",
          "description" : "Policy set definition name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version to use with the client requests.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$from",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$to",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "OData apply expression for aggregations.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Query results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyEventsQueryResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryFailure"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults" : {
      "post" : {
        "description" : "Queries policy events for the resources under the resource group.",
        "operationId" : "PolicyEvents_ListQueryResultsForResourceGroup",
        "parameters" : [ {
          "name" : "policyEventsResource",
          "in" : "path",
          "description" : "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version to use with the client requests.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$from",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$to",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "OData apply expression for aggregations.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Query results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyEventsQueryResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryFailure"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults" : {
      "post" : {
        "description" : "Queries policy events for the resource group level policy assignment.",
        "operationId" : "PolicyEvents_ListQueryResultsForResourceGroupLevelPolicyAssignment",
        "parameters" : [ {
          "name" : "policyEventsResource",
          "in" : "path",
          "description" : "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Authorization" ]
          }
        }, {
          "name" : "policyAssignmentName",
          "in" : "path",
          "description" : "Policy assignment name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version to use with the client requests.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$from",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$to",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "OData apply expression for aggregations.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Query results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyEventsQueryResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryFailure"
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults" : {
      "post" : {
        "description" : "Queries policy events for the resource.",
        "operationId" : "PolicyEvents_ListQueryResultsForResource",
        "parameters" : [ {
          "name" : "policyEventsResource",
          "in" : "path",
          "description" : "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version to use with the client requests.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$from",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$to",
          "in" : "query",
          "description" : "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "OData apply expression for aggregations.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Query results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyEventsQueryResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryFailure"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.PolicyInsights/policyEvents/$metadata" : {
      "get" : {
        "description" : "Gets OData metadata XML document.",
        "operationId" : "PolicyEvents_GetMetadata",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "A valid scope, i.e. management group, subscription, resource group, or resource ID. Scope used has no effect on metadata returned.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version to use with the client requests.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OData metadata XML document.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetadataDocument"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryFailure"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "MetadataDocument" : {
        "type" : "string",
        "description" : "Metadata XML document."
      },
      "PolicyEvent" : {
        "type" : "object",
        "properties" : {
          "@odata.context" : {
            "type" : "string",
            "description" : "OData context string; used by OData clients to resolve type information based on metadata."
          },
          "@odata.id" : {
            "type" : "string",
            "description" : "OData entity ID; always set to null since policy event records do not have an entity ID."
          },
          "effectiveParameters" : {
            "type" : "string",
            "description" : "Effective parameters for the policy assignment."
          },
          "isCompliant" : {
            "type" : "boolean",
            "description" : "Flag which states whether the resource is compliant against the policy assignment it was evaluated against."
          },
          "managementGroupIds" : {
            "type" : "string",
            "description" : "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under."
          },
          "policyAssignmentId" : {
            "type" : "string",
            "description" : "Policy assignment ID."
          },
          "policyAssignmentName" : {
            "type" : "string",
            "description" : "Policy assignment name."
          },
          "policyAssignmentOwner" : {
            "type" : "string",
            "description" : "Policy assignment owner."
          },
          "policyAssignmentParameters" : {
            "type" : "string",
            "description" : "Policy assignment parameters."
          },
          "policyAssignmentScope" : {
            "type" : "string",
            "description" : "Policy assignment scope."
          },
          "policyDefinitionAction" : {
            "type" : "string",
            "description" : "Policy definition action, i.e. effect."
          },
          "policyDefinitionCategory" : {
            "type" : "string",
            "description" : "Policy definition category."
          },
          "policyDefinitionId" : {
            "type" : "string",
            "description" : "Policy definition ID."
          },
          "policyDefinitionName" : {
            "type" : "string",
            "description" : "Policy definition name."
          },
          "policyDefinitionReferenceId" : {
            "type" : "string",
            "description" : "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set."
          },
          "policySetDefinitionCategory" : {
            "type" : "string",
            "description" : "Policy set definition category, if the policy assignment is for a policy set."
          },
          "policySetDefinitionId" : {
            "type" : "string",
            "description" : "Policy set definition ID, if the policy assignment is for a policy set."
          },
          "policySetDefinitionName" : {
            "type" : "string",
            "description" : "Policy set definition name, if the policy assignment is for a policy set."
          },
          "policySetDefinitionOwner" : {
            "type" : "string",
            "description" : "Policy set definition owner, if the policy assignment is for a policy set."
          },
          "policySetDefinitionParameters" : {
            "type" : "string",
            "description" : "Policy set definition parameters, if the policy assignment is for a policy set."
          },
          "principalOid" : {
            "type" : "string",
            "description" : "Principal object ID for the user who initiated the resource operation that triggered the policy event."
          },
          "resourceGroup" : {
            "type" : "string",
            "description" : "Resource group name."
          },
          "resourceId" : {
            "type" : "string",
            "description" : "Resource ID."
          },
          "resourceLocation" : {
            "type" : "string",
            "description" : "Resource location."
          },
          "resourceTags" : {
            "type" : "string",
            "description" : "List of resource tags."
          },
          "resourceType" : {
            "type" : "string",
            "description" : "Resource type."
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "Subscription ID."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "Tenant ID for the policy event record."
          },
          "timestamp" : {
            "type" : "string",
            "description" : "Timestamp for the policy event record.",
            "format" : "date-time"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
        },
        "description" : "Policy event record."
      },
      "PolicyEventsQueryResults" : {
        "type" : "object",
        "properties" : {
          "@odata.context" : {
            "type" : "string",
            "description" : "OData context string; used by OData clients to resolve type information based on metadata."
          },
          "@odata.count" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "OData entity count; represents the number of policy event records returned.",
            "format" : "int32"
          },
          "value" : {
            "type" : "array",
            "description" : "Query results.",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEvent"
            }
          }
        },
        "description" : "Query results."
      },
      "QueryFailure" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Service specific error code which serves as the substatus for the HTTP error code.",
                "readOnly" : true
              },
              "message" : {
                "type" : "string",
                "description" : "Description of the error.",
                "readOnly" : true
              }
            },
            "description" : "Error definition."
          }
        },
        "description" : "Error response."
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "API version to use with the client requests.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "applyParameter" : {
        "name" : "$apply",
        "in" : "query",
        "description" : "OData apply expression for aggregations.",
        "schema" : {
          "type" : "string"
        }
      },
      "authorizationNamespaceParameter" : {
        "name" : "authorizationNamespace",
        "in" : "path",
        "description" : "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "Microsoft.Authorization" ]
        }
      },
      "filterParameter" : {
        "name" : "$filter",
        "in" : "query",
        "description" : "OData filter expression.",
        "schema" : {
          "type" : "string"
        }
      },
      "fromParameter" : {
        "name" : "$from",
        "in" : "query",
        "description" : "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "managementGroupNameParameter" : {
        "name" : "managementGroupName",
        "in" : "path",
        "description" : "Management group name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "managementGroupsNamespaceParameter" : {
        "name" : "managementGroupsNamespace",
        "in" : "path",
        "description" : "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "Microsoft.Management" ]
        }
      },
      "orderByParameter" : {
        "name" : "$orderby",
        "in" : "query",
        "description" : "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
        "schema" : {
          "type" : "string"
        }
      },
      "policyAssignmentNameParameter" : {
        "name" : "policyAssignmentName",
        "in" : "path",
        "description" : "Policy assignment name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "policyDefinitionNameParameter" : {
        "name" : "policyDefinitionName",
        "in" : "path",
        "description" : "Policy definition name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "policyEventsResourceParameter" : {
        "name" : "policyEventsResource",
        "in" : "path",
        "description" : "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "default" ]
        }
      },
      "policySetDefinitionNameParameter" : {
        "name" : "policySetDefinitionName",
        "in" : "path",
        "description" : "Policy set definition name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Resource group name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceIdParameter" : {
        "name" : "resourceId",
        "in" : "path",
        "description" : "Resource ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "scopeParameter" : {
        "name" : "scope",
        "in" : "path",
        "description" : "A valid scope, i.e. management group, subscription, resource group, or resource ID. Scope used has no effect on metadata returned.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "selectParameter" : {
        "name" : "$select",
        "in" : "query",
        "description" : "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Microsoft Azure subscription ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "toParameter" : {
        "name" : "$to",
        "in" : "query",
        "description" : "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "topParameter" : {
        "name" : "$top",
        "in" : "query",
        "description" : "Maximum number of records to return.",
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}