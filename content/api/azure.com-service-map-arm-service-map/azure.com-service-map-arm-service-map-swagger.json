{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Service Map",
    "description" : "Service Map API Reference",
    "version" : "2015-11-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/clientGroups/{clientGroupName}" : {
      "get" : {
        "tags" : [ "Client Groups" ],
        "description" : "Retrieves the specified client group",
        "operationId" : "ClientGroups_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clientGroupName",
          "in" : "path",
          "description" : "Client Group resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/clientGroups/{clientGroupName}/members" : {
      "get" : {
        "tags" : [ "Client Groups" ],
        "description" : "Returns the members of the client group during the specified time interval.",
        "operationId" : "ClientGroups_ListMembers",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clientGroupName",
          "in" : "path",
          "description" : "Client Group resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Page size to use. When not specified, the default page size is 100 records.",
          "schema" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientGroupMembersCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/clientGroups/{clientGroupName}/membersCount" : {
      "get" : {
        "tags" : [ "Client Groups" ],
        "description" : "Returns the approximate number of members in the client group.",
        "operationId" : "ClientGroups_GetMembersCount",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clientGroupName",
          "in" : "path",
          "description" : "Client Group resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientGroupMembersCount"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/generateMap" : {
      "post" : {
        "tags" : [ "Maps" ],
        "description" : "Generates the specified map.",
        "operationId" : "Maps_Generate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request options.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MapRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MapResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups" : {
      "get" : {
        "tags" : [ "MachineGroups" ],
        "description" : "Returns all machine groups during the specified time interval.",
        "operationId" : "MachineGroups_ListByWorkspace",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MachineGroupCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "MachineGroups" ],
        "description" : "Creates a new machine group.",
        "operationId" : "MachineGroups_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Machine Group resource to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MachineGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MachineGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups/{machineGroupName}" : {
      "get" : {
        "tags" : [ "MachineGroups" ],
        "description" : "Returns the specified machine group as it existed during the specified time interval.",
        "operationId" : "MachineGroups_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineGroupName",
          "in" : "path",
          "description" : "Machine Group resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MachineGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "MachineGroups" ],
        "description" : "Updates a machine group.",
        "operationId" : "MachineGroups_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineGroupName",
          "in" : "path",
          "description" : "Machine Group resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Machine Group resource to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MachineGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MachineGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "MachineGroups" ],
        "description" : "Deletes the specified Machine Group.",
        "operationId" : "MachineGroups_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineGroupName",
          "in" : "path",
          "description" : "Machine Group resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The operation completed successfully."
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines" : {
      "get" : {
        "tags" : [ "Machines" ],
        "description" : "Returns a collection of machines matching the specified conditions.  The returned collection represents either machines that are active/live during the specified interval  of time (`live=true` and `startTime`/`endTime` are specified) or that are known to have existed at or  some time prior to the specified point in time (`live=false` and `timestamp` is specified).",
        "operationId" : "Machines_ListByWorkspace",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "live",
          "in" : "query",
          "description" : "Specifies whether to return live resources (true) or inventory resources (false). Defaults to **true**. When retrieving live resources, the start time (`startTime`) and end time (`endTime`) of the desired interval should be included. When retrieving inventory resources, an optional timestamp (`timestamp`) parameter can be specified to return the version of each resource closest (not-after) that timestamp.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "timestamp",
          "in" : "query",
          "description" : "UTC date and time specifying a time instance relative to which to evaluate each machine resource. Only applies when `live=false`. When not specified, the service uses DateTime.UtcNow.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Page size to use. When not specified, the default page size is 100 records.",
          "schema" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}" : {
      "get" : {
        "tags" : [ "Machines" ],
        "description" : "Returns the specified machine.",
        "operationId" : "Machines_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "timestamp",
          "in" : "query",
          "description" : "UTC date and time specifying a time instance relative to which to evaluate the machine resource. When not specified, the service uses DateTime.UtcNow.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Machine"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/connections" : {
      "get" : {
        "tags" : [ "Machines" ],
        "description" : "Returns a collection of connections terminating or originating at the specified machine",
        "operationId" : "Machines_ListConnections",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/liveness" : {
      "get" : {
        "tags" : [ "Machines" ],
        "description" : "Obtains the liveness status of the machine during the specified time interval.",
        "operationId" : "Machines_GetLiveness",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Liveness"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/machineGroups" : {
      "get" : {
        "tags" : [ "Machines", "MachineGroups" ],
        "description" : "Returns a collection of machine groups this machine belongs to during the specified time interval.",
        "operationId" : "Machines_ListMachineGroupMembership",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MachineGroupCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports" : {
      "get" : {
        "tags" : [ "Machines", "Ports" ],
        "description" : "Returns a collection of live ports on the specified machine during the specified time interval.",
        "operationId" : "Machines_ListPorts",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}" : {
      "get" : {
        "tags" : [ "Ports" ],
        "description" : "Returns the specified port. The port must be live during the specified time interval. If the port is not live during the interval, status 404 (Not Found) is returned.",
        "operationId" : "Ports_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "portName",
          "in" : "path",
          "description" : "Port resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Port"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}/acceptingProcesses" : {
      "get" : {
        "tags" : [ "Ports", "Processes" ],
        "description" : "Returns a collection of processes accepting on the specified port",
        "operationId" : "Ports_ListAcceptingProcesses",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "portName",
          "in" : "path",
          "description" : "Port resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProcessCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}/connections" : {
      "get" : {
        "tags" : [ "Ports" ],
        "description" : "Returns a collection of connections established via the specified port.",
        "operationId" : "Ports_ListConnections",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "portName",
          "in" : "path",
          "description" : "Port resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}/liveness" : {
      "get" : {
        "tags" : [ "Ports" ],
        "description" : "Obtains the liveness status of the port during the specified time interval.",
        "operationId" : "Ports_GetLiveness",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "portName",
          "in" : "path",
          "description" : "Port resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Liveness"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes" : {
      "get" : {
        "tags" : [ "Processes", "Machines" ],
        "description" : "Returns a collection of processes on the specified machine matching the specified conditions. The returned collection represents either processes that are active/live during the specified interval  of time (`live=true` and `startTime`/`endTime` are specified) or that are known to have existed at or  some time prior to the specified point in time (`live=false` and `timestamp` is specified).        ",
        "operationId" : "Machines_ListProcesses",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "live",
          "in" : "query",
          "description" : "Specifies whether to return live resources (true) or inventory resources (false). Defaults to **true**. When retrieving live resources, the start time (`startTime`) and end time (`endTime`) of the desired interval should be included. When retrieving inventory resources, an optional timestamp (`timestamp`) parameter can be specified to return the version of each resource closest (not-after) that timestamp.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "timestamp",
          "in" : "query",
          "description" : "UTC date and time specifying a time instance relative to which to evaluate all process resource. Only applies when `live=false`. When not specified, the service uses DateTime.UtcNow.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProcessCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}" : {
      "get" : {
        "tags" : [ "Processes" ],
        "description" : "Returns the specified process.",
        "operationId" : "Processes_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "processName",
          "in" : "path",
          "description" : "Process resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "timestamp",
          "in" : "query",
          "description" : "UTC date and time specifying a time instance relative to which to evaluate a resource. When not specified, the service uses DateTime.UtcNow.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Process"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}/acceptingPorts" : {
      "get" : {
        "tags" : [ "Processes" ],
        "description" : "Returns a collection of ports on which this process is accepting",
        "operationId" : "Processes_ListAcceptingPorts",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "processName",
          "in" : "path",
          "description" : "Process resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}/connections" : {
      "get" : {
        "tags" : [ "Processes" ],
        "description" : "Returns a collection of connections terminating or originating at the specified process",
        "operationId" : "Processes_ListConnections",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "processName",
          "in" : "path",
          "description" : "Process resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}/liveness" : {
      "get" : {
        "tags" : [ "Processes" ],
        "description" : "Obtains the liveness status of the process during the specified time interval.",
        "operationId" : "Processes_GetLiveness",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Machine resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "processName",
          "in" : "path",
          "description" : "Process resource name.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 3,
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Liveness"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/summaries/machines" : {
      "get" : {
        "tags" : [ "Summaries" ],
        "description" : "Returns summary information about the machines in the workspace.",
        "operationId" : "Summaries_GetMachines",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name within the specified subscriptionId.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9_-]+",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "OMS workspace containing the resources of interest.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MachinesSummary"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Acceptor" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AcceptorProperties"
          }
        },
        "description" : "A process accepting on a port.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Relationship"
        } ]
      },
      "AcceptorProperties" : {
        "required" : [ "destination", "source" ],
        "type" : "object",
        "properties" : {
          "destination" : {
            "$ref" : "#/components/schemas/ProcessReference"
          },
          "endTime" : {
            "type" : "string",
            "description" : "Relationship end time.",
            "format" : "date-time"
          },
          "source" : {
            "$ref" : "#/components/schemas/PortReference"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Relationship start time.",
            "format" : "date-time"
          }
        },
        "description" : "Properties for an acceptor relationship."
      },
      "Accuracy" : {
        "type" : "string",
        "description" : "Specifies the accuracy of a computation.",
        "enum" : [ "actual", "estimated" ]
      },
      "AgentConfiguration" : {
        "required" : [ "agentId" ],
        "type" : "object",
        "properties" : {
          "agentId" : {
            "type" : "string",
            "description" : "Health Service Agent unique identifier."
          },
          "clockGranularity" : {
            "type" : "integer",
            "description" : "Machine clock granularity in milliseconds.",
            "format" : "int32"
          },
          "dependencyAgentId" : {
            "type" : "string",
            "description" : "Dependency Agent unique identifier."
          },
          "dependencyAgentRevision" : {
            "type" : "string",
            "description" : "Dependency Agent revision number."
          },
          "dependencyAgentVersion" : {
            "type" : "string",
            "description" : "Dependency Agent version number."
          },
          "rebootStatus" : {
            "$ref" : "#/components/schemas/MachineRebootStatus"
          }
        },
        "description" : "Describes the configuration of the Dependency Agent installed on a machine."
      },
      "AzureCloudServiceConfiguration" : {
        "type" : "object",
        "properties" : {
          "deployment" : {
            "type" : "string",
            "description" : "Cloud Service deployment identifier"
          },
          "instanceId" : {
            "type" : "string",
            "description" : "Cloud Service instance identifier"
          },
          "name" : {
            "type" : "string",
            "description" : "Cloud Service name"
          },
          "roleName" : {
            "type" : "string",
            "description" : "Cloud Service role name"
          },
          "roleType" : {
            "type" : "string",
            "description" : "Used to specify type of an Azure Cloud Service role",
            "enum" : [ "unknown", "worker", "web" ]
          }
        },
        "description" : "Describes an Azure Cloud Service"
      },
      "AzureHostingConfiguration" : {
        "properties" : {
          "cloudService" : {
            "$ref" : "#/components/schemas/AzureCloudServiceConfiguration"
          },
          "faultDomain" : {
            "type" : "string",
            "description" : "Fault domain of the VM."
          },
          "image" : {
            "$ref" : "#/components/schemas/ImageConfiguration"
          },
          "location" : {
            "type" : "string",
            "description" : "Geographical location of the VM."
          },
          "name" : {
            "type" : "string",
            "description" : "Machine name according to the hosting provider."
          },
          "resourceGroup" : {
            "type" : "string",
            "description" : "Resource group name within the specified subscription."
          },
          "resourceId" : {
            "type" : "string",
            "description" : "Unique identifier of the resource."
          },
          "serviceFabricCluster" : {
            "$ref" : "#/components/schemas/AzureServiceFabricClusterConfiguration"
          },
          "size" : {
            "type" : "string",
            "description" : "Size of the VM."
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "Subscription ID."
          },
          "updateDomain" : {
            "type" : "string",
            "description" : "Update domain of the VM."
          },
          "vmId" : {
            "type" : "string",
            "description" : "Virtual Machine ID (unique identifier)."
          },
          "vmScaleSet" : {
            "$ref" : "#/components/schemas/AzureVmScaleSetConfiguration"
          }
        },
        "description" : "Provides information about how a machine is hosted in Azure",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HostingConfiguration"
        } ]
      },
      "AzureProcessHostingConfiguration" : {
        "properties" : {
          "cloudService" : {
            "$ref" : "#/components/schemas/AzureCloudServiceConfiguration"
          }
        },
        "description" : "Describes the hosting configuration of a process when hosted on azure",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProcessHostingConfiguration"
        } ]
      },
      "AzureServiceFabricClusterConfiguration" : {
        "type" : "object",
        "properties" : {
          "clusterId" : {
            "type" : "string",
            "description" : "Service Fabric cluster identifier."
          },
          "name" : {
            "type" : "string",
            "description" : "Service Fabric cluster name."
          }
        },
        "description" : "Describes an Azure Service Fabric Cluster"
      },
      "AzureVmScaleSetConfiguration" : {
        "type" : "object",
        "properties" : {
          "deployment" : {
            "type" : "string",
            "description" : "Virtual Machine Scale Set deployment identifier"
          },
          "instanceId" : {
            "type" : "string",
            "description" : "Virtual Machine Scale Set instance identifier"
          },
          "name" : {
            "type" : "string",
            "description" : "Virtual Machine Scale Set name"
          },
          "resourceId" : {
            "type" : "string",
            "description" : "Unique identifier of the resource."
          }
        },
        "description" : "Describes an Azure Virtual Machine Scale Set"
      },
      "Bitness" : {
        "type" : "string",
        "description" : "Specifies the bitness of a machine or process.",
        "enum" : [ "32bit", "64bit" ]
      },
      "ClientGroup" : {
        "properties" : {
          "properties" : {
            "required" : [ "clientsOf" ],
            "type" : "object",
            "properties" : {
              "clientsOf" : {
                "$ref" : "#/components/schemas/ResourceReference"
              }
            },
            "description" : "Resource properties."
          }
        },
        "description" : "Represents a collection of clients of a resource. A client group can represent the clients of a port, process, or a machine.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CoreResource"
        } ]
      },
      "ClientGroupMember" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "ipAddress" : {
                "type" : "string",
                "description" : "IP address."
              },
              "port" : {
                "$ref" : "#/components/schemas/PortReference"
              },
              "processes" : {
                "type" : "array",
                "description" : "Processes accepting on the above port that received connections from this client.",
                "items" : {
                  "$ref" : "#/components/schemas/ProcessReference"
                }
              }
            },
            "description" : "Resource properties."
          }
        },
        "description" : "Represents a member of a client group",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ClientGroupMembersCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to the next set of resources."
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of ClientGroupMember resources.",
            "items" : {
              "$ref" : "#/components/schemas/ClientGroupMember"
            }
          }
        },
        "description" : "Collection of ClientGroupMember resources."
      },
      "ClientGroupMembersCount" : {
        "required" : [ "accuracy", "count", "endTime", "groupId", "startTime" ],
        "type" : "object",
        "properties" : {
          "accuracy" : {
            "$ref" : "#/components/schemas/Accuracy"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of members in the client group. Use this value together with the value of ```accuracy```. If accuracy is `exact` then the value represents the actual number of members in the cloud. When accuracy is `estimated`, the actual number of members is larger than the value of ```count```.",
            "format" : "int32"
          },
          "endTime" : {
            "type" : "string",
            "description" : "Membership interval start time.",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string",
            "description" : "Client Group URI."
          },
          "startTime" : {
            "type" : "string",
            "description" : "Membership interval start time.",
            "format" : "date-time"
          }
        },
        "description" : "Specifies the number of members in a client group."
      },
      "ClientGroupReference" : {
        "description" : "Reference to a client group.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceReference"
        } ]
      },
      "Connection" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ConnectionProperties"
          }
        },
        "description" : "A network connection.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Relationship"
        } ]
      },
      "ConnectionCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to the next set of resources."
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of Connection resources.",
            "items" : {
              "$ref" : "#/components/schemas/Connection"
            }
          }
        },
        "description" : "Collection of Connection resources."
      },
      "ConnectionFailureState" : {
        "type" : "string",
        "description" : "Connection failure state:\n * ```ok``` indicates no failures\n * ```failed``` indicates only failures\n * ```mixed``` indicates both failures and successes",
        "enum" : [ "ok", "failed", "mixed" ]
      },
      "ConnectionProperties" : {
        "properties" : {
          "failureState" : {
            "$ref" : "#/components/schemas/ConnectionFailureState"
          },
          "serverPort" : {
            "$ref" : "#/components/schemas/PortReference"
          }
        },
        "description" : "Properties for a connection resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RelationshipProperties"
        } ]
      },
      "CoreResource" : {
        "required" : [ "kind" ],
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Resource ETAG."
          },
          "kind" : {
            "type" : "string",
            "description" : "Additional resource type qualifier.",
            "enum" : [ "machine", "process", "port", "clientGroup", "machineGroup" ]
          }
        },
        "description" : "Marker resource for the core Service Map resources",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "Error" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code identifying the specific error."
          },
          "message" : {
            "type" : "string",
            "description" : "Error message in the caller's locale."
          }
        },
        "description" : "Error details."
      },
      "ErrorResponse" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/Error"
          }
        },
        "description" : "An error response from the API."
      },
      "HostingConfiguration" : {
        "required" : [ "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "Additional hosting configuration type qualifier.",
            "enum" : [ "provider:azure" ]
          },
          "provider" : {
            "type" : "string",
            "description" : "The hosting provider of the VM.",
            "enum" : [ "azure" ]
          }
        },
        "description" : "Describes the hosting configuration of a machine.",
        "discriminator" : {
          "propertyName" : "kind"
        }
      },
      "HypervisorConfiguration" : {
        "type" : "object",
        "properties" : {
          "hypervisorType" : {
            "$ref" : "#/components/schemas/HypervisorType"
          },
          "nativeHostMachineId" : {
            "type" : "string",
            "description" : "The unique identifier of the hypervisor machine as reported by the underlying virtualization system."
          }
        },
        "description" : "Describes the hypervisor configuration of a machine."
      },
      "HypervisorType" : {
        "type" : "string",
        "description" : "Specifies the hypervisor type of a machine.",
        "enum" : [ "unknown", "hyperv" ]
      },
      "ImageConfiguration" : {
        "type" : "object",
        "properties" : {
          "offering" : {
            "type" : "string",
            "description" : "Offering of the VM image."
          },
          "publisher" : {
            "type" : "string",
            "description" : "Publisher of the VM image."
          },
          "sku" : {
            "type" : "string",
            "description" : "SKU of the VM image."
          },
          "version" : {
            "type" : "string",
            "description" : "Version of the VM image."
          }
        },
        "description" : "Describes the VM image of a machine."
      },
      "Ipv4NetworkInterface" : {
        "required" : [ "ipAddress" ],
        "type" : "object",
        "properties" : {
          "ipAddress" : {
            "type" : "string",
            "description" : "IPv4 address."
          },
          "subnetMask" : {
            "type" : "string",
            "description" : "IPv4 subnet mask.",
            "default" : "255.255.255.255"
          }
        },
        "description" : "Describes an IPv4 network interface."
      },
      "Ipv6NetworkInterface" : {
        "required" : [ "ipAddress" ],
        "type" : "object",
        "properties" : {
          "ipAddress" : {
            "type" : "string",
            "description" : "IPv6 address."
          }
        },
        "description" : "Describes an IPv6 network interface."
      },
      "Liveness" : {
        "required" : [ "endTime", "live", "startTime" ],
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "Liveness interval end time.",
            "format" : "date-time"
          },
          "live" : {
            "type" : "boolean",
            "description" : "`true` if the resource is live during [startTime, endTime], `false` otherwise"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Liveness interval start time.",
            "format" : "date-time"
          }
        },
        "description" : "Specifies the contents of a check liveness response."
      },
      "Machine" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "agent" : {
                "$ref" : "#/components/schemas/AgentConfiguration"
              },
              "bootTime" : {
                "type" : "string",
                "description" : "UTC date and time when the machine last booted",
                "format" : "date-time"
              },
              "computerName" : {
                "type" : "string",
                "description" : "Name of the machine, e.g., server"
              },
              "displayName" : {
                "type" : "string",
                "description" : "Name to use for display purposes"
              },
              "fullyQualifiedDomainName" : {
                "type" : "string",
                "description" : "Fully-qualified name of the machine, e.g., server.company.com"
              },
              "hosting" : {
                "$ref" : "#/components/schemas/HostingConfiguration"
              },
              "hypervisor" : {
                "$ref" : "#/components/schemas/HypervisorConfiguration"
              },
              "monitoringState" : {
                "$ref" : "#/components/schemas/MonitoringState"
              },
              "networking" : {
                "$ref" : "#/components/schemas/NetworkConfiguration"
              },
              "operatingSystem" : {
                "$ref" : "#/components/schemas/OperatingSystemConfiguration"
              },
              "resources" : {
                "$ref" : "#/components/schemas/MachineResourcesConfiguration"
              },
              "timestamp" : {
                "type" : "string",
                "description" : "UTC date and time when this resource was updated in the system.",
                "format" : "date-time"
              },
              "timezone" : {
                "$ref" : "#/components/schemas/Timezone"
              },
              "virtualMachine" : {
                "$ref" : "#/components/schemas/VirtualMachineConfiguration"
              },
              "virtualizationState" : {
                "$ref" : "#/components/schemas/VirtualizationState"
              }
            },
            "description" : "Resource properties."
          }
        },
        "description" : "A machine resource represents a discovered computer system. It can be *monitored*, i.e., a Dependency Agent is running on it, or *discovered*, i.e., its existence was inferred by observing the data stream from monitored machines. As machines change, prior versions of the machine resource are preserved and available for access. A machine is live during an interval of time, if either its Dependency Agent has reported data during (parts) of that interval, or a Dependency agent running on other machines has reported activity associated with the machine.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CoreResource"
        } ]
      },
      "MachineCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to the next set of resources."
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of Machine resources.",
            "items" : {
              "$ref" : "#/components/schemas/Machine"
            }
          }
        },
        "description" : "Collection of Machine resources."
      },
      "MachineCountsByOperatingSystem" : {
        "required" : [ "linux", "windows" ],
        "type" : "object",
        "properties" : {
          "linux" : {
            "type" : "integer",
            "description" : "Number of live Linux machines.",
            "format" : "int32"
          },
          "windows" : {
            "type" : "integer",
            "description" : "Number of live Windows machines.",
            "format" : "int32"
          }
        },
        "description" : "Machines by operating system."
      },
      "MachineGroup" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Resource ETAG."
          },
          "properties" : {
            "required" : [ "displayName" ],
            "type" : "object",
            "properties" : {
              "count" : {
                "type" : "integer",
                "description" : "Count of machines in this group. The value of count may be bigger than the number of machines in case of the group has been truncated due to exceeding the max number of machines a group can handle.",
                "format" : "int32"
              },
              "displayName" : {
                "maxLength" : 256,
                "minLength" : 1,
                "type" : "string",
                "description" : "User defined name for the group"
              },
              "groupType" : {
                "type" : "string",
                "description" : "Type of the machine group",
                "enum" : [ "unknown", "azure-cs", "azure-sf", "azure-vmss", "user-static" ]
              },
              "machines" : {
                "type" : "array",
                "description" : "References of the machines in this group. The hints within each reference do not represent the current value of the corresponding fields. They are a snapshot created during the last time the machine group was updated.",
                "items" : {
                  "$ref" : "#/components/schemas/MachineReferenceWithHints"
                }
              }
            },
            "description" : "Resource properties."
          }
        },
        "description" : "A user-defined logical grouping of machines.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CoreResource"
        } ]
      },
      "MachineGroupCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to the next set of resources."
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of Machine Group resources.",
            "items" : {
              "$ref" : "#/components/schemas/MachineGroup"
            }
          }
        },
        "description" : "Collection of Machine Group resources."
      },
      "MachineGroupMapRequest" : {
        "required" : [ "machineGroupId" ],
        "properties" : {
          "machineGroupId" : {
            "type" : "string",
            "description" : "URI of machine group resource for which to generate the map."
          }
        },
        "description" : "Specifies the computation of a machine group dependency map. A machine group dependency map includes all direct dependencies the machines in the group.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultipleMachinesMapRequest"
        } ]
      },
      "MachineListMapRequest" : {
        "required" : [ "machineIds" ],
        "properties" : {
          "machineIds" : {
            "type" : "array",
            "description" : "a list of URIs of machine resources for which to generate the map.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Specifies the computation of a one hope dependency map for a list of machines. The resulting map includes all direct dependencies for the specified machines.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultipleMachinesMapRequest"
        } ]
      },
      "MachineRebootStatus" : {
        "type" : "string",
        "description" : "Specifies if the machine has been rebooted since the installation of the dependency agent.",
        "enum" : [ "unknown", "rebooted", "notRebooted" ]
      },
      "MachineReference" : {
        "description" : "Reference to a machine.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceReference"
        } ]
      },
      "MachineReferenceWithHints" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "displayNameHint" : {
                "type" : "string",
                "description" : "Last known display name.",
                "readOnly" : true
              },
              "osFamilyHint" : {
                "$ref" : "#/components/schemas/OperatingSystemFamily"
              }
            },
            "description" : "Machine reference with name and os hints."
          }
        },
        "description" : "A machine reference with a hint of the machine's name and operating system.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceReference"
        } ]
      },
      "MachineResourcesConfiguration" : {
        "type" : "object",
        "properties" : {
          "cpuSpeed" : {
            "type" : "integer",
            "description" : "CPU speed in megahertz (Mhz).",
            "format" : "int32"
          },
          "cpuSpeedAccuracy" : {
            "$ref" : "#/components/schemas/Accuracy"
          },
          "cpus" : {
            "type" : "integer",
            "description" : "Number of CPUs.",
            "format" : "int32"
          },
          "physicalMemory" : {
            "type" : "integer",
            "description" : "Physical memory in megabytes (MB).",
            "format" : "int32"
          }
        },
        "description" : "Describes the resources of a machine."
      },
      "MachinesSummary" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MachinesSummaryProperties"
          }
        },
        "description" : "A summary of the machines in the workspace.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Summary"
        } ]
      },
      "MachinesSummaryProperties" : {
        "required" : [ "live", "os", "total" ],
        "properties" : {
          "live" : {
            "type" : "integer",
            "description" : "Number of live machines.",
            "format" : "int32"
          },
          "os" : {
            "$ref" : "#/components/schemas/MachineCountsByOperatingSystem"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of machines.",
            "format" : "int32"
          }
        },
        "description" : "Summarizes machines in the workspace.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SummaryProperties"
        } ]
      },
      "Map" : {
        "required" : [ "edges", "nodes" ],
        "type" : "object",
        "properties" : {
          "edges" : {
            "$ref" : "#/components/schemas/MapEdges"
          },
          "nodes" : {
            "$ref" : "#/components/schemas/MapNodes"
          }
        },
        "description" : "A map of resources and relationships between them."
      },
      "MapEdges" : {
        "type" : "object",
        "properties" : {
          "acceptors" : {
            "type" : "array",
            "description" : "Processes accepting on a port.",
            "items" : {
              "$ref" : "#/components/schemas/Acceptor"
            }
          },
          "connections" : {
            "type" : "array",
            "description" : "Network connections.",
            "items" : {
              "$ref" : "#/components/schemas/Connection"
            }
          }
        },
        "description" : "The edges (relationships) of a map."
      },
      "MapNodes" : {
        "type" : "object",
        "properties" : {
          "clientGroups" : {
            "type" : "array",
            "description" : "Client Group resources.",
            "items" : {
              "$ref" : "#/components/schemas/ClientGroup"
            }
          },
          "machines" : {
            "type" : "array",
            "description" : "Machine resources.",
            "items" : {
              "$ref" : "#/components/schemas/Machine"
            }
          },
          "ports" : {
            "type" : "array",
            "description" : "Port resources.",
            "items" : {
              "$ref" : "#/components/schemas/Port"
            }
          },
          "processes" : {
            "type" : "array",
            "description" : "Process resources.",
            "items" : {
              "$ref" : "#/components/schemas/Process"
            }
          }
        },
        "description" : "The nodes (entities) of a map."
      },
      "MapRequest" : {
        "required" : [ "kind" ],
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "Map interval end time.",
            "format" : "date-time"
          },
          "kind" : {
            "type" : "string",
            "description" : "The type of map to create.",
            "enum" : [ "map:single-machine-dependency", "map:machine-group-dependency", "map:machine-list-dependency" ]
          },
          "startTime" : {
            "type" : "string",
            "description" : "Map interval start time.",
            "format" : "date-time"
          }
        },
        "description" : "Specifies the contents of request to generate a map.",
        "discriminator" : {
          "propertyName" : "kind"
        }
      },
      "MapResponse" : {
        "required" : [ "endTime", "map", "startTime" ],
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "Map interval end time.",
            "format" : "date-time"
          },
          "map" : {
            "$ref" : "#/components/schemas/Map"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Map interval start time.",
            "format" : "date-time"
          }
        },
        "description" : "Specified the contents of a map response."
      },
      "MonitoringState" : {
        "type" : "string",
        "description" : "Used to specify if a resources is monitored or discovered.",
        "enum" : [ "monitored", "discovered" ]
      },
      "MultipleMachinesMapRequest" : {
        "properties" : {
          "filterProcesses" : {
            "type" : "boolean",
            "description" : "If true, only processes between specified machines will be included. Any connections in or out of those processes will be included."
          }
        },
        "description" : "Provides a base class for describing map requests for a collection of machines",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MapRequest"
        } ]
      },
      "NetworkConfiguration" : {
        "type" : "object",
        "properties" : {
          "defaultIpv4Gateways" : {
            "type" : "array",
            "description" : "Default IPv4 gateways.",
            "items" : {
              "type" : "string",
              "description" : "IPv4 address."
            }
          },
          "dnsNames" : {
            "type" : "array",
            "description" : "DNS names associated with the machine.",
            "items" : {
              "type" : "string",
              "description" : "DNS name."
            }
          },
          "ipv4Interfaces" : {
            "type" : "array",
            "description" : "IPv4 interfaces.",
            "items" : {
              "$ref" : "#/components/schemas/Ipv4NetworkInterface"
            }
          },
          "ipv6Interfaces" : {
            "type" : "array",
            "description" : "IPv6 interfaces.",
            "items" : {
              "$ref" : "#/components/schemas/Ipv6NetworkInterface"
            }
          },
          "macAddresses" : {
            "type" : "array",
            "description" : "MAC addresses of all active network interfaces.",
            "items" : {
              "type" : "string",
              "description" : "MAC address."
            }
          }
        },
        "description" : "Describes the network configuration of a machine."
      },
      "OperatingSystemConfiguration" : {
        "required" : [ "bitness", "family", "fullName" ],
        "type" : "object",
        "properties" : {
          "bitness" : {
            "$ref" : "#/components/schemas/Bitness"
          },
          "family" : {
            "$ref" : "#/components/schemas/OperatingSystemFamily"
          },
          "fullName" : {
            "type" : "string",
            "description" : "Operating system full name."
          }
        },
        "description" : "Describes the configuration of the operating system of a machine."
      },
      "OperatingSystemFamily" : {
        "type" : "string",
        "description" : "Specifies the operating system family, e.g., Linux, Windows, etc.",
        "enum" : [ "unknown", "windows", "linux", "solaris", "aix" ]
      },
      "Port" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Name to use for display purposes."
              },
              "ipAddress" : {
                "type" : "string",
                "description" : "IP address associated with the port. At present only IPv4 addresses are supported."
              },
              "machine" : {
                "$ref" : "#/components/schemas/ResourceReference"
              },
              "monitoringState" : {
                "$ref" : "#/components/schemas/MonitoringState"
              },
              "portNumber" : {
                "type" : "integer",
                "description" : "Port number.",
                "format" : "int32"
              }
            },
            "description" : "Resource properties."
          }
        },
        "description" : "A port resource represents a server port on a machine. The port may be actively *monitored*, i.e., a Dependency Agent is running on its machine, or *discovered*, i.e., its existence was inferred by observing the data stream from monitored machines. A port is live during an interval of time, if that port had associated activity during (parts) of that interval.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CoreResource"
        } ]
      },
      "PortCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to the next set of resources."
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of Port resources.",
            "items" : {
              "$ref" : "#/components/schemas/Port"
            }
          }
        },
        "description" : "Collection of Port resources."
      },
      "PortReference" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "ipAddress" : {
                "type" : "string",
                "description" : "IP address of the port.",
                "readOnly" : true
              },
              "machine" : {
                "$ref" : "#/components/schemas/MachineReference"
              },
              "portNumber" : {
                "type" : "integer",
                "description" : "Port number.",
                "format" : "int32"
              }
            },
            "description" : "Resource properties."
          }
        },
        "description" : "Reference to a port.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceReference"
        } ]
      },
      "Process" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "acceptorOf" : {
                "$ref" : "#/components/schemas/ResourceReference"
              },
              "clientOf" : {
                "$ref" : "#/components/schemas/ResourceReference"
              },
              "details" : {
                "$ref" : "#/components/schemas/ProcessDetails"
              },
              "displayName" : {
                "type" : "string",
                "description" : "Name to use for display purposes"
              },
              "executableName" : {
                "type" : "string",
                "description" : "The name of the process executable"
              },
              "group" : {
                "type" : "string",
                "description" : "The name of the product or suite of the process. The group is determined by its executable name, command line, etc."
              },
              "hosting" : {
                "$ref" : "#/components/schemas/ProcessHostingConfiguration"
              },
              "machine" : {
                "$ref" : "#/components/schemas/ResourceReference"
              },
              "monitoringState" : {
                "$ref" : "#/components/schemas/MonitoringState"
              },
              "role" : {
                "type" : "string",
                "description" : "The inferred role of this process based on its name, command line, etc.",
                "enum" : [ "webServer", "appServer", "databaseServer", "ldapServer", "smbServer" ]
              },
              "startTime" : {
                "type" : "string",
                "description" : "UTC date and time when the process started",
                "format" : "date-time"
              },
              "timestamp" : {
                "type" : "string",
                "description" : "UTC date and time when this process resource was updated in the system",
                "format" : "date-time"
              },
              "user" : {
                "$ref" : "#/components/schemas/ProcessUser"
              }
            },
            "description" : "Resource properties."
          }
        },
        "description" : "A process resource represents a process running on a machine. The process may be actively *monitored*, i.e., a Dependency Agent is running on its machine, or *discovered*, i.e., its existence was inferred by observing the data stream from monitored machines. A process resource represents a pool of actual operating system resources that share command lines and metadata. As the process pool evolves over time, prior versions of the process resource are preserved and available for access. A process is live during an interval of time, if that process is executing during (parts) of that interval",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CoreResource"
        } ]
      },
      "ProcessCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to the next set of resources."
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of Process resources.",
            "items" : {
              "$ref" : "#/components/schemas/Process"
            }
          }
        },
        "description" : "Collection of Process resources."
      },
      "ProcessDetails" : {
        "type" : "object",
        "properties" : {
          "commandLine" : {
            "type" : "string",
            "description" : "Process command line."
          },
          "companyName" : {
            "type" : "string",
            "description" : "Name of company that created the process executable."
          },
          "description" : {
            "type" : "string",
            "description" : "Process description."
          },
          "executablePath" : {
            "type" : "string",
            "description" : "Process executable path."
          },
          "fileVersion" : {
            "type" : "string",
            "description" : "File version."
          },
          "firstPid" : {
            "type" : "integer",
            "description" : "The Operating System Process Identifier (PID) of the first process in this process pool.",
            "format" : "int32"
          },
          "internalName" : {
            "type" : "string",
            "description" : "Internal process name."
          },
          "persistentKey" : {
            "type" : "string",
            "description" : "A unique identifier for a process, generally resilient to process restart, computed by Service Map."
          },
          "poolId" : {
            "type" : "integer",
            "description" : "Represents the identity of the process pool assigned to the process by Dependency Agent.",
            "format" : "int32"
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name."
          },
          "productVersion" : {
            "type" : "string",
            "description" : "Product version."
          },
          "services" : {
            "type" : "array",
            "description" : "Collection of services hosted by this Process (Windows only).",
            "items" : {
              "$ref" : "#/components/schemas/ProcessHostedService"
            }
          },
          "workingDirectory" : {
            "type" : "string",
            "description" : "Process workingDirectory."
          },
          "zoneName" : {
            "type" : "string",
            "description" : "Process zone name (Linux only)."
          }
        },
        "description" : "Describes process metadata."
      },
      "ProcessHostedService" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The service's display name."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the service."
          }
        },
        "description" : "A service hosted by a process."
      },
      "ProcessHostingConfiguration" : {
        "required" : [ "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "Additional hosting configuration type qualifier.",
            "enum" : [ "provider:azure" ]
          },
          "provider" : {
            "type" : "string",
            "description" : "The hosting provider of the VM.",
            "enum" : [ "azure" ]
          }
        },
        "description" : "Describes the hosting configuration of a process.",
        "discriminator" : {
          "propertyName" : "kind"
        }
      },
      "ProcessReference" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "machine" : {
                "$ref" : "#/components/schemas/MachineReference"
              }
            },
            "description" : "Resource properties."
          }
        },
        "description" : "Reference to a process.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceReference"
        } ]
      },
      "ProcessUser" : {
        "type" : "object",
        "properties" : {
          "userDomain" : {
            "type" : "string",
            "description" : "Domain name for the user."
          },
          "userName" : {
            "type" : "string",
            "description" : "User name under which the process is running."
          }
        },
        "description" : "Describes the user under which a process is running."
      },
      "Relationship" : {
        "required" : [ "kind" ],
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "Additional resource type qualifier.",
            "enum" : [ "rel:connection", "rel:acceptor" ]
          }
        },
        "description" : "A typed relationship between two entities.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RelationshipProperties" : {
        "required" : [ "destination", "source" ],
        "type" : "object",
        "properties" : {
          "destination" : {
            "$ref" : "#/components/schemas/ResourceReference"
          },
          "endTime" : {
            "type" : "string",
            "description" : "Relationship end time.",
            "format" : "date-time"
          },
          "source" : {
            "$ref" : "#/components/schemas/ResourceReference"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Relationship start time.",
            "format" : "date-time"
          }
        },
        "description" : "Relationship properties."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource identifier.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "Resource model definition."
      },
      "ResourceReference" : {
        "required" : [ "id", "kind" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource URI."
          },
          "kind" : {
            "type" : "string",
            "description" : "Specifies the sub-class of the reference.",
            "enum" : [ "ref:machine", "ref:machinewithhints", "ref:process", "ref:port", "ref:onmachine", "ref:clientgroup" ]
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type qualifier.",
            "readOnly" : true
          }
        },
        "description" : "Represents a reference to another resource.",
        "discriminator" : {
          "propertyName" : "kind"
        }
      },
      "SingleMachineDependencyMapRequest" : {
        "required" : [ "machineId" ],
        "properties" : {
          "machineId" : {
            "type" : "string",
            "description" : "URI of machine resource for which to generate the map."
          }
        },
        "description" : "Specifies the computation of a single server dependency map. A single server dependency map includes all direct dependencies of a given machine.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MapRequest"
        } ]
      },
      "Summary" : {
        "description" : "Base for all resource summaries.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SummaryProperties" : {
        "required" : [ "endTime", "startTime" ],
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "Summary interval end time.",
            "format" : "date-time"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Summary interval start time.",
            "format" : "date-time"
          }
        },
        "description" : "Base for all summaries."
      },
      "Timezone" : {
        "type" : "object",
        "properties" : {
          "fullName" : {
            "type" : "string",
            "description" : "Timezone full name."
          }
        },
        "description" : "Describes a timezone."
      },
      "VirtualMachineConfiguration" : {
        "type" : "object",
        "properties" : {
          "nativeHostMachineId" : {
            "type" : "string",
            "description" : "The unique identifier of the host of this virtual machine as reported by the underlying virtualization system."
          },
          "nativeMachineId" : {
            "type" : "string",
            "description" : "The unique identifier of the virtual machine as reported by the underlying virtualization system."
          },
          "virtualMachineName" : {
            "type" : "string",
            "description" : "The Name of the virtual machine."
          },
          "virtualMachineType" : {
            "$ref" : "#/components/schemas/VirtualMachineType"
          }
        },
        "description" : "Describes the virtualization-related configuration of a machine."
      },
      "VirtualMachineType" : {
        "type" : "string",
        "description" : "Specifies the virtualization type of a machine.",
        "enum" : [ "unknown", "hyperv", "ldom", "lpar", "vmware", "virtualPc", "xen" ]
      },
      "VirtualizationState" : {
        "type" : "string",
        "description" : "Specifies if the machine is physical, virtual, hypervisor, or unknown.",
        "enum" : [ "unknown", "physical", "virtual", "hypervisor" ]
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "API version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ClientGroupNameParameter" : {
        "name" : "clientGroupName",
        "in" : "path",
        "description" : "Client Group resource name.",
        "required" : true,
        "schema" : {
          "maxLength" : 256,
          "minLength" : 3,
          "type" : "string"
        }
      },
      "MachineGroupNameParameter" : {
        "name" : "machineGroupName",
        "in" : "path",
        "description" : "Machine Group resource name.",
        "required" : true,
        "schema" : {
          "maxLength" : 36,
          "minLength" : 36,
          "type" : "string"
        }
      },
      "MachineNameParameter" : {
        "name" : "machineName",
        "in" : "path",
        "description" : "Machine resource name.",
        "required" : true,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 3,
          "type" : "string"
        }
      },
      "PortNameParameter" : {
        "name" : "portName",
        "in" : "path",
        "description" : "Port resource name.",
        "required" : true,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 3,
          "type" : "string"
        }
      },
      "ProcessNameParameter" : {
        "name" : "processName",
        "in" : "path",
        "description" : "Process resource name.",
        "required" : true,
        "schema" : {
          "maxLength" : 128,
          "minLength" : 3,
          "type" : "string"
        }
      },
      "ResourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Resource group name within the specified subscriptionId.",
        "required" : true,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 1,
          "pattern" : "[a-zA-Z0-9_-]+",
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Azure subscription identifier.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "WorkspaceNameParameter" : {
        "name" : "workspaceName",
        "in" : "path",
        "description" : "OMS workspace containing the resources of interest.",
        "required" : true,
        "schema" : {
          "maxLength" : 63,
          "minLength" : 3,
          "pattern" : "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]",
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}