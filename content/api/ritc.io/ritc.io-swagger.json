{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Ritc",
    "description" : "Rules in the Cloud",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://api.ritc.io/"
  } ],
  "paths" : {
    "/actions" : {
      "get" : {
        "tags" : [ "Actions" ],
        "description" : "List actions",
        "operationId" : "listActions",
        "responses" : {
          "200" : {
            "description" : "A list of actions in an app",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActionShortResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Actions" ],
        "description" : "Create a new action",
        "operationId" : "addAction",
        "requestBody" : {
          "description" : "Action information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Action59"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An action was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionShortResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/actions/{action_id}" : {
      "get" : {
        "tags" : [ "Actions" ],
        "description" : "Get an action",
        "operationId" : "getAction",
        "parameters" : [ {
          "name" : "action_id",
          "in" : "path",
          "description" : "Id of action_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about an action",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActionFullResponse"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Actions" ],
        "description" : "Delete an action",
        "operationId" : "removeAction",
        "parameters" : [ {
          "name" : "action_id",
          "in" : "path",
          "description" : "Id of action",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The action was successfully removed"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "patch" : {
        "tags" : [ "Actions" ],
        "description" : "Update information about a specific action",
        "operationId" : "updateAction",
        "parameters" : [ {
          "name" : "action_id",
          "in" : "path",
          "description" : "Id of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Action information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Action59"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Information about the action was updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionShortResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/admin" : {
      "get" : {
        "tags" : [ "admin" ],
        "description" : "Ping the server",
        "operationId" : "admin",
        "responses" : {
          "200" : {
            "description" : "Ritc is up",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/admin/log" : {
      "post" : {
        "tags" : [ "admin" ],
        "description" : "Log a message",
        "operationId" : "logInRitc",
        "requestBody" : {
          "description" : "Log message",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Message logged",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/admin/ping" : {
      "get" : {
        "tags" : [ "admin" ],
        "description" : "Ping the server",
        "operationId" : "pingRitc",
        "responses" : {
          "200" : {
            "description" : "Ritc is up",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/apps" : {
      "get" : {
        "tags" : [ "Apps" ],
        "description" : "Get apps information",
        "operationId" : "listApps",
        "responses" : {
          "200" : {
            "description" : "A list of apps in an org",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Apps" ],
        "description" : "Create a new app",
        "operationId" : "addApp",
        "requestBody" : {
          "description" : "App information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/App"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An app was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/apps/channels/users" : {
      "get" : {
        "tags" : [ "Apps" ],
        "description" : "Get app channels",
        "operationId" : "listAppChannels",
        "responses" : {
          "200" : {
            "description" : "List of all channels in an app",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppChannelResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/apps/channels/{channel_id}/users" : {
      "get" : {
        "tags" : [ "Apps" ],
        "description" : "Get users of a specified channel",
        "operationId" : "listAppChannelUsers",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about users of a specified channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppChannelResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/apps/channels/{channel_id}/users/{user_id}" : {
      "get" : {
        "tags" : [ "Apps" ],
        "description" : "Get user of a specified channel",
        "operationId" : "getAppChannelUser",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about a specified user of a specified channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppChannelResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Apps" ],
        "description" : "Create user channel",
        "operationId" : "addAppChannelUser",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User was assigned to a channel in in app",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppChannelResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/apps/ext/api/credentials" : {
      "get" : {
        "tags" : [ "Apps" ],
        "description" : "Get external credentials",
        "operationId" : "listChannelExternalCredentials",
        "responses" : {
          "200" : {
            "description" : "Detailed information about external credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppExternalCredentialsResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Apps" ],
        "description" : "Create new external credentials",
        "operationId" : "addChannelExternalCredentials",
        "requestBody" : {
          "description" : "App_External_Credentials information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppExternalCredentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "External credentials created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppExternalCredentialsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/apps/ext/api/credentials/{channel_id}" : {
      "get" : {
        "tags" : [ "Apps" ],
        "description" : "Get credentials for a channel in an app",
        "operationId" : "getChannelExternalCredentials",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Credentials for a channel in an app",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppExternalCredentialsResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Apps" ],
        "description" : "Delete credentials for a channel",
        "operationId" : "removeChannelExternalCredentials",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The credentials for a channel were successfully removed"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "patch" : {
        "tags" : [ "Apps" ],
        "description" : "Update credentials for a channel",
        "operationId" : "updateChannelExternalCredentials",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "App_External_Credentials information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppExternalCredentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Information about the channel credentials was updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppExternalCredentialsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/apps/rulegroup/run/{rule_id_list}" : {
      "post" : {
        "tags" : [ "Apps" ],
        "description" : "Run specified rule group in the app",
        "operationId" : "runRuleGroup",
        "parameters" : [ {
          "name" : "rule_id_list",
          "in" : "path",
          "description" : "Ids of rules in the group, separated by commas, no spaces",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "break_when_rule_fires",
          "in" : "query",
          "description" : "Do not continue with remaining rules after a rule fires",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "Initial data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Execution of specified rules in the app (for user #1)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleResults"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/apps/rules/run" : {
      "post" : {
        "tags" : [ "Apps" ],
        "description" : "Run active app rules",
        "operationId" : "runApp",
        "parameters" : [ {
          "name" : "break_when_rule_fires",
          "in" : "query",
          "description" : "Do not continue with remaining rules after a rule fires",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "Initial data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Execution of active rules in the app (for user #1)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleResults"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/apps/{app_id}" : {
      "get" : {
        "tags" : [ "Apps" ],
        "description" : "Get app information",
        "operationId" : "getApp",
        "parameters" : [ {
          "name" : "app_id",
          "in" : "path",
          "description" : "Id of App",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about an app",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Apps" ],
        "description" : "Delete an app",
        "operationId" : "removeApp",
        "parameters" : [ {
          "name" : "app_id",
          "in" : "path",
          "description" : "Id of App",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The app was successfully removed"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "patch" : {
        "tags" : [ "Apps" ],
        "description" : "Update an app",
        "operationId" : "updateApp",
        "parameters" : [ {
          "name" : "app_id",
          "in" : "path",
          "description" : "Id of app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "App information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/App"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Information about the app was updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/channels" : {
      "get" : {
        "tags" : [ "Channels" ],
        "description" : "Retrieve Channels",
        "operationId" : "listChannels",
        "responses" : {
          "200" : {
            "description" : "A list of channels available to a logged-in user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChannelResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Channels" ],
        "description" : "Create a channel",
        "operationId" : "addChannel",
        "requestBody" : {
          "description" : "Channel information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Channel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A private channel was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChannelResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/channels/anonymous" : {
      "get" : {
        "tags" : [ "Channels" ],
        "description" : "Retrieve Channels anonymously",
        "operationId" : "listAnonymousChannels",
        "responses" : {
          "200" : {
            "description" : "A list of channels available to an anonymous user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChannelResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/channels/{channel_id}" : {
      "get" : {
        "tags" : [ "Channels" ],
        "description" : "Get channel information",
        "operationId" : "getChannel",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about a channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChannelResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Channels" ],
        "description" : "Delete a channel",
        "operationId" : "removeChannel",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The channel was successfully removed"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "patch" : {
        "tags" : [ "Channels" ],
        "description" : "Update a channel",
        "operationId" : "updateChannel",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Channel information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Information about the channel was updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChannelResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/channels/{channel_id}/functions" : {
      "get" : {
        "tags" : [ "Channels" ],
        "description" : "Retrieve Channel Functions",
        "operationId" : "listChannelFunctions",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of functions available in a channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FunctionResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Channels" ],
        "description" : "Create a channel function",
        "operationId" : "addChannelFunction",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Channel Function information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Function7"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A private channel function  was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FunctionResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/channels/{channel_id}/functions/{function_id}" : {
      "get" : {
        "tags" : [ "Channels" ],
        "description" : "Get channel function information",
        "operationId" : "getChannelFunction",
        "parameters" : [ {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "function_id",
          "in" : "path",
          "description" : "Id of Channel Function",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about a channel function",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FunctionResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/orgs" : {
      "post" : {
        "tags" : [ "Orgs" ],
        "description" : "Create an org",
        "operationId" : "addOrganization",
        "requestBody" : {
          "description" : "Org information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An org was successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrgResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/orgs/me" : {
      "get" : {
        "tags" : [ "Orgs" ],
        "description" : "Get org information",
        "operationId" : "getMyOrganization",
        "responses" : {
          "200" : {
            "description" : "Detailed information about an org",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrgResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/rules" : {
      "get" : {
        "tags" : [ "Rules" ],
        "description" : "List rules",
        "operationId" : "listRules",
        "responses" : {
          "200" : {
            "description" : "A list of rules in an app",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleShortResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Rules" ],
        "description" : "Create a new rule",
        "operationId" : "addRule",
        "requestBody" : {
          "description" : "Rule information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A rule was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleFullResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/rules/{rule_id}" : {
      "get" : {
        "tags" : [ "Rules" ],
        "description" : "Get a rule",
        "operationId" : "getRule",
        "parameters" : [ {
          "name" : "rule_id",
          "in" : "path",
          "description" : "Id of rule",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about a rule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleFullResponse"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Rules" ],
        "description" : "Delete a rule",
        "operationId" : "removeRule",
        "parameters" : [ {
          "name" : "rule_id",
          "in" : "path",
          "description" : "Id of rule",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The rule was successfully removed"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "patch" : {
        "tags" : [ "Rules" ],
        "description" : "Update information about a specific rule",
        "operationId" : "updateRule",
        "parameters" : [ {
          "name" : "rule_id",
          "in" : "path",
          "description" : "Id of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Rule information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Information about the rule was updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleFullResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/rules/{rule_id}/run" : {
      "post" : {
        "tags" : [ "Rules" ],
        "description" : "Run a rule",
        "operationId" : "runRule",
        "parameters" : [ {
          "name" : "rule_id",
          "in" : "path",
          "description" : "Id of rule",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Initial data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "A rule ran successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/triggers" : {
      "get" : {
        "tags" : [ "Triggers" ],
        "description" : "Triggers in an app",
        "operationId" : "listTriggers",
        "responses" : {
          "200" : {
            "description" : "A list of triggers in an app",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TriggerShortResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Triggers" ],
        "description" : "Create a new trigger in an app",
        "operationId" : "addTrigger",
        "requestBody" : {
          "description" : "Trigger parameters and configuration",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Trigger54"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A trigger was successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerShortResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/triggers/{trigger_id}" : {
      "get" : {
        "tags" : [ "Triggers" ],
        "description" : "Get a trigger",
        "operationId" : "getTrigger",
        "parameters" : [ {
          "name" : "trigger_id",
          "in" : "path",
          "description" : "Id of Trigger",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about a trigger",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TriggerFullResponse"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Triggers" ],
        "description" : "Delete a trigger",
        "operationId" : "removeTrigger",
        "parameters" : [ {
          "name" : "trigger_id",
          "in" : "path",
          "description" : "Id of Trigger",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The trigger was successfully removed"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "patch" : {
        "tags" : [ "Triggers" ],
        "description" : "Update a trigger",
        "operationId" : "updateTrigger",
        "parameters" : [ {
          "name" : "trigger_id",
          "in" : "path",
          "description" : "Id of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Trigger information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Trigger54"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Information about the trigger was updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerShortResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Users",
        "operationId" : "listAppUsers",
        "responses" : {
          "200" : {
            "description" : "A list of App Users in an app",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppUserResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "description" : "Create a new App User",
        "operationId" : "addAppUser",
        "requestBody" : {
          "description" : "App User information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppUser"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An App User was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppUserResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users/admin" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Admin users",
        "operationId" : "listAdminUsers",
        "responses" : {
          "200" : {
            "description" : "A list of admin users in an app",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AdminUserResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "description" : "Create a new admin user",
        "operationId" : "addAdminUser",
        "requestBody" : {
          "description" : "Admin User information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminUser"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An admin user was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminUserResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users/admin/{user_id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Get an admin user",
        "operationId" : "getAdminUser",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of Admin_User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about an admin user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AdminUserResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "description" : "Remove an admin user",
        "operationId" : "removeAdminUser",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of Admin_User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The admin user was successfully removed"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "patch" : {
        "tags" : [ "Users" ],
        "description" : "Update information about an admin user",
        "operationId" : "updateAdminUser",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Admin User information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminUser"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Information about the admin user was updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminUserResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users/authenticate/{user_id}/channel/{channel_id}" : {
      "post" : {
        "tags" : [ "Users" ],
        "description" : "Authenticate a user for a channel",
        "operationId" : "authenticateAppUserForChannel",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Authorize url to be sent an authorize request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizeUrlResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users/{user_id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Get an App User",
        "operationId" : "getAppUser",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of App User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about an App User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppUserResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "description" : "Remove a user",
        "operationId" : "removeAppUser",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The user was successfully removed"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "patch" : {
        "tags" : [ "Users" ],
        "description" : "Update information about an App User",
        "operationId" : "updateAppUser",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "App User information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppUser"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Information about the user was updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppUserResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users/{user_id}/channels" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Channels available to a User",
        "operationId" : "listAppUserChannels",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of channels available to a specific user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserChannel"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "description" : "Assign a channel to a user",
        "operationId" : "addAppUserToChannel",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Id of Channel",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A channel was assigned to a user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserChannel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users/{user_id}/channels/{channel_id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Get a user channel",
        "operationId" : "getAppUserChannel",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about a specific channel for a specific user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserChannel"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "description" : "Remove a user channel assignment",
        "operationId" : "removeAppUserFromChannel",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel_id",
          "in" : "path",
          "description" : "Id of Channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The channel was successfully removed from the user"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users/{user_id}/rules" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Rules for a User",
        "operationId" : "listAppUserRules",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of rules applying to a specific user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleShortResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users/{user_id}/rules/{rule_id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Get a user",
        "operationId" : "getAppUserRule",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rule_id",
          "in" : "path",
          "description" : "Id of Rule",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information about a rule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleFullResponse"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "description" : "Assign a user to a rule",
        "operationId" : "addAppUserToRule",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rule_id",
          "in" : "path",
          "description" : "Id of Rule",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A rule was assigned to the user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleShortResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "description" : "Remove a rule user",
        "operationId" : "removeAppUserFromRule",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rule_id",
          "in" : "path",
          "description" : "Id of Rule",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The rule was successfully removed from the system"
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/users/{user_id}/rules/{rule_id}/run" : {
      "post" : {
        "tags" : [ "Users" ],
        "description" : "Run rule for a user",
        "operationId" : "runRuleForAppUser",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "Id of User",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rule_id",
          "in" : "path",
          "description" : "Id of Rule",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A rule ran successfully for a user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Action" : {
        "title" : "Action",
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date the rule was created"
          },
          "description" : {
            "type" : "string"
          },
          "functionId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the rule was modified"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "Action59" : {
        "title" : "Action59",
        "required" : [ "channelId", "functionId", "name" ],
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "integer",
            "description" : "Id of channel used by action",
            "format" : "int32"
          },
          "codes" : {
            "type" : "object",
            "description" : "Object containing named Javascript code sets"
          },
          "desc" : {
            "type" : "string",
            "description" : "Action description"
          },
          "functionId" : {
            "type" : "string",
            "description" : "Hash id of channel function used by action"
          },
          "name" : {
            "type" : "string",
            "description" : "Action name"
          },
          "parameters" : {
            "type" : "object",
            "description" : "Object containing channel-defined action parameters"
          }
        }
      },
      "ActionFullResponse" : {
        "title" : "Action_Full_Response",
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "codes" : {
            "type" : "object"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date the action was created"
          },
          "description" : {
            "type" : "string",
            "description" : "Action description"
          },
          "functionId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the action was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "Action name"
          },
          "parameters" : {
            "type" : "object"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "ActionShortResponse" : {
        "title" : "Action_Short_Response",
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date the action was created"
          },
          "description" : {
            "type" : "string",
            "description" : "Action description"
          },
          "functionId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the action was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "Action name"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "AdminUser" : {
        "title" : "Admin_User",
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "Admin User email address"
          },
          "password" : {
            "type" : "string",
            "description" : "Admin User password"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type41"
          }
        }
      },
      "AdminUserResponse" : {
        "title" : "Admin_User_Response",
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The date the admin user was created"
          },
          "email" : {
            "type" : "string",
            "description" : "Admin User email address"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the admin user was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "Admin User name"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "ApiType" : {
        "title" : "ApiType",
        "type" : "string",
        "enum" : [ "Internal", "REST", "SDK" ]
      },
      "App" : {
        "title" : "App",
        "type" : "object",
        "properties" : {
          "desc" : {
            "type" : "string",
            "description" : "App description"
          },
          "name" : {
            "type" : "string",
            "description" : "App name"
          }
        }
      },
      "AppChannelResponse" : {
        "title" : "App_Channel_Response",
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "integer",
            "description" : "Channel Id",
            "format" : "int32"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date the user was created"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "userId" : {
            "type" : "integer",
            "description" : "Id of App User assigned to Channel",
            "format" : "int32"
          }
        }
      },
      "AppExternalCredentials" : {
        "title" : "App_External_Credentials",
        "type" : "object",
        "properties" : {
          "authType" : {
            "$ref" : "#/components/schemas/AuthType"
          },
          "channel_id" : {
            "type" : "string"
          },
          "credentials" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string",
            "description" : "App external credentials api name"
          }
        }
      },
      "AppExternalCredentialsResponse" : {
        "title" : "App_External_Credentials_Response",
        "type" : "object",
        "properties" : {
          "authType" : {
            "$ref" : "#/components/schemas/AuthType"
          },
          "channel_id" : {
            "type" : "string"
          },
          "credentials" : {
            "type" : "object"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "App external credentials api name"
          }
        }
      },
      "AppResponse" : {
        "title" : "App_Response",
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "description" : "App ApiKey"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date the app was created"
          },
          "description" : {
            "type" : "string",
            "description" : "App description"
          },
          "id" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the app was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "App name"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "AppUser" : {
        "title" : "App_User",
        "type" : "object",
        "properties" : {
          "config" : {
            "type" : "object",
            "description" : "Object containing user-defined app user configuration"
          },
          "name" : {
            "type" : "string",
            "description" : "Display name of App User"
          },
          "password" : {
            "type" : "string",
            "description" : "App User password"
          }
        }
      },
      "AppUserResponse" : {
        "title" : "App_User_Response",
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The date the user was created"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of App User"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of App User"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the user was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "Display name of App User"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "AuthType" : {
        "title" : "AuthType",
        "type" : "string",
        "enum" : [ "apikey", "basic", "none", "oauth2" ]
      },
      "AuthorizeUrlResponse" : {
        "title" : "Authorize_Url_Response",
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          }
        }
      },
      "Channel" : {
        "title" : "Channel",
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Channel description"
          },
          "functions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Function"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Id of channel"
          },
          "name" : {
            "type" : "string",
            "description" : "Channel name"
          },
          "type" : {
            "type" : "object",
            "description" : "Type of channel. Choices are 'public' or 'private'. Private channels are only viewable within an account, while public channels are viewable to everyone in the system"
          }
        }
      },
      "ChannelResponse" : {
        "title" : "Channel_Response",
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Channel description"
          },
          "functions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Function5"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Id of channel"
          },
          "name" : {
            "type" : "string",
            "description" : "Channel name"
          },
          "type" : {
            "type" : "object",
            "description" : "Type of channel. Choices are 'public' or 'private'. Private channels are only viewable within an account, while public channels are viewable to everyone"
          }
        }
      },
      "Error" : {
        "title" : "Error",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fields" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Function" : {
        "title" : "Function",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Function name"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Parameter"
            }
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          }
        }
      },
      "Function5" : {
        "title" : "Function5",
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Function description"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Function name"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          }
        }
      },
      "Function7" : {
        "title" : "Function7",
        "type" : "object",
        "properties" : {
          "apiType" : {
            "$ref" : "#/components/schemas/ApiType"
          },
          "desc" : {
            "type" : "string",
            "description" : "Function description"
          },
          "endpoint" : {
            "type" : "string",
            "description" : "Function endpoint"
          },
          "httpMethod" : {
            "$ref" : "#/components/schemas/HttpMethod"
          },
          "name" : {
            "type" : "string",
            "description" : "Function name"
          },
          "requestParameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RequestParameter"
            }
          },
          "responseFormat" : {
            "$ref" : "#/components/schemas/ResponseFormat"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          }
        }
      },
      "FunctionResponse" : {
        "title" : "Function_Response",
        "type" : "object",
        "properties" : {
          "apiType" : {
            "$ref" : "#/components/schemas/ApiType"
          },
          "description" : {
            "type" : "string",
            "description" : "Function description"
          },
          "endpoint" : {
            "type" : "string",
            "description" : "Function endpoint"
          },
          "httpMethod" : {
            "$ref" : "#/components/schemas/HttpMethod"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Function name"
          },
          "requestParameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RequestParameter"
            }
          },
          "responseFormat" : {
            "$ref" : "#/components/schemas/ResponseFormat"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          }
        }
      },
      "HttpMethod" : {
        "title" : "HttpMethod",
        "type" : "string",
        "enum" : [ "DELETE", "GET", "PATCH", "POST" ]
      },
      "Org" : {
        "title" : "Org",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "desc" : {
            "type" : "string",
            "description" : "Org description"
          },
          "name" : {
            "type" : "string",
            "description" : "Org name"
          },
          "type" : {
            "type" : "string",
            "description" : "Org type"
          }
        }
      },
      "OrgResponse" : {
        "title" : "Org_Response",
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The date the org was created"
          },
          "id" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the org was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "Org name"
          },
          "plan" : {
            "$ref" : "#/components/schemas/Plan"
          },
          "planCat" : {
            "type" : "object"
          },
          "status" : {
            "type" : "string",
            "description" : "Org name"
          },
          "type" : {
            "type" : "object"
          }
        }
      },
      "Parameter" : {
        "title" : "Parameter",
        "required" : [ "key", "value" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "Plan" : {
        "title" : "Plan",
        "type" : "string",
        "enum" : [ "free", "basic" ]
      },
      "RequestParameter" : {
        "title" : "RequestParameter",
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "fieldType" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "schema" : {
            "$ref" : "#/components/schemas/Schema"
          }
        }
      },
      "ResponseFormat" : {
        "title" : "ResponseFormat",
        "type" : "string",
        "enum" : [ "Html", "Json", "Text", "Xml" ]
      },
      "Rule" : {
        "title" : "Rule",
        "type" : "object",
        "properties" : {
          "actionIds" : {
            "type" : "string",
            "description" : "Rule description"
          },
          "description" : {
            "type" : "string",
            "description" : "Rule description"
          },
          "name" : {
            "type" : "string",
            "description" : "Rule name"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "triggerIds" : {
            "type" : "string",
            "description" : "Rule description"
          }
        }
      },
      "RuleFullResponse" : {
        "title" : "Rule_Full_Response",
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            }
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date the rule was created"
          },
          "description" : {
            "type" : "string",
            "description" : "Rule description"
          },
          "id" : {
            "type" : "integer",
            "description" : "Rule Id",
            "format" : "int32"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the rule was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "Rule name"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "triggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Trigger"
            }
          }
        }
      },
      "RuleResults" : {
        "title" : "Rule_Results",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of rule results"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          }
        }
      },
      "RuleShortResponse" : {
        "title" : "Rule_Short_Response",
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The date the rule was created"
          },
          "description" : {
            "type" : "string",
            "description" : "Rule description"
          },
          "id" : {
            "type" : "integer",
            "description" : "Rule Id",
            "format" : "int32"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the rule was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "Rule name"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "Schema" : {
        "title" : "Schema",
        "type" : "object",
        "properties" : {
          "datatype" : {
            "type" : "object"
          },
          "default" : {
            "type" : "string"
          },
          "expose" : {
            "type" : "object"
          },
          "required" : {
            "type" : "object"
          },
          "style" : {
            "$ref" : "#/components/schemas/Style"
          }
        }
      },
      "Status" : {
        "title" : "Status",
        "type" : "string",
        "enum" : [ "active", "inactive" ]
      },
      "Style" : {
        "title" : "Style",
        "type" : "string",
        "enum" : [ "postbody", "query", "template" ]
      },
      "Trigger" : {
        "title" : "Trigger",
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date the rule was created"
          },
          "description" : {
            "type" : "string"
          },
          "functionId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the rule was modified"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "Trigger54" : {
        "title" : "Trigger54",
        "required" : [ "channelId", "functionId", "name" ],
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "integer",
            "description" : "Id of channel used by trigger",
            "format" : "int32"
          },
          "codes" : {
            "type" : "object",
            "description" : "Object containing named Javascript code sets"
          },
          "desc" : {
            "type" : "string",
            "description" : "Trigger description"
          },
          "functionId" : {
            "type" : "string",
            "description" : "Hash id of channel function used by trigger"
          },
          "name" : {
            "type" : "string",
            "description" : "Trigger name"
          },
          "parameters" : {
            "type" : "object",
            "description" : "Object containing channel-defined trigger parameters"
          }
        }
      },
      "TriggerFullResponse" : {
        "title" : "Trigger_Full_Response",
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "codes" : {
            "type" : "object"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date the trigger was created"
          },
          "description" : {
            "type" : "string",
            "description" : "Trigger description"
          },
          "functionId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the trigger was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "Trigger name"
          },
          "parameters" : {
            "type" : "object"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "TriggerShortResponse" : {
        "title" : "Trigger_Short_Response",
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date the trigger was created"
          },
          "description" : {
            "type" : "string",
            "description" : "Trigger description"
          },
          "functionId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "The date the trigger was modified"
          },
          "name" : {
            "type" : "string",
            "description" : "Trigger name"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "Type" : {
        "title" : "Type",
        "type" : "string",
        "enum" : [ "action", "trigger" ]
      },
      "Type41" : {
        "title" : "Type41",
        "type" : "string",
        "enum" : [ "admin", "guest" ]
      },
      "UserChannel" : {
        "title" : "User_Channel",
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "securitySchemes" : {
      "Authorization" : {
        "type" : "apiKey",
        "description" : "HTTP Basic Authentication/API Key. Basic Auth requires a username and a password. For the username, use a valid API key. Ritc accepts the API key as both plaintext and base64 encoded. Remember that you must append a colon after the api key in order to avoid being prompted for a password. The format is Base64encode(api-key:)",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}