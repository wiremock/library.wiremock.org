{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "GOV.UK Pay API",
    "description" : "GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)",
    "version" : "1.0.3"
  },
  "servers" : [ {
    "url" : "https://publicapi.payments.service.gov.uk/"
  } ],
  "tags" : [ {
    "name" : "Card payments"
  }, {
    "name" : "Refunding card payments"
  } ],
  "paths" : {
    "/v1/payments" : {
      "get" : {
        "tags" : [ "Card payments" ],
        "summary" : "Search payments",
        "description" : "Search payments by reference, state, 'from' and 'to' date. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "Search payments",
        "parameters" : [ {
          "name" : "reference",
          "in" : "query",
          "description" : "Your payment reference to search (exact match, case insensitive)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "The user email used in the payment to be searched",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "State of payments to be searched. Example=success",
          "schema" : {
            "type" : "string",
            "enum" : [ "created", "started", "submitted", "success", "failed", "cancelled", "error" ]
          }
        }, {
          "name" : "card_brand",
          "in" : "query",
          "description" : "Card brand used for payment. Example=master-card",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from_date",
          "in" : "query",
          "description" : "From date of payments to be searched (this date is inclusive). Example=2015-08-13T12:35:00Z",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to_date",
          "in" : "query",
          "description" : "To date of payments to be searched (this date is exclusive). Example=2015-08-14T12:35:00Z",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number requested for the search, should be a positive integer (optional, defaults to 1)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "display_size",
          "in" : "query",
          "description" : "Number of results to be shown per page, should be a positive integer (optional, defaults to 500, max 500)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardholder_name",
          "in" : "query",
          "description" : "Name on card used to make payment",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "first_digits_card_number",
          "in" : "query",
          "description" : "First six digits of the card used to make payment",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "last_digits_card_number",
          "in" : "query",
          "description" : "Last four digits of the card used to make payment",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from_settled_date",
          "in" : "query",
          "description" : "From settled date of payment to be searched (this date is inclusive). Example=2015-08-13",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to_settled_date",
          "in" : "query",
          "description" : "To settled date of payment to be searched (this date is inclusive). Example=2015-08-14",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentSearchResults"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "422" : {
            "description" : "Invalid parameters: from_date, to_date, status, display_size. See Public API documentation for the correct data formats",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Card payments" ],
        "summary" : "Create new payment",
        "description" : "Create a new payment for the account associated to the Authorisation token. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "Create a payment",
        "requestBody" : {
          "description" : "requestPayload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCardPaymentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreatePaymentResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "422" : {
            "description" : "Invalid attribute value: description. Must be less than or equal to 255 characters length",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/v1/payments/{paymentId}" : {
      "get" : {
        "tags" : [ "Card payments" ],
        "summary" : "Find payment by ID",
        "description" : "Return information about the payment The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "Get a payment",
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Payment identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "hu20sqlact5260q2nanm0q8u93"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPaymentResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/v1/payments/{paymentId}/cancel" : {
      "post" : {
        "tags" : [ "Card payments" ],
        "summary" : "Cancel payment",
        "description" : "Cancel a payment based on the provided payment ID and the Authorisation token. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'. A payment can only be cancelled if it's in a state that isn't finished.",
        "operationId" : "Cancel a payment",
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Payment identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "hu20sqlact5260q2nanm0q8u93"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Cancellation of payment failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/v1/payments/{paymentId}/capture" : {
      "post" : {
        "tags" : [ "Card payments" ],
        "summary" : "Capture payment",
        "description" : "Capture a payment based on the provided payment ID and the Authorisation token. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'. A payment can only be captured if it's in 'submitted' state",
        "operationId" : "Capture a payment",
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Payment identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "hu20sqlact5260q2nanm0q8u93"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Capture of payment failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/v1/payments/{paymentId}/events" : {
      "get" : {
        "tags" : [ "Card payments" ],
        "summary" : "Return payment events by ID",
        "description" : "Return payment events information about a certain payment The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "Get events for a payment",
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Payment identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "hu20sqlact5260q2nanm0q8u93"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentEvents"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/v1/payments/{paymentId}/refunds" : {
      "get" : {
        "tags" : [ "Refunding card payments" ],
        "summary" : "Get all refunds for a payment",
        "description" : "Return refunds for a payment. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "Get all refunds for a payment",
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RefundForSearchResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      },
      "post" : {
        "tags" : [ "Refunding card payments" ],
        "summary" : "Submit a refund for a payment",
        "description" : "Return issued refund information. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "Submit a refund for a payment",
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "paymentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "requestPayload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentRefundRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Refund"
                }
              }
            }
          },
          "202" : {
            "description" : "ACCEPTED"
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "412" : {
            "description" : "Refund amount available mismatch"
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/v1/payments/{paymentId}/refunds/{refundId}" : {
      "get" : {
        "tags" : [ "Refunding card payments" ],
        "summary" : "Find payment refund by ID",
        "description" : "Return payment refund information by Refund ID The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "Get a payment refund",
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refundId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Refund"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    },
    "/v1/refunds" : {
      "get" : {
        "tags" : [ "Refunding card payments" ],
        "summary" : "Search refunds",
        "description" : "Search refunds by 'from' and 'to' date. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "Search refunds",
        "parameters" : [ {
          "name" : "from_date",
          "in" : "query",
          "description" : "From date of refunds to be searched (this date is inclusive). Example=2015-08-13T12:35:00Z",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to_date",
          "in" : "query",
          "description" : "To date of refunds to be searched (this date is exclusive). Example=2015-08-14T12:35:00Z",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from_settled_date",
          "in" : "query",
          "description" : "From settled date of refund to be searched (this date is inclusive). Example=2015-08-13",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to_settled_date",
          "in" : "query",
          "description" : "To settled date of refund to be searched (this date is inclusive). Example=2015-08-13",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number requested for the search, should be a positive integer (optional, defaults to 1)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "display_size",
          "in" : "query",
          "description" : "Number of results to be shown per page, should be a positive integer (optional, defaults to 500, max 500)",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RefundSearchResults"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "422" : {
            "description" : "Invalid parameters. See Public API documentation for the correct data formats",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RefundError"
                }
              }
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RefundError"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : null
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Address" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "readOnly" : true,
            "example" : "address city"
          },
          "country" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "GB"
          },
          "line1" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "readOnly" : true,
            "example" : "address line 1"
          },
          "line2" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "readOnly" : true,
            "example" : "address line 2"
          },
          "postcode" : {
            "maxLength" : 25,
            "minLength" : 0,
            "type" : "string",
            "readOnly" : true,
            "example" : "AB1 2CD"
          }
        },
        "description" : "A structure representing the billing address of a card"
      },
      "CardDetails" : {
        "type" : "object",
        "properties" : {
          "billing_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "card_brand" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Visa"
          },
          "card_type" : {
            "type" : "string",
            "description" : "The card type, `debit` or `credit` or `null` if not able to determine",
            "readOnly" : true,
            "example" : "debit",
            "enum" : [ "debit", "credit", "null" ]
          },
          "cardholder_name" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Mr. Card holder"
          },
          "expiry_date" : {
            "type" : "string",
            "description" : "The expiry date of the card in MM/yy format",
            "readOnly" : true,
            "example" : "04/24"
          },
          "first_digits_card_number" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "123456"
          },
          "last_digits_card_number" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1234"
          }
        },
        "description" : "A structure representing the payment card"
      },
      "CreateCardPaymentRequest" : {
        "required" : [ "amount", "description", "reference", "return_url" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "maximum" : 10000000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "amount in pence",
            "format" : "int32",
            "readOnly" : true,
            "example" : 12000
          },
          "delayed_capture" : {
            "type" : "boolean",
            "description" : "delayed capture flag",
            "readOnly" : true,
            "example" : false
          },
          "description" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "description" : "payment description",
            "readOnly" : true,
            "example" : "New passport application"
          },
          "email" : {
            "type" : "string",
            "description" : "email",
            "readOnly" : true,
            "example" : "Joe.Bogs@example.org"
          },
          "language" : {
            "type" : "string",
            "description" : "ISO-639-1 Alpha-2 code of a supported language to use on the payment pages",
            "readOnly" : true,
            "example" : "en",
            "enum" : [ "en", "cy" ]
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "Additional metadata - up to 10 name/value pairs - on the payment. Each key must be between 1 and 30 characters long. The value, if a string, must be no greater than 50 characters long. Other permissible value types: boolean, number.",
            "readOnly" : true,
            "example" : "{\"ledger_code\":\"123\", \"reconciled\": true}"
          },
          "moto" : {
            "type" : "boolean",
            "description" : "Mail Order / Telephone Order (MOTO) payment flag",
            "readOnly" : true,
            "example" : false
          },
          "prefilled_cardholder_details" : {
            "$ref" : "#/components/schemas/PrefilledCardholderDetails"
          },
          "reference" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "description" : "payment reference",
            "readOnly" : true,
            "example" : "12345"
          },
          "return_url" : {
            "maxLength" : 2000,
            "minLength" : 0,
            "type" : "string",
            "description" : "service return url",
            "readOnly" : true,
            "example" : "https://service-name.gov.uk/transactions/12345"
          }
        },
        "description" : "The Payment Request Payload"
      },
      "CreatePaymentResult" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/PaymentLinks"
          },
          "amount" : {
            "type" : "integer",
            "description" : "The amount in pence.",
            "format" : "int64",
            "example" : 1200
          },
          "card_details" : {
            "$ref" : "#/components/schemas/CardDetails"
          },
          "created_date" : {
            "type" : "string",
            "description" : "The date you created the payment.",
            "example" : "2016-01-21T17:15:00Z"
          },
          "delayed_capture" : {
            "type" : "boolean",
            "description" : "Whether to [delay capturing](https://docs.payments.service.gov.uk/optional_features/delayed_capture/) this payment.",
            "example" : false
          },
          "description" : {
            "type" : "string",
            "description" : "The human-readable description you gave the payment.",
            "example" : "New passport application"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of your user.",
            "example" : "citizen@example.org"
          },
          "language" : {
            "type" : "string",
            "description" : "Which language your users will see on the payment pages when they make a payment.",
            "example" : "en",
            "enum" : [ "en", "cy" ]
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "[Custom metadata](https://docs.payments.service.gov.uk/optional_features/custom_metadata/) you added to the payment."
          },
          "moto" : {
            "type" : "boolean",
            "description" : "Mail Order / Telephone Order (MOTO) payment flag.",
            "example" : false
          },
          "payment_id" : {
            "type" : "string",
            "description" : "The unique identifier of the payment.",
            "example" : "hu20sqlact5260q2nanm0q8u93"
          },
          "payment_provider" : {
            "type" : "string",
            "example" : "worldpay"
          },
          "provider_id" : {
            "type" : "string",
            "description" : "The reference number the payment gateway associated with the payment.",
            "example" : "null"
          },
          "reference" : {
            "type" : "string",
            "description" : "The reference number you associated with this payment.",
            "example" : "12345"
          },
          "refund_summary" : {
            "$ref" : "#/components/schemas/RefundSummary"
          },
          "return_url" : {
            "type" : "string",
            "description" : "An HTTPS URL on your site that your user will be sent back to once they have completed their payment attempt on GOV.UK Pay.",
            "example" : "https://service-name.gov.uk/transactions/12345"
          },
          "settlement_summary" : {
            "$ref" : "#/components/schemas/PaymentSettlementSummary"
          },
          "state" : {
            "$ref" : "#/components/schemas/PaymentState"
          }
        }
      },
      "EmbeddedRefunds" : {
        "type" : "object",
        "properties" : {
          "refunds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Refund"
            }
          }
        }
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "P0900"
          },
          "description" : {
            "type" : "string",
            "example" : "Too many requests"
          }
        },
        "description" : "An error response"
      },
      "GetPaymentResult" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/PaymentLinks"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1200
          },
          "card_brand" : {
            "type" : "string",
            "description" : "Card Brand",
            "readOnly" : true,
            "example" : "Visa"
          },
          "card_details" : {
            "$ref" : "#/components/schemas/CardDetails"
          },
          "corporate_card_surcharge" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 250
          },
          "created_date" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "2016-01-21T17:15:000Z"
          },
          "delayed_capture" : {
            "type" : "boolean",
            "description" : "delayed capture flag",
            "readOnly" : true,
            "example" : false
          },
          "description" : {
            "type" : "string",
            "example" : "Your Service Description"
          },
          "email" : {
            "type" : "string",
            "example" : "your email"
          },
          "fee" : {
            "type" : "integer",
            "description" : "processing fee taken by the GOV.UK Pay platform, in pence. Only available depending on payment service provider",
            "format" : "int64",
            "readOnly" : true,
            "example" : 5
          },
          "language" : {
            "type" : "string",
            "example" : "en",
            "enum" : [ "en", "cy" ]
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "moto" : {
            "type" : "boolean",
            "description" : "Mail Order / Telephone Order (MOTO) payment flag",
            "readOnly" : true,
            "example" : false
          },
          "net_amount" : {
            "type" : "integer",
            "description" : "amount including all surcharges and less all fees, in pence. Only available depending on payment service provider",
            "format" : "int64",
            "readOnly" : true,
            "example" : 1195
          },
          "payment_id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "hu20sqlact5260q2nanm0q8u93"
          },
          "payment_provider" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "worldpay"
          },
          "provider_id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "reference-from-payment-gateway"
          },
          "reference" : {
            "type" : "string",
            "example" : "your-reference"
          },
          "refund_summary" : {
            "$ref" : "#/components/schemas/RefundSummary"
          },
          "return_url" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "http://your.service.domain/your-reference"
          },
          "settlement_summary" : {
            "$ref" : "#/components/schemas/PaymentSettlementSummary"
          },
          "state" : {
            "$ref" : "#/components/schemas/PaymentState"
          },
          "total_amount" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 1450
          }
        }
      },
      "Link" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "https://an.example.link/from/payment/platform"
          },
          "method" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "GET"
          }
        },
        "description" : "A link related to a payment"
      },
      "Payer" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "PaymentDetailForSearch" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/PaymentLinksForSearch"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1200
          },
          "card_brand" : {
            "type" : "string",
            "description" : "Card Brand",
            "readOnly" : true,
            "example" : "Visa"
          },
          "card_details" : {
            "$ref" : "#/components/schemas/CardDetails"
          },
          "corporate_card_surcharge" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 250
          },
          "created_date" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "2016-01-21T17:15:000Z"
          },
          "delayed_capture" : {
            "type" : "boolean",
            "description" : "delayed capture flag",
            "readOnly" : true,
            "example" : false
          },
          "description" : {
            "type" : "string",
            "example" : "Your Service Description"
          },
          "email" : {
            "type" : "string",
            "example" : "your email"
          },
          "fee" : {
            "type" : "integer",
            "description" : "processing fee taken by the GOV.UK Pay platform, in pence. Only available depending on payment service provider",
            "format" : "int64",
            "readOnly" : true,
            "example" : 5
          },
          "language" : {
            "type" : "string",
            "example" : "en",
            "enum" : [ "en", "cy" ]
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "moto" : {
            "type" : "boolean",
            "description" : "Mail Order / Telephone Order (MOTO) payment flag",
            "readOnly" : true,
            "example" : false
          },
          "net_amount" : {
            "type" : "integer",
            "description" : "amount including all surcharges and less all fees, in pence. Only available depending on payment service provider",
            "format" : "int64",
            "readOnly" : true,
            "example" : 1195
          },
          "payment_id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "hu20sqlact5260q2nanm0q8u93"
          },
          "payment_provider" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "worldpay"
          },
          "provider_id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "reference-from-payment-gateway"
          },
          "reference" : {
            "type" : "string",
            "example" : "your-reference"
          },
          "refund_summary" : {
            "$ref" : "#/components/schemas/RefundSummary"
          },
          "return_url" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "http://your.service.domain/your-reference"
          },
          "settlement_summary" : {
            "$ref" : "#/components/schemas/PaymentSettlementSummary"
          },
          "state" : {
            "$ref" : "#/components/schemas/PaymentState"
          },
          "total_amount" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 1450
          }
        }
      },
      "PaymentError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "P0102"
          },
          "description" : {
            "type" : "string",
            "example" : "Invalid attribute value: amount. Must be less than or equal to 10000000"
          },
          "field" : {
            "type" : "string",
            "example" : "amount"
          }
        },
        "description" : "A Payment Error response"
      },
      "PaymentEvent" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/PaymentEventLink"
          },
          "payment_id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "hu20sqlact5260q2nanm0q8u93"
          },
          "state" : {
            "$ref" : "#/components/schemas/PaymentState"
          },
          "updated" : {
            "type" : "string",
            "description" : "updated",
            "readOnly" : true,
            "example" : "2017-01-10T16:44:48.646Z"
          }
        },
        "description" : "A List of Payment Events information"
      },
      "PaymentEventLink" : {
        "type" : "object",
        "properties" : {
          "payment_url" : {
            "$ref" : "#/components/schemas/Link"
          }
        },
        "description" : "Resource link for a payment of a payment event"
      },
      "PaymentEvents" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/PaymentLinksForEvents"
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaymentEvent"
            }
          },
          "payment_id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "hu20sqlact5260q2nanm0q8u93"
          }
        },
        "description" : "A List of Payment Events information"
      },
      "PaymentLinks" : {
        "type" : "object",
        "properties" : {
          "cancel" : {
            "$ref" : "#/components/schemas/PostLink"
          },
          "capture" : {
            "$ref" : "#/components/schemas/PostLink"
          },
          "events" : {
            "$ref" : "#/components/schemas/Link"
          },
          "next_url" : {
            "$ref" : "#/components/schemas/Link"
          },
          "next_url_post" : {
            "$ref" : "#/components/schemas/PostLink"
          },
          "refunds" : {
            "$ref" : "#/components/schemas/Link"
          },
          "self" : {
            "$ref" : "#/components/schemas/Link"
          }
        },
        "description" : "links for payment"
      },
      "PaymentLinksForEvents" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "$ref" : "#/components/schemas/Link"
          }
        },
        "description" : "links for events resource"
      },
      "PaymentLinksForSearch" : {
        "type" : "object",
        "properties" : {
          "cancel" : {
            "$ref" : "#/components/schemas/PostLink"
          },
          "capture" : {
            "$ref" : "#/components/schemas/PostLink"
          },
          "events" : {
            "$ref" : "#/components/schemas/Link"
          },
          "refunds" : {
            "$ref" : "#/components/schemas/Link"
          },
          "self" : {
            "$ref" : "#/components/schemas/Link"
          }
        },
        "description" : "links for search payment resource"
      },
      "PaymentRefundRequest" : {
        "required" : [ "amount" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "maximum" : 10000000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Amount in pence. Can't be more than the available amount for refunds",
            "format" : "int32",
            "example" : 150000
          },
          "refund_amount_available" : {
            "maximum" : 10000000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Amount in pence. Total amount still available before issuing the refund",
            "format" : "int32",
            "readOnly" : true,
            "example" : 200000
          }
        },
        "description" : "The Payment Refund Request Payload"
      },
      "PaymentSearchResults" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/SearchNavigationLinks"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 20
          },
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaymentDetailForSearch"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100
          }
        }
      },
      "PaymentSettlementSummary" : {
        "type" : "object",
        "properties" : {
          "capture_submit_time" : {
            "type" : "string",
            "description" : "Date and time capture request has been submitted. May be null if capture request was not immediately acknowledged by payment gateway.",
            "readOnly" : true,
            "example" : "2016-01-21T17:15:000Z"
          },
          "captured_date" : {
            "type" : "string",
            "description" : "Date of the capture event.",
            "readOnly" : true,
            "example" : "2016-01-21"
          },
          "settled_date" : {
            "type" : "string",
            "description" : "The date that the transaction was paid into the service's account.",
            "readOnly" : true,
            "example" : "2016-01-21"
          }
        },
        "description" : "A structure representing information about a settlement"
      },
      "PaymentState" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "What went wrong with the Payment if it finished with an error - error code",
            "readOnly" : true,
            "example" : "P010"
          },
          "finished" : {
            "type" : "boolean",
            "description" : "Whether the payment has finished",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "What went wrong with the Payment if it finished with an error - English message",
            "readOnly" : true,
            "example" : "User cancelled the payment"
          },
          "status" : {
            "type" : "string",
            "description" : "Current progress of the payment in its lifecycle",
            "readOnly" : true,
            "example" : "created"
          }
        },
        "description" : "A structure representing the current state of the payment in its lifecycle."
      },
      "PostLink" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "https://an.example.link/from/payment/platform"
          },
          "method" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "POST"
          },
          "params" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "example" : "\"description\":\"This is a value for a parameter called description\""
          },
          "type" : {
            "type" : "string",
            "example" : "application/x-www-form-urlencoded"
          }
        },
        "description" : "A POST link related to a payment"
      },
      "PrefilledCardholderDetails" : {
        "type" : "object",
        "properties" : {
          "billing_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "cardholder_name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "description" : "prefilled cardholder name",
            "example" : "J. Bogs"
          }
        }
      },
      "Refund" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/RefundLinksForSearch"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 120
          },
          "created_date" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "2017-01-10T16:52:07.855Z"
          },
          "refund_id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "act4c33g40j3edfmi8jknab84x"
          },
          "settlement_summary" : {
            "$ref" : "#/components/schemas/RefundSettlementSummary"
          },
          "status" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "success",
            "enum" : [ "submitted", "success", "error" ]
          }
        }
      },
      "RefundDetailForSearch" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/RefundLinksForSearch"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 120
          },
          "created_date" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "2017-01-10T16:52:07.855Z"
          },
          "refund_id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "act4c33g40j3edfmi8jknab84x"
          },
          "settlement_summary" : {
            "$ref" : "#/components/schemas/RefundSettlementSummary"
          },
          "status" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "success",
            "enum" : [ "submitted", "success", "error" ]
          }
        }
      },
      "RefundError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "P0102"
          },
          "description" : {
            "type" : "string",
            "example" : "Invalid attribute value: amountSubmitted. Must be less than or equal to 10000000"
          },
          "field" : {
            "type" : "string",
            "example" : "amount_submitted"
          }
        },
        "description" : "A Refund Error response"
      },
      "RefundForSearchResult" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "$ref" : "#/components/schemas/EmbeddedRefunds"
          },
          "_links" : {
            "$ref" : "#/components/schemas/RefundLinksForSearch"
          },
          "payment_id" : {
            "type" : "string",
            "example" : "hu20sqlact5260q2nanm0q8u93"
          }
        }
      },
      "RefundLinksForSearch" : {
        "type" : "object",
        "properties" : {
          "payment" : {
            "$ref" : "#/components/schemas/Link"
          },
          "self" : {
            "$ref" : "#/components/schemas/Link"
          }
        },
        "description" : "links for search refunds resource"
      },
      "RefundSearchResults" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/SearchNavigationLinks"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 20
          },
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RefundDetailForSearch"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100
          }
        }
      },
      "RefundSettlementSummary" : {
        "type" : "object",
        "properties" : {
          "settled_date" : {
            "type" : "string",
            "description" : "The date that the transaction was refunded from the service's account.",
            "readOnly" : true,
            "example" : "2016-01-21"
          }
        },
        "description" : "A structure representing information about a settlement for refunds"
      },
      "RefundSummary" : {
        "type" : "object",
        "properties" : {
          "amount_available" : {
            "type" : "integer",
            "description" : "Amount available for refund in pence",
            "format" : "int64",
            "readOnly" : true,
            "example" : 100
          },
          "amount_submitted" : {
            "type" : "integer",
            "description" : "Amount submitted for refunds on this Payment in pence",
            "format" : "int64",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Availability status of the refund",
            "example" : "available"
          }
        },
        "description" : "A structure representing the refunds availability"
      },
      "SearchNavigationLinks" : {
        "type" : "object",
        "properties" : {
          "first_page" : {
            "$ref" : "#/components/schemas/Link"
          },
          "last_page" : {
            "$ref" : "#/components/schemas/Link"
          },
          "next_page" : {
            "$ref" : "#/components/schemas/Link"
          },
          "prev_page" : {
            "$ref" : "#/components/schemas/Link"
          },
          "self" : {
            "$ref" : "#/components/schemas/Link"
          }
        },
        "description" : "Links to navigate through pages"
      }
    },
    "securitySchemes" : {
      "Authorization" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}