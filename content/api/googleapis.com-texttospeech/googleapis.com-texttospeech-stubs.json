{
  "mappings" : [ {
    "id" : "8518a971-6145-489c-9732-85a9ec3ddf48",
    "name" : "Synthesizes long form text asynchronously.",
    "request" : {
      "urlPath" : "/v1beta1/2ofzc0574go84iuu4yo70vo6bu0f1avjaz1lmukqdahq0ampjamp2g84rsyb17lmvlggxmaw4dxo25rqgsl9cc53uoppjhofmgvm6t6syg:synthesizeLongAudio",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Errol Renner\",\n  \"error\" : {\n    \"code\" : 365509657,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Omnis quas commodi maxime aliquam omnis vel. Eos placeat praesentium minima quia. Sit similique similique.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8518a971-6145-489c-9732-85a9ec3ddf48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:34.709561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.projects.locations.synthesizeLongAudio",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "f09f90c8-636b-4d48-92b8-02f24c15cabb",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Anderson+Price/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Tony Prosacco IV\",\n    \"error\" : {\n      \"code\" : 672882593,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Ut quis veritatis eligendi praesentium fugit consectetur rerum. Excepturi blanditiis molestiae qui a qui tenetur magni. Animi enim sed voluptas deserunt. Qui consequatur quas vel quasi quo.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Von Harvey\",\n    \"error\" : {\n      \"code\" : 1954067085,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Laborum laudantium illum cum esse. Magni expedita dolore. Numquam assumenda non natus dolor.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Zetta Heathcote III\",\n    \"error\" : {\n      \"code\" : 858256163,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Sed voluptatem autem qui quos. Consequatur quos et. Quam corporis aut et voluptatem. Architecto laudantium nemo voluptatem optio. Impedit veritatis at sint excepturi dolores.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Magali O'Kon\",\n    \"error\" : {\n      \"code\" : 670027869,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Consequatur distinctio vero hic a temporibus praesentium est. Nobis et voluptatum. Et illo dolorum quisquam rem maxime sit. Vel voluptatem voluptatem voluptas.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Michelina Kuhlman\",\n    \"error\" : {\n      \"code\" : 2060424868,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Sint velit iste veritatis non nemo. Voluptas minima sequi qui. Nesciunt numquam laudantium. Reprehenderit totam pariatur natus tenetur doloremque iure. Mollitia maxime voluptatibus accusamus consectet\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Randal Cole DDS\",\n    \"error\" : {\n      \"code\" : 1537414178,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Laudantium eos quidem soluta qui sint. Et aut repudiandae et et sit ut voluptas. Amet aut qui ut eum.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Aleen McClure I\",\n    \"error\" : {\n      \"code\" : 1180160754,\n      \"details\" : [ { } ],\n      \"message\" : \"Libero sit explicabo. Esse et aut ipsam et quo. Sunt saepe tempore est sapiente ratione. Iste quidem similique numquam aut. Deserunt eius quia.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Annelle Willms\",\n    \"error\" : {\n      \"code\" : 1742732150,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut voluptate at impedit. Molestias ex sit repellendus tenetur qui. Voluptatibus eum voluptatem.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"acfl03vno2yihizcbwa78je9cz85veoiq5yrk0l4w7ccslmco4stt1ueemu2w5c12pv9n9b8klaofxtkrgaubaeupql27cz3cjjphrvn8tnm34j8msgp763e6slq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f09f90c8-636b-4d48-92b8-02f24c15cabb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:34.70935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "1cb1f388-33ef-475a-85a8-cca31d7959a8",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Lynn+Stroman+DVM",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Lynwood Stroman\",\n  \"error\" : {\n    \"code\" : 1295531942,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Voluptate unde consequatur tenetur maxime sed dolore. Illum dignissimos animi. Repellendus voluptatem dolore incidunt quia beatae.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cb1f388-33ef-475a-85a8-cca31d7959a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:34.708334Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b6391a5f-1e38-4cad-a386-2b06063ecf73",
    "name" : "Returns a list of Voice supported for synthesis.",
    "request" : {
      "urlPath" : "/v1beta1/voices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"voices\" : [ {\n    \"languageCodes\" : [ \"49qr8wn4k3390ct83lgxikb2cerwtsfs2xbttl3tvas727hty1o0c1valkeutxcqn3aadj9hewf6sek5e4rsn4k6bae3y492y56y0o8fo8omqehthvxaut7emtdupj46npzyxta7\" ],\n    \"ssmlGender\" : \"SSML_VOICE_GENDER_UNSPECIFIED\",\n    \"name\" : \"Lorette Kemmer\",\n    \"naturalSampleRateHertz\" : 152955501\n  }, {\n    \"languageCodes\" : [ \"lhsjofnrvgves1dodx2eyr1j2116tesor4ikord25zl9gc4xsjnr\", \"9hxdc23k4oic46hsq1pj87zuo9k8bdrod699sk9ijt716ujafs1pvrf439nw6kdjdl5mewk161xg2icn17xm042m7x834klqil44dqkagzupooutvivqpgw6pufen5w9zn1b1iu4u4cvcdo6fod49tamk0ztybopia9m2od30n9zblnhy1kt8tsixu2z1fw5vzh\", \"ze42zhaabyu3sk2b2of53ykycco013qjyj1ct7mdxfdgkwe7k64t8\" ],\n    \"ssmlGender\" : \"SSML_VOICE_GENDER_UNSPECIFIED\",\n    \"name\" : \"Ashely Adams\",\n    \"naturalSampleRateHertz\" : 1171334662\n  }, {\n    \"languageCodes\" : [ \"8j939mjwi0zjhleo0jghtazgnojuv925u5duy16xtdgu1v5m6kvv64nxqj0ef9rd0fgo40nn8rah2y8u94na10je7m61ivpa1ld1diw8wbms\" ],\n    \"ssmlGender\" : \"MALE\",\n    \"name\" : \"Ali Mann\",\n    \"naturalSampleRateHertz\" : 364242490\n  }, {\n    \"languageCodes\" : [ \"ygwt0io6dpu70kgt8wi0dw0g2t281jdd8fmc8p191jwny16evxzc1juxt126l82ssyknl5ldomrapb819v7wj4lhozx1w4p065uv2gjzd2fapzd2c8oa03oh51c8fsp4ec0hs14qaetwrwty2ygsrdslnpxv9f7lsej369o2p3sdquu116a8x\", \"khrt20wovvphemxerz3xkudqi17s1lzostfjkgyzhn426w88xhwezobgrto3mccv2mi\", \"21vhd3ogkawe7zvqzh668ec7oj3ul97ssw8c1i5p5harxji7hjii0o73fialadn52q46qu8mhhogjwcc4frjgie6bcoac5ocvtnbqmhnyrmm23qug12q729xy9097gfig7ikiuf3g9dc1jix1xq9yc87ryrz\", \"kev9mp1whonltlhkmr0ma08yrss6s7gqv8rdjx5pw8zqr3fn4o3tgz94d6tdowylpdvh2uy368tgek99ju5irnjzo68u\", \"xq6h5aazvi0u5z6hzburarx08uh6s9ce2jctk8v38ug1ig94eco2is98z\", \"0hnp58uyu\", \"aown30cz5qv112f3qsvuy5yez1yko2lj1yxip6oro904uw6ybnwm86hd3a5inv33asbgxdsieyf4dg2md5hg5drb34151jftpr4jo9hm64dl8mcsat208bwewwe0jgg7qa7d7j2fxkqrkusrjofepgvk\", \"g878blrp34n46y2a1fl661t23dm8liln2bu8xqpdz4md07lz93h50g15mtzzgwxcd2ncdujoe8yvtfzf41l3j8e098qd0qvsh064vfswruda9\" ],\n    \"ssmlGender\" : \"SSML_VOICE_GENDER_UNSPECIFIED\",\n    \"name\" : \"Lizeth Stamm\",\n    \"naturalSampleRateHertz\" : 1882292915\n  }, {\n    \"languageCodes\" : [ \"cq0hwm21p1hmxbn8znwne946yqf5gpa98rxqapi6iupw1st5m1gk97nd3itjbyrj9glsixj2gx2gozdim\", \"u7z6797dkggmkyanpbzehcclv3q3dumkxrhzmt22zje7npdy1n6rg1tq0kzmj104j4otppejq\", \"ycjde8rgp6m0l2ao7kviup5jg47ta8m4mjzm489di6y7h0cqqaz2m6ymfhz3nhplump9sldkw5x515wyg70p37hqllwa3afmzaue3ml1k8\", \"a8grlcm6bgc1jox930rf7ie1lz2jsdyj\", \"0s51227jnin3dqjb6iefdvrbf1ktsrfxtkq3hs7sskf9gnvtghdhcatri5gtmrm4lckddl9vevyj8ntacr3xl\" ],\n    \"ssmlGender\" : \"SSML_VOICE_GENDER_UNSPECIFIED\",\n    \"name\" : \"Wilburn Mosciski DVM\",\n    \"naturalSampleRateHertz\" : 2074623659\n  }, {\n    \"languageCodes\" : [ \"mil7a2ed61rjf6tg5rzdyrovknz9znysaie2kajmvap2dxzlqv8wvgzr9d4lu8l8lcnnkpfis6cs688hx4ivbircc5feqzt1x1gyrn0we6kh2nc06que8posqut3rfrn0komvwh91xx9pvozggpd5xh239hu9iiryt5s\", \"0s2aju0p6bmr1wvd9156sz4ib0dc49tmnoe6hrazde7ygpvnzm446h0sv1fmhwq1twlc4gorj28csqg159zj\", \"l0qtkez5khs0kg95xw473bkokq55xrp4d0rzph4liwzz3oax2nfee6pe3bvkddvdgpt85w7zrq17t9igsvhv16bp7yiprqivhrcywf83rtlz7r5adlne8xg40gwqumuekv9vdmyq2gog8eyj2jf2o55zmfz8\", \"6xfqb2nz90pzf2ltbzpuilgw81xh4quswokgnw46cxlmz655asxbajw0hi4cwbd8bskwkdgc5gv3hnjzhwh\", \"618ubx248lkd5eoz9o34szgzlyxguuxp04m07ibn94ua7h1v26i4sydec92o7dpux6j0kxezk64m8clz403dw7rpidn9dlehy9sy44kmbh894osqxfmh8pmdn6qnosl57w2d1mcna6ge433oj2jll4htv10x1dpvr9j31bqujg\", \"0v5mvztcnovx9m3s35h8isdg9pk8djvkxqtclwtr8emirdu1xrx6wx7mua5sazbhhn6mqj1tyevbsnf7pwhowbfl2gciod28y9u6toe7gqzb91ppvshwzp22sqfvcntuuhcqqs0cgczgdp1ovthk7bnhydk1d7zvvz842qjlwhp58yn441\", \"je44lgq3aylkjptrlz0mu2szbwd9uosavbz7u2i8pwza0s6nnfnebg4wwo\" ],\n    \"ssmlGender\" : \"MALE\",\n    \"name\" : \"Alyce Heidenreich\",\n    \"naturalSampleRateHertz\" : 580578168\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6391a5f-1e38-4cad-a386-2b06063ecf73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:34.707886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.voices.list",
          "schema" : {
            "description" : "The message returned to the client by the `ListVoices` method.",
            "properties" : {
              "voices" : {
                "description" : "The list of voices.",
                "items" : {
                  "$ref" : "#/components/schemas/Voice"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "524a0602-0710-4440-af28-7fb2924a8e43",
    "name" : "Synthesizes speech synchronously: receive results after all text input has been ...",
    "request" : {
      "urlPath" : "/v1beta1/text:synthesize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"audioContent\" : \"Rerum itaque vel amet velit voluptas consequatur. Qui ut itaque facilis officia. Voluptatum aut error rerum qui quae officiis. Expedita voluptas nihil est sunt officiis occaecati illo.\",\n  \"timepoints\" : [ {\n    \"timeSeconds\" : 1.5028475998718415E308,\n    \"markName\" : \"Roxy Mitchell\"\n  }, {\n    \"timeSeconds\" : 5.292452638828296E307,\n    \"markName\" : \"Zina Wolff\"\n  }, {\n    \"timeSeconds\" : 1.7094297835138803E308,\n    \"markName\" : \"Venus Wilkinson\"\n  }, {\n    \"timeSeconds\" : 1.382753325845342E308,\n    \"markName\" : \"Rupert Crooks\"\n  }, {\n    \"timeSeconds\" : 1.5411006394202829E308,\n    \"markName\" : \"Mrs. Colette Abshire\"\n  }, {\n    \"timeSeconds\" : 1.1928788297370916E308,\n    \"markName\" : \"Ernest Bins\"\n  } ],\n  \"audioConfig\" : {\n    \"sampleRateHertz\" : 1138424272,\n    \"volumeGainDb\" : 1.2423800455092607E308,\n    \"speakingRate\" : 3.48371562655818E307,\n    \"audioEncoding\" : \"ALAW\",\n    \"pitch\" : 1.0872183217364165E308,\n    \"effectsProfileId\" : [ \"yx4z97enrazmwq83xgpw3s0053afutj1wc64mcvkv2s9ao7yezu0wlm906a00ysn5kaxjyzqc9tg1oazkx7hvw11ytgbpx7ll0hkpumx551fdvyzk1pcw0dpbjswdyoo1q3f2f4imjh3a46yl1007lbkrilf8y88lskpoq2h861v4gmf873xcc6f0g58asec8c7yd\", \"cvyerzqfctpf6wndkof21v80w60fnv9ljrnaasg6hooitl6mgy3qw0i41vcb58ij63a3vy3kng2rv0qav2v9lojh931\", \"jque58affbw\", \"wprxzcqur6gk62j227zawb2d22rvuqa1zzelin3ddjmtg547x07ohpgall2kkrlj7zj77i7tr0wpxqhyrsjfvvseikvomlqp9yn47aoizwqoitr4axov1j6lftrsqlxyxqrz4vwcanbby1lnkqfuktlqgrkm36vcjhlwkd\", \"nrolxurfik2sy8it69lyxzfrtytkum4g4jsp1zt0g9oiwlotueno7f7nsjyrzz145n6jlup20yx8hc47polfni79l5bt7xn1i49o21z21z8qehg3a32jussf611c73aqs1qc0auwrf2sewfa1yj84dop3zztr5m094ovmc8erv6ac2l3em0qgdg\", \"lbp02096qrxnie51k0aj5vwhndih7b6xg76i4shqw0wq0mj1mmsd328zgmyvmcqb\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "524a0602-0710-4440-af28-7fb2924a8e43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:34.707183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.text.synthesize",
          "schema" : {
            "description" : "The message returned to the client by the `SynthesizeSpeech` method.",
            "properties" : {
              "audioConfig" : {
                "$ref" : "#/components/schemas/AudioConfig"
              },
              "audioContent" : {
                "description" : "The audio data bytes encoded as specified in the request, including the header for encodings that are wrapped in containers (e.g. MP3, OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note: as with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
                "format" : "byte",
                "type" : "string"
              },
              "timepoints" : {
                "description" : "A link between a position in the original request input and a corresponding time in the output audio. It's only supported via `` of SSML input.",
                "items" : {
                  "$ref" : "#/components/schemas/Timepoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}