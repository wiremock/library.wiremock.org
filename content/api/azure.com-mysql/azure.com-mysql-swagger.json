{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "MySQLManagementClient",
    "description" : "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.",
    "version" : "2017-12-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.DBforMySQL/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available REST API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability" : {
      "post" : {
        "tags" : [ "CheckNameAvailability" ],
        "description" : "Check the availability of name for resource",
        "operationId" : "CheckNameAvailability_Execute",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for checking if resource name is available.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameAvailabilityRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameAvailability"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/performanceTiers" : {
      "get" : {
        "tags" : [ "LocationBasedPerformanceTier" ],
        "description" : "List all the performance tiers at specified location in a given subscription.",
        "operationId" : "LocationBasedPerformanceTier_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationName",
          "in" : "path",
          "description" : "The name of the location.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PerformanceTierListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/servers" : {
      "get" : {
        "tags" : [ "Servers" ],
        "description" : "List all the servers in a given subscription.",
        "operationId" : "Servers_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers" : {
      "get" : {
        "tags" : [ "Servers" ],
        "description" : "List all the servers in a given resource group.",
        "operationId" : "Servers_ListByResourceGroup",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}" : {
      "get" : {
        "tags" : [ "Servers" ],
        "description" : "Gets information about a server.",
        "operationId" : "Servers_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Server"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Servers" ],
        "description" : "Creates a new server or updates an existing server. The update action will overwrite the existing server.",
        "operationId" : "Servers_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for creating or updating a server.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerForCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Server"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Server"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "Servers" ],
        "description" : "Deletes a server.",
        "operationId" : "Servers_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      },
      "patch" : {
        "tags" : [ "Servers" ],
        "description" : "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
        "operationId" : "Servers_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for updating a server.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Server"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/Administrators/activeDirectory" : {
      "get" : {
        "tags" : [ "ServerAdministrators" ],
        "description" : "Gets information about a AAD server administrator.",
        "operationId" : "ServerAdministrators_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerAdministratorResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ServerAdministrators" ],
        "description" : "Creates or update active directory administrator on an existing server. The update action will overwrite the existing administrator.",
        "operationId" : "ServerAdministrators_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for creating or updating an AAD server administrator.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerAdministratorResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerAdministratorResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerAdministratorResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ServerAdministrators" ],
        "description" : "Deletes AAD Administrator.",
        "operationId" : "ServerAdministrators_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerAdministratorResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerAdministratorResource"
                }
              }
            }
          },
          "204" : {
            "description" : "NoContent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerAdministratorResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/administrators" : {
      "get" : {
        "tags" : [ "ServerAdministrators" ],
        "description" : "Returns a list of server Administrators.",
        "operationId" : "ServerAdministrators_ListByServer",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerAdministratorResourceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations" : {
      "get" : {
        "tags" : [ "Configurations" ],
        "description" : "List all the configurations in a given server.",
        "operationId" : "Configurations_ListByServer",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}" : {
      "get" : {
        "tags" : [ "Configurations" ],
        "description" : "Gets information about a configuration of server.",
        "operationId" : "Configurations_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationName",
          "in" : "path",
          "description" : "The name of the server configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Configuration"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Configurations" ],
        "description" : "Updates a configuration of a server.",
        "operationId" : "Configurations_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationName",
          "in" : "path",
          "description" : "The name of the server configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for updating a server configuration.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Configuration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Configuration"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases" : {
      "get" : {
        "tags" : [ "Databases" ],
        "description" : "List all the databases in a given server.",
        "operationId" : "Databases_ListByServer",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}" : {
      "get" : {
        "tags" : [ "Databases" ],
        "description" : "Gets information about a database.",
        "operationId" : "Databases_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Database"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Databases" ],
        "description" : "Creates a new database or updates an existing database.",
        "operationId" : "Databases_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for creating or updating a database.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Database"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Database"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Database"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "Databases" ],
        "description" : "Deletes a database.",
        "operationId" : "Databases_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules" : {
      "get" : {
        "tags" : [ "FirewallRules" ],
        "description" : "List all the firewall rules in a given server.",
        "operationId" : "FirewallRules_ListByServer",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FirewallRuleListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}" : {
      "get" : {
        "tags" : [ "FirewallRules" ],
        "description" : "Gets information about a server firewall rule.",
        "operationId" : "FirewallRules_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firewallRuleName",
          "in" : "path",
          "description" : "The name of the server firewall rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FirewallRule"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "FirewallRules" ],
        "description" : "Creates a new firewall rule or updates an existing firewall rule.",
        "operationId" : "FirewallRules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firewallRuleName",
          "in" : "path",
          "description" : "The name of the server firewall rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for creating or updating a firewall rule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FirewallRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FirewallRule"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FirewallRule"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "FirewallRules" ],
        "description" : "Deletes a server firewall rule.",
        "operationId" : "FirewallRules_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firewallRuleName",
          "in" : "path",
          "description" : "The name of the server firewall rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/logFiles" : {
      "get" : {
        "tags" : [ "LogFiles" ],
        "description" : "List all the log files in a given server.",
        "operationId" : "LogFiles_ListByServer",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogFileListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/replicas" : {
      "get" : {
        "tags" : [ "Replicas" ],
        "description" : "List all the replicas for a given server.",
        "operationId" : "Replicas_ListByServer",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/restart" : {
      "post" : {
        "tags" : [ "ServerRestart" ],
        "description" : "Restarts a server.",
        "operationId" : "Servers_Restart",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}" : {
      "get" : {
        "tags" : [ "ServerSecurityAlertPolicies" ],
        "description" : "Get a server's security alert policy.",
        "operationId" : "ServerSecurityAlertPolicies_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "securityAlertPolicyName",
          "in" : "path",
          "description" : "The name of the security alert policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the server threat detection policy.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerSecurityAlertPolicy"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation of getting security alert policies failed."
          }
        }
      },
      "put" : {
        "tags" : [ "ServerSecurityAlertPolicies" ],
        "description" : "Creates or updates a threat detection policy.",
        "operationId" : "ServerSecurityAlertPolicies_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "securityAlertPolicyName",
          "in" : "path",
          "description" : "The name of the threat detection policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The server security alert policy.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerSecurityAlertPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the threat detection policy.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerSecurityAlertPolicy"
                }
              }
            }
          },
          "202" : {
            "description" : "Created request to set the server threat detection policy."
          },
          "default" : {
            "description" : "Error response describing why the operation of setting security alert policies failed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules" : {
      "get" : {
        "tags" : [ "VirtualNetworkRules" ],
        "description" : "Gets a list of virtual network rules in a server.",
        "operationId" : "VirtualNetworkRules_ListByServer",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of virtual network rules.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRuleListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}" : {
      "get" : {
        "tags" : [ "VirtualNetworkRules" ],
        "description" : "Gets a virtual network rule.",
        "operationId" : "VirtualNetworkRules_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualNetworkRuleName",
          "in" : "path",
          "description" : "The name of the virtual network rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a specified virtual network rule.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      },
      "put" : {
        "tags" : [ "VirtualNetworkRules" ],
        "description" : "Creates or updates an existing virtual network rule.",
        "operationId" : "VirtualNetworkRules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualNetworkRuleName",
          "in" : "path",
          "description" : "The name of the virtual network rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The requested virtual Network Rule Resource state.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VirtualNetworkRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated a virtual network rule.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            }
          },
          "201" : {
            "description" : "Successfully created a virtual network rule.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VirtualNetworkRuleNotEnabled - Azure SQL Server Virtual Network Rule feature is not enabled\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        }
      },
      "delete" : {
        "tags" : [ "VirtualNetworkRules" ],
        "description" : "Deletes the virtual network rule with the given name.",
        "operationId" : "VirtualNetworkRules_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualNetworkRuleName",
          "in" : "path",
          "description" : "The name of the virtual network rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the virtual network rule."
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "The specified virtual network rule does not exist."
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CloudError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/CloudErrorBody"
          }
        },
        "description" : "An error response from the Batch service."
      },
      "CloudErrorBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
          },
          "details" : {
            "type" : "array",
            "description" : "A list of additional details about the error.",
            "items" : {
              "$ref" : "#/components/schemas/CloudErrorBody"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A message describing the error, intended to be suitable for display in a user interface."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the particular error. For example, the name of the property in error."
          }
        },
        "description" : "An error response from the Batch service."
      },
      "Configuration" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ConfigurationProperties"
          }
        },
        "description" : "Represents a Configuration.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "ConfigurationListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of server configurations.",
            "items" : {
              "$ref" : "#/components/schemas/Configuration"
            }
          }
        },
        "description" : "A list of server configurations."
      },
      "ConfigurationProperties" : {
        "type" : "object",
        "properties" : {
          "allowedValues" : {
            "type" : "string",
            "description" : "Allowed values of the configuration.",
            "readOnly" : true
          },
          "dataType" : {
            "type" : "string",
            "description" : "Data type of the configuration.",
            "readOnly" : true
          },
          "defaultValue" : {
            "type" : "string",
            "description" : "Default value of the configuration.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the configuration.",
            "readOnly" : true
          },
          "source" : {
            "type" : "string",
            "description" : "Source of the configuration."
          },
          "value" : {
            "type" : "string",
            "description" : "Value of the configuration."
          }
        },
        "description" : "The properties of a configuration."
      },
      "Database" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DatabaseProperties"
          }
        },
        "description" : "Represents a Database.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "DatabaseListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of databases housed in a server",
            "items" : {
              "$ref" : "#/components/schemas/Database"
            }
          }
        },
        "description" : "A List of databases."
      },
      "DatabaseProperties" : {
        "type" : "object",
        "properties" : {
          "charset" : {
            "type" : "string",
            "description" : "The charset of the database."
          },
          "collation" : {
            "type" : "string",
            "description" : "The collation of the database."
          }
        },
        "description" : "The properties of a database."
      },
      "FirewallRule" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FirewallRuleProperties"
          }
        },
        "description" : "Represents a server firewall rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "FirewallRuleListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of firewall rules in a server.",
            "items" : {
              "$ref" : "#/components/schemas/FirewallRule"
            }
          }
        },
        "description" : "A list of firewall rules."
      },
      "FirewallRuleProperties" : {
        "required" : [ "endIpAddress", "startIpAddress" ],
        "type" : "object",
        "properties" : {
          "endIpAddress" : {
            "pattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "type" : "string",
            "description" : "The end IP address of the server firewall rule. Must be IPv4 format."
          },
          "startIpAddress" : {
            "pattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "type" : "string",
            "description" : "The start IP address of the server firewall rule. Must be IPv4 format."
          }
        },
        "description" : "The properties of a server firewall rule."
      },
      "LogFile" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the log file."
          },
          "properties" : {
            "$ref" : "#/components/schemas/LogFileProperties"
          }
        },
        "description" : "Represents a log file.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "LogFileListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of log files.",
            "items" : {
              "$ref" : "#/components/schemas/LogFile"
            }
          }
        },
        "description" : "A list of log files."
      },
      "LogFileProperties" : {
        "type" : "object",
        "properties" : {
          "createdTime" : {
            "type" : "string",
            "description" : "Creation timestamp of the log file.",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastModifiedTime" : {
            "type" : "string",
            "description" : "Last modified timestamp of the log file.",
            "format" : "date-time",
            "readOnly" : true
          },
          "sizeInKB" : {
            "type" : "integer",
            "description" : "Size of the log file.",
            "format" : "int64"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the log file."
          },
          "url" : {
            "type" : "string",
            "description" : "The url to download the log file from."
          }
        },
        "description" : "The properties of a log file."
      },
      "NameAvailability" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Error Message."
          },
          "nameAvailable" : {
            "type" : "boolean",
            "description" : "Indicates whether the resource name is available."
          },
          "reason" : {
            "type" : "string",
            "description" : "Reason for name being unavailable."
          }
        },
        "description" : "Represents a resource name availability."
      },
      "NameAvailabilityRequest" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Resource name to verify."
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type used for verification."
          }
        },
        "description" : "Request from client to check resource name availability."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the operation being performed on this particular object.",
            "readOnly" : true
          },
          "origin" : {
            "type" : "string",
            "description" : "The intended executor of the operation.",
            "readOnly" : true,
            "enum" : [ "NotSpecified", "user", "system" ]
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "Additional descriptions for the operation.",
            "readOnly" : true
          }
        },
        "description" : "REST API operation definition."
      },
      "OperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Operation description.",
            "readOnly" : true
          },
          "operation" : {
            "type" : "string",
            "description" : "Localized friendly name for the operation.",
            "readOnly" : true
          },
          "provider" : {
            "type" : "string",
            "description" : "Operation resource provider name.",
            "readOnly" : true
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource on which the operation is performed.",
            "readOnly" : true
          }
        },
        "description" : "Display metadata associated with the operation."
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of resource provider operations.",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "A list of resource provider operations."
      },
      "PerformanceTierListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of performance tiers",
            "items" : {
              "$ref" : "#/components/schemas/PerformanceTierProperties"
            }
          }
        },
        "description" : "A list of performance tiers."
      },
      "PerformanceTierProperties" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the performance tier."
          },
          "serviceLevelObjectives" : {
            "type" : "array",
            "description" : "Service level objectives associated with the performance tier",
            "items" : {
              "$ref" : "#/components/schemas/PerformanceTierServiceLevelObjectives"
            }
          }
        },
        "description" : "Performance tier properties"
      },
      "PerformanceTierServiceLevelObjectives" : {
        "type" : "object",
        "properties" : {
          "edition" : {
            "type" : "string",
            "description" : "Edition of the performance tier."
          },
          "hardwareGeneration" : {
            "type" : "string",
            "description" : "Hardware generation associated with the service level objective"
          },
          "id" : {
            "type" : "string",
            "description" : "ID for the service level objective."
          },
          "maxBackupRetentionDays" : {
            "type" : "integer",
            "description" : "Maximum Backup retention in days for the performance tier edition"
          },
          "maxStorageMB" : {
            "type" : "integer",
            "description" : "Max storage allowed for a server.",
            "format" : "int32"
          },
          "minBackupRetentionDays" : {
            "type" : "integer",
            "description" : "Minimum Backup retention in days for the performance tier edition"
          },
          "minStorageMB" : {
            "type" : "integer",
            "description" : "Max storage allowed for a server.",
            "format" : "int32"
          },
          "vCore" : {
            "type" : "integer",
            "description" : "vCore associated with the service level objective"
          }
        },
        "description" : "Service level objectives for performance tier."
      },
      "ProxyResource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "Resource properties."
      },
      "ResourceIdentity" : {
        "type" : "object",
        "properties" : {
          "principalId" : {
            "type" : "string",
            "description" : "The Azure Active Directory principal id.",
            "format" : "uuid",
            "readOnly" : true
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The Azure Active Directory tenant id.",
            "format" : "uuid",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.",
            "enum" : [ "SystemAssigned" ]
          }
        },
        "description" : "Azure Active Directory identity configuration for a resource."
      },
      "SecurityAlertPolicyProperties" : {
        "required" : [ "state" ],
        "type" : "object",
        "properties" : {
          "disabledAlerts" : {
            "type" : "array",
            "description" : "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly",
            "items" : {
              "type" : "string"
            }
          },
          "emailAccountAdmins" : {
            "type" : "boolean",
            "description" : "Specifies that the alert is sent to the account administrators."
          },
          "emailAddresses" : {
            "type" : "array",
            "description" : "Specifies an array of e-mail addresses to which the alert is sent.",
            "items" : {
              "type" : "string"
            }
          },
          "retentionDays" : {
            "type" : "integer",
            "description" : "Specifies the number of days to keep in the Threat Detection audit logs.",
            "format" : "int32"
          },
          "state" : {
            "type" : "string",
            "description" : "Specifies the state of the policy, whether it is enabled or disabled.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "storageAccountAccessKey" : {
            "type" : "string",
            "description" : "Specifies the identifier key of the Threat Detection audit storage account."
          },
          "storageEndpoint" : {
            "type" : "string",
            "description" : "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs."
          }
        },
        "description" : "Properties of a security alert policy."
      },
      "Server" : {
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/ResourceIdentity"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ServerProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          }
        },
        "description" : "Represents a server.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "ServerAdministratorProperties" : {
        "required" : [ "administratorType", "login", "sid", "tenantId" ],
        "type" : "object",
        "properties" : {
          "administratorType" : {
            "type" : "string",
            "description" : "The type of administrator.",
            "enum" : [ "ActiveDirectory" ]
          },
          "login" : {
            "type" : "string",
            "description" : "The server administrator login value."
          },
          "sid" : {
            "type" : "string",
            "description" : "The server administrator Sid (Secure ID).",
            "format" : "uuid"
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The server Active Directory Administrator tenant id.",
            "format" : "uuid"
          }
        },
        "description" : "The properties of an server Administrator."
      },
      "ServerAdministratorResource" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ServerAdministratorProperties"
          }
        },
        "description" : "Represents a and external administrator to be created.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "ServerAdministratorResourceListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of server Active Directory Administrators for the server.",
            "items" : {
              "$ref" : "#/components/schemas/ServerAdministratorResource"
            }
          }
        },
        "description" : "The response to a list Active Directory Administrators request."
      },
      "ServerForCreate" : {
        "required" : [ "location", "properties" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location the resource resides in."
          },
          "properties" : {
            "$ref" : "#/components/schemas/ServerPropertiesForCreate"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Application-specific metadata in the form of key-value pairs."
          }
        },
        "description" : "Represents a server to be created."
      },
      "ServerListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of servers",
            "items" : {
              "$ref" : "#/components/schemas/Server"
            }
          }
        },
        "description" : "A list of servers."
      },
      "ServerProperties" : {
        "type" : "object",
        "properties" : {
          "administratorLogin" : {
            "type" : "string",
            "description" : "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
          },
          "earliestRestoreDate" : {
            "type" : "string",
            "description" : "Earliest restore point creation time (ISO8601 format)",
            "format" : "date-time"
          },
          "fullyQualifiedDomainName" : {
            "type" : "string",
            "description" : "The fully qualified domain name of a server."
          },
          "masterServerId" : {
            "type" : "string",
            "description" : "The master server id of a replica server."
          },
          "replicaCapacity" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The maximum number of replicas that a master server can have.",
            "format" : "int32"
          },
          "replicationRole" : {
            "type" : "string",
            "description" : "The replication role of the server."
          },
          "sslEnforcement" : {
            "$ref" : "#/components/schemas/SslEnforcement"
          },
          "storageProfile" : {
            "$ref" : "#/components/schemas/StorageProfile"
          },
          "userVisibleState" : {
            "type" : "string",
            "description" : "A state of a server that is visible to user.",
            "enum" : [ "Ready", "Dropping", "Disabled" ]
          },
          "version" : {
            "$ref" : "#/components/schemas/ServerVersion"
          }
        },
        "description" : "The properties of a server."
      },
      "ServerPropertiesForCreate" : {
        "required" : [ "createMode" ],
        "type" : "object",
        "properties" : {
          "createMode" : {
            "type" : "string",
            "description" : "The mode to create a new server.",
            "enum" : [ "Default", "PointInTimeRestore", "GeoRestore", "Replica" ]
          },
          "sslEnforcement" : {
            "$ref" : "#/components/schemas/SslEnforcement"
          },
          "storageProfile" : {
            "$ref" : "#/components/schemas/StorageProfile"
          },
          "version" : {
            "$ref" : "#/components/schemas/ServerVersion"
          }
        },
        "description" : "The properties used to create a new server.",
        "discriminator" : {
          "propertyName" : "createMode"
        }
      },
      "ServerPropertiesForDefaultCreate" : {
        "required" : [ "administratorLogin", "administratorLoginPassword" ],
        "properties" : {
          "administratorLogin" : {
            "type" : "string",
            "description" : "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
          },
          "administratorLoginPassword" : {
            "type" : "string",
            "description" : "The password of the administrator login.",
            "format" : "password"
          }
        },
        "description" : "The properties used to create a new server.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ServerPropertiesForCreate"
        } ]
      },
      "ServerPropertiesForGeoRestore" : {
        "required" : [ "sourceServerId" ],
        "properties" : {
          "sourceServerId" : {
            "type" : "string",
            "description" : "The source server id to restore from."
          }
        },
        "description" : "The properties used to create a new server by restoring to a different region from a geo replicated backup.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ServerPropertiesForCreate"
        } ]
      },
      "ServerPropertiesForReplica" : {
        "required" : [ "sourceServerId" ],
        "properties" : {
          "sourceServerId" : {
            "type" : "string",
            "description" : "The master server id to create replica from."
          }
        },
        "description" : "The properties to create a new replica.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ServerPropertiesForCreate"
        } ]
      },
      "ServerPropertiesForRestore" : {
        "required" : [ "restorePointInTime", "sourceServerId" ],
        "properties" : {
          "restorePointInTime" : {
            "type" : "string",
            "description" : "Restore point creation time (ISO8601 format), specifying the time to restore from.",
            "format" : "date-time"
          },
          "sourceServerId" : {
            "type" : "string",
            "description" : "The source server id to restore from."
          }
        },
        "description" : "The properties used to create a new server by restoring from a backup.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ServerPropertiesForCreate"
        } ]
      },
      "ServerSecurityAlertPolicy" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SecurityAlertPolicyProperties"
          }
        },
        "description" : "A server security alert policy.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "ServerUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "administratorLoginPassword" : {
                "type" : "string",
                "description" : "The password of the administrator login.",
                "format" : "password"
              },
              "replicationRole" : {
                "type" : "string",
                "description" : "The replication role of the server."
              },
              "sslEnforcement" : {
                "$ref" : "#/components/schemas/SslEnforcement"
              },
              "storageProfile" : {
                "$ref" : "#/components/schemas/StorageProfile"
              },
              "version" : {
                "$ref" : "#/components/schemas/ServerVersion"
              }
            },
            "description" : "The properties that can be updated for a server."
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Application-specific metadata in the form of key-value pairs."
          }
        },
        "description" : "Parameters allowed to update for a server."
      },
      "ServerVersion" : {
        "type" : "string",
        "description" : "The version of a server.",
        "enum" : [ "5.6", "5.7", "8.0" ]
      },
      "Sku" : {
        "type" : "object",
        "properties" : {
          "capacity" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The scale up/out capacity, representing server's compute units.",
            "format" : "int32"
          },
          "family" : {
            "type" : "string",
            "description" : "The family of hardware."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8."
          },
          "size" : {
            "type" : "string",
            "description" : "The size code, to be interpreted by resource as appropriate."
          },
          "tier" : {
            "type" : "string",
            "description" : "The tier of the particular SKU, e.g. Basic.",
            "enum" : [ "Basic", "GeneralPurpose", "MemoryOptimized" ]
          }
        },
        "description" : "Billing information related properties of a server."
      },
      "SslEnforcement" : {
        "type" : "string",
        "description" : "Enable ssl enforcement or not when connect to server.",
        "enum" : [ "Enabled", "Disabled" ]
      },
      "StorageProfile" : {
        "type" : "object",
        "properties" : {
          "backupRetentionDays" : {
            "type" : "integer",
            "description" : "Backup retention days for the server."
          },
          "geoRedundantBackup" : {
            "type" : "string",
            "description" : "Enable Geo-redundant or not for server backup.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "storageAutogrow" : {
            "type" : "string",
            "description" : "Enable Storage Auto Grow.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "storageMB" : {
            "type" : "integer",
            "description" : "Max storage allowed for a server.",
            "format" : "int32"
          }
        },
        "description" : "Storage Profile properties of a server"
      },
      "TrackedResource" : {
        "required" : [ "location" ],
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location the resource resides in."
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Application-specific metadata in the form of key-value pairs."
          }
        },
        "description" : "Resource properties including location and tags for track resources.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "VirtualNetworkRule" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/VirtualNetworkRuleProperties"
          }
        },
        "description" : "A virtual network rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "VirtualNetworkRuleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VirtualNetworkRule"
            }
          }
        },
        "description" : "A list of virtual network rules."
      },
      "VirtualNetworkRuleProperties" : {
        "required" : [ "virtualNetworkSubnetId" ],
        "type" : "object",
        "properties" : {
          "ignoreMissingVnetServiceEndpoint" : {
            "type" : "boolean",
            "description" : "Create firewall rule before the virtual network has vnet service endpoint enabled."
          },
          "state" : {
            "type" : "string",
            "description" : "Virtual Network Rule State",
            "readOnly" : true,
            "enum" : [ "Initializing", "InProgress", "Ready", "Deleting", "Unknown" ]
          },
          "virtualNetworkSubnetId" : {
            "type" : "string",
            "description" : "The ARM resource id of the virtual network subnet."
          }
        },
        "description" : "Properties of a virtual network rule."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for the request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ConfigurationNameParameter" : {
        "name" : "configurationName",
        "in" : "path",
        "description" : "The name of the server configuration.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "DatabaseNameParameter" : {
        "name" : "databaseName",
        "in" : "path",
        "description" : "The name of the database.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "FirewallRuleNameParameter" : {
        "name" : "firewallRuleName",
        "in" : "path",
        "description" : "The name of the server firewall rule.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "LocationNameParameter" : {
        "name" : "locationName",
        "in" : "path",
        "description" : "The name of the location.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SecurityAlertPolicyNameParameter" : {
        "name" : "securityAlertPolicyName",
        "in" : "path",
        "description" : "The name of the security alert policy.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "default" ]
        }
      },
      "ServerNameParameter" : {
        "name" : "serverName",
        "in" : "path",
        "description" : "The name of the server.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription ID that identifies an Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "virtualNetworkRuleNameParameter" : {
        "name" : "virtualNetworkRuleName",
        "in" : "path",
        "description" : "The name of the virtual network rule.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}