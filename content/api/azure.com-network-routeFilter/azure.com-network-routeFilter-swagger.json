{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "NetworkManagementClient",
    "description" : "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version" : "2019-08-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters" : {
      "get" : {
        "tags" : [ "RouteFilters" ],
        "description" : "Gets all route filters in a subscription.",
        "operationId" : "RouteFilters_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request successful. The operation returns a list of Route Filter resources.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilterListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters" : {
      "get" : {
        "tags" : [ "RouteFilters" ],
        "description" : "Gets all route filters in a resource group.",
        "operationId" : "RouteFilters_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request successful. The operation returns a list of Route Filter resources.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilterListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}" : {
      "get" : {
        "tags" : [ "RouteFilters" ],
        "description" : "Gets the specified route filter.",
        "operationId" : "RouteFilters_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeFilterName",
          "in" : "path",
          "description" : "The name of the route filter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Expands referenced express route bgp peering resources.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request successful. The operation returns the resulting Route Filter resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilter"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RouteFilters" ],
        "description" : "Creates or updates a route filter in a specified resource group.",
        "operationId" : "RouteFilters_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeFilterName",
          "in" : "path",
          "description" : "The name of the route filter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the create or update route filter operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RouteFilter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Request successful. The operation returns the resulting Route Filter resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilter"
                }
              }
            }
          },
          "201" : {
            "description" : "Create successful. The operation returns the resulting Route Filter resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilter"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RouteFilters" ],
        "description" : "Deletes the specified route filter.",
        "operationId" : "RouteFilters_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeFilterName",
          "in" : "path",
          "description" : "The name of the route filter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete successful."
          },
          "202" : {
            "description" : "Accepted and the operation will complete asynchronously."
          },
          "204" : {
            "description" : "Delete successful."
          }
        }
      },
      "patch" : {
        "tags" : [ "RouteFilters" ],
        "description" : "Updates a route filter in a specified resource group.",
        "operationId" : "RouteFilters_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeFilterName",
          "in" : "path",
          "description" : "The name of the route filter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the update route filter operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchRouteFilter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Request successful. The operation returns the resulting Route Filter resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilter"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules" : {
      "get" : {
        "tags" : [ "RouteFilterRules" ],
        "description" : "Gets all RouteFilterRules in a route filter.",
        "operationId" : "RouteFilterRules_ListByRouteFilter",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeFilterName",
          "in" : "path",
          "description" : "The name of the route filter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request successful. The operation returns a list of Route Filter Rule resources.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilterRuleListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}" : {
      "get" : {
        "tags" : [ "RouteFilterRules" ],
        "description" : "Gets the specified rule from a route filter.",
        "operationId" : "RouteFilterRules_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeFilterName",
          "in" : "path",
          "description" : "The name of the route filter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleName",
          "in" : "path",
          "description" : "The name of the rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request successful. The operation returns the resulting Route Filter Rule resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilterRule"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RouteFilterRules" ],
        "description" : "Creates or updates a route in the specified route filter.",
        "operationId" : "RouteFilterRules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeFilterName",
          "in" : "path",
          "description" : "The name of the route filter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleName",
          "in" : "path",
          "description" : "The name of the route filter rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the create or update route filter rule operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RouteFilterRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Update successful. The operation returns the resulting Route Filter Rule resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilterRule"
                }
              }
            }
          },
          "201" : {
            "description" : "Create successful. The operation returns the resulting Route Filter Rule resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilterRule"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RouteFilterRules" ],
        "description" : "Deletes the specified rule from a route filter.",
        "operationId" : "RouteFilterRules_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeFilterName",
          "in" : "path",
          "description" : "The name of the route filter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleName",
          "in" : "path",
          "description" : "The name of the rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Accepted."
          },
          "202" : {
            "description" : "Accepted and the operation will complete asynchronously."
          },
          "204" : {
            "description" : "Rule was deleted or not found."
          }
        }
      },
      "patch" : {
        "tags" : [ "RouteFilterRules" ],
        "description" : "Updates a route in the specified route filter.",
        "operationId" : "RouteFilterRules_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeFilterName",
          "in" : "path",
          "description" : "The name of the route filter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleName",
          "in" : "path",
          "description" : "The name of the route filter rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the update route filter rule operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchRouteFilterRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Update successful. The operation returns the resulting Route Filter Rule resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RouteFilterRule"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "PatchRouteFilter" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "A unique read-only string that changes whenever the resource is updated.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/RouteFilterPropertiesFormat"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "Route Filter Resource.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID."
            }
          },
          "description" : "Reference to another subresource."
        } ]
      },
      "PatchRouteFilterRule" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "A unique read-only string that changes whenever the resource is updated.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/RouteFilterRulePropertiesFormat"
          }
        },
        "description" : "Route Filter Rule Resource.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID."
            }
          },
          "description" : "Reference to another subresource."
        } ]
      },
      "RouteFilter" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "A unique read-only string that changes whenever the resource is updated.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/RouteFilterPropertiesFormat"
          }
        },
        "description" : "Route Filter Resource.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID."
            },
            "location" : {
              "type" : "string",
              "description" : "Resource location."
            },
            "name" : {
              "type" : "string",
              "description" : "Resource name.",
              "readOnly" : true
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            },
            "type" : {
              "type" : "string",
              "description" : "Resource type.",
              "readOnly" : true
            }
          },
          "description" : "Common resource representation."
        } ]
      },
      "RouteFilterListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of route filters in a resource group.",
            "items" : {
              "$ref" : "#/components/schemas/RouteFilter"
            }
          }
        },
        "description" : "Response for the ListRouteFilters API service call."
      },
      "RouteFilterPropertiesFormat" : {
        "type" : "object",
        "properties" : {
          "ipv6Peerings" : {
            "type" : "array",
            "description" : "A collection of references to express route circuit ipv6 peerings.",
            "items" : {
              "type" : "object",
              "properties" : {
                "etag" : {
                  "type" : "string",
                  "description" : "A unique read-only string that changes whenever the resource is updated.",
                  "readOnly" : true
                },
                "name" : {
                  "type" : "string",
                  "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource."
                },
                "properties" : {
                  "type" : "object",
                  "properties" : {
                    "azureASN" : {
                      "type" : "integer",
                      "description" : "The Azure ASN.",
                      "format" : "int32"
                    },
                    "connections" : {
                      "type" : "array",
                      "description" : "The list of circuit connections associated with Azure Private Peering for this circuit.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "etag" : {
                            "type" : "string",
                            "description" : "A unique read-only string that changes whenever the resource is updated.",
                            "readOnly" : true
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource."
                          },
                          "properties" : {
                            "type" : "object",
                            "properties" : {
                              "addressPrefix" : {
                                "type" : "string",
                                "description" : "/29 IP address space to carve out Customer addresses for tunnels."
                              },
                              "authorizationKey" : {
                                "type" : "string",
                                "description" : "The authorization key."
                              },
                              "circuitConnectionStatus" : {
                                "type" : "string",
                                "description" : "Express Route Circuit connection state.",
                                "readOnly" : true,
                                "enum" : [ "Connected", "Connecting", "Disconnected" ]
                              },
                              "expressRouteCircuitPeering" : {
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Resource ID."
                                  }
                                },
                                "description" : "Reference to another subresource."
                              },
                              "peerExpressRouteCircuitPeering" : {
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Resource ID."
                                  }
                                },
                                "description" : "Reference to another subresource."
                              },
                              "provisioningState" : {
                                "type" : "string",
                                "description" : "The current provisioning state.",
                                "readOnly" : true,
                                "enum" : [ "Succeeded", "Updating", "Deleting", "Failed" ]
                              }
                            },
                            "description" : "Properties of the express route circuit connection."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "Type of the resource.",
                            "readOnly" : true
                          }
                        },
                        "description" : "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource."
                      }
                    },
                    "expressRouteConnection" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "The ID of the ExpressRouteConnection.",
                          "readOnly" : true
                        }
                      },
                      "description" : "The ID of the ExpressRouteConnection."
                    },
                    "gatewayManagerEtag" : {
                      "type" : "string",
                      "description" : "The GatewayManager Etag."
                    },
                    "ipv6PeeringConfig" : {
                      "type" : "object",
                      "properties" : {
                        "microsoftPeeringConfig" : {
                          "type" : "object",
                          "properties" : {
                            "advertisedCommunities" : {
                              "type" : "array",
                              "description" : "The communities of bgp peering. Specified for microsoft peering.",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "advertisedPublicPrefixes" : {
                              "type" : "array",
                              "description" : "The reference of AdvertisedPublicPrefixes.",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "advertisedPublicPrefixesState" : {
                              "type" : "string",
                              "description" : "The advertised public prefix state of the Peering resource.",
                              "enum" : [ "NotConfigured", "Configuring", "Configured", "ValidationNeeded" ]
                            },
                            "customerASN" : {
                              "type" : "integer",
                              "description" : "The CustomerASN of the peering.",
                              "format" : "int32"
                            },
                            "legacyMode" : {
                              "type" : "integer",
                              "description" : "The legacy mode of the peering.",
                              "format" : "int32"
                            },
                            "routingRegistryName" : {
                              "type" : "string",
                              "description" : "The RoutingRegistryName of the configuration."
                            }
                          },
                          "description" : "Specifies the peering configuration."
                        },
                        "primaryPeerAddressPrefix" : {
                          "type" : "string",
                          "description" : "The primary address prefix."
                        },
                        "routeFilter" : {
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "string",
                              "description" : "Resource ID."
                            }
                          },
                          "description" : "Reference to another subresource."
                        },
                        "secondaryPeerAddressPrefix" : {
                          "type" : "string",
                          "description" : "The secondary address prefix."
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "The state of peering.",
                          "enum" : [ "Disabled", "Enabled" ]
                        }
                      },
                      "description" : "Contains IPv6 peering config."
                    },
                    "lastModifiedBy" : {
                      "type" : "string",
                      "description" : "Who was the last to modify the peering."
                    },
                    "microsoftPeeringConfig" : {
                      "type" : "object",
                      "properties" : {
                        "advertisedCommunities" : {
                          "type" : "array",
                          "description" : "The communities of bgp peering. Specified for microsoft peering.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "advertisedPublicPrefixes" : {
                          "type" : "array",
                          "description" : "The reference of AdvertisedPublicPrefixes.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "advertisedPublicPrefixesState" : {
                          "type" : "string",
                          "description" : "The advertised public prefix state of the Peering resource.",
                          "enum" : [ "NotConfigured", "Configuring", "Configured", "ValidationNeeded" ]
                        },
                        "customerASN" : {
                          "type" : "integer",
                          "description" : "The CustomerASN of the peering.",
                          "format" : "int32"
                        },
                        "legacyMode" : {
                          "type" : "integer",
                          "description" : "The legacy mode of the peering.",
                          "format" : "int32"
                        },
                        "routingRegistryName" : {
                          "type" : "string",
                          "description" : "The RoutingRegistryName of the configuration."
                        }
                      },
                      "description" : "Specifies the peering configuration."
                    },
                    "peerASN" : {
                      "maximum" : 4294967295,
                      "minimum" : 1,
                      "type" : "integer",
                      "description" : "The peer ASN.",
                      "format" : "int64"
                    },
                    "peeredConnections" : {
                      "type" : "array",
                      "description" : "The list of peered circuit connections associated with Azure Private Peering for this circuit.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "etag" : {
                            "type" : "string",
                            "description" : "A unique read-only string that changes whenever the resource is updated.",
                            "readOnly" : true
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource."
                          },
                          "properties" : {
                            "type" : "object",
                            "properties" : {
                              "addressPrefix" : {
                                "type" : "string",
                                "description" : "/29 IP address space to carve out Customer addresses for tunnels."
                              },
                              "authResourceGuid" : {
                                "type" : "string",
                                "description" : "The resource guid of the authorization used for the express route circuit connection."
                              },
                              "circuitConnectionStatus" : {
                                "type" : "string",
                                "description" : "Express Route Circuit connection state.",
                                "readOnly" : true,
                                "enum" : [ "Connected", "Connecting", "Disconnected" ]
                              },
                              "connectionName" : {
                                "type" : "string",
                                "description" : "The name of the express route circuit connection resource."
                              },
                              "expressRouteCircuitPeering" : {
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Resource ID."
                                  }
                                },
                                "description" : "Reference to another subresource."
                              },
                              "peerExpressRouteCircuitPeering" : {
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Resource ID."
                                  }
                                },
                                "description" : "Reference to another subresource."
                              },
                              "provisioningState" : {
                                "type" : "string",
                                "description" : "The current provisioning state.",
                                "readOnly" : true,
                                "enum" : [ "Succeeded", "Updating", "Deleting", "Failed" ]
                              }
                            },
                            "description" : "Properties of the peer express route circuit connection."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "Type of the resource.",
                            "readOnly" : true
                          }
                        },
                        "description" : "Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource."
                      }
                    },
                    "peeringType" : {
                      "type" : "string",
                      "description" : "The peering type.",
                      "enum" : [ "AzurePublicPeering", "AzurePrivatePeering", "MicrosoftPeering" ]
                    },
                    "primaryAzurePort" : {
                      "type" : "string",
                      "description" : "The primary port."
                    },
                    "primaryPeerAddressPrefix" : {
                      "type" : "string",
                      "description" : "The primary address prefix."
                    },
                    "provisioningState" : {
                      "type" : "string",
                      "description" : "The current provisioning state.",
                      "readOnly" : true,
                      "enum" : [ "Succeeded", "Updating", "Deleting", "Failed" ]
                    },
                    "routeFilter" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID."
                        }
                      },
                      "description" : "Reference to another subresource."
                    },
                    "secondaryAzurePort" : {
                      "type" : "string",
                      "description" : "The secondary port."
                    },
                    "secondaryPeerAddressPrefix" : {
                      "type" : "string",
                      "description" : "The secondary address prefix."
                    },
                    "sharedKey" : {
                      "type" : "string",
                      "description" : "The shared key."
                    },
                    "state" : {
                      "type" : "string",
                      "description" : "The state of peering.",
                      "enum" : [ "Disabled", "Enabled" ]
                    },
                    "stats" : {
                      "type" : "object",
                      "properties" : {
                        "primarybytesIn" : {
                          "type" : "integer",
                          "description" : "The Primary BytesIn of the peering.",
                          "format" : "int64"
                        },
                        "primarybytesOut" : {
                          "type" : "integer",
                          "description" : "The primary BytesOut of the peering.",
                          "format" : "int64"
                        },
                        "secondarybytesIn" : {
                          "type" : "integer",
                          "description" : "The secondary BytesIn of the peering.",
                          "format" : "int64"
                        },
                        "secondarybytesOut" : {
                          "type" : "integer",
                          "description" : "The secondary BytesOut of the peering.",
                          "format" : "int64"
                        }
                      },
                      "description" : "Contains stats associated with the peering."
                    },
                    "vlanId" : {
                      "type" : "integer",
                      "description" : "The VLAN ID.",
                      "format" : "int32"
                    }
                  },
                  "description" : "Properties of the express route circuit peering."
                },
                "type" : {
                  "type" : "string",
                  "description" : "Type of the resource.",
                  "readOnly" : true
                }
              },
              "description" : "Peering in an ExpressRouteCircuit resource."
            }
          },
          "peerings" : {
            "type" : "array",
            "description" : "A collection of references to express route circuit peerings.",
            "items" : {
              "type" : "object",
              "properties" : {
                "etag" : {
                  "type" : "string",
                  "description" : "A unique read-only string that changes whenever the resource is updated.",
                  "readOnly" : true
                },
                "name" : {
                  "type" : "string",
                  "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource."
                },
                "properties" : {
                  "type" : "object",
                  "properties" : {
                    "azureASN" : {
                      "type" : "integer",
                      "description" : "The Azure ASN.",
                      "format" : "int32"
                    },
                    "connections" : {
                      "type" : "array",
                      "description" : "The list of circuit connections associated with Azure Private Peering for this circuit.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "etag" : {
                            "type" : "string",
                            "description" : "A unique read-only string that changes whenever the resource is updated.",
                            "readOnly" : true
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource."
                          },
                          "properties" : {
                            "type" : "object",
                            "properties" : {
                              "addressPrefix" : {
                                "type" : "string",
                                "description" : "/29 IP address space to carve out Customer addresses for tunnels."
                              },
                              "authorizationKey" : {
                                "type" : "string",
                                "description" : "The authorization key."
                              },
                              "circuitConnectionStatus" : {
                                "type" : "string",
                                "description" : "Express Route Circuit connection state.",
                                "readOnly" : true,
                                "enum" : [ "Connected", "Connecting", "Disconnected" ]
                              },
                              "expressRouteCircuitPeering" : {
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Resource ID."
                                  }
                                },
                                "description" : "Reference to another subresource."
                              },
                              "peerExpressRouteCircuitPeering" : {
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Resource ID."
                                  }
                                },
                                "description" : "Reference to another subresource."
                              },
                              "provisioningState" : {
                                "type" : "string",
                                "description" : "The current provisioning state.",
                                "readOnly" : true,
                                "enum" : [ "Succeeded", "Updating", "Deleting", "Failed" ]
                              }
                            },
                            "description" : "Properties of the express route circuit connection."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "Type of the resource.",
                            "readOnly" : true
                          }
                        },
                        "description" : "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource."
                      }
                    },
                    "expressRouteConnection" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "The ID of the ExpressRouteConnection.",
                          "readOnly" : true
                        }
                      },
                      "description" : "The ID of the ExpressRouteConnection."
                    },
                    "gatewayManagerEtag" : {
                      "type" : "string",
                      "description" : "The GatewayManager Etag."
                    },
                    "ipv6PeeringConfig" : {
                      "type" : "object",
                      "properties" : {
                        "microsoftPeeringConfig" : {
                          "type" : "object",
                          "properties" : {
                            "advertisedCommunities" : {
                              "type" : "array",
                              "description" : "The communities of bgp peering. Specified for microsoft peering.",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "advertisedPublicPrefixes" : {
                              "type" : "array",
                              "description" : "The reference of AdvertisedPublicPrefixes.",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "advertisedPublicPrefixesState" : {
                              "type" : "string",
                              "description" : "The advertised public prefix state of the Peering resource.",
                              "enum" : [ "NotConfigured", "Configuring", "Configured", "ValidationNeeded" ]
                            },
                            "customerASN" : {
                              "type" : "integer",
                              "description" : "The CustomerASN of the peering.",
                              "format" : "int32"
                            },
                            "legacyMode" : {
                              "type" : "integer",
                              "description" : "The legacy mode of the peering.",
                              "format" : "int32"
                            },
                            "routingRegistryName" : {
                              "type" : "string",
                              "description" : "The RoutingRegistryName of the configuration."
                            }
                          },
                          "description" : "Specifies the peering configuration."
                        },
                        "primaryPeerAddressPrefix" : {
                          "type" : "string",
                          "description" : "The primary address prefix."
                        },
                        "routeFilter" : {
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "string",
                              "description" : "Resource ID."
                            }
                          },
                          "description" : "Reference to another subresource."
                        },
                        "secondaryPeerAddressPrefix" : {
                          "type" : "string",
                          "description" : "The secondary address prefix."
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "The state of peering.",
                          "enum" : [ "Disabled", "Enabled" ]
                        }
                      },
                      "description" : "Contains IPv6 peering config."
                    },
                    "lastModifiedBy" : {
                      "type" : "string",
                      "description" : "Who was the last to modify the peering."
                    },
                    "microsoftPeeringConfig" : {
                      "type" : "object",
                      "properties" : {
                        "advertisedCommunities" : {
                          "type" : "array",
                          "description" : "The communities of bgp peering. Specified for microsoft peering.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "advertisedPublicPrefixes" : {
                          "type" : "array",
                          "description" : "The reference of AdvertisedPublicPrefixes.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "advertisedPublicPrefixesState" : {
                          "type" : "string",
                          "description" : "The advertised public prefix state of the Peering resource.",
                          "enum" : [ "NotConfigured", "Configuring", "Configured", "ValidationNeeded" ]
                        },
                        "customerASN" : {
                          "type" : "integer",
                          "description" : "The CustomerASN of the peering.",
                          "format" : "int32"
                        },
                        "legacyMode" : {
                          "type" : "integer",
                          "description" : "The legacy mode of the peering.",
                          "format" : "int32"
                        },
                        "routingRegistryName" : {
                          "type" : "string",
                          "description" : "The RoutingRegistryName of the configuration."
                        }
                      },
                      "description" : "Specifies the peering configuration."
                    },
                    "peerASN" : {
                      "maximum" : 4294967295,
                      "minimum" : 1,
                      "type" : "integer",
                      "description" : "The peer ASN.",
                      "format" : "int64"
                    },
                    "peeredConnections" : {
                      "type" : "array",
                      "description" : "The list of peered circuit connections associated with Azure Private Peering for this circuit.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "etag" : {
                            "type" : "string",
                            "description" : "A unique read-only string that changes whenever the resource is updated.",
                            "readOnly" : true
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource."
                          },
                          "properties" : {
                            "type" : "object",
                            "properties" : {
                              "addressPrefix" : {
                                "type" : "string",
                                "description" : "/29 IP address space to carve out Customer addresses for tunnels."
                              },
                              "authResourceGuid" : {
                                "type" : "string",
                                "description" : "The resource guid of the authorization used for the express route circuit connection."
                              },
                              "circuitConnectionStatus" : {
                                "type" : "string",
                                "description" : "Express Route Circuit connection state.",
                                "readOnly" : true,
                                "enum" : [ "Connected", "Connecting", "Disconnected" ]
                              },
                              "connectionName" : {
                                "type" : "string",
                                "description" : "The name of the express route circuit connection resource."
                              },
                              "expressRouteCircuitPeering" : {
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Resource ID."
                                  }
                                },
                                "description" : "Reference to another subresource."
                              },
                              "peerExpressRouteCircuitPeering" : {
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Resource ID."
                                  }
                                },
                                "description" : "Reference to another subresource."
                              },
                              "provisioningState" : {
                                "type" : "string",
                                "description" : "The current provisioning state.",
                                "readOnly" : true,
                                "enum" : [ "Succeeded", "Updating", "Deleting", "Failed" ]
                              }
                            },
                            "description" : "Properties of the peer express route circuit connection."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "Type of the resource.",
                            "readOnly" : true
                          }
                        },
                        "description" : "Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource."
                      }
                    },
                    "peeringType" : {
                      "type" : "string",
                      "description" : "The peering type.",
                      "enum" : [ "AzurePublicPeering", "AzurePrivatePeering", "MicrosoftPeering" ]
                    },
                    "primaryAzurePort" : {
                      "type" : "string",
                      "description" : "The primary port."
                    },
                    "primaryPeerAddressPrefix" : {
                      "type" : "string",
                      "description" : "The primary address prefix."
                    },
                    "provisioningState" : {
                      "type" : "string",
                      "description" : "The current provisioning state.",
                      "readOnly" : true,
                      "enum" : [ "Succeeded", "Updating", "Deleting", "Failed" ]
                    },
                    "routeFilter" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID."
                        }
                      },
                      "description" : "Reference to another subresource."
                    },
                    "secondaryAzurePort" : {
                      "type" : "string",
                      "description" : "The secondary port."
                    },
                    "secondaryPeerAddressPrefix" : {
                      "type" : "string",
                      "description" : "The secondary address prefix."
                    },
                    "sharedKey" : {
                      "type" : "string",
                      "description" : "The shared key."
                    },
                    "state" : {
                      "type" : "string",
                      "description" : "The state of peering.",
                      "enum" : [ "Disabled", "Enabled" ]
                    },
                    "stats" : {
                      "type" : "object",
                      "properties" : {
                        "primarybytesIn" : {
                          "type" : "integer",
                          "description" : "The Primary BytesIn of the peering.",
                          "format" : "int64"
                        },
                        "primarybytesOut" : {
                          "type" : "integer",
                          "description" : "The primary BytesOut of the peering.",
                          "format" : "int64"
                        },
                        "secondarybytesIn" : {
                          "type" : "integer",
                          "description" : "The secondary BytesIn of the peering.",
                          "format" : "int64"
                        },
                        "secondarybytesOut" : {
                          "type" : "integer",
                          "description" : "The secondary BytesOut of the peering.",
                          "format" : "int64"
                        }
                      },
                      "description" : "Contains stats associated with the peering."
                    },
                    "vlanId" : {
                      "type" : "integer",
                      "description" : "The VLAN ID.",
                      "format" : "int32"
                    }
                  },
                  "description" : "Properties of the express route circuit peering."
                },
                "type" : {
                  "type" : "string",
                  "description" : "Type of the resource.",
                  "readOnly" : true
                }
              },
              "description" : "Peering in an ExpressRouteCircuit resource."
            }
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The current provisioning state.",
            "readOnly" : true,
            "enum" : [ "Succeeded", "Updating", "Deleting", "Failed" ]
          },
          "rules" : {
            "type" : "array",
            "description" : "Collection of RouteFilterRules contained within a route filter.",
            "items" : {
              "$ref" : "#/components/schemas/RouteFilterRule"
            }
          }
        },
        "description" : "Route Filter Resource."
      },
      "RouteFilterRule" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "A unique read-only string that changes whenever the resource is updated.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Resource location."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource."
          },
          "properties" : {
            "$ref" : "#/components/schemas/RouteFilterRulePropertiesFormat"
          }
        },
        "description" : "Route Filter Rule Resource.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID."
            }
          },
          "description" : "Reference to another subresource."
        } ]
      },
      "RouteFilterRuleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of RouteFilterRules in a resource group.",
            "items" : {
              "$ref" : "#/components/schemas/RouteFilterRule"
            }
          }
        },
        "description" : "Response for the ListRouteFilterRules API service call."
      },
      "RouteFilterRulePropertiesFormat" : {
        "required" : [ "access", "communities", "routeFilterRuleType" ],
        "type" : "object",
        "properties" : {
          "access" : {
            "type" : "string",
            "description" : "Access to be allowed or denied.",
            "enum" : [ "Allow", "Deny" ]
          },
          "communities" : {
            "type" : "array",
            "description" : "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].",
            "items" : {
              "type" : "string"
            }
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The current provisioning state.",
            "readOnly" : true,
            "enum" : [ "Succeeded", "Updating", "Deleting", "Failed" ]
          },
          "routeFilterRuleType" : {
            "type" : "string",
            "description" : "The rule type of the rule.",
            "enum" : [ "Community" ]
          }
        },
        "description" : "Route Filter Rule Resource."
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}