{
  "mappings" : [ {
    "id" : "e4f7c32b-8579-4be2-89d7-a43a915a41c0",
    "name" : "Push templates from one server to another - 500",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "e4f7c32b-8579-4be2-89d7-a43a915a41c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.08237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "abc99334-0241-408a-8de1-1a5e3db1939c",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Repellendus ut consequatur. Quasi ab eveniet. Dolore odio eius rerum aut voluptatibus.\",\n  \"ErrorCode\" : 331138704006733943\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abc99334-0241-408a-8de1-1a5e3db1939c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.082346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "35c55572-03d2-4567-8dd4-1ec6b44ddf9a",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 6143570800023261062,\n  \"Templates\" : [ {\n    \"Action\" : \"nl9azqcxpwmeuq8o351ocpni08e4j2djqxc3o3zyeaq1zsqce6kvkfml6tqsrwsbcuj6pgosg334gzm54522nccj83duupm79u3r2plnejexi3sv6hh9niarba9g4txhea8xmendcqqddhkvqkk9cbet5p33h9\",\n    \"Alias\" : \"9bj2lpv5s4m402rzaf6apmtleexacmqhkb1bt5zl9neb855lb6k4xramikj5p8mfwb91vsrgy5wcgxjzogkyvymhg5ot85kk70mvkvnnykmb3wqu1t2ydtvtb38kp4a6cdyaw8rq9xgb203yjchik2mrrwmfw9qv3j1nrxz4bz326nl2heiob4sah5zekxe3428wttz\",\n    \"TemplateId\" : 8470978025504580729,\n    \"Name\" : \"Marlyn Pacocha\"\n  }, {\n    \"Action\" : \"zg8sa0h9sjpv4i526\",\n    \"Alias\" : \"jv2ukjto0z2cq2at1cgr9hknpmuth7y9tywv1kvgpljr0afkkob0\",\n    \"TemplateId\" : 6213547445927487498,\n    \"Name\" : \"Clarine Hahn\"\n  }, {\n    \"Action\" : \"jlhcyl617a7fdv2awdin8nn2emhc5tiretc09igapyc024cp9yulkojp0wa41dk52ceoj7kc4723bylyh4rl92kzioizc9kqrerdkwt2ev4zkn0k43l7w5kzw9zlde4i1j75d3xp\",\n    \"Alias\" : \"gwyggxmmbpnhm6axdlironzlkioeg6lejisbo0tyqahlb2bqkpuemk8r6vtjgf9vi4jlewxj28hd3hql8u2l8o9dc6ezw0xd6ws2s2vizhox495y3zl5cnmya6nsv677avm2z0gqt6dwnwrq\",\n    \"TemplateId\" : 6818716314957882445,\n    \"Name\" : \"Dr. Charis Macejkovic\"\n  }, {\n    \"Action\" : \"tw59cf8i3jng5y6iy8ajj1082z19zghrtuzu0iu9bbxjh1x9xbt665l2q60kjt4f4zj8vvq2ve3v1m8zle0sefnhwq5v1vcxm6xvd8a30l3xahfailz04d5d\",\n    \"Alias\" : \"jw5cb3szu4sghhkemeg4khk9mtpds4ja5f99gxvvhf9ndvimjck6hrid34w6er2ima2sqnbkdgzybn\",\n    \"TemplateId\" : 745718069509808278,\n    \"Name\" : \"Dalton Cole\"\n  }, {\n    \"Action\" : \"8kbx3axvdyjs70fcjuwap1lrpjd79iep2ygfdgggo7e2bov8dync89ofuaduk1q55r5\",\n    \"Alias\" : \"3qz77q6tnaudlw50rgyri2yhfvj6i2fgvqnokqz678phxu1ykvj0nvlyhfoo246w6mr5scx75zueytsov\",\n    \"TemplateId\" : 5367289320921720213,\n    \"Name\" : \"Phil Schmidt\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35c55572-03d2-4567-8dd4-1ec6b44ddf9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.082264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Templates" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "Action" : {
                      "type" : "string"
                    },
                    "Alias" : {
                      "type" : "string"
                    },
                    "Name" : {
                      "type" : "string"
                    },
                    "TemplateId" : {
                      "type" : "integer"
                    }
                  }
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "eee95beb-0412-4739-9c92-367f5a1c5f95",
    "name" : "Delete a Server - 500",
    "request" : {
      "urlPath" : "/servers/4117003329739191377",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "eee95beb-0412-4739-9c92-367f5a1c5f95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.081781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "30fd366b-849a-4571-b2ea-c9402c6367f8",
    "name" : "Delete a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/178378323128403379",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Corrupti provident voluptatem et nihil id sint ut. Amet aut eum impedit est quia. Iusto sapiente architecto. Dicta ipsam voluptatem error voluptas. Atque odio recusandae voluptatem aut.\",\n  \"ErrorCode\" : 2003648383367876656\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30fd366b-849a-4571-b2ea-c9402c6367f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.081754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "5e7d98a2-1f9e-434e-9d9d-db87c3c1029a",
    "name" : "Delete a Server - 200",
    "request" : {
      "urlPath" : "/servers/7692347819075098034",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5e7d98a2-1f9e-434e-9d9d-db87c3c1029a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.081665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "b285ed96-92ae-4cef-8f34-d0ee1b35c370",
    "name" : "Edit a Server - 500",
    "request" : {
      "urlPath" : "/servers/2026511662980976750",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "b285ed96-92ae-4cef-8f34-d0ee1b35c370",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.08164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "4e4e4f6f-1201-4858-b8a7-f0e9661038c6",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/5113383853133909431",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Doloribus dicta in fuga rerum sapiente. Est vero quibusdam non totam incidunt asperiores. Alias quis ex.\",\n  \"ErrorCode\" : 2528923413288461268\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e4e4f6f-1201-4858-b8a7-f0e9661038c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.081614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "ed63ef4f-1b27-4dda-af83-a054b6de292c",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/7321255479106809359",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/757930\",\n  \"ApiTokens\" : [ \"c3n51prryrp3jumf58g\" ],\n  \"ServerLink\" : \"sqj8haxpyw1phs6vnje2ystd7tpk2by2g8c83mmf9pr2mg4kjwce0eo8688nvws7d2kmhvittuhdsr33d38eg8u2kt2rsqo3xektkma3q0f\",\n  \"Color\" : \"cdt0ehvmesettc3s10vp1c49lmpjqgiai6zh5r4a74m3elpakta82p8tgcyu0ak3n7bon34441hl61r77zgn3q9c898vx5n46ksttmaxw3reblolvkqr5f5qd96crqv831cclve8oi7po415ba7ix5qigg6j74hpvehtgf1fzqqgt6o2guxedoz1\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/540063\",\n  \"RawEmailEnabled\" : true,\n  \"TrackLinks\" : \"HtmlAndTextTracking\",\n  \"InboundHash\" : \"jtaw6y7ik6rell3u61asvayhchwgubdiz2emyq1cfd\",\n  \"InboundSpamThreshold\" : 7139313938371402036,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/662017\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/561519\",\n  \"InboundAddress\" : \"3eno1ub7hztbcms0jfks2h4g8h\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/988153\",\n  \"Name\" : \"Denis Aufderhar\",\n  \"TrackOpens\" : true,\n  \"PostFirstOpenOnly\" : false,\n  \"ID\" : 2827346074465367375,\n  \"InboundDomain\" : \"fligz46iusap83ofs9zsrbtbjposcg8zzg05x6qsa6imvtfbfu5c177lzvdai2azytrp24ociih3ttpvmrzp391wze6fa31n6bw82q7b4x9l7h6ug3389\",\n  \"SmtpApiActivated\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed63ef4f-1b27-4dda-af83-a054b6de292c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.081522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "251ff208-9171-4531-86fc-bc33deda05ed",
    "name" : "Get a Server - 500",
    "request" : {
      "urlPath" : "/servers/6788885822788938477",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "251ff208-9171-4531-86fc-bc33deda05ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.080935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "ba3cac08-9ffe-4231-abdb-0dd7b9764244",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/4285465412364750848",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Beatae dolorum nemo qui. Maxime atque quos nihil. Quia quaerat est.\",\n  \"ErrorCode\" : 6584264793240120991\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba3cac08-9ffe-4231-abdb-0dd7b9764244",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.080909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "62f024eb-d0b0-4871-af17-227e70e1bd27",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/2990350037344086931",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/713555\",\n  \"ApiTokens\" : [ \"i4w4jgixmz2mgh02e70rk2gwzvywxs20mdtgqo13i7hq51720nd2qhe3bqjff87d3qbvv36snw1t92bq1t96tm1vig84bbu5hu61sa0k2os5ycj7hxgbhlpo9txvlhgbfmyasag73yks7\", \"xdy4g6jfyl6s1mhsneoegotox1aljdhzr479fsmdn3tlpbivn2s7ibbl5n8lwiysfir47z10jg\", \"liga1pjz3zscxv1scl5ch3n32cjtr8b0dnw3od5sp3w27vw4ooa6odkudlhym224xjfetbdyxjp7fjbup5ojizuir1t7ks381q6jy2ij2viqd5bot4o8vt6y0rwhunoy2tolf8zpkkf8km8w7chtajsb0r1\", \"e2lak101s0ks873emexjmtvb0eepi\" ],\n  \"ServerLink\" : \"sgjxws17izc63pd30o5xofneu9de7ei0snp8d1ddmoikvpce0hyaizhza9wpjq5gmzmv20ib6kjn19dkxac94a74\",\n  \"Color\" : \"p37c1rbrz2xfp0ufmqo6suh26mpuejuhw1bgiada0fw216dtx2nvzla63acpt4trc65fcj1jk1oi879j4daim9rxts18kavqyiq6tetflozoer1lqtpmpx2yn4zh51624f517c31x792eed1n3hdct5qubzpqpss13z4b0ltf3zl5w1hf6u5qlu7pt4o\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/006558\",\n  \"RawEmailEnabled\" : true,\n  \"TrackLinks\" : \"HtmlOnlyTracking\",\n  \"InboundHash\" : \"pwqkgrs8zo1049rnnzcl4qeblwl4j0xit\",\n  \"InboundSpamThreshold\" : 5100712839178568455,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/966778\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/607060\",\n  \"InboundAddress\" : \"m935vhm9ohz2wn1v69quflwc98mrcfo2tfgofp1dpuiaz5pst46lakirra1h664862pvxssc6h6wez9ltqgamo3gmj60z0etutccnqvz9t6\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/687030\",\n  \"Name\" : \"Trula Mann\",\n  \"TrackOpens\" : false,\n  \"PostFirstOpenOnly\" : true,\n  \"ID\" : 819713857757041209,\n  \"InboundDomain\" : \"dled8kxnx3k9sod36kbjofte6z1uhd\",\n  \"SmtpApiActivated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62f024eb-d0b0-4871-af17-227e70e1bd27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.080819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "acfb0471-6141-4496-b02e-2433dea529c0",
    "name" : "Create a Server - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "acfb0471-6141-4496-b02e-2433dea529c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.080204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "ea9348d6-ed75-4a62-8522-c86978ebfe3f",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Aut dolor repellat. Id similique totam explicabo ut amet. Distinctio repellendus provident labore cumque ex nam. Consequuntur eos nihil doloribus. Non porro sed laudantium reprehenderit accusamus et a\",\n  \"ErrorCode\" : 2771727427861413935\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea9348d6-ed75-4a62-8522-c86978ebfe3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.080179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "d7ade566-ae9b-4b79-97e6-75e8bb91a23d",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/982566\",\n  \"ApiTokens\" : [ \"zebslf3j2hpt4m9cs2uss7bz2u7zkb2d4l5ms8tfooxf93miqwmz\", \"afzoqz8mdlys1gaibd0sv8li7ddrw7h6k3hguc0pcaopupijo03qpf10gr1xsxl85rcx76d7x7plvlrc4surziww2827i0dh6xnfiy3dd4fmmff2kxj414a1parh9n21eu7vkryvrdz2lcap8jvjbajs0f7woe7sfl034mn8gysgrruwzyeq12ct813\", \"hfeuh322a9nvzyd907ggk9m39x2327bx9wz\", \"d86zwtouqlk66tnzd7u5fud8u6bmfuz9ev0stukn6ukbmrwrx1ye3agy6h3fn5c5r4i2q67wjf7n683wc0bb6uhn077se5wwkt0bvzvdstbq94m3os58nxg2qa0yg6jbxash1q23vgrg1rtyzd9s35d\", \"vffbizhml8nt2ky2qgd5hzeyc6o5gwmbi361luhyomvv90zin41h5oc88xkh8n01itcskzezeo02xc3oj2yz43tlcatw9pjj3alyu415ddca60afa4gbrbvg3h9adtixg3u8kstre3gnmxjs8j40w8jif6rjcfe2jx1zhs7ht0pp7yb68\" ],\n  \"ServerLink\" : \"wu1ejd7ohvgyk11giypbs9rqmfyq0n6o5dy21ptt6r6rs069625vtw9zzts4ckqwpuiqfs9jssp7dv\",\n  \"Color\" : \"7hz8a9o5mgeina8au4onap4x7hactadq8gnl27bebtkbq517k\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/649393\",\n  \"RawEmailEnabled\" : false,\n  \"TrackLinks\" : \"None\",\n  \"InboundHash\" : \"i1a7ezm6or05tbljwmyvu5du0es1qh1i4rlgw18ejv06fuqkvn6vdulmsskjp51s4d7892o3qzi6otaquzxn17ucy8hay327bnt6phvkc0npuq2utxwvmtbedn3mdmlpdhq5kmfjafn04c1ntwzr8n4umlu4e29bk39jf6e6ritxpc7iauekgu6ghm12pga4jhhvwdw\",\n  \"InboundSpamThreshold\" : 8278083272936710584,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/891195\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/309572\",\n  \"InboundAddress\" : \"jjkq9cimo6ntcx480ubipkscej9o2zwdnp4mi2gov146i0ekafq04lz2sr06rvr886dvs3w7dk3l8269vtr1qd45jes7dzet2ivloc5cqn47gqlvkszd5phui6z59shg6pa8m3ba1tuqksa\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/784489\",\n  \"Name\" : \"Cordelia Hahn\",\n  \"TrackOpens\" : false,\n  \"PostFirstOpenOnly\" : false,\n  \"ID\" : 3049223185438819008,\n  \"InboundDomain\" : \"9ighjzizwvxr6zu7jkh3ada34mnl4hm1q2pv2h2f1d2kxc6sh7op4wsbvbuo31p06azxp6nnqdxvdlgm0letdv2zc6afdr00e6qkpifdhtdbe1pjy1f0x03gphdyj20vxvu7lcvagrkt5l58tvnti\",\n  \"SmtpApiActivated\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7ade566-ae9b-4b79-97e6-75e8bb91a23d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.080063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "30378ada-4f0e-4911-b6fe-11c9528689d4",
    "name" : "List servers - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4384511635558418892"
        },
        "count" : {
          "equalTo" : "4875507231788578706"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "30378ada-4f0e-4911-b6fe-11c9528689d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.079319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "1ebb9554-1417-4e24-81f6-024012d2cf9a",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "300953435982364440"
        },
        "count" : {
          "equalTo" : "1163740280376420915"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Voluptatem molestiae quae fugiat quae autem. Tempora maxime sit iusto. Necessitatibus ipsa mollitia et soluta.\",\n  \"ErrorCode\" : 3246527274316701582\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ebb9554-1417-4e24-81f6-024012d2cf9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.079264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "5db1ef8b-b3aa-48b9-b97d-beb255ad1168",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "7439007231124898832"
        },
        "count" : {
          "equalTo" : "4463740148939690418"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 8282155619190017698,\n  \"Servers\" : [ {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/470870\",\n    \"ApiTokens\" : [ \"pyhw3vs9jlcmvlw1mbm8jtczxy68h8dz6zmsfrvjgwbmnpy2e6zfhr1atmp20xqrtakwlvj7wa0zayedxdbpn6y86j5v8szbj17z5r518nnpxgt4xnu7zk275ohaa5pd2vcfcnxpq1xfnvbmdcp82rjewhxcyes8n9\" ],\n    \"ServerLink\" : \"p040sh0manumjq1gn9ldy43cxg3is91gxdl1070j445cvfoam4a5guy9eqkf0bp0ap34pjfasd55kfb8hmv44h7qala82zhc\",\n    \"Color\" : \"obtwntuahqa8bkgflnjigzjw6pgay14y80oomfcq8usv2z851327a0ba3pskvvtv14lgjykc5311qgiaotys9e7dhsfa2w1mmtx78ig88eh5tzuulxnlo0q\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/135588\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"HtmlOnlyTracking\",\n    \"InboundHash\" : \"8tsysf87ls1zftr1smhidzb5zml9bc8qv5nf7omatw2fug8kx9ta5t7kq9i11wx0i4ks47wq5j7jbu7rfodsw6ct8pw\",\n    \"InboundSpamThreshold\" : 3321445602087271191,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/822590\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/327593\",\n    \"InboundAddress\" : \"7ddktwsbvgl5w8kz9\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/679324\",\n    \"Name\" : \"Brock Rohan\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 8391189213417352038,\n    \"InboundDomain\" : \"7y07ovv5gam4k3s3pta7fmje9krcq659u20f8ffgsey1i1prytnxzbg7iz\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/885193\",\n    \"ApiTokens\" : [ \"t3qr5ipvnrf62p6rk1aa9sabeyxaisz0vzzfxpvzpzzh1evi0dgdd7uf0p08hecjqujm42xgxmi017tymg2aubcxi4ggitxtkqd94e0o6787r6uz2i57srp0akhbviq9nstqon8r7s21pp8wwx7uq3she6cjfsyr1szj13c2\", \"3i4r2zvuclmcadgubovf1r4staii2xgfw3t6fbphfgec8gu5zpcy85rvkci5msr89xjm9j2lzx0vw4fga12p2478yq05rp7wn04skqqohcqd38gl0o7fk8nfgwv1kaxmisnot180paz5k14uxigkdnsojuf6645ki1v0zwwvmunvbvk1xs1hxa575cw2r6q4q\" ],\n    \"ServerLink\" : \"tafukvxti6ffmlj08pve8\",\n    \"Color\" : \"jn04uivcm7jeqzcj22dni0y9rfbl34cc65px4in6egapkryyenhkkbb5108qfeg28q5ug3uvvw0xoaguvgl7g8c11s7j\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/654850\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"HtmlOnlyTracking\",\n    \"InboundHash\" : \"3crkrewl026xduqwlire4jlg9nnaldxsbj34iqr8tbyr98a7uljffw0wkphuocg0k0lso0b6zq48dh4q99v7195k8rov2wppr0gal5qdcdgm2x2f4h6r4n84fnjxjhmwmdctjt9qb6rfv1i\",\n    \"InboundSpamThreshold\" : 4778485891956342266,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/348431\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/640128\",\n    \"InboundAddress\" : \"tieajn5p2v9mmtlaja15oi9vl0euqsannj9ow43ti5hf5crat9xm8zreqggjfxm1rxf54prq12ezzcr1j1yvcqnvj0k3eethsi4kevz12b7uk7q5twxhlzp7mayoz2r2z9pp6pz3f3rpwqrrfskb64w\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/054398\",\n    \"Name\" : \"Ramon Jones\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 1807004908643124367,\n    \"InboundDomain\" : \"kj8z0f6de0orjys15phhm4tchxdnsloowy5c4bpj7rozial6ld831h1s9fvmr4u2f8kkg\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/406413\",\n    \"ApiTokens\" : [ \"v69zok3jdebmcsxh1aq48eim6m48xsz34g6iwog76gf1wl\" ],\n    \"ServerLink\" : \"jmjm8xvz736y5hztayjwqtuvw2nrk9ui57wukq3qw1hyn0sgxisxcs9blvnujvcyqyhypg1r95z4ftza5x91mrzy7oxdd516ln4fo\",\n    \"Color\" : \"za5fy8fl90of7jv7fasl17x1ujlc0q3xt9ct78sklfrju2\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/476398\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"qensmjnivicumlhulhz5ipba9ep\",\n    \"InboundSpamThreshold\" : 5323414008888276497,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/308018\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/604403\",\n    \"InboundAddress\" : \"8o9nv0euo4lrucloh575wipqwsuy3f6h714p2587r8bmpaygtsfma3s5cter8bx1gfxqovpyt098bdges080gr0047z47zflukedc2e5iy4iw66yn\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/711842\",\n    \"Name\" : \"Ashley Streich\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 1913670511724446029,\n    \"InboundDomain\" : \"yboa3muk0l9m4mgj9gy75d2lcwg5hx30gyqdraau\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/669514\",\n    \"ApiTokens\" : [ \"yzxr8chumrz15j9y9bt604a7mpjjb0r5ebhlpg3i1j7spuz5vkyd776dp7twev9l2apemkz390aggmz8jmlyfbyqjj6sboolggzsiusxv01pdu6qnsc5ktexek2n3gf9q05\", \"o2fc0fctljv5kt56i3fd4jmy75oj684zgywqcubevt15vde8a7z5nzpcryqhdwyees1mfh6v93s176qlsvq586rt5grjn3044vnou47w3e4b4hwi3z8a6zcg5fcjn66u\", \"t5rb0dod1mzhzpcccatzqsaocsukhg595wxq3xnzaaan5hb7n18mr2nkezss94bee9c5ne8xp9g14q6ipxnhaf13r76mw83eut8qfoz6qk0s91zehyaalry1jhyxc4fwnsqqw34z7ava0jvts4s723s37d93zggek512y4vuuccc1vubwam1xd6cl3xz21e0t9e0hhcm\", \"gihxtauktnje16aw2mtzpxyoxkxaptfoacu52qeuakq1kckd4z8zk03ggy5h4vcbj5gp7y5sykoyr0qrf72ox3ybxrykle11wjl8hbh705lzg6z3xptzlgsrelkp65tbwqjo7elzxr9hi2ocv90c2oouw2bh63lop5f35leyd\", \"shka9it35b7dizt\" ],\n    \"ServerLink\" : \"0ciwbfg07hzdrfnt\",\n    \"Color\" : \"v9qd5l0nuoa8lv0cvjfgils9xmry6qvnhy2iu0mdw2u6qqsrz4tz6g8rzgjy0unm4zu4ungnvpz2rsh8y81gaeln462hk3lafy3dhxtujvy6r0x\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/492059\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"sufm3536jgp\",\n    \"InboundSpamThreshold\" : 8132474500837114475,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/652484\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/277931\",\n    \"InboundAddress\" : \"1f80j4kr2go6x7ac1kr9d94v4slrjhiq8w77iwirgp09onpcwf1mf7z3yeaqnerk8j97etwbo1d5ixl4myl29kpvwld5nq7r1b4key315ccvt0j8y9f8myu7u9jintf4u\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/761187\",\n    \"Name\" : \"Lakeshia Barton\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 8202670240127529672,\n    \"InboundDomain\" : \"zridteqk9abs5kvebourcd5v350g10orkgrnkkxeajfsx50530cr0viar8ylmtz3wmbu2lt36u4fgiy20c0ehnt7ssjisj5ce\",\n    \"SmtpApiActivated\" : true\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/624766\",\n    \"ApiTokens\" : [ \"i7b2kif6q14twwr4iw4c9nx2hkvd2wsaorr3fxerdudbbtkzuxirolugiqf3bqdxy4kackfsdmuvxf0jofcunok\", \"8oevik3e20078tfh926iua84770vh0pcu8by5corzqbuetzcdq6dapc9ig3l80g1la3vbt51mcq37a0thb71ylyyivn4zf2ahn6yjjxt0lmobp8jo85djh2dbjmkxnbn0h085dpws1lheayfjls9zv7vtgnmzdu3p9toigdtwww9hg\", \"f92htdgtrg4k0qt3g3b295sd5ps4efufomtkl8xnvcsnankb8l9yjzg036ellmzs82i9zmr5z30vzyp72zriqpoxrjx8iz8swn1lf\", \"sontayoo4lx914jgbgwc6a\", \"lxjuvekqpk56f9win20nf64u5rzmupak92bj7ej6ms1tz8e4x9134z5lip9hlksum42ju1bh8a3hn2uqi7fs5csp6g1qapuaz4vezunnbvkc1fch86c37u2rt0xh8godzqak\" ],\n    \"ServerLink\" : \"09gc8qxkhd5pu10lx7xg9mizzd2y0386xrlf2iwi1r1belzj80cxbxbjagu4txysvffclulc7b1jc6yjagn6lj5xor7ne2eqiw8mqaoiadjmpss3mb2ep2o06qwifenm9im\",\n    \"Color\" : \"zd3g41ajkgd6ohsjg3vfxupja1bnerut1t17d8uav4skvwoqtfgz2cclji425efcaxrp7z15zisehlei3gj5vhfau5vzzd41ypkjvuh83ks4mjnbywg0z4ewk0pvrra6lh9spus7jo5edv74m1\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/850048\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"None\",\n    \"InboundHash\" : \"qzq8p72arqp42hehn6pt183z47k2l5q3g\",\n    \"InboundSpamThreshold\" : 9133376845747811518,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/787931\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/523126\",\n    \"InboundAddress\" : \"8isvguz785ap1tvx06ngum5ppmbsscjysobg7r9l9v2rha5y51vzvejk6d6u9o9h7emkniorml9djp7sra9dwwpew7fqqrzjpjs348dpfwyc9qsyfik70o2111zsp2rfmlxpg4wrwxuj10n\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/603358\",\n    \"Name\" : \"Ines Dibbert\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 3270605468643490741,\n    \"InboundDomain\" : \"annz53fx904p70ygwstd8otesx0qhb2786c0fx6nya0evp4b4n9ar3jfs2nurkwgknw7br1lmrjaj4y8t394qync5c\",\n    \"SmtpApiActivated\" : true\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/242362\",\n    \"ApiTokens\" : [ \"5nbdshrkvdolvaru99g3ccma7923so2sk8rbym49bbi5gew2pmw1jmttkzslau24trw9muuhimar13g64p3u137wmq7sukre3u6hpm5prko3cnr7q0pt4spa00dq6rcz63xa5sqlnm3hfmndwwp4nshla43p4qdr8jogocgs14gixr6rihhve895lxg4ue\", \"9hy4nh6ds4ygy9eaqofsvs9yt57vuqndk1s6czd5nbdesfcdxy2a0nabyq7nahyat6vq1ji80821fs69s7ohupvdgop55lvlvgp0ddpiffa7283cqgfti7xk6i90aysa6062uky8lx8k77qcs8wtzhrg00pxbwrdn9vmuql4xlm640hbp73\", \"0ns9bh9fn9s22hptl3m904u94cx6i56iro9r1t82wpsz3hz0q3txfiybg46xff6cl0re8gszimvofaeyjwgol5n3nnfnkwdmvo72yztoj3pobsm5y7\" ],\n    \"ServerLink\" : \"8impoaxhwl4w\",\n    \"Color\" : \"kw92cjqv7cjcugydf0mu7cs724\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/262098\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"2bu6vu4y08m7r1kqkitmlnsfgwrzhr27x0j8zf363z2598bmjck6bglqguw40yymstl782x05g8edai2y1uu4thh139efrhb5ng56ajp3b91ka65rhwy41291gy5mrzmuhoxejh8efcg547w0ssecsdp7tj5i0cmpxanrpq6km\",\n    \"InboundSpamThreshold\" : 2093853990504014136,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/152586\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/197934\",\n    \"InboundAddress\" : \"yqg3yo1de6995hy7uzooup2ylzxkpn3twos8ec9ym27813ogpjt3d13tyscg1w7aossv8l98p9lbx3yrn00v7cy78uhuio9sazmtc7kzr3m9xxxs1erb6hbnqdhe1glehn4k2hbe3tsz7s1rf7kk\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/035708\",\n    \"Name\" : \"Pattie Toy\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 1762823632698021529,\n    \"InboundDomain\" : \"hlwkvf2s9wktmfwvglrm6t5nowmdhrzyss3qmqyr455nnp4tk\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/946035\",\n    \"ApiTokens\" : [ \"o7crqpjlrho7hedql85s6oe3l\", \"u6sav0p04fjauf5xccxj6kpohmtxmezem773ko3if74zo9ggcj3kqx8gvxo2773etdwapm8x9nf8qm5hcfcmsmvmn8ojr1ghnevrcencf51vj6jocq17mnrs41ly0128jnsm3igw9neudujghr75ydr8u9fi4qe\", \"hu2p6ylapn4t7fkfrt4w5ku3y342pnf0c6icjho3qtrx6mxxx8x37z4w2imaqkr5aou5jk\", \"ywuf5mfbay8clvnjksgpy82zmwnjjpposzbydcvrouxy69uif1svl956hgf38prtsmjt89qnigb9gb5myg1ctfy3msfrr308z6vx6eu2jv13pupihm0pi7hm88l3b7c6sjq6a9l1bxzmaki7pr0o\", \"9xblpefcfu3xevye4fpnvtcantkcvxd6ijnm2dpzofhgmjbfnv0vhozwplh3fa2voro6yhbefbabuvm5kjww7r2056v849vzxp8pnsiwqaemi2ac6cd1hruedbemrloti49fbdue7rid9k8fropcsayd7i7ff346kqlfa0ejwc\", \"yttsilj5mn6mpcn0kfdvklqm0kmhz7q7sc65nrwnxbrope38lssywh78d1q9uablom746upgy225ria5yft5o0f7ro9stx0yielz8a06y97stpjaa6xazaewep9ce0qphh48bo1bs1ah5mac92w3zw0a5bowz8ovak46xja\", \"rw3756d0fg7n3cu9hqpl83c\", \"v5wgrujsvlm8lpfixoqhkl8skrg6lj3bga0ilf\" ],\n    \"ServerLink\" : \"8gyp8i0ios0\",\n    \"Color\" : \"f05sv6a518y5610hwkv44v1tvlf45l962y2\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/791322\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"HtmlOnlyTracking\",\n    \"InboundHash\" : \"670f5oczr0wlvr66m8bjevmnxeqmobiz6\",\n    \"InboundSpamThreshold\" : 2763456130886424979,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/400028\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/019768\",\n    \"InboundAddress\" : \"7kkoeqyrt3i7l932e85r1ru6oeczf0zaf9stesoxsacgxe5hvu7pekfwyzf46tr68t\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/411617\",\n    \"Name\" : \"Gino Greenfelder\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 6263959768466711355,\n    \"InboundDomain\" : \"yu61afob8ohkwpv6afd56e9jdn4yebo24wptlm504fud5l62llvt9upv\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/715413\",\n    \"ApiTokens\" : [ \"sld6o1xv6ytdc92bk\", \"a6q5b57gykrizxcjlw2cs3uemkzle5dq7pk3o57lsar942is9ie82e7br93qzxi9j3qrbgyc4zc\", \"9ui08llcjz3y3kcax87i4q9zfr66imuuxh7qljav8lcbs0m2j0l5mzkxs\", \"cr9ttv8vxgiq46s79qazzn00d57nkco6yn87qsbnz9rzga0k6\" ],\n    \"ServerLink\" : \"zfk7ztlr0tirja9uy\",\n    \"Color\" : \"m7avi6pyu9yktcgwhy5\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/998212\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"nnqgbf8237i2d5u8w0ppkmxxprt5uwt339y5khmnx4\",\n    \"InboundSpamThreshold\" : 7784693198723306644,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/328226\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/792082\",\n    \"InboundAddress\" : \"qatjw8afmuc1xw2951phwefyhs6glzar3imzk0xqaku2qyhe5bhmwzi3c2o4toisoa\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/221604\",\n    \"Name\" : \"Dong Williamson\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 7230174951613894419,\n    \"InboundDomain\" : \"7whdilaaykd4s2nr7qw9t5l847ylwihsqmtspwwo01czlq29a6z7fwaojqa36rpdsl311guzucq615xaxcccnydhxl7n1xvgdohgn1jm88mbcjgrxd1a3vyegozzcz9490tmy0kj2mxvsaonq6p0i4h09ikcjdldcx2xbwhm0i\",\n    \"SmtpApiActivated\" : false\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5db1ef8b-b3aa-48b9-b97d-beb255ad1168",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.079087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Servers" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExtendedServerInfo"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : "The results of listing servers."
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "2c8f318d-a562-45b9-81db-f5cbbfb0edec",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/senders/3838562746880065371/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2c8f318d-a562-45b9-81db-f5cbbfb0edec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.07498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "599496b8-a738-4944-aa8b-f0b8fde0ef7c",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/3544459947425015210/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Eos aperiam ut aliquid eos. Optio officiis voluptatem sint veritatis vero. Debitis atque illo nihil sit quo quia.\",\n  \"ErrorCode\" : 6510030718473393838\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "599496b8-a738-4944-aa8b-f0b8fde0ef7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.074953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "f985cf5a-5026-45b5-a792-8792f2c44da3",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/23527636910101720/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Gema.Beatty@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2023-03-22T06:44:01.074452Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"7leks03htfpggwur3ti0y6w7fd6r09e7xfdh04opjjp9tevqqivbukh10wbekahoqgtbh79f9u87991imwsw52w\",\n  \"SPFTextValue\" : \"x14gasc1xdypmguqz6n8az5e8fwc9qnxhdjz2vhdh8z9vi0h8taxj9kmdwi1c9w6odwsd8casw71oftxd3qekjgpj8prkxmyppbyuk5wqdaf9f5v3uhbvmwj3rhr7jirlp0bzu9n03g9af5jevgpvc4j8dpwoer3nceezbniempu3ucg1a3zvw92bh7pqz\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"1l7xhk8buu8didjoq6q103wycengumnmls2esq1pqsjxg\",\n  \"DKIMTestValue\" : \"v3ld0vv24\",\n  \"EmailAddress\" : \"Edmund.Lang@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Jodi Mohr\",\n  \"ReturnPathDomain\" : \"prctnscwd22v4ia71bljh0q5m76kbs40a13n2dg4wycmnk6m35bit83k9yjfgkscef4wna6ieq59abgh9e8nw7jeym1oe3eq3fyx2e1iy7s5tf2fnm0l4vexgyi4ypshn11y0779i71qvw2gymbhhpu0e\",\n  \"ReturnPathDomainCNAMEValue\" : \"h081q8xnu1fxjubalymh746jbsdt7bc2za9vv05voya7blfvyfz\",\n  \"SPFHost\" : \"bvi8mwjekixm4kj43kwl0tc6mt4oxjlhb9532954uiemtqn93a5ngei410h3mzmlzduxyq941k8zm9v0o03iawaih23zie6t2x\",\n  \"DKIMRevokedHost\" : \"lckrx69muvot3rdzz3qa5p2wpjvl57hvnovmgzvwadl5h0cxwqz7khw2rdg470z24npy07aoarr8nmzeuh1grq7djcgzyajmtkkhn2hyvkq61vtvephhaoio213cq7kslwjhfchf1h921sm30trhhbls37k14iiby2iz\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"54gzpp43hcv4ds8nzak69jhe\",\n  \"DKIMRevokedTextValue\" : \"0xas1ayh81evgxvzp4jj6i3f7uv0mpz6m82eka910x3owv0hk95rcb1vz5yruzgvao7qg28rdep22lmmep5w3lrq39wrvmo1rl01tk1x58dnagqdnfka4gn947uucwdah91v8xuprcyz52kzzfsx2c2f8afiyn1k\",\n  \"Confirmed\" : false,\n  \"ID\" : 3480434414757539779,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"bgktdeg7dnx1rn3sogd7mpge4ic6l6g50u6y61pg1ub0dt4zlutlolpvqrqemqwcmuci2sglapb030smlyvc3rkdnu5dmhrtcjox178qop97l992zc93fv9c4grhsojtj3pqfym5hmpl0uve4r1j4ui1do6fgh3ab2ajp4skjv7kyxtqbkl5r2qbx28nmec6b1ke\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f985cf5a-5026-45b5-a792-8792f2c44da3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.074855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "71971e7b-5ffc-4c25-9236-15a7affee11f",
    "name" : "Resend Signature Confirmation Email - 500",
    "request" : {
      "urlPath" : "/senders/1017339117923254880/resend",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "71971e7b-5ffc-4c25-9236-15a7affee11f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.074398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "5ead100a-869c-4b5d-9494-04accca8c264",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/57895638972603042/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Magnam corporis similique. Aut nostrum quia tempora rerum provident blanditiis et. Saepe voluptates blanditiis dicta libero recusandae ullam.\",\n  \"ErrorCode\" : 1721192406778189530\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ead100a-869c-4b5d-9494-04accca8c264",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.074371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "652d833f-ab37-430d-9735-97fb7f232808",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/4491207547689256601/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Autem quia ex. Repellendus et cupiditate aut. Omnis iusto possimus. Officia dolor dolorem occaecati.\",\n  \"ErrorCode\" : 5994604591273456682\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "652d833f-ab37-430d-9735-97fb7f232808",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.07429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "cf2bf8f9-2708-4c62-9845-cf74b7f6bd80",
    "name" : "Request a new DKIM Key - 500",
    "request" : {
      "urlPath" : "/senders/5813019348629111282/requestnewdkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "cf2bf8f9-2708-4c62-9845-cf74b7f6bd80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.074211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "32191e5a-a132-43af-b2bd-b88d10230a95",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/4522046352795822316/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Repellendus non ut animi est error sit. Sint aut qui ad nam. Exercitationem sequi aut dolor quia iusto saepe.\",\n  \"ErrorCode\" : 3244470041561423463\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32191e5a-a132-43af-b2bd-b88d10230a95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.074184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "77ae7b14-9a33-4a5d-8a12-9a42c0ad35b6",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/6442643479626042451/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Ut explicabo nemo nulla id blanditiis. Tempore consectetur provident laudantium molestias et aut. Exercitationem consequuntur iure et. Aspernatur dolorum qui. Minus non aut tempore.\",\n  \"ErrorCode\" : 6806525655955457434\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77ae7b14-9a33-4a5d-8a12-9a42c0ad35b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.074101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "1ca8f6d5-4e9c-47ca-85b5-aeb2007176ae",
    "name" : "Delete a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/5157510846479304519",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "1ca8f6d5-4e9c-47ca-85b5-aeb2007176ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.074013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "b449cd82-c16d-46b6-bdc3-16dc0b27e4d8",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/1631084656251298918",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Et dignissimos quia ea enim perferendis id. Praesentium aut sed. Excepturi quod ea soluta perspiciatis.\",\n  \"ErrorCode\" : 8271084234999702293\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b449cd82-c16d-46b6-bdc3-16dc0b27e4d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.073987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "943231ee-3a9b-4ed1-b0e3-2cb90b05ac97",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/4836481055652338938",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Rerum delectus repellat mollitia autem architecto aliquid. Necessitatibus aliquid ab. Iusto magni qui hic in sed. Maiores alias ipsa voluptatem eum.\",\n  \"ErrorCode\" : 673805768258922431\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "943231ee-3a9b-4ed1-b0e3-2cb90b05ac97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.073907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "83b05a8c-405f-4da1-a84d-a31e1976e5ff",
    "name" : "Update a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/2398787613507719742",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "83b05a8c-405f-4da1-a84d-a31e1976e5ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.073823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "fe31e026-91fb-4352-b542-1572254dc630",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/5612354412268585796",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Non facilis repellendus. Sed nisi molestiae. Est totam occaecati harum fuga.\",\n  \"ErrorCode\" : 5032332751194193787\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe31e026-91fb-4352-b542-1572254dc630",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.073797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "d3e59e5d-9162-4320-886f-0ca0ca36cea9",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/5824588288648530632",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Jenni.Block@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-11-28T06:06:01.073366Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"azxzjzpfsh\",\n  \"SPFTextValue\" : \"vmrs9hygv6o2s9k0koowliey8qxr9bajxngj4c5ayjwzf474fnr52a3qdreruq9gi81ijva9e2wzjbraw06ed46qd0u96jjtn2ksncrrqy38ozn3uwmxez6y3de5laiaj9axy\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"mezj5aj3ouezwzyjhy9khtyvhisswzfnpelykll3wzwy8tkmc3q4na3cz47kqgv548ygiybnpa5wzej24rb55cujdyom4zmgbgsqm1xuk0pjy7krnr0rgq1rtgpy4293eud6gf40bg5twza\",\n  \"DKIMTestValue\" : \"4tg08vo2578f5pixkhio4teovessjq640go6t3n381poc1mo2cac0doybs71f7wdps9rw7hbxk116jjono1a8mstuc3vpmgsiqzqbarq0naqlp0oairk2l9mdnvbxoru8ouspi5tkz5yw49s4eg75qg40pzt3q0y7ue9aquv2fiqbhjgpv\",\n  \"EmailAddress\" : \"Marguerita.Goldner@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Carol Zulauf\",\n  \"ReturnPathDomain\" : \"h5cfixx2b44uz1pbo63923acml9e08hyhatnwqy6c9nf7kvrm\",\n  \"ReturnPathDomainCNAMEValue\" : \"4ja4yguv92uhjmggaq8rnm2bfwoama3jwmer3u6b6ee43w907wiqwd96\",\n  \"SPFHost\" : \"6vtaje58j1rpxql6yj2oai8cp8ygx3uswqa6kvk075gj40qm\",\n  \"DKIMRevokedHost\" : \"utd4h3ch0sov5fw8hfrmm7viesm0cd1ytbjtq7flhwn22pw3\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"v9698vwh3vgjwn54zg8yf9xdhy7f39fnhf5zp9d7n9la9ps4mcgtettuedieaj18eemwb3awrqe9v83nmv4ev6j367qnswey3inkkp6qzgu8jgq0t96fqhun8iwx1rtwofeg\",\n  \"DKIMRevokedTextValue\" : \"c0b3xn8v6328uq1pzmjzvaarueccvvko1sm1ql0ufv1ir2wtan177gce9ifsrl8y3kgvchomhgeg608mnujikjr83wtgm9w7knlk33fmcxa8qlkomio\",\n  \"Confirmed\" : true,\n  \"ID\" : 7789025732677300103,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"3c8qqujeca4kxbxdqmfy4ta3tkhpbehd3ehwzmu6l8sjk2ug8q2569pfmleli49wct04vby7r4dpriiis8eb9xwj6hqamfql1fyli5o36y8ta8cij0b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3e59e5d-9162-4320-886f-0ca0ca36cea9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.073713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "96831896-9b01-4470-a6a3-8e564264a63a",
    "name" : "Get a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/307128304026026896",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "96831896-9b01-4470-a6a3-8e564264a63a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.073324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "b8566504-20a0-467c-8131-102b0f98e5ef",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/2524409339397854630",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Molestiae dolorum doloremque. Dolorem quisquam consequuntur dolore. Hic similique dolor ut. Repudiandae at assumenda consectetur. Illo nemo aut asperiores.\",\n  \"ErrorCode\" : 1195472370116038459\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8566504-20a0-467c-8131-102b0f98e5ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.073297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "c633e976-e715-415f-a07e-67b6d7ec54f3",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/7355505341974522584",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Noel.Lehner@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2023-02-16T08:21:01.072859Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"f36hpmhuqxtg0j6yk3yyvllnw2oopvls9mumvy0j0h0mrp0widj69ruh3vgt5dvezwlzq32cw5uzjajr\",\n  \"SPFTextValue\" : \"t30obsu576gq1idz6ejqj01nzvot3rl0l01wzl0qpqr9ptlh8ay0qznps86hi610jfaudfuome5fgy3oyvn1cas3yf8p23iyaa08cqjp1a0buunn\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"k1fn7z4ycmc6njv5de3rlqtguqnq6tliao1hhgepfvolgj3braoeiylvjdh5wl9cn5kwusokbkiyccnbpiier\",\n  \"DKIMTestValue\" : \"n3qf2v\",\n  \"EmailAddress\" : \"Virgil.Reichert@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Burt Rolfson\",\n  \"ReturnPathDomain\" : \"mbygtexjg5nllqihn08mzn50ot6g90f7hglmfeg9gbh1frcprnzdsmii0neyc4tboerzzh1w0oo3brsjh9mqgk7bx9os7k0gl9x6kl3g88uv5dvginub7vf0c77666j1sbpyesyavywgyf0y59nqhq7kp2hgp8jry182\",\n  \"ReturnPathDomainCNAMEValue\" : \"ew4ft4ux5yda1o2f5z0ujzvsbjsxfnkeru02hgmfdcq3jjksh8exs15q04abas7k6bczp04ibuhb2bprpr2fsplou425booqfp5gydtr5x8pjcm4kswgbro9gvi45s2syedybi55u01hqfm9sjwo8kt98h5eh2mffjmh4vfphd\",\n  \"SPFHost\" : \"pg0la8xw7ztg1yfewdsvt9rrsxnrvxouqikni2wodzsybzfldgck0ff78zp9aews\",\n  \"DKIMRevokedHost\" : \"h68t9vy9val0hnuwm3tq69cikhlgmib2fhaa1njae7cf8ueqjv3w6obu7mnuu9lu691r6h09u676oafk3o352xkqqx0whkugdn350eyvv9nrvstiuc50owj3c9k906f747e2wtsofvooswx8nlpddu1thl2c04ng81ocoziz87lzflihr1ywl697anw7v\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"jbyum7oqhsm4ljphfxv41tos44kfibfwdsru9g67yha0x3xkl9r8a5vygu96az3t1kqeg9o8lfshbkfcbryth91\",\n  \"DKIMRevokedTextValue\" : \"ghia67vvi9blz1g47azudyywdaq6i8b6\",\n  \"Confirmed\" : false,\n  \"ID\" : 7010408166084310429,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"06vl9t59q5sq850732sqxnyvgqrmj8ypbglc5wrpxpub13dznuj567rx86v3qpr6hqa9sb0anv1x7c3dlg7699l3n79qwgirf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c633e976-e715-415f-a07e-67b6d7ec54f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.073208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "7a6eb76b-b019-4a34-9533-3e361acef347",
    "name" : "Create a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "7a6eb76b-b019-4a34-9533-3e361acef347",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.072815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "52acd763-7f12-4f38-b395-3f0774b4d6a3",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Fuga ducimus voluptas. Aut odio sint voluptas. Sint sunt sit. Eos eaque doloremque nam.\",\n  \"ErrorCode\" : 2651892688151883611\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52acd763-7f12-4f38-b395-3f0774b4d6a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.072792Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "7c05d090-f0ff-4690-bfbd-11f07bb05fff",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Jeffrey.Nader@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-07-09T06:59:01.072241Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"sk52f3b3sbvmf6ne3xi0ecsgv01qrfumcy99ces4i4to0a1p20rd290gacq9yu6orcbg92xp77e27xsx0qo3xtbzdusfop1ama4renie7v6pia5q3yd3ew4gixn4ydgjghyp31c8t\",\n  \"SPFTextValue\" : \"zr3ofuqdwjvj00jrpzjsrholtv1l8ev0srnuua7w7xp7a8bnlpchiml1tmheblcbljij75wxk10r6s15ghf3948zh0xk2ywprw6epvu77mh6p\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"hwg6230kj2w2moebflfxmu55jnqclif6jfanfievtcaco19bsw98o9l225erqk2asr4k2tmx6n\",\n  \"DKIMTestValue\" : \"gsg95ofat773j9wxu1wtssaj60uxdekvspr9qqpkrllfny88vt4uxbzielt77w5064mo3juxnpwachz7b\",\n  \"EmailAddress\" : \"Logan.Gutmann@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Mollie Beer\",\n  \"ReturnPathDomain\" : \"7y4bz9zzhbz9\",\n  \"ReturnPathDomainCNAMEValue\" : \"1pw5vd2vru3jfts4o0galljna0inse8v0ah06u06afysyamedbkd3x3598i11feg18nwhxyjmjo3m71fmeukrl8i08b3dw7a2tjeg7cihx4hu7p2dp0mxdv3oe0lz03hdg4x6n9ar7bxvndx8slzwi0c0dxo4x6c5sq9bq\",\n  \"SPFHost\" : \"uvqzu0sm7qn5y3wxwg38qp9t7lphdib5i814dkyls6b6ny8hsg50hzn4n0zmreip8wzhkv51gj05j1ziz9wu1pt2bmcrfxq1yfsu6a2yq219hw9mm647yxua3huqmeihdksjw05b1a6tmrl6vptt52w13qrhblbo1w7wlpd0imj3cfgh3ss6hp82nh2vjy9\",\n  \"DKIMRevokedHost\" : \"tzxxppkwowwkrdlibbogecyjmvlccm5pkdfft7kdnt\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"ig1vwsmgrge9mrwi5ndsbl6ik38zvo7g9afdyjfr42jg621v950f37f7puxgbal\",\n  \"DKIMRevokedTextValue\" : \"fh4rprzbzf2657gywca9q7vgtbl2jczymp8fyu82io5z05wp2peie0ca9fzpkcp5vd9775lhw07tsatsgie98jj7hi6i4dmfyyl6wev5ookv1sc6pcuyhus6eir2zqvcycu6hk54f78a4h0olm21oooo84j1qwsp8u\",\n  \"Confirmed\" : true,\n  \"ID\" : 1665538623768417904,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"lmrd8e1av5wvo1uvnht5ncba4nhmpe4g43c8di6id9of7rff988v6w3sj1654lfvu5fljvi0aif1gvgnkaawgvpfgv3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c05d090-f0ff-4690-bfbd-11f07bb05fff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.072702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "bffe9772-74ca-41ed-ac08-8987ee5f58d3",
    "name" : "List Sender Signatures - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "7745347237681942260"
        },
        "count" : {
          "equalTo" : "38"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "bffe9772-74ca-41ed-ac08-8987ee5f58d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.072186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "4b4a37b1-8197-4357-aad2-22e166b860ac",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "9100124861814966950"
        },
        "count" : {
          "equalTo" : "117"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Maiores et rerum dolorem expedita nemo et. Sunt quia dolore quia. Facilis officia deserunt eius ducimus exercitationem voluptatibus. Qui illum ipsum blanditiis ea.\",\n  \"ErrorCode\" : 1802646417103568588\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b4a37b1-8197-4357-aad2-22e166b860ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.07214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "570a939d-4428-431c-9beb-17d306393217",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "3398085281083115730"
        },
        "count" : {
          "equalTo" : "159"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 1168849809219643098,\n  \"SenderSignatures\" : [ {\n    \"ReplyToEmailAddress\" : \"Forest.O'Kon@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 6225341192102366014,\n    \"Domain\" : \"lazhgd0o97ayekdz79tse89ec72e5e87rgjyqemuu21z3aqg624hq57tq4zkp5bporpw076m1mtrzmpwwcrdeop3zxxb7o3wjm73o9ykekwe3t6v8orhrqxp0xaz6aqg9lqsbgsbkjujj4pxijol\",\n    \"EmailAddress\" : \"Carlee.Heller@email.example.mocklab.io\",\n    \"Name\" : \"Rayna Kertzmann DVM\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Tyree.Reynolds@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 7820091713644768,\n    \"Domain\" : \"zp2orqo1jpxmhblxdfxs2bqihhg8ahmikgi9y31s398rqgooh3o7gamtv0m0t9r9a\",\n    \"EmailAddress\" : \"Susannah.Jacobs@email.example.mocklab.io\",\n    \"Name\" : \"Johnny Windler\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Henry.Rutherford@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 8091055888789775590,\n    \"Domain\" : \"f9rgirak6hgcdadgdfy5jtseh2ai6v1l3f13fq2brvotwld2yyu67sl4qoyayi4raf4erzdisb6kyidua4c5soopqn2t0my26srulyvlr1lxl6tbbxxetzf01p6ffuxsuq65ee8aosqmnot7i5gx7\",\n    \"EmailAddress\" : \"Glennie.Sporer@email.example.mocklab.io\",\n    \"Name\" : \"Arlen Barton\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Hollis.Pagac@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 327906066780796127,\n    \"Domain\" : \"5u02ziukr2joqnh0zs3u1d2aavl3xpiqmaxwm261vuk17l1nspqtsf3wyf9xh8jkmwnl9v6pij7g4l2xjq7pcxfu1hr08axvcek546j6lviaevsy7hnr1y2cx90jtm1f2qy1h702zky94loubl\",\n    \"EmailAddress\" : \"Arthur.Bednar@email.example.mocklab.io\",\n    \"Name\" : \"Mrs. Leo Lesch\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Woodrow.Boyle@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 1562311731692129057,\n    \"Domain\" : \"b2ykl82unenai7klq796hz9yjxyjz0s2904ugh2bg7p3057w6a6fv6dtu9h5e\",\n    \"EmailAddress\" : \"Kelley.Feest@email.example.mocklab.io\",\n    \"Name\" : \"Jefferey Krajcik MD\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Spencer.Mohr@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 6207600270421839408,\n    \"Domain\" : \"d4yrcit8410eebovi4gyakihjukj5kt8ezjqze41mzd3puzvonq9brxzjq32bwwfjfndvl85irzaqyjfd1q2r4aazgd\",\n    \"EmailAddress\" : \"Sari.Murray@email.example.mocklab.io\",\n    \"Name\" : \"Valery Bode\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Armando.Muller@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 4343749258808874093,\n    \"Domain\" : \"97mddvkrrds0q42oq0wr8yox0j6rank4plc7ubiqxn3c3l25lg7ig868yvlxpbuer00tjr1meqmpdpnonytf3h22im16z7fbjjea4h8apzzbkilftfvabtdpmix2svje0rtfhobzjmsqlet8r7ea2se\",\n    \"EmailAddress\" : \"Steven.Weimann@email.example.mocklab.io\",\n    \"Name\" : \"Lyda Larkin\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Ernest.McLaughlin@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 2092044531741294250,\n    \"Domain\" : \"zy03cqzfklztddkxmskqo\",\n    \"EmailAddress\" : \"Percy.Pfannerstill@email.example.mocklab.io\",\n    \"Name\" : \"Scotty Abernathy\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "570a939d-4428-431c-9beb-17d306393217",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.072027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SenderSignatures" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SenderSignatureInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "04da4536-7639-4ac7-bcaf-110140d0080a",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/domains/3960785064778406718/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "04da4536-7639-4ac7-bcaf-110140d0080a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.071259Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain"
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "c215cd82-628f-4aae-9097-d31d2d1b3ee2",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/426525225881290807/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Tempora minus quia error sed aliquid laudantium. Maxime ut recusandae consequatur. Rem architecto aut unde.\",\n  \"ErrorCode\" : 1104008010255146545\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c215cd82-628f-4aae-9097-d31d2d1b3ee2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.071233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "15cf4afb-86e4-4f6f-8755-17991eb70022",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/6541848652136108159/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SPFTextValue\" : \"fhmvwm4qkllyw8adiw54031swbsj1qf911wl2q4gcu7m8lbx77l6nvnajmgl79zzurf5vvo38jycd3rumhjtcqg6txs9w3f4\",\n  \"SPFHost\" : \"3zjxt2mfmjt93v06d2x6aehsb2211wfxrlc8t8ioisj7lor93m6a6pextdh5br86j5ivij4i4lo84b1heovo0m2dblsctqpzjseorwwtr2ahy838gp7qen3wx740funp0ako25jqo74d\",\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15cf4afb-86e4-4f6f-8755-17991eb70022",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.071157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "d907372d-3a92-45aa-94c1-62c618798dcf",
    "name" : "Request DNS Verification for Return-Path - 500",
    "request" : {
      "urlPath" : "/domains/7970187680876526459/verifyreturnpath",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d907372d-3a92-45aa-94c1-62c618798dcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.071055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "39302de9-b38e-42e9-8673-e7359ce55ce8",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/996763459564460918/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Optio dolorem enim amet voluptatem quisquam ut. Ut ea et mollitia. Necessitatibus pariatur ex. Inventore non rem eum facilis porro. Consequatur tempore sunt et minus facilis dicta.\",\n  \"ErrorCode\" : 812043810309024414\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39302de9-b38e-42e9-8673-e7359ce55ce8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.071028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "3a71a354-b2ca-4a21-be6c-3e9d8ff9c994",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/5028850592973938232/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-07-20T08:21:01.07063Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"bcr4bse0sgwjjlnmjopezmxe2vtex0hs4y8s9lisy0uplx94n9g17agtmlsgshdt8mub479a8duzu4cxo8ucvaxwnfb7zqn8fy1zx2kf2wt0utf2i3s76evjykiy3kkx\",\n  \"SPFTextValue\" : \"sducntcdruzd3ubvb0tw446d2hyn2lpabtqfn0lhwfvaejt\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"nn3iv7sfga6w2tybxztwrp4r2prpfge1xn6vzdb3xoyj8l7082hbqbpi3w\",\n  \"DKIMTestValue\" : \"8x6t60gvn5jxb1mt661juxv5df22h2pzr9w8or7d659w76suf72q5ci7hq6n1htlup6op475zurquqnyyrc15r5ywnjcy2hcq152x5l79t832z5loobnigec20a11s\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Phebe Parisian\",\n  \"ReturnPathDomain\" : \"s059ejk5svro6t4\",\n  \"ReturnPathDomainCNAMEValue\" : \"g4qp33iieuwzihpzeltqvve7bwx2wuatv1q18oq4h38ma4zrs1lbqwcrli5gnhl9ofn81sjnrkp59yy848kk4p927o18fjkqx0oyh4hby7wzm8m0728y9btssdo9ba3ijvt2y2o9370pyutud2rhryvyi1qkwgqfehj8sjnnehd6hcd\",\n  \"SPFHost\" : \"tfenysmhmukca27exnwcp88m12pi8prkiep5plt8yc56n0byey0kz\",\n  \"DKIMRevokedHost\" : \"0j69c5wa9wx65e9\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"o6j3x1vxzv96ibrekhu1lc2t5tw2c6qplfjtoir2j3n18r96ibf9hxcffehcl77eshukyxq65uoryyp8\",\n  \"DKIMRevokedTextValue\" : \"fwteqaqcsjped57kgjcv4gntdf4yvkcjx1877xvqykee85hglskf4zzccnsqogv6xb5zf9fbpkhm3ffxk2uz9sgkqd3rakdmpfvtqpegb2u6z9pyma4pkgbu7ejuvqapukdit51gus15aokzbownv1z1pu2z6wc2708yi1grni14qpk1mfoqckt\",\n  \"ID\" : 348353769030252240,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a71a354-b2ca-4a21-be6c-3e9d8ff9c994",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.070938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "3a01d438-a661-4033-ad43-a0b8ce45cbdb",
    "name" : "Request DNS Verification for DKIM - 500",
    "request" : {
      "urlPath" : "/domains/9101645689159269236/verifydkim",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3a01d438-a661-4033-ad43-a0b8ce45cbdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.070596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "0172125e-8118-49ec-ac25-ad6f2421bb3f",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/6965053405641020485/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Autem et ab odit. Quae rerum ut minima. Ea quia animi deserunt impedit eligendi sed aliquid.\",\n  \"ErrorCode\" : 638371072840592530\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0172125e-8118-49ec-ac25-ad6f2421bb3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.070569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "e7ee8c99-34be-4586-8214-d6678ab9ef5f",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/158455669174977552/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-10-22T06:04:01.070132Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"0l3s89ykqivxlxlfa38ebigd6brwrkptbojbpuiv33\",\n  \"SPFTextValue\" : \"zd2otu558s6ga9jics8ntazkla4gvo929hlcsd80h5f3g0qkfplq70521a48w3nh9ox71t99jdnto489f\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"6k2q6z69odkwm9wm3u31o6lem20btgcxr0ziglnpbcztvfr9or0dx8sy66a4qdz9cjaac\",\n  \"DKIMTestValue\" : \"r4qnw743rdu4gdng3o3978tocvvg4mbnfe3vzmrhnv3gwx8xygxs6ooat1j6lqknj48a48vx9zqcnyvthie0x4m9xf\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Brice Vandervort\",\n  \"ReturnPathDomain\" : \"rugaly6tz52iq4f2qh4g8g6wr84ibneyl8vz6v0jn8mqeevv7ref6oylpnu7lpesv7x09sfgzgna0dapu\",\n  \"ReturnPathDomainCNAMEValue\" : \"u6m6wrvgpjlnodsion3cl5ffsu0aouibluyjvkdcgrembg85scq3a7ix41tx14k40hmxys2zfbwjzutmvnexhxb2w7shuvd4r7kluxsawfamdr3rjqckf7lpbr29yztsil6bvot2ac88x75aybrqjc\",\n  \"SPFHost\" : \"jhgng212odzt8m0dcsxpa5ewilyigtit4yut79x1u9ldo9yl63tqj6n02pcsqtehcppjx9wb9cn29ucxdndy0245sn7arl7jznrp3l11rq0xb6m51jmsbh6corb3ugezh7zwpnt96s4i5r3tykmtsuljywsooorke51si\",\n  \"DKIMRevokedHost\" : \"kec0ew81nkacag5mo54n1szam0a1u4en5e91npd02s9g8bn37b2iacgdp683a23cci8u58uf7hixf1f6m7fn1qf3tkaw1szc0btcfbwzboq3fw4dh20tbkkeuh1f3meke1b44gm7tchp4mie7fd26s4k7hd6wc8z2rolb6hwfqvtq5ic1rqco8f81h6rgeet\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"fjljytq0ce815hu42oujk7wvlky28zmfgf4hsw0h1vkbpvn\",\n  \"DKIMRevokedTextValue\" : \"u926lk791rq5jeae8nmkerk57srkviohyhtxvi37p8u5lfrxtwejc7ecr42xci965ruqfyrshm0lhbh8fb87a3srclkklas4z5cmcu2vxi4jk836aduz0h9r75bnq2y3ocjjrg4cl0ncpoygeunf1vjn0yy7kubgjcvqzn3\",\n  \"ID\" : 5065023780779941823,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7ee8c99-34be-4586-8214-d6678ab9ef5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.070474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "50acc0ce-afd9-47de-982f-56e0cc3b7bd5",
    "name" : "Rotate DKIM Key - 500",
    "request" : {
      "urlPath" : "/domains/9081215800034740830/rotatedkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "50acc0ce-afd9-47de-982f-56e0cc3b7bd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.070087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain"
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "892bc3f1-e989-40fd-84ba-b8e9351ee05b",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/560831985591606363/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Nam labore rerum ut nam consequatur nihil. Quaerat sint sit dolorem dolores deserunt aut. Iste hic officia voluptatum est qui nihil. Consequatur minima assumenda porro ex doloribus.\",\n  \"ErrorCode\" : 2635453731474403714\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "892bc3f1-e989-40fd-84ba-b8e9351ee05b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.070042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "1be9d3c5-eb87-4cc5-92d4-cafbc11fab21",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/4433577476833714319/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2023-01-15T09:06:01.069659Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"lt1s4vw5670wf68l8cb802pyt9l1fjl5vddzz8twmbirzxkp2zuabg2tkkl4acz6ns4mvhrkwqgsgduv8a6qsjzzqwfz2wai0xih5ocxccb165zismv55s4jdqnkmdix9ywzrveamvdwgpmrwoixtq4xjitp3hqorh\",\n  \"DKIMRevokedHost\" : \"cqa83ugg02x3zrmaciimlpi62nnnt7z8n38cmo9un2ngxbnl3pbtqv2wdtyeccp6yto27zln1grb1l4v66fs39re7vtr3puenwx7p4tj\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"pekd6dyu0s9svd669mv98ptcy381mj0nfkc838ic2p3xp117q3vnyqko6acubysqdz5ff\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"ncmp89cqrevvsrf0hc8dgnw8kx\",\n  \"DKIMRevokedTextValue\" : \"l1xzwru8yxu4yb4y9ikmyvo1iirg2pjci0xj35zew8uxnditjj8h9lvqgwaom416ucnnwc14ciaqj26cnrge5rc0i3nir0w6aynlningovsfmac70013xapgivoz2xemr1pva3vpy7qbtlzrs4iq614y5c7dyzc7jndg65y\",\n  \"ID\" : 8503108486643007193,\n  \"DKIMTestValue\" : \"gwoz2myqqjh2mdr0nsy6pz8k9ocogqldhn19a8waz83jdu\",\n  \"Name\" : \"Ms. Cherie Bogan\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1be9d3c5-eb87-4cc5-92d4-cafbc11fab21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.069934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "9fd3bb63-d240-4431-b5b3-c32555ccdc42",
    "name" : "Delete a Domain - 500",
    "request" : {
      "urlPath" : "/domains/81942704581127958",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "9fd3bb63-d240-4431-b5b3-c32555ccdc42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.06962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "2a3a487b-92b8-443b-85bd-f761deee6486",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/287042240093286968",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Natus natus incidunt quo aut quaerat facilis. Neque et culpa reiciendis amet nulla architecto natus. Ipsa aut voluptas molestiae. Amet aliquid exercitationem perspiciatis eum.\",\n  \"ErrorCode\" : 499680955002914008\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a3a487b-92b8-443b-85bd-f761deee6486",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.069594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "cd1c2010-b621-414c-89fe-7cd117d383c1",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/7747914935756459002",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Explicabo tempore sed molestias quia. Modi autem et ipsa qui sed porro. Qui autem impedit reiciendis dolorem nobis labore. Explicabo officiis id sapiente totam quibusdam maxime veniam. Recusandae aspe\",\n  \"ErrorCode\" : 2699222157462474628\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd1c2010-b621-414c-89fe-7cd117d383c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.069508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "2851cd7c-79f1-4f06-950c-e9ee30e6dc2c",
    "name" : "Update a Domain - 500",
    "request" : {
      "urlPath" : "/domains/5728413166906306994",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2851cd7c-79f1-4f06-950c-e9ee30e6dc2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.069419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "1747f9b5-28bd-472d-9543-9e0200f32b0b",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/7980778162590145110",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Dolor molestiae cum qui quo consequatur rem. Quae magnam reiciendis quia ut et. Magnam sint ut.\",\n  \"ErrorCode\" : 3849385995263946630\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1747f9b5-28bd-472d-9543-9e0200f32b0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.069392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "54a77714-f22e-4cb3-9cc4-262780cd6617",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/7056963012319884308",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-07-09T09:01:01.069004Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"ga23r0hh3fq1j0apz7v6qjusru34ctir4g5lserahqr0wz2j2fj6bc9qj906lro5c7whnjv58ahag90jfkencjr8hppdevgh7q7fbj9bf453swnbudujaunayzscxhay6raya3qr7il6qaoumbpzrm6xevitgxgc4it8jdxxf0mkg\",\n  \"SPFTextValue\" : \"vw9fupct12c91pnuy5\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"a9qk11b25u0loju0ftuxq38ubnl21svqxi7uznyeg8plbocxnyl3w7j62iij3w6zfgtsajtvfejbhs53cofmtg7gez6u1ujbg57lrmvv1njds8jmh9knp2oozy7zudfeisf\",\n  \"DKIMTestValue\" : \"ort76yfoj51qka9i6bpgc3o6hy2nt8cth\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Reinaldo Hahn\",\n  \"ReturnPathDomain\" : \"9pndj3ewdf4a22h1f1yy6xoj73h1dbn1ybmj5eq7t6ewnn2uhajwh2t71bem8d5ayfeueyhtt078tfykonpwuufswogqab1qp665vzj6up8yboq68kmzch9q6jrqu4qnr7rxspvi2a71ury412glvvldqjsekia\",\n  \"ReturnPathDomainCNAMEValue\" : \"1m7kryig2xoslpen8v1s7czfhp3k7hnkrw54hdyveaz76oikkbxsifqsi8g009h61rtxa6ml38qcwhroahf7hxkgp2a4fgvlot4c2z\",\n  \"SPFHost\" : \"wwlbthaobk1n8uu0vrri1w85rrqwpinfj6khs3vbfx09ghan4imcljdz4xgu03qgo2xsdod0zpq878x\",\n  \"DKIMRevokedHost\" : \"mfy6k12xy7d4twr43dkzy3ukk\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"lluoyvzy5bzlurhh78doq2t5u14hnrrsgat6ixjc8qdtq88lr711bw3ypr19617ov\",\n  \"DKIMRevokedTextValue\" : \"2ayxxyy9b96frgct3l9nh6dlg38g76cxuz89930lf36lv\",\n  \"ID\" : 126686083199889050,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54a77714-f22e-4cb3-9cc4-262780cd6617",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.069308Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "daa0e428-a828-4c1b-bac5-6a9c31026c30",
    "name" : "Get a Domain - 500",
    "request" : {
      "urlPath" : "/domains/772255251764065284",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "daa0e428-a828-4c1b-bac5-6a9c31026c30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.068971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "e151f0cf-c314-4e71-b153-b48e8bd30eeb",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/3874717539020806464",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"In ipsa qui sed dolor. Aperiam reiciendis harum asperiores omnis deserunt. Dolorum quia minima sint et.\",\n  \"ErrorCode\" : 5020248216581947044\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e151f0cf-c314-4e71-b153-b48e8bd30eeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.068946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "f776875b-2c76-44bf-961c-d879d6ed77a9",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/7105276370422244645",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-12-08T08:44:01.068555Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"gecplyxbxbhxcfbxnqodrb6fxv6rjzszcssai6fkpu16hq15pjreal4mic9fyyf7gyffvfzxx1nh3yz67xqd3aodmyxyc8xdnl8polvthoapl8t3v723ti8i85eczbgh\",\n  \"SPFTextValue\" : \"h9p3lg2ibslqgmxonc3y1n6vd0g80344lshhfr8c7hqb1ck9kkgeu4xl3xg99etsk2hfceavw75ov40x29c3406bmdzw0t\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"zh8tp4djskrpqkr3ze4ysrtd0a5cfkr7ajsgj07gqsf78bki4tjvcd8o7ynvturyv7whp23nems6od4l9ipxa7nhij4am9c6\",\n  \"DKIMTestValue\" : \"cqp8fur7\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Dr. Jason Raynor\",\n  \"ReturnPathDomain\" : \"818atthmf2edcxmhnp3nm7r9egjfmgffr0gig5qhoxhqp7w8wedm7wc2lhvzwzbll41hnvoq2lym4kynny2lf3r0xhroeu5tt9nmxylurqm9i2dd2db0n2rj8xneglmnlf75nu1c0akz2jdr3n271kla95j8jtlifmzpbn6e9jcf9b1w0jpz069y8148ehf\",\n  \"ReturnPathDomainCNAMEValue\" : \"lb02m4txdev77lyc7nnbo5kf4aifjag26mqx6i2wlvfxcnf5wm8bqcnbhhyg6olzcle4k99nghnbvgp2gqtugus0\",\n  \"SPFHost\" : \"eh7l321uzrhoenvox4l3x9n40t35tsmc1r4iy6hq7333re1dn137f5hz1yax5wxa0g7hkrhoy2t2jyzg1qxu2cw1v8kjutnba6hq0ds7gkjoq4y973xjw9h9lj7rkl8ddzjyj7nzstku5nlkt0h3fdb91wkvsxby2arszaprn22z7wph6qj\",\n  \"DKIMRevokedHost\" : \"oom8hsjk1k0vh01qtcpvse6jqdrxa3l57qj5uf0vkbskezc1z8eh9tcz7hgarkxuj6y2w6w0zyjtoxtb6t3ts326\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"dl18sf2htqfwk2jwe877v13a58lj0unai5zu6ggkoa353pcx8gnpa9fiw5r8vt0hx2vcrxzu2dz8rmqr43s\",\n  \"DKIMRevokedTextValue\" : \"t60s3q0uu2a\",\n  \"ID\" : 6927548861093293767,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f776875b-2c76-44bf-961c-d879d6ed77a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.068862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "4978e85f-cf86-433a-b6ac-35fa39e5aefb",
    "name" : "Create a Domain - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "4978e85f-cf86-433a-b6ac-35fa39e5aefb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.068522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "a96a4169-8565-4d63-9731-5230eb4f57e1",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ut atque fugit. Sed deleniti placeat rem officiis eos rem. Vel minima enim dignissimos praesentium laborum amet.\",\n  \"ErrorCode\" : 4936222260380539700\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a96a4169-8565-4d63-9731-5230eb4f57e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.068499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "55dbd535-9bff-4b40-ad2b-cf11560dc0e3",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-10-07T05:36:01.067993Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"9jx573bpbkx7m19pz39xhaf9qqbqymq4pvx1sb0vb9hk526tlimnxx4y5w1f07wqjill7prpupfj39he75qn\",\n  \"SPFTextValue\" : \"5qkd8a4xdmmoz98b7a40m99pz06urktzrgo8x94jkl586hrc7h6j4r6fi1frukbeea69efljgw56tfvk6jhinbl28w94ik85hhzj53w59xzbsyaknbhc4vkca4p5pclhlzrez3r1c4yzb3zqepq6d11fb2zw1kzm9\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"p7tcmu5ultg1x7h40f0umoeg23prdowmgk9n9344uvwa2fg6eeg0wzndm1ptlj27u3atuoo33f6rn7mj8xzw6bob0nqijht1lzsrm16hih65b0srebdl0m066e266qpwjc799madle88qiwbos74b6po6\",\n  \"DKIMTestValue\" : \"sla35s20aoqqpk5whqluizzip73m1tv9d8w06d3suk3xby0natiq2w4jl2jvfazyu8c57z36yy8l220pwf7rpbbj7whustehv9vg9saxja8sm9v98g9mi3wnkz5382wr769ric5z5ok072zjxr49hgxrbpumne7zm\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Miss Emmitt Ruecker\",\n  \"ReturnPathDomain\" : \"ohrid07m\",\n  \"ReturnPathDomainCNAMEValue\" : \"1qtg7ou944j5u2yfu9x8evib04mw10tqfdegs4flxj9c8w27r9icaugr7pufkdyv1bt5w04hnn115iv6auvrik9logj20qxg2sh3hr1npyobltxa680chucv0ulxts796tn1tiby3qtjgxtlgg4097p06lbvfuh66tn32pc66bhg6p\",\n  \"SPFHost\" : \"8b7zy2hmsuu3lrs8b6m9sfbub4xrfyt1lu9n57bdgiqxt2bom4pbew2v4eui7f7dlbaln0gufmxqhvr541heovb0199nsxeey6axjalj4t9jwukt1ju1np9znpa5u9hip4tgxdaigjwgi69bvhcg6alhvyh9tqaiazzxdt2h\",\n  \"DKIMRevokedHost\" : \"t1fxd7s4v89c0p4kycf9v2wmc15i9d2xfbausydon2vznqnemt64ua3ks5pxi2bjyd8ky4\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"unn1q4fwvgzuf\",\n  \"DKIMRevokedTextValue\" : \"qrakv4ar65xvh4t7i3gvzbcwtm62njw87gbcbobod3ydh7wa9hitoprikqc5h\",\n  \"ID\" : 2813424821539348724,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55dbd535-9bff-4b40-ad2b-cf11560dc0e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.068413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "17dc2138-ed42-4572-98ad-66fa9a060d87",
    "name" : "List Domains - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "1181981897867937417"
        },
        "count" : {
          "equalTo" : "178"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "17dc2138-ed42-4572-98ad-66fa9a060d87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.067945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "e2a37be1-2720-4ba8-bc72-b5fcdd3a3f5a",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "7763863777674080628"
        },
        "count" : {
          "equalTo" : "445"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Aut rerum mollitia libero et quia veniam ut. Nihil porro fugiat beatae alias. Quo esse beatae ex minus eos. Ut totam ut aliquam eveniet. Dolorem ut modi optio.\",\n  \"ErrorCode\" : 6679578111854468763\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2a37be1-2720-4ba8-bc72-b5fcdd3a3f5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.067895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "f5f85520-0434-43c6-9ecd-f2dc2b5f8e5b",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4652898215002139545"
        },
        "count" : {
          "equalTo" : "445"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Domains\" : [ {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : true,\n    \"ID\" : 8368626167889304694,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Bradford Cassin Sr.\"\n  }, {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : false,\n    \"ID\" : 3913976309753289730,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Jake Maggio\"\n  }, {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : true,\n    \"ID\" : 6063455029644064913,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Ms. Lesa Kunze\"\n  }, {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : false,\n    \"ID\" : 2526055543995203753,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Kori Frami\"\n  }, {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : false,\n    \"ID\" : 5895652898714054985,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Lamar Sipes\"\n  } ],\n  \"TotalCount\" : 747192325440543145\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5f85520-0434-43c6-9ecd-f2dc2b5f8e5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:01.067741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Domains" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DomainInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 68
  } ]
}