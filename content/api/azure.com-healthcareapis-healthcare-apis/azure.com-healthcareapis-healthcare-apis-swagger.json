{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "HealthcareApisClient",
    "description" : "Use this API to manage Microsoft HealthcareApis services in your Azure subscription.",
    "version" : "2019-09-16"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.HealthcareApis/operations" : {
      "get" : {
        "tags" : [ "Proxy" ],
        "description" : "Lists all of the available Healthcare service REST API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "DefaultErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/checkNameAvailability" : {
      "post" : {
        "tags" : [ "Proxy" ],
        "description" : "Check if a service instance name is available.",
        "operationId" : "Services_CheckNameAvailability",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Set the name parameter in the CheckNameAvailabilityParameters structure to the name of the service instance to check.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the service name is available. If the name is not available, the body contains the reason.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServicesNameAvailabilityInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "DefaultErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/locations/{locationName}/operationresults/{operationResultId}" : {
      "get" : {
        "tags" : [ "Resource" ],
        "description" : "Get the operation result for a long running operation.",
        "operationId" : "OperationResults_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationName",
          "in" : "path",
          "description" : "The location of the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationResultId",
          "in" : "path",
          "description" : "The ID of the operation result to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The body contains all of the properties of the operation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResultsDescription"
                }
              }
            }
          },
          "404" : {
            "description" : "No operation result was found matching operationResultId.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/services" : {
      "get" : {
        "tags" : [ "Collection" ],
        "description" : "Get all the service instances in a subscription.",
        "operationId" : "Services_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the subscription.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServicesDescriptionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "DefaultErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services" : {
      "get" : {
        "tags" : [ "Collection" ],
        "description" : "Get all the service instances in a resource group.",
        "operationId" : "Services_ListByResourceGroup",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServicesDescriptionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "DefaultErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}" : {
      "get" : {
        "tags" : [ "Resource" ],
        "description" : "Get the metadata of a service instance.",
        "operationId" : "Services_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The body contains all of the properties of the service instance.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServicesDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Resource" ],
        "description" : "Create or update the metadata of a service instance.",
        "operationId" : "Services_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The service instance metadata.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServicesDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated - Put request accepted and an existing resource is being updated; the operation will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServicesDescription"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Put request accepted and a new resource was created; the operation will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServicesDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "DefaultErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Resource" ],
        "description" : "Delete a service instance.",
        "operationId" : "Services_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted - Delete request accepted; the operation will complete asynchronously."
          },
          "204" : {
            "description" : "The resource does not exist."
          },
          "default" : {
            "description" : "DefaultErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Resource" ],
        "description" : "Update the metadata of a service instance.",
        "operationId" : "Services_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The service instance metadata and security metadata.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServicesPatchDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The tags for the resource were updated successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServicesDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "DefaultErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "schemas" : {
      "CheckNameAvailabilityParameters" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the service instance to check."
          },
          "type" : {
            "type" : "string",
            "description" : "The fully qualified resource type which includes provider namespace."
          }
        },
        "description" : "Input values."
      },
      "ErrorDetails" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ErrorDetailsInternal"
          }
        },
        "description" : "Error details."
      },
      "ErrorDetailsInternal" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The error code.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "The error message.",
            "readOnly" : true
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the particular error.",
            "readOnly" : true
          }
        },
        "description" : "Error details."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{read | write | action | delete}",
            "readOnly" : true
          },
          "origin" : {
            "type" : "string",
            "description" : "Default value is 'user,system'.",
            "readOnly" : true
          }
        },
        "description" : "Service REST API operation."
      },
      "OperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Friendly description for the operation,",
            "readOnly" : true
          },
          "operation" : {
            "type" : "string",
            "description" : "Name of the operation",
            "readOnly" : true
          },
          "provider" : {
            "type" : "string",
            "description" : "Service provider: Microsoft.HealthcareApis",
            "readOnly" : true
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource Type: Services",
            "readOnly" : true
          }
        },
        "description" : "The object that represents the operation."
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link used to get the next page of service description objects."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of service operations supported by the Microsoft.HealthcareApis resource provider.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "A list of service operations. It contains a list of operations and a URL link to get the next set of results."
      },
      "OperationResultsDescription" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the operation returned.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the operation result.",
            "readOnly" : true
          },
          "properties" : {
            "type" : "object",
            "description" : "Additional properties of the operation result."
          },
          "startTime" : {
            "type" : "string",
            "description" : "The time that the operation was started.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the operation being performed.",
            "readOnly" : true,
            "enum" : [ "Canceled", "Succeeded", "Failed", "Requested", "Running" ]
          }
        },
        "description" : "The properties indicating the operation result of an operation on a service."
      },
      "Resource" : {
        "required" : [ "kind", "location" ],
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "An etag associated with the resource, used for optimistic concurrency when editing it."
          },
          "id" : {
            "type" : "string",
            "description" : "The resource identifier.",
            "readOnly" : true
          },
          "kind" : {
            "type" : "string",
            "description" : "The kind of the service.",
            "enum" : [ "fhir", "fhir-Stu3", "fhir-R4" ]
          },
          "location" : {
            "type" : "string",
            "description" : "The resource location."
          },
          "name" : {
            "pattern" : "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$",
            "type" : "string",
            "description" : "The resource name.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The resource tags."
          },
          "type" : {
            "type" : "string",
            "description" : "The resource type.",
            "readOnly" : true
          }
        },
        "description" : "The common properties of a service."
      },
      "ServiceAccessPoliciesInfo" : {
        "minItems" : 1,
        "type" : "array",
        "description" : "The access policies of the service instance.",
        "items" : {
          "$ref" : "#/components/schemas/ServiceAccessPolicyEntry"
        }
      },
      "ServiceAccessPolicyEntry" : {
        "required" : [ "objectId" ],
        "type" : "object",
        "properties" : {
          "objectId" : {
            "pattern" : "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
            "type" : "string",
            "description" : "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service."
          }
        },
        "description" : "An access policy entry."
      },
      "ServiceAuthenticationConfigurationInfo" : {
        "type" : "object",
        "properties" : {
          "audience" : {
            "type" : "string",
            "description" : "The audience url for the service"
          },
          "authority" : {
            "type" : "string",
            "description" : "The authority url for the service"
          },
          "smartProxyEnabled" : {
            "type" : "boolean",
            "description" : "If the SMART on FHIR proxy is enabled"
          }
        },
        "description" : "Authentication configuration information"
      },
      "ServiceCorsConfigurationHeaderEntry" : {
        "type" : "string",
        "description" : "A header for CORS."
      },
      "ServiceCorsConfigurationInfo" : {
        "type" : "object",
        "properties" : {
          "allowCredentials" : {
            "type" : "boolean",
            "description" : "If credentials are allowed via CORS."
          },
          "headers" : {
            "type" : "array",
            "description" : "The headers to be allowed via CORS.",
            "items" : {
              "$ref" : "#/components/schemas/ServiceCorsConfigurationHeaderEntry"
            }
          },
          "maxAge" : {
            "maximum" : 99999,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The max age to be allowed via CORS."
          },
          "methods" : {
            "type" : "array",
            "description" : "The methods to be allowed via CORS.",
            "items" : {
              "$ref" : "#/components/schemas/ServiceCorsConfigurationMethodEntry"
            }
          },
          "origins" : {
            "type" : "array",
            "description" : "The origins to be allowed via CORS.",
            "items" : {
              "$ref" : "#/components/schemas/ServiceCorsConfigurationOriginEntry"
            }
          }
        },
        "description" : "The settings for the CORS configuration of the service instance."
      },
      "ServiceCorsConfigurationMethodEntry" : {
        "type" : "string",
        "description" : "A method for CORS."
      },
      "ServiceCorsConfigurationOriginEntry" : {
        "pattern" : "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$",
        "type" : "string",
        "description" : "An origin for CORS."
      },
      "ServiceCosmosDbConfigurationInfo" : {
        "type" : "object",
        "properties" : {
          "offerThroughput" : {
            "maximum" : 10000,
            "minimum" : 400,
            "type" : "integer",
            "description" : "The provisioned throughput for the backing database."
          }
        },
        "description" : "The settings for the Cosmos DB database backing the service."
      },
      "ServicesDescription" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ServicesProperties"
          }
        },
        "description" : "The description of the service.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ServicesDescriptionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link used to get the next page of service description objects."
          },
          "value" : {
            "type" : "array",
            "description" : "A list of service description objects.",
            "items" : {
              "$ref" : "#/components/schemas/ServicesDescription"
            }
          }
        },
        "description" : "A list of service description objects with a next link."
      },
      "ServicesNameAvailabilityInfo" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The detailed reason message."
          },
          "nameAvailable" : {
            "type" : "boolean",
            "description" : "The value which indicates whether the provided name is available.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for unavailability.",
            "readOnly" : true,
            "enum" : [ "Invalid", "AlreadyExists" ]
          }
        },
        "description" : "The properties indicating whether a given service name is available."
      },
      "ServicesPatchDescription" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Instance tags"
          }
        },
        "description" : "The description of the service."
      },
      "ServicesProperties" : {
        "required" : [ "accessPolicies" ],
        "type" : "object",
        "properties" : {
          "accessPolicies" : {
            "$ref" : "#/components/schemas/ServiceAccessPoliciesInfo"
          },
          "authenticationConfiguration" : {
            "$ref" : "#/components/schemas/ServiceAuthenticationConfigurationInfo"
          },
          "corsConfiguration" : {
            "$ref" : "#/components/schemas/ServiceCorsConfigurationInfo"
          },
          "cosmosDbConfiguration" : {
            "$ref" : "#/components/schemas/ServiceCosmosDbConfigurationInfo"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning state.",
            "readOnly" : true,
            "enum" : [ "Deleting", "Succeeded", "Creating", "Accepted", "Verifying", "Updating", "Failed", "Canceled", "Deprovisioned" ]
          }
        },
        "description" : "The properties of a service instance."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client Api Version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "locationName" : {
        "name" : "locationName",
        "in" : "path",
        "description" : "The location of the operation.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "operationResultId" : {
        "name" : "operationResultId",
        "in" : "path",
        "description" : "The ID of the operation result to get.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group that contains the service instance.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "pattern" : "^[-\\w\\._\\(\\)]+$",
          "type" : "string"
        }
      },
      "resourceName" : {
        "name" : "resourceName",
        "in" : "path",
        "description" : "The name of the service instance.",
        "required" : true,
        "schema" : {
          "maxLength" : 24,
          "minLength" : 3,
          "type" : "string"
        }
      },
      "subscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription identifier.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}