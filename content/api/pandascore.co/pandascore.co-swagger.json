{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://api.pandascore.co/"
  } ],
  "info" : {
    "description" : "\n# Introduction\n\nWhether you're looking to build an official Pandascore integration for your service, or you just want to build something awesome, [we can help you get started](/home).\n\nThe API works over the HTTPS protocol, and is accessed from the `api.pandascore.co` domain.\n\n- The current endpoint is [https://api.pandascore.co](https://api.pandascore.co).\n- All data is sent and received as JSON by default.\n- Blank fields are included with `null` values instead of being omitted.\n- All timestamps are returned in ISO-8601 format\n\n### About this documentation\n\nClicking on a query parameter like `filter` or `search` will show you the available options: ![filter](/doc/images/query_param_details.jpg)\n\nYou can also click on a response to see the detailed response schema: ![response](/doc/images/response_schema.jpg)\n\n## Events hierarchy\n\nThe PandaScore API allows you to access data about eSports events by using a certain structure detailed below.\n\n**Leagues**\n\nLeagues are the top level events. They don't have a date and represent a regular competition. A League is composed of one or several series.  \nSome League of Legends leagues are: _EU LCS, NA LCS, LCK, etc._  \nSome Dota 2 leagues are: _ESL One, GESC, The International, PGL, etc._\n\n**Series**\n\nA Serie represents an occurrence of a league event.  \nThe EU LCS league has two series per year: _spring 2017, summer 2017, spring 2016, summer 2016 etc._  \nSome Dota2 Series examples would be: _Changsha Major, Open Bucharest, Frankfurt, i-League Invitational etc._\n\n**Tournaments**\n\nTournaments groups all the matches of a serie under \"stages\" and \"groups\".  \nThe tournaments of the EU LCS of summer 2017 are: _Group A, Group B, Playoffs, etc._  \nSome Dota 2 tournaments are: _Group A, Group B, Playoffs, etc._\n\n**Matches**\n\nFinally we have matches which have two players or teams (depending on the played videogame) and several games (the rounds of the match).  \nMatches of the group A in the EU LCS of summer 2017 are: _G2 vs FNC, MSF vs NIP, etc._  \nMatches of the group A in the ESL One, Genting tournamnet are: _Lower Round 1, Quarterfinal, Upper Final, etc._  \n\n**Please note that some matches may be listed as \"TBD vs TBD\" if the matchup is not announced yet, for example the date of the Final match is known but the quarterfinal is still being played.**  \n![Structure](/doc/images/structure.png)\n\n## Formats\n\n&lt;!-- The API currently supports the JSON format by default, as well as the XML format. Add the desired extension to your request URL in order to get that format. --&gt;\nThe API currently supports the JSON format by default.\n\nOther formats may be added depending on user needs.\n\n## Pagination\n\nThe Pandascore API paginates all resources on the index method.\n\nRequests that return multiple items will be paginated to 50 items by default. You can specify further pages with the `page[number]` parameter. You can also set a custom page size (up to 100) with the `page[size]` parameter.\n\nThe `Link` HTTP response header contains pagination data with `first`, `previous`, `next` and `last` raw page links when available, under the format\n\n```\nLink: &lt;https://api.pandascore.co/{Resource}?page=X+1&gt;; rel=\"next\", &lt;https://api.pandascore.co/{Resource}?page=X-1&gt;; rel=\"prev\", &lt;https://api.pandascore.co/{Resource}?page=1&gt;; rel=\"first\", &lt;https://api.pandascore.co/{Resource}?page=X+n&gt;; rel=\"last\"\n```\n\nThere is also:\n\n* A `X-Page` header field, which contains the current page.\n* A `X-Per-Page` header field, which contains the current pagination length.\n* A `X-Total` header field, which contains the total count of items across all pages.\n\n## Filtering\n\nThe `filter` query parameter can be used to filter a collection by one or several fields for one or several values. The `filter` parameter takes the field to filter as a key, and the values to filter as the value. Multiples values must be comma-separated (`,`).\n\nFor example, the following is a request for all the champions with a name matching Twitch or Brand exactly, but only with 21 armor:\n\n```\nGET /lol/champions?filter[name]=Brand,Twitch&amp;filter[armor]=21&amp;token=YOUR_ACCESS_TOKEN\n```\n\n## Range\n\nThe `range` parameter is a hash that allows filtering fields by an interval.\nOnly values between the given two comma-separated bounds will be returned. The bounds are inclusive.\n\nFor example, the following is a request for all the champions with `hp` within 500 and 1000:\n\n```\nGET /lol/champions?range[hp]=500,1000&amp;token=YOUR_ACCESS_TOKEN\n```\n\n## Search\n\nThe `search` parameter is a bit like the `filter` parameter, but it will return all results where the values **contain** the given parameter.\n\nNote: this only works on strings.\nSearching with integer values is not supported and `filter` or `range` parameters may be better suited for your needs here.\n\nFor example, to get all the champions with a name containing `\"twi\"`:\n\n```\n$ curl -sg -H 'Authorization: Bearer YOUR_ACCESS_TOKEN' 'https://api.pandascore.co/lol/champions?search[name]=twi' | jq -S '.[].name'\n\"Twitch\"\n\"Twisted Fate\"\n```\n\n## Sorting\n\nAll index endpoints support multiple sort fields with comma-separation (`,`); the fields are applied in the order specified.\n\nThe sort order for each field is ascending unless it is prefixed with a minus (U+002D HYPHEN-MINUS, “-“), in which case it is descending.\n\nFor example, `GET /lol/champions?sort=attackdamage,-name&amp;token=YOUR_ACCESS_TOKEN` will return all the champions sorted by attack damage.\nAny champions with the same attack damage will then be sorted by their names in descending alphabetical order.\n\n## Rate limiting\n\nDepending on your current plan, you will have a different rate limit. Your plan and your current request count [are available on your dashboard](https://pandascore.co/settings).\n\nWith the **free plan**, you have a limit of 1000 requests per hour, others plans have a limit of 4000 requests per hour. The number of remaining requests is available in the `X-Rate-Limit-Remaining` response header.\n\nYour API key is included in all the examples on this page, so you can test any example right away. **Only you can see this value.**\n\n# Authentication\n\nThe authentication on the Pandascore API works with access tokens.\n\nAll developers need to [create an account](https://pandascore.co/users/sign_in) before getting started, in order to get an access token. The access token should not be shared.\n\n**Your token can be found and regenerated from [your dashboard](https://pandascore.co/settings).**\n\nThe access token can be passed in the URL with the `token` query string parameter, or in the `Authorization: Bearer` header field.\n\n&lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;\n",
    "title" : "PandaScore REST API for All Videogames",
    "version" : "2.23.1",
    "x-apisguru-categories" : [ "entertainment" ],
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_pandascore.co_apple-touch-icon.png"
    },
    "x-origin" : [ {
      "format" : "openapi",
      "url" : "blob:https://developers.pandascore.co/blobId",
      "version" : "3.0"
    } ],
    "x-providerName" : "pandascore.co"
  },
  "security" : [ {
    "BearerToken" : null
  }, {
    "QueryToken" : null
  } ],
  "paths" : {
    "/additions" : {
      "get" : {
        "description" : "Get the latest additions.\n\nThis endpoint only shows unchanged objects.",
        "operationId" : "get_additions",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        }, {
          "description" : "Filter by result type(s)",
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/type_over_AdditionIncidents"
          }
        }, {
          "description" : "Filter out older results",
          "in" : "query",
          "name" : "since",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          }
        }, {
          "description" : "Filter by videogame(s)",
          "in" : "query",
          "name" : "videogame",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/videogame_over_AdditionIncidents"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AdditionIncidents"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List additions",
        "tags" : [ "Incidents" ]
      }
    },
    "/changes" : {
      "get" : {
        "description" : "Get the latest updates.\n\nThis endpoint only provides the latest change for an object. It does not keep track of previous changes.",
        "operationId" : "get_changes",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        }, {
          "description" : "Filter by result type(s)",
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/type_over_ChangeIncidents"
          }
        }, {
          "description" : "Filter out older results",
          "in" : "query",
          "name" : "since",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          }
        }, {
          "description" : "Filter by videogame(s)",
          "in" : "query",
          "name" : "videogame",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/videogame_over_ChangeIncidents"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ChangeIncidents"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List changes",
        "tags" : [ "Incidents" ]
      }
    },
    "/deletions" : {
      "get" : {
        "description" : "Get the latest deleted documents",
        "operationId" : "get_deletions",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        }, {
          "description" : "Filter by result type(s)",
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/type_over_DeletionIncidents"
          }
        }, {
          "description" : "Filter out older results",
          "in" : "query",
          "name" : "since",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          }
        }, {
          "description" : "Filter by videogame(s)",
          "in" : "query",
          "name" : "videogame",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/videogame_over_DeletionIncidents"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/DeletionIncidents"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List deletions",
        "tags" : [ "Incidents" ]
      }
    },
    "/incidents" : {
      "get" : {
        "description" : " Get the latest updates and additions.\n\nThis endpoint only provides the latest incident for an object. It does not keep track of previous incidents.",
        "operationId" : "get_incidents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        }, {
          "description" : "Filter by result type(s)",
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/type_over_Incidents"
          }
        }, {
          "description" : "Filter out older results",
          "in" : "query",
          "name" : "since",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          }
        }, {
          "description" : "Filter by videogame(s)",
          "in" : "query",
          "name" : "videogame",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/videogame_over_Incidents"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Incidents"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List changes, additions and deletions",
        "tags" : [ "Incidents" ]
      }
    },
    "/leagues" : {
      "get" : {
        "description" : "List leagues",
        "operationId" : "get_leagues",
        "parameters" : [ {
          "description" : "Options to search results",
          "example" : {
            "name" : "Contenders"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Leagues"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "name", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Leagues"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "modified_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Leagues"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Leagues"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Leagues"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List leagues",
        "tags" : [ "Leagues" ]
      }
    },
    "/leagues/{league_id_or_slug}" : {
      "get" : {
        "description" : "Get a single league by ID or by slug",
        "operationId" : "get_leagues_leagueIdOrSlug",
        "parameters" : [ {
          "description" : "A league ID or slug",
          "in" : "path",
          "name" : "league_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LeagueIDOrSlug"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/League"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get a league",
        "tags" : [ "Leagues" ]
      }
    },
    "/leagues/{league_id_or_slug}/matches" : {
      "get" : {
        "description" : "List matches of the given league",
        "operationId" : "get_leagues_leagueIdOrSlug_matches",
        "parameters" : [ {
          "description" : "A league ID or slug",
          "in" : "path",
          "name" : "league_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LeagueIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get matches for a league",
        "tags" : [ "Leagues" ]
      }
    },
    "/leagues/{league_id_or_slug}/matches/past" : {
      "get" : {
        "description" : "List past matches for the given league",
        "operationId" : "get_leagues_leagueIdOrSlug_matches_past",
        "parameters" : [ {
          "description" : "A league ID or slug",
          "in" : "path",
          "name" : "league_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LeagueIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get past matches for league",
        "tags" : [ "Leagues" ]
      }
    },
    "/leagues/{league_id_or_slug}/matches/running" : {
      "get" : {
        "description" : "List currently running matches for the given league",
        "operationId" : "get_leagues_leagueIdOrSlug_matches_running",
        "parameters" : [ {
          "description" : "A league ID or slug",
          "in" : "path",
          "name" : "league_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LeagueIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get running matches for league",
        "tags" : [ "Leagues" ]
      }
    },
    "/leagues/{league_id_or_slug}/matches/upcoming" : {
      "get" : {
        "description" : "List upcoming matches for the given league",
        "operationId" : "get_leagues_leagueIdOrSlug_matches_upcoming",
        "parameters" : [ {
          "description" : "A league ID or slug",
          "in" : "path",
          "name" : "league_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LeagueIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get upcoming matches for league",
        "tags" : [ "Leagues" ]
      }
    },
    "/leagues/{league_id_or_slug}/series" : {
      "get" : {
        "description" : "List series for the given league",
        "operationId" : "get_leagues_leagueIdOrSlug_series",
        "parameters" : [ {
          "description" : "A league ID or slug",
          "in" : "path",
          "name" : "league_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LeagueIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "winner_id" : 390,
            "winner_type" : "Team"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "slug" : "lck"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "year", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Series"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Series"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Series"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List series of a league",
        "tags" : [ "Leagues" ]
      }
    },
    "/leagues/{league_id_or_slug}/tournaments" : {
      "get" : {
        "description" : "List tournaments of the given league",
        "operationId" : "get_leagues_leagueIdOrSlug_tournaments",
        "parameters" : [ {
          "description" : "A league ID or slug",
          "in" : "path",
          "name" : "league_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LeagueIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "serie_id" : 1808
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "group"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "serie_id", "-begin_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_ShortTournaments"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ShortTournaments"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get tournaments for a league",
        "tags" : [ "Leagues" ]
      }
    },
    "/lives" : {
      "get" : {
        "description" : "List currently running live matches, available from pandascore with live websocket data.",
        "operationId" : "get_lives",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Lives"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List lives matches",
        "tags" : [ "Matches", "Lives" ]
      }
    },
    "/matches" : {
      "get" : {
        "description" : "List matches",
        "operationId" : "get_matches",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List matches",
        "tags" : [ "Matches" ]
      }
    },
    "/matches/past" : {
      "get" : {
        "description" : "List past matches",
        "operationId" : "get_matches_past",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get past matches",
        "tags" : [ "Matches" ]
      }
    },
    "/matches/running" : {
      "get" : {
        "description" : "List currently running matches",
        "operationId" : "get_matches_running",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get running matches",
        "tags" : [ "Matches" ]
      }
    },
    "/matches/upcoming" : {
      "get" : {
        "description" : "List upcoming matches",
        "operationId" : "get_matches_upcoming",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get upcoming matches",
        "tags" : [ "Matches" ]
      }
    },
    "/matches/{match_id_or_slug}" : {
      "get" : {
        "description" : "Get a single match by ID or by slug",
        "operationId" : "get_matches_matchIdOrSlug",
        "parameters" : [ {
          "description" : "A match ID or slug",
          "in" : "path",
          "name" : "match_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/MatchIDOrSlug"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Match"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get a match",
        "tags" : [ "Matches" ]
      }
    },
    "/matches/{match_id_or_slug}/opponents" : {
      "get" : {
        "description" : "List opponents (player or teams) for the given match",
        "operationId" : "get_matches_matchIdOrSlug_opponents",
        "parameters" : [ {
          "description" : "A match ID or slug",
          "in" : "path",
          "name" : "match_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/MatchIDOrSlug"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/MatchOpponentsObject"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get match's opponents",
        "tags" : [ "Matches" ]
      }
    },
    "/players" : {
      "get" : {
        "description" : "List players",
        "operationId" : "get_players",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "hometown" : "France"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Players"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "role" : "tank"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Players"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "last_name" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Players"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "name" : [ "f", "i" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Players"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Players"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List players",
        "tags" : [ "Players" ]
      }
    },
    "/players/{player_id_or_slug}" : {
      "get" : {
        "description" : "Get a single player by ID or by slug",
        "operationId" : "get_players_playerIdOrSlug",
        "parameters" : [ {
          "description" : "A player ID or slug",
          "in" : "path",
          "name" : "player_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PlayerIDOrSlug"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Player"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get a player",
        "tags" : [ "Players" ]
      }
    },
    "/players/{player_id_or_slug}/matches" : {
      "get" : {
        "description" : "List matches for the given player. Only matches with detailed stats. Available with the plan _Historical data_.",
        "operationId" : "get_players_playerIdOrSlug_matches",
        "parameters" : [ {
          "description" : "A player ID or slug",
          "in" : "path",
          "name" : "player_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PlayerIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get matches for a player",
        "tags" : [ "Players" ]
      }
    },
    "/series" : {
      "get" : {
        "description" : "List series",
        "operationId" : "get_series",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "winner_id" : 390,
            "winner_type" : "Team"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "slug" : "lck"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "year", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Series"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Series"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Series"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List series",
        "tags" : [ "Series" ]
      }
    },
    "/series/past" : {
      "get" : {
        "description" : "List past series",
        "operationId" : "get_series_past",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "winner_id" : 390,
            "winner_type" : "Team"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "slug" : "lck"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "year", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Series"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Series"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Series"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get past series",
        "tags" : [ "Series" ]
      }
    },
    "/series/running" : {
      "get" : {
        "description" : "List currently running series",
        "operationId" : "get_series_running",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "winner_id" : 390,
            "winner_type" : "Team"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "slug" : "lck"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "year", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Series"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Series"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Series"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get running series",
        "tags" : [ "Series" ]
      }
    },
    "/series/upcoming" : {
      "get" : {
        "description" : "List upcoming series",
        "operationId" : "get_series_upcoming",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "winner_id" : 390,
            "winner_type" : "Team"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "slug" : "lck"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "year", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Series"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Series"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Series"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get upcoming series",
        "tags" : [ "Series" ]
      }
    },
    "/series/{serie_id_or_slug}" : {
      "get" : {
        "description" : "Get a single serie by ID or by slug",
        "operationId" : "get_series_serieIdOrSlug",
        "parameters" : [ {
          "description" : "A serie ID or slug",
          "in" : "path",
          "name" : "serie_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SerieIDOrSlug"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Serie"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get a serie",
        "tags" : [ "Series" ]
      }
    },
    "/series/{serie_id_or_slug}/matches" : {
      "get" : {
        "description" : "List matches of the given serie",
        "operationId" : "get_series_serieIdOrSlug_matches",
        "parameters" : [ {
          "description" : "A serie ID or slug",
          "in" : "path",
          "name" : "serie_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SerieIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get matches for a serie",
        "tags" : [ "Series" ]
      }
    },
    "/series/{serie_id_or_slug}/matches/past" : {
      "get" : {
        "description" : "List past matches for the given serie",
        "operationId" : "get_series_serieIdOrSlug_matches_past",
        "parameters" : [ {
          "description" : "A serie ID or slug",
          "in" : "path",
          "name" : "serie_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SerieIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get past matches for serie",
        "tags" : [ "Series" ]
      }
    },
    "/series/{serie_id_or_slug}/matches/running" : {
      "get" : {
        "description" : "List currently running matches for the given serie",
        "operationId" : "get_series_serieIdOrSlug_matches_running",
        "parameters" : [ {
          "description" : "A serie ID or slug",
          "in" : "path",
          "name" : "serie_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SerieIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get running matches for serie",
        "tags" : [ "Series" ]
      }
    },
    "/series/{serie_id_or_slug}/matches/upcoming" : {
      "get" : {
        "description" : "List upcoming matches for the given serie",
        "operationId" : "get_series_serieIdOrSlug_matches_upcoming",
        "parameters" : [ {
          "description" : "A serie ID or slug",
          "in" : "path",
          "name" : "serie_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SerieIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get upcoming matches for serie",
        "tags" : [ "Series" ]
      }
    },
    "/series/{serie_id_or_slug}/players" : {
      "get" : {
        "description" : "List players for the given serie",
        "operationId" : "get_series_serieIdOrSlug_players",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "hometown" : "France"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Players"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "role" : "tank"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Players"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "last_name" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Players"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "name" : [ "f", "i" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Players"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        }, {
          "description" : "Automatically added",
          "in" : "path",
          "name" : "serie_id_or_slug",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Players"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get players for a serie",
        "tags" : [ "Series" ]
      }
    },
    "/series/{serie_id_or_slug}/tournaments" : {
      "get" : {
        "description" : "List tournaments of the given serie",
        "operationId" : "get_series_serieIdOrSlug_tournaments",
        "parameters" : [ {
          "description" : "A serie ID or slug",
          "in" : "path",
          "name" : "serie_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SerieIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "serie_id" : 1808
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "group"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "serie_id", "-begin_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_ShortTournaments"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ShortTournaments"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get tournaments for a serie",
        "tags" : [ "Series" ]
      }
    },
    "/teams" : {
      "get" : {
        "description" : "List teams",
        "operationId" : "get_teams",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "acronym" : "RNG"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Teams"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "vitality"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Teams"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "name" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Teams"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "name" : [ "vitality", "vultur" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Teams"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Teams"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List teams",
        "tags" : [ "Teams" ]
      }
    },
    "/teams/{team_id_or_slug}" : {
      "get" : {
        "description" : "Get a single team by ID or by slug",
        "operationId" : "get_teams_teamIdOrSlug",
        "parameters" : [ {
          "description" : "A team ID or slug",
          "in" : "path",
          "name" : "team_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TeamIDOrSlug"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Team"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get a team",
        "tags" : [ "Teams" ]
      }
    },
    "/teams/{team_id_or_slug}/leagues" : {
      "get" : {
        "description" : "List leagues in which the given team was part of",
        "operationId" : "get_teams_teamIdOrSlug_leagues",
        "parameters" : [ {
          "description" : "A team ID or slug",
          "in" : "path",
          "name" : "team_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TeamIDOrSlug"
          }
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Contenders"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Leagues"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "name", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Leagues"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "modified_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Leagues"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Leagues"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Leagues"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get leagues for a team",
        "tags" : [ "Teams" ]
      }
    },
    "/teams/{team_id_or_slug}/matches" : {
      "get" : {
        "description" : "List matches for the given team",
        "operationId" : "get_teams_teamIdOrSlug_matches",
        "parameters" : [ {
          "description" : "A team ID or slug",
          "in" : "path",
          "name" : "team_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TeamIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get matches for team",
        "tags" : [ "Teams" ]
      }
    },
    "/teams/{team_id_or_slug}/series" : {
      "get" : {
        "description" : "List series in which the given team was part of",
        "operationId" : "get_teams_teamIdOrSlug_series",
        "parameters" : [ {
          "description" : "A team ID or slug",
          "in" : "path",
          "name" : "team_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TeamIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "winner_id" : 390,
            "winner_type" : "Team"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "slug" : "lck"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "year", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Series"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Series"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Series"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get series for a team",
        "tags" : [ "Teams" ]
      }
    },
    "/teams/{team_id_or_slug}/tournaments" : {
      "get" : {
        "description" : "List tournaments in which the given team was part of",
        "operationId" : "get_teams_teamIdOrSlug_tournaments",
        "parameters" : [ {
          "description" : "A team ID or slug",
          "in" : "path",
          "name" : "team_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TeamIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "serie_id" : 1808
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "group"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "serie_id", "-begin_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_ShortTournaments"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ShortTournaments"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get tournaments for a team",
        "tags" : [ "Teams" ]
      }
    },
    "/tournaments" : {
      "get" : {
        "description" : "List tournaments",
        "operationId" : "get_tournaments",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "serie_id" : 1808
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "group"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "serie_id", "-begin_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_ShortTournaments"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ShortTournaments"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List tournaments",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/past" : {
      "get" : {
        "description" : "List past tournaments",
        "operationId" : "get_tournaments_past",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "serie_id" : 1808
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "group"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "serie_id", "-begin_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_ShortTournaments"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ShortTournaments"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get past tournaments",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/running" : {
      "get" : {
        "description" : "List currently running tournaments",
        "operationId" : "get_tournaments_running",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "serie_id" : 1808
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "group"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "serie_id", "-begin_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_ShortTournaments"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ShortTournaments"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get running tournaments",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/upcoming" : {
      "get" : {
        "description" : "List upcoming tournaments",
        "operationId" : "get_tournaments_upcoming",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "serie_id" : 1808
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "group"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "serie_id", "-begin_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_ShortTournaments"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ShortTournaments"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get upcoming tournaments",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/{tournament_id_or_slug}" : {
      "get" : {
        "description" : "Get a single tournament by ID or by slug",
        "operationId" : "get_tournaments_tournamentIdOrSlug",
        "parameters" : [ {
          "description" : "A tournament ID or slug",
          "in" : "path",
          "name" : "tournament_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TournamentIDOrSlug"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Tournament"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get a tournament",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/{tournament_id_or_slug}/brackets" : {
      "get" : {
        "description" : "Get the brackets of the given tournament",
        "operationId" : "get_tournaments_tournamentIdOrSlug_brackets",
        "parameters" : [ {
          "description" : "A tournament ID or slug",
          "in" : "path",
          "name" : "tournament_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TournamentIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Brackets"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to select results within ranges",
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Brackets"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Brackets"
          }
        }, {
          "description" : "Options to search results",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Brackets"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Brackets"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get a tournament's brackets",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/{tournament_id_or_slug}/matches" : {
      "get" : {
        "description" : "List matches for the given tournament",
        "operationId" : "get_tournaments_tournamentIdOrSlug_matches",
        "parameters" : [ {
          "description" : "A tournament ID or slug",
          "in" : "path",
          "name" : "tournament_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TournamentIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "detailed_stats" : true
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Finals"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "tournament_id", "scheduled_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Matches"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Matches"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get matches for tournament",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/{tournament_id_or_slug}/players" : {
      "get" : {
        "description" : "List players for the given tournament",
        "operationId" : "get_tournaments_tournamentIdOrSlug_players",
        "parameters" : [ {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "hometown" : "France"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Players"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "role" : "tank"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Players"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "last_name" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Players"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "name" : [ "f", "i" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Players"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        }, {
          "description" : "Automatically added",
          "in" : "path",
          "name" : "tournament_id_or_slug",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Players"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get players for a tournament",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/{tournament_id_or_slug}/rosters" : {
      "get" : {
        "description" : "List participants (player or team) for a given tournament.",
        "operationId" : "get_tournaments_tournamentIdOrSlug_rosters",
        "parameters" : [ {
          "description" : "A tournament ID or slug",
          "in" : "path",
          "name" : "tournament_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TournamentIDOrSlug"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/TournamentRosters"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get rosters for a tournament",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/{tournament_id_or_slug}/standings" : {
      "get" : {
        "description" : "Get the current standings for a given tournament",
        "operationId" : "get_tournaments_tournamentIdOrSlug_standings",
        "parameters" : [ {
          "description" : "A tournament ID or slug",
          "in" : "path",
          "name" : "tournament_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TournamentIDOrSlug"
          }
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Standings"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get tournament standings",
        "tags" : [ "Tournaments" ]
      }
    },
    "/tournaments/{tournament_id_or_slug}/teams" : {
      "get" : {
        "description" : "List teams for the given tournament",
        "operationId" : "get_tournaments_tournamentIdOrSlug_teams",
        "parameters" : [ {
          "description" : "A tournament ID or slug",
          "in" : "path",
          "name" : "tournament_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TournamentIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "acronym" : "RNG"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Teams"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "vitality"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Teams"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "name" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Teams"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "name" : [ "vitality", "vultur" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Teams"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Teams"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get teams for a tournament",
        "tags" : [ "tournaments" ]
      }
    },
    "/videogames" : {
      "get" : {
        "description" : "List videogames",
        "operationId" : "get_videogames",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Videogames"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List videogames",
        "tags" : [ "Videogames" ]
      }
    },
    "/videogames/{videogame_id_or_slug}" : {
      "get" : {
        "description" : "Get a single videogame by ID or by slug",
        "operationId" : "get_videogames_videogameIdOrSlug",
        "parameters" : [ {
          "description" : "A videogame ID or slug",
          "in" : "path",
          "name" : "videogame_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/VideogameIDOrSlug"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Videogame"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get a videogame",
        "tags" : [ "Videogames" ]
      }
    },
    "/videogames/{videogame_id_or_slug}/leagues" : {
      "get" : {
        "operationId" : "get_videogames_videogameIdOrSlug_leagues",
        "parameters" : [ {
          "description" : "A videogame ID or slug",
          "in" : "path",
          "name" : "videogame_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/VideogameIDOrSlug"
          }
        }, {
          "description" : "Options to search results",
          "example" : {
            "name" : "Contenders"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Leagues"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "name", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Leagues"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "modified_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Leagues"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Leagues"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Leagues"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "tags" : [ "Videogames" ]
      }
    },
    "/videogames/{videogame_id_or_slug}/series" : {
      "get" : {
        "description" : "List series for the given videogame",
        "operationId" : "get_videogames_videogameIdOrSlug_series",
        "parameters" : [ {
          "description" : "A videogame ID or slug",
          "in" : "path",
          "name" : "videogame_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/VideogameIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "example" : {
            "winner_id" : 390,
            "winner_type" : "Team"
          },
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to search results",
          "example" : {
            "slug" : "lck"
          },
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_Series"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "example" : [ "year", "-modified_at" ],
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_Series"
          }
        }, {
          "description" : "Options to select results within ranges",
          "example" : {
            "begin_at" : [ "2019-04-08T17:00:00Z", "2019-10-08T22:00:00Z" ]
          },
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_Series"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Series"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List series for a videogame",
        "tags" : [ "Videogames" ]
      }
    },
    "/videogames/{videogame_id_or_slug}/tournaments" : {
      "get" : {
        "description" : "List tournaments of the given videogame",
        "operationId" : "get_videogames_videogameIdOrSlug_tournaments",
        "parameters" : [ {
          "description" : "A videogame ID or slug",
          "in" : "path",
          "name" : "videogame_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/VideogameIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to select results within ranges",
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_ShortTournaments"
          }
        }, {
          "description" : "Options to search results",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_ShortTournaments"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ShortTournaments"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "Get tournaments for a videogame",
        "tags" : [ "Videogames" ]
      }
    },
    "/videogames/{videogame_id_or_slug}/versions" : {
      "get" : {
        "description" : "List available versions for a given videogame",
        "operationId" : "get_videogames_videogameIdOrSlug_versions",
        "parameters" : [ {
          "description" : "A videogame ID or slug",
          "in" : "path",
          "name" : "videogame_id_or_slug",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/VideogameIDOrSlug"
          }
        }, {
          "description" : "Options to filter results. String fields are case sensitive",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/filter_over_ShortVideogameVersions"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to select results within ranges",
          "explode" : true,
          "in" : "query",
          "name" : "range",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/range_over_ShortVideogameVersions"
          },
          "style" : "deepObject"
        }, {
          "description" : "Options to sort results",
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/sort_over_ShortVideogameVersions"
          }
        }, {
          "description" : "Options to search results",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/search_over_ShortVideogameVersions"
          },
          "style" : "deepObject"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/PerPage"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ShortVideogameVersions"
          },
          "400" : {
            "$ref" : "#/components/responses/Error400"
          },
          "401" : {
            "$ref" : "#/components/responses/Error401"
          },
          "403" : {
            "$ref" : "#/components/responses/Error403"
          },
          "404" : {
            "$ref" : "#/components/responses/Error404"
          },
          "422" : {
            "$ref" : "#/components/responses/Error422"
          }
        },
        "summary" : "List videogame versions",
        "tags" : [ "Videogames" ]
      }
    }
  },
  "components" : {
    "parameters" : {
      "Page" : {
        "description" : "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`",
        "in" : "query",
        "name" : "page",
        "required" : false,
        "schema" : {
          "oneOf" : [ {
            "default" : 1,
            "minimum" : 1,
            "type" : "integer"
          }, {
            "additionalProperties" : false,
            "properties" : {
              "number" : {
                "default" : 1,
                "minimum" : 1,
                "type" : "integer"
              },
              "size" : {
                "default" : 50,
                "maximum" : 100,
                "minimum" : 1,
                "type" : "integer"
              }
            },
            "type" : "object"
          } ]
        }
      },
      "PerPage" : {
        "description" : "Equivalent to `page[size]`",
        "example" : 5,
        "in" : "query",
        "name" : "per_page",
        "required" : false,
        "schema" : {
          "default" : 50,
          "maximum" : 100,
          "minimum" : 1,
          "type" : "integer"
        }
      }
    },
    "responses" : {
      "AdditionIncidents" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AdditionIncidents"
            }
          }
        },
        "description" : "A list of created entities"
      },
      "BettingLeague" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BettingLeague"
            }
          }
        },
        "description" : "An e-sport league"
      },
      "BettingLeagues" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BettingLeagues"
            }
          }
        },
        "description" : "A list of e-sport leagues"
      },
      "BettingMatch" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BettingMatch"
            }
          }
        },
        "description" : "An e-sport match"
      },
      "BettingMatches" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BettingMatches"
            }
          }
        },
        "description" : "A list of e-sport matches"
      },
      "BettingMatchesMarkets" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BettingMatchesMarkets"
            }
          }
        },
        "description" : "A list of markets of matches and their games"
      },
      "BettingSerie" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BettingSerie"
            }
          }
        },
        "description" : "An e-sport series"
      },
      "BettingSeries" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BettingSeries"
            }
          }
        },
        "description" : "A list of e-sport series"
      },
      "BettingTournament" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BettingTournament"
            }
          }
        },
        "description" : "An e-sport tournament"
      },
      "BettingTournaments" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BettingTournaments"
            }
          }
        },
        "description" : "A list of e-sport tournaments"
      },
      "Brackets" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Brackets"
            }
          }
        },
        "description" : "A tree of games played during a tournament"
      },
      "ChangeIncidents" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ChangeIncidents"
            }
          }
        },
        "description" : "A list of changed entities"
      },
      "DeletionIncidents" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/DeletionIncidents"
            }
          }
        },
        "description" : "A list of deleted entities"
      },
      "Error400" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "error" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Bad request"
      },
      "Error401" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "error" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Unauthorized"
      },
      "Error403" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "error" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Forbidden"
      },
      "Error404" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "error" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Not found"
      },
      "Error422" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "error" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Unprocessable Entity"
      },
      "Esport" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Esport"
            }
          }
        },
        "description" : "An e-sport"
      },
      "Esports" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Esports"
            }
          }
        },
        "description" : "A list of e-sports"
      },
      "Incidents" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Incidents"
            }
          }
        },
        "description" : "A list of created or updated entities"
      },
      "League" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/League"
            }
          }
        },
        "description" : "A league"
      },
      "Leagues" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Leagues"
            }
          }
        },
        "description" : "A list of leagues"
      },
      "Lives" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Lives"
            }
          }
        },
        "description" : "A list of games being played or about to be played"
      },
      "Market" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Market"
            }
          }
        },
        "description" : "A market"
      },
      "Markets" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Markets"
            }
          }
        },
        "description" : "A list of markets"
      },
      "Match" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Match"
            }
          }
        },
        "description" : "A match of any e-sport"
      },
      "MatchMarkets" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MatchMarkets"
            }
          }
        },
        "description" : "The markets of a match and its games"
      },
      "MatchOpponentsObject" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MatchOpponentsObject"
            }
          }
        },
        "description" : "The match's opponents"
      },
      "Matches" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Matches"
            }
          }
        },
        "description" : "A list of matches of any e-sport"
      },
      "Player" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Player"
            }
          }
        },
        "description" : "A player"
      },
      "Players" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Players"
            }
          }
        },
        "description" : "A list of players"
      },
      "Serie" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Serie"
            }
          }
        },
        "description" : "A serie"
      },
      "Series" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Series"
            }
          }
        },
        "description" : "A list of series"
      },
      "ShortTournaments" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ShortTournaments"
            }
          }
        },
        "description" : "A list of tournaments"
      },
      "ShortVideogameVersions" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ShortVideogameVersions"
            }
          }
        },
        "description" : "A list of a videogame's versions"
      },
      "Standings" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Standings"
            }
          }
        },
        "description" : "Ranking of teams in a tournament"
      },
      "Team" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Team"
            }
          }
        },
        "description" : "A team"
      },
      "Teams" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Teams"
            }
          }
        },
        "description" : "A list of teams"
      },
      "Tournament" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Tournament"
            }
          }
        },
        "description" : "A detailed tournament"
      },
      "TournamentRosters" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TournamentRosters"
            }
          }
        },
        "description" : "Tournament rosters (team or player)"
      },
      "Videogame" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Videogame"
            }
          }
        },
        "description" : "A videogame"
      },
      "Videogames" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Videogames"
            }
          }
        },
        "description" : "A list of videogames"
      }
    },
    "schemas" : {
      "AdditionIncidents" : {
        "items" : {
          "$ref" : "#/components/schemas/NonDeletionIncident"
        },
        "type" : "array"
      },
      "BaseLeague" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LeagueImageURL"
            } ],
            "deprecated" : false,
            "title" : "LeagueImageURL"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/LeagueModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/LeagueName"
          },
          "slug" : {
            "$ref" : "#/components/schemas/LeagueSlug"
          },
          "url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LeagueURL"
            } ],
            "deprecated" : false,
            "title" : "LeagueURL"
          }
        },
        "required" : [ "id", "image_url", "modified_at", "name", "slug", "url" ],
        "type" : "object"
      },
      "BaseMatch" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchBeginAt"
            } ],
            "deprecated" : false,
            "title" : "MatchBeginAt"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/MatchDetailedStats"
          },
          "draw" : {
            "$ref" : "#/components/schemas/MatchIsDraw"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchEndAt"
            } ],
            "deprecated" : false,
            "title" : "MatchEndAt"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/MatchIsForfeit"
          },
          "game_advantage" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "live" : {
            "$ref" : "#/components/schemas/MatchLive"
          },
          "live_embed_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchEmbedLiveVideoURLDeprecated"
            } ],
            "deprecated" : true,
            "title" : "MatchEmbedLiveVideoURLDeprecated"
          },
          "match_type" : {
            "$ref" : "#/components/schemas/MatchType"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/MatchModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/MatchName"
          },
          "number_of_games" : {
            "$ref" : "#/components/schemas/GameCount"
          },
          "official_stream_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchOfficialStreamURL"
            } ],
            "deprecated" : true,
            "title" : "MatchOfficialStreamURL"
          },
          "original_scheduled_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchOriginalScheduledAt"
            } ],
            "deprecated" : false,
            "title" : "MatchOriginalScheduledAt"
          },
          "rescheduled" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchIsRescheduled"
            } ],
            "deprecated" : false,
            "title" : "MatchIsRescheduled"
          },
          "scheduled_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchScheduledAt"
            } ],
            "deprecated" : false,
            "title" : "MatchScheduledAt"
          },
          "slug" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchSlug"
            } ],
            "deprecated" : false,
            "title" : "MatchSlug"
          },
          "status" : {
            "$ref" : "#/components/schemas/MatchStatus"
          },
          "streams" : {
            "$ref" : "#/components/schemas/MatchLocalizedStreams"
          },
          "streams_list" : {
            "$ref" : "#/components/schemas/StreamsList"
          },
          "tournament_id" : {
            "$ref" : "#/components/schemas/TournamentID"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          }
        },
        "required" : [ "begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "id", "live", "live_embed_url", "match_type", "modified_at", "name", "number_of_games", "official_stream_url", "original_scheduled_at", "rescheduled", "scheduled_at", "slug", "status", "streams", "streams_list", "tournament_id", "winner_id" ],
        "type" : "object"
      },
      "BaseMatches" : {
        "items" : {
          "$ref" : "#/components/schemas/BaseMatch"
        },
        "type" : "array"
      },
      "BaseOpponent" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BasePlayer"
        }, {
          "$ref" : "#/components/schemas/BaseTeam"
        } ]
      },
      "BasePlayer" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "birth_year" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerBirthYear"
            } ],
            "deprecated" : false,
            "title" : "PlayerBirthYear"
          },
          "birthday" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerBirthday"
            } ],
            "deprecated" : false,
            "title" : "PlayerBirthday"
          },
          "first_name" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerFirstName"
            } ],
            "deprecated" : false,
            "title" : "PlayerFirstName"
          },
          "hometown" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerHometown"
            } ],
            "deprecated" : false,
            "title" : "PlayerHometown"
          },
          "id" : {
            "$ref" : "#/components/schemas/PlayerID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerImageURL"
            } ],
            "deprecated" : false,
            "title" : "PlayerImageURL"
          },
          "last_name" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerLastName"
            } ],
            "deprecated" : false,
            "title" : "PlayerLastName"
          },
          "name" : {
            "$ref" : "#/components/schemas/PlayerName"
          },
          "nationality" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerNationality"
            } ],
            "deprecated" : false,
            "title" : "PlayerNationality"
          },
          "role" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerRoleSlug"
            } ],
            "deprecated" : false,
            "title" : "PlayerRoleSlug"
          },
          "slug" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerSlug"
            } ],
            "deprecated" : false,
            "title" : "PlayerSlug"
          }
        },
        "required" : [ "birth_year", "birthday", "first_name", "hometown", "id", "image_url", "last_name", "name", "nationality", "role", "slug" ],
        "type" : "object"
      },
      "BasePlayers" : {
        "items" : {
          "$ref" : "#/components/schemas/BasePlayer"
        },
        "type" : "array"
      },
      "BaseSerie" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieBeginAt"
            } ],
            "deprecated" : false,
            "title" : "SerieBeginAt"
          },
          "description" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieDescription"
            } ],
            "deprecated" : false,
            "title" : "SerieDescription"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieEndAt"
            } ],
            "deprecated" : false,
            "title" : "SerieEndAt"
          },
          "full_name" : {
            "$ref" : "#/components/schemas/SerieFullName"
          },
          "id" : {
            "$ref" : "#/components/schemas/SerieID"
          },
          "league_id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/SerieModifiedAt"
          },
          "name" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieName"
            } ],
            "deprecated" : false,
            "title" : "SerieName"
          },
          "season" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieSeason"
            } ],
            "deprecated" : false,
            "title" : "SerieSeason"
          },
          "slug" : {
            "$ref" : "#/components/schemas/SerieSlug"
          },
          "tier" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieTier"
            } ],
            "deprecated" : false,
            "title" : "SerieTier"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          },
          "year" : {
            "$ref" : "#/components/schemas/SerieYear"
          }
        },
        "required" : [ "begin_at", "description", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "tier", "winner_id", "winner_type", "year" ],
        "type" : "object"
      },
      "BaseSeries" : {
        "items" : {
          "$ref" : "#/components/schemas/BaseSerie"
        },
        "type" : "array"
      },
      "BaseTeam" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "acronym" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TeamAcronym"
            } ],
            "deprecated" : false,
            "title" : "TeamAcronym"
          },
          "id" : {
            "$ref" : "#/components/schemas/TeamID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TeamImageURL"
            } ],
            "deprecated" : false,
            "title" : "TeamImageURL"
          },
          "location" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TeamLocation"
            } ],
            "deprecated" : false,
            "title" : "TeamLocation"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/TeamModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/TeamName"
          },
          "slug" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TeamSlug"
            } ],
            "deprecated" : false,
            "title" : "TeamSlug"
          }
        },
        "required" : [ "acronym", "id", "image_url", "location", "modified_at", "name", "slug" ],
        "type" : "object"
      },
      "BaseTeams" : {
        "items" : {
          "$ref" : "#/components/schemas/BaseTeam"
        },
        "type" : "array"
      },
      "BaseTournament" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentBeginAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentBeginAt"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentEndAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentEndAt"
          },
          "id" : {
            "$ref" : "#/components/schemas/TournamentID"
          },
          "league_id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "live_supported" : {
            "$ref" : "#/components/schemas/TournamentLiveSupported"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/TournamentModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/TournamentName"
          },
          "prizepool" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentPrizepool"
            } ],
            "deprecated" : false,
            "title" : "TournamentPrizepool"
          },
          "serie_id" : {
            "$ref" : "#/components/schemas/SerieID"
          },
          "slug" : {
            "$ref" : "#/components/schemas/TournamentSlug"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "end_at", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "winner_id", "winner_type" ],
        "type" : "object"
      },
      "BaseTournaments" : {
        "items" : {
          "$ref" : "#/components/schemas/BaseTournament"
        },
        "type" : "array"
      },
      "BettingBaseTournament" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentBeginAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentBeginAt"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentEndAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentEndAt"
          },
          "id" : {
            "$ref" : "#/components/schemas/TournamentID"
          },
          "league_id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "live_supported" : {
            "$ref" : "#/components/schemas/TournamentLiveSupported"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/TournamentModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/TournamentName"
          },
          "prizepool" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentPrizepool"
            } ],
            "deprecated" : false,
            "title" : "TournamentPrizepool"
          },
          "slug" : {
            "$ref" : "#/components/schemas/TournamentSlug"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "end_at", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "slug", "winner_id", "winner_type" ],
        "type" : "object"
      },
      "BettingCSGOGame" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameBeginAt"
            } ],
            "deprecated" : false,
            "title" : "GameBeginAt"
          },
          "complete" : {
            "$ref" : "#/components/schemas/GameComplete"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/GameDetailedStats"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameEndAt"
            } ],
            "deprecated" : false,
            "title" : "GameEndAt"
          },
          "finished" : {
            "$ref" : "#/components/schemas/GameIsFinished"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/GameIsForfeit"
          },
          "game_round_teams" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/BettingGameRoundTeams"
            } ],
            "deprecated" : false,
            "title" : "BettingGameRoundTeams"
          },
          "id" : {
            "$ref" : "#/components/schemas/CSGOGameID"
          },
          "length" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameLength"
            } ],
            "deprecated" : false,
            "title" : "GameLength"
          },
          "map" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/CSGOMap"
            } ],
            "deprecated" : false,
            "title" : "CSGOMap"
          },
          "match_id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "number_of_rounds" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/CSGONumberOfRounds"
            } ],
            "deprecated" : false,
            "title" : "CSGONumberOfRounds"
          },
          "position" : {
            "$ref" : "#/components/schemas/GamePosition"
          },
          "status" : {
            "$ref" : "#/components/schemas/GameStatus"
          },
          "video_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameVideoUrl"
            } ],
            "deprecated" : false,
            "title" : "GameVideoUrl"
          },
          "winner" : {
            "$ref" : "#/components/schemas/GameWinner"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "game_round_teams", "id", "length", "map", "match_id", "number_of_rounds", "position", "status", "video_url", "winner", "winner_type" ],
        "type" : "object"
      },
      "BettingCSGOGameRoundTeam" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "Team's data for a Round",
        "properties" : {
          "outcome" : {
            "$ref" : "#/components/schemas/CSGOOutcome"
          },
          "round" : {
            "$ref" : "#/components/schemas/CSGORoundID"
          },
          "team_id" : {
            "$ref" : "#/components/schemas/TeamID"
          },
          "terrorist" : {
            "$ref" : "#/components/schemas/CSGOIsTerrorist"
          },
          "winner" : {
            "$ref" : "#/components/schemas/CSGOIsRoundWinner"
          }
        },
        "required" : [ "outcome", "round", "team_id", "terrorist", "winner" ],
        "type" : "object"
      },
      "BettingCSGOGameRoundTeams" : {
        "items" : {
          "$ref" : "#/components/schemas/BettingCSGOGameRoundTeam"
        },
        "type" : "array"
      },
      "BettingDota2Game" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameBeginAt"
            } ],
            "deprecated" : false,
            "title" : "GameBeginAt"
          },
          "complete" : {
            "$ref" : "#/components/schemas/GameComplete"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/GameDetailedStats"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameEndAt"
            } ],
            "deprecated" : false,
            "title" : "GameEndAt"
          },
          "finished" : {
            "$ref" : "#/components/schemas/GameIsFinished"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/GameIsForfeit"
          },
          "id" : {
            "$ref" : "#/components/schemas/Dota2GameID"
          },
          "length" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameLength"
            } ],
            "deprecated" : false,
            "title" : "GameLength"
          },
          "match_id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "position" : {
            "$ref" : "#/components/schemas/GamePosition"
          },
          "status" : {
            "$ref" : "#/components/schemas/GameStatus"
          },
          "video_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameVideoUrl"
            } ],
            "deprecated" : false,
            "title" : "GameVideoUrl"
          },
          "winner" : {
            "$ref" : "#/components/schemas/GameWinner"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "video_url", "winner", "winner_type" ],
        "type" : "object"
      },
      "BettingGame" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/BettingCSGOGame"
        }, {
          "$ref" : "#/components/schemas/BettingDota2Game"
        }, {
          "$ref" : "#/components/schemas/BettingLoLGame"
        }, {
          "$ref" : "#/components/schemas/BettingOwGame"
        }, {
          "$ref" : "#/components/schemas/BettingPUBGGame"
        } ]
      },
      "BettingGameRoundTeams" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BettingCSGOGameRoundTeams"
        } ]
      },
      "BettingGameTeams" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BettingLoLGameTeams"
        } ]
      },
      "BettingGames" : {
        "items" : {
          "$ref" : "#/components/schemas/BettingGame"
        },
        "type" : "array"
      },
      "BettingGroup" : {
        "additionalProperties" : false,
        "deprecated" : true,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/BlueprintID"
          },
          "name" : {
            "$ref" : "#/components/schemas/BlueprintName"
          }
        },
        "required" : [ "id", "name" ],
        "type" : "object"
      },
      "BettingLeague" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LeagueImageURL"
            } ],
            "deprecated" : false,
            "title" : "LeagueImageURL"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/LeagueModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/LeagueName"
          },
          "series" : {
            "$ref" : "#/components/schemas/BaseSeries"
          },
          "slug" : {
            "$ref" : "#/components/schemas/LeagueSlug"
          },
          "url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LeagueURL"
            } ],
            "deprecated" : false,
            "title" : "LeagueURL"
          },
          "videogame" : {
            "$ref" : "#/components/schemas/BettingLeagueVideogame"
          }
        },
        "required" : [ "id", "image_url", "modified_at", "name", "series", "slug", "url", "videogame" ],
        "type" : "object"
      },
      "BettingLeagueVideogame" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LeagueVideogame_LoL"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_CSGO"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Dota2"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Overwatch"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_PUBG"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Fortnite"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_RocketLeague"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Codmw"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_R6siege"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Fifa"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Valorant"
        } ]
      },
      "BettingLeagues" : {
        "items" : {
          "$ref" : "#/components/schemas/BettingLeague"
        },
        "type" : "array"
      },
      "BettingLoLGame" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameBeginAt"
            } ],
            "deprecated" : false,
            "title" : "GameBeginAt"
          },
          "complete" : {
            "$ref" : "#/components/schemas/GameComplete"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/GameDetailedStats"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameEndAt"
            } ],
            "deprecated" : false,
            "title" : "GameEndAt"
          },
          "finished" : {
            "$ref" : "#/components/schemas/GameIsFinished"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/GameIsForfeit"
          },
          "game_teams" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/BettingGameTeams"
            } ],
            "deprecated" : false,
            "title" : "BettingGameTeams"
          },
          "id" : {
            "$ref" : "#/components/schemas/LoLGameID"
          },
          "length" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameLength"
            } ],
            "deprecated" : false,
            "title" : "GameLength"
          },
          "match_id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "position" : {
            "$ref" : "#/components/schemas/GamePosition"
          },
          "status" : {
            "$ref" : "#/components/schemas/GameStatus"
          },
          "video_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameVideoUrl"
            } ],
            "deprecated" : false,
            "title" : "GameVideoUrl"
          },
          "winner" : {
            "$ref" : "#/components/schemas/GameWinner"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "game_teams", "id", "length", "match_id", "position", "status", "video_url", "winner", "winner_type" ],
        "type" : "object"
      },
      "BettingLoLGameTeam" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "Team's data for a Game",
        "properties" : {
          "baron_kills" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLBaronKills"
            } ],
            "deprecated" : false,
            "title" : "LoLBaronKills"
          },
          "color" : {
            "$ref" : "#/components/schemas/LoLTeamColor"
          },
          "dragon_kills" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLDragonKills"
            } ],
            "deprecated" : false,
            "title" : "LoLDragonKills"
          },
          "first_baron" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLTeamGotFirstBaron"
            } ],
            "deprecated" : false,
            "title" : "LoLTeamGotFirstBaron"
          },
          "first_blood" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLTeamGotFirstBlood"
            } ],
            "deprecated" : false,
            "title" : "LoLTeamGotFirstBlood"
          },
          "first_dragon" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLTeamGotFirstDragon"
            } ],
            "deprecated" : false,
            "title" : "LoLTeamGotFirstDragon"
          },
          "first_herald" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLTeamGotFirstHerald"
            } ],
            "deprecated" : false,
            "title" : "LoLTeamGotFirstHerald"
          },
          "first_inhibitor" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLTeamGotFirstInhibitor"
            } ],
            "deprecated" : false,
            "title" : "LoLTeamGotFirstInhibitor"
          },
          "first_tower" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLTeamGotFirstTower"
            } ],
            "deprecated" : false,
            "title" : "LoLTeamGotFirstTower"
          },
          "gold_earned" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLGold"
            } ],
            "deprecated" : false,
            "title" : "LoLGold"
          },
          "herald_kill" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLHeraldKills"
            } ],
            "deprecated" : false,
            "title" : "LoLHeraldKills"
          },
          "inhibitor_kills" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLInhibitorKills"
            } ],
            "deprecated" : false,
            "title" : "LoLInhibitorKills"
          },
          "team_id" : {
            "$ref" : "#/components/schemas/TeamID"
          },
          "team_kills" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLTeamKills"
            } ],
            "deprecated" : false,
            "title" : "LoLTeamKills"
          },
          "tower_kills" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LoLTowerKills"
            } ],
            "deprecated" : false,
            "title" : "LoLTowerKills"
          }
        },
        "required" : [ "baron_kills", "color", "dragon_kills", "first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "gold_earned", "herald_kill", "inhibitor_kills", "team_id", "team_kills", "tower_kills" ],
        "type" : "object"
      },
      "BettingLoLGameTeams" : {
        "items" : {
          "$ref" : "#/components/schemas/BettingLoLGameTeam"
        },
        "type" : "array"
      },
      "BettingMatch" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchBeginAt"
            } ],
            "deprecated" : false,
            "title" : "MatchBeginAt"
          },
          "betting_metadata" : {
            "$ref" : "#/components/schemas/BettingMetadata"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/MatchDetailedStats"
          },
          "draw" : {
            "$ref" : "#/components/schemas/MatchIsDraw"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchEndAt"
            } ],
            "deprecated" : false,
            "title" : "MatchEndAt"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/MatchIsForfeit"
          },
          "game_advantage" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "games" : {
            "$ref" : "#/components/schemas/BettingGames"
          },
          "id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "league" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/BettingLeague"
            } ],
            "deprecated" : false,
            "title" : "BettingLeague"
          },
          "league_id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "live" : {
            "$ref" : "#/components/schemas/MatchLive"
          },
          "live_embed_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchEmbedLiveVideoURLDeprecated"
            } ],
            "deprecated" : true,
            "title" : "MatchEmbedLiveVideoURLDeprecated"
          },
          "match_type" : {
            "$ref" : "#/components/schemas/MatchType"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/MatchModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/MatchName"
          },
          "number_of_games" : {
            "$ref" : "#/components/schemas/GameCount"
          },
          "official_stream_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchOfficialStreamURL"
            } ],
            "deprecated" : true,
            "title" : "MatchOfficialStreamURL"
          },
          "opponents" : {
            "$ref" : "#/components/schemas/Opponents"
          },
          "original_scheduled_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchOriginalScheduledAt"
            } ],
            "deprecated" : false,
            "title" : "MatchOriginalScheduledAt"
          },
          "rescheduled" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchIsRescheduled"
            } ],
            "deprecated" : false,
            "title" : "MatchIsRescheduled"
          },
          "results" : {
            "$ref" : "#/components/schemas/MatchResults"
          },
          "scheduled_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchScheduledAt"
            } ],
            "deprecated" : false,
            "title" : "MatchScheduledAt"
          },
          "serie" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/BettingSerie"
            } ],
            "deprecated" : false,
            "title" : "BettingSerie"
          },
          "serie_id" : {
            "$ref" : "#/components/schemas/SerieID"
          },
          "slug" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchSlug"
            } ],
            "deprecated" : false,
            "title" : "MatchSlug"
          },
          "status" : {
            "$ref" : "#/components/schemas/BettingMatchStatus"
          },
          "streams" : {
            "$ref" : "#/components/schemas/MatchLocalizedStreams"
          },
          "streams_list" : {
            "$ref" : "#/components/schemas/StreamsList"
          },
          "tournament" : {
            "$ref" : "#/components/schemas/BettingBaseTournament"
          },
          "tournament_id" : {
            "$ref" : "#/components/schemas/TournamentID"
          },
          "videogame" : {
            "$ref" : "#/components/schemas/CurrentVideogame"
          },
          "videogame_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/ShortVideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "ShortVideogameVersion"
          },
          "winner" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/BaseOpponent"
            } ],
            "deprecated" : false,
            "title" : "BaseOpponent"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          }
        },
        "required" : [ "begin_at", "betting_metadata", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "league", "league_id", "live", "live_embed_url", "match_type", "modified_at", "name", "number_of_games", "official_stream_url", "opponents", "original_scheduled_at", "rescheduled", "results", "scheduled_at", "serie", "serie_id", "slug", "status", "streams", "streams_list", "tournament", "tournament_id", "videogame", "videogame_version", "winner", "winner_id" ],
        "type" : "object"
      },
      "BettingMatchStatus" : {
        "enum" : [ "canceled", "finished", "live", "not_booked", "pending", "postponed", "pre_match", "settled" ],
        "type" : "string"
      },
      "BettingMatches" : {
        "items" : {
          "$ref" : "#/components/schemas/BettingMatch"
        },
        "type" : "array"
      },
      "BettingMatchesMarkets" : {
        "items" : {
          "$ref" : "#/components/schemas/MatchMarkets"
        },
        "type" : "array"
      },
      "BettingMetadata" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "betting_group" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/BettingGroup"
            } ],
            "deprecated" : false,
            "title" : "BettingGroup"
          },
          "blueprint" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/Blueprint"
            } ],
            "deprecated" : false,
            "title" : "Blueprint"
          },
          "bookable" : {
            "$ref" : "#/components/schemas/MatchBookable"
          },
          "booked" : {
            "$ref" : "#/components/schemas/MatchBooked"
          },
          "live_available" : {
            "$ref" : "#/components/schemas/MatchLiveAvailable"
          },
          "markets_created" : {
            "$ref" : "#/components/schemas/MarketsCreated"
          },
          "markets_updated_at" : {
            "$ref" : "#/components/schemas/MarketsUpdatedAt"
          },
          "pandascore_reviewed" : {
            "$ref" : "#/components/schemas/MatchPandaScoreReviewed"
          },
          "settled" : {
            "$ref" : "#/components/schemas/MatchSettled"
          }
        },
        "required" : [ "betting_group", "blueprint", "bookable", "booked", "live_available", "markets_created", "markets_updated_at", "pandascore_reviewed", "settled" ],
        "type" : "object"
      },
      "BettingOwGame" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameBeginAt"
            } ],
            "deprecated" : false,
            "title" : "GameBeginAt"
          },
          "complete" : {
            "$ref" : "#/components/schemas/GameComplete"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/GameDetailedStats"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameEndAt"
            } ],
            "deprecated" : false,
            "title" : "GameEndAt"
          },
          "finished" : {
            "$ref" : "#/components/schemas/GameIsFinished"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/GameIsForfeit"
          },
          "id" : {
            "$ref" : "#/components/schemas/OwGameID"
          },
          "length" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameLength"
            } ],
            "deprecated" : false,
            "title" : "GameLength"
          },
          "match_id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "position" : {
            "$ref" : "#/components/schemas/GamePosition"
          },
          "status" : {
            "$ref" : "#/components/schemas/GameStatus"
          },
          "video_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameVideoUrl"
            } ],
            "deprecated" : false,
            "title" : "GameVideoUrl"
          },
          "winner" : {
            "$ref" : "#/components/schemas/GameWinner"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "video_url", "winner", "winner_type" ],
        "type" : "object"
      },
      "BettingPUBGGame" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameBeginAt"
            } ],
            "deprecated" : false,
            "title" : "GameBeginAt"
          },
          "complete" : {
            "$ref" : "#/components/schemas/GameComplete"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/GameDetailedStats"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameEndAt"
            } ],
            "deprecated" : false,
            "title" : "GameEndAt"
          },
          "finished" : {
            "$ref" : "#/components/schemas/GameIsFinished"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/GameIsForfeit"
          },
          "id" : {
            "$ref" : "#/components/schemas/PUBGGameID"
          },
          "length" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameLength"
            } ],
            "deprecated" : false,
            "title" : "GameLength"
          },
          "match_id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "position" : {
            "$ref" : "#/components/schemas/GamePosition"
          },
          "status" : {
            "$ref" : "#/components/schemas/GameStatus"
          },
          "video_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameVideoUrl"
            } ],
            "deprecated" : false,
            "title" : "GameVideoUrl"
          },
          "winner" : {
            "$ref" : "#/components/schemas/GameWinner"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "video_url", "winner", "winner_type" ],
        "type" : "object"
      },
      "BettingSerie" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieBeginAt"
            } ],
            "deprecated" : false,
            "title" : "SerieBeginAt"
          },
          "description" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieDescription"
            } ],
            "deprecated" : false,
            "title" : "SerieDescription"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieEndAt"
            } ],
            "deprecated" : false,
            "title" : "SerieEndAt"
          },
          "full_name" : {
            "$ref" : "#/components/schemas/SerieFullName"
          },
          "id" : {
            "$ref" : "#/components/schemas/SerieID"
          },
          "league_id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "league_image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LeagueImageURL"
            } ],
            "deprecated" : false,
            "title" : "LeagueImageURL"
          },
          "league_name" : {
            "$ref" : "#/components/schemas/LeagueName"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/SerieModifiedAt"
          },
          "name" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieName"
            } ],
            "deprecated" : false,
            "title" : "SerieName"
          },
          "season" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieSeason"
            } ],
            "deprecated" : false,
            "title" : "SerieSeason"
          },
          "slug" : {
            "$ref" : "#/components/schemas/SerieSlug"
          },
          "tier" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieTier"
            } ],
            "deprecated" : false,
            "title" : "SerieTier"
          },
          "videogame" : {
            "$ref" : "#/components/schemas/CurrentVideogame"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          },
          "year" : {
            "$ref" : "#/components/schemas/SerieYear"
          }
        },
        "required" : [ "begin_at", "description", "end_at", "full_name", "id", "league_id", "league_image_url", "league_name", "modified_at", "name", "season", "slug", "tier", "videogame", "winner_id", "winner_type", "year" ],
        "type" : "object"
      },
      "BettingSeries" : {
        "items" : {
          "$ref" : "#/components/schemas/BettingSerie"
        },
        "type" : "array"
      },
      "BettingTournament" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentBeginAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentBeginAt"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentEndAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentEndAt"
          },
          "id" : {
            "$ref" : "#/components/schemas/TournamentID"
          },
          "live_supported" : {
            "$ref" : "#/components/schemas/TournamentLiveSupported"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/TournamentModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/TournamentName"
          },
          "prizepool" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentPrizepool"
            } ],
            "deprecated" : false,
            "title" : "TournamentPrizepool"
          },
          "serie_id" : {
            "$ref" : "#/components/schemas/SerieID"
          },
          "slug" : {
            "$ref" : "#/components/schemas/TournamentSlug"
          },
          "videogame" : {
            "$ref" : "#/components/schemas/CurrentVideogame"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "end_at", "id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "videogame", "winner_id", "winner_type" ],
        "type" : "object"
      },
      "BettingTournaments" : {
        "items" : {
          "$ref" : "#/components/schemas/BettingTournament"
        },
        "type" : "array"
      },
      "Blueprint" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/BlueprintID"
          },
          "name" : {
            "$ref" : "#/components/schemas/BlueprintName"
          }
        },
        "required" : [ "id", "name" ],
        "type" : "object"
      },
      "BlueprintID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "BlueprintName" : {
        "type" : "string"
      },
      "Bracket" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchBeginAt"
            } ],
            "deprecated" : false,
            "title" : "MatchBeginAt"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/MatchDetailedStats"
          },
          "draw" : {
            "$ref" : "#/components/schemas/MatchIsDraw"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchEndAt"
            } ],
            "deprecated" : false,
            "title" : "MatchEndAt"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/MatchIsForfeit"
          },
          "game_advantage" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "games" : {
            "$ref" : "#/components/schemas/Games"
          },
          "id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "live" : {
            "$ref" : "#/components/schemas/MatchLive"
          },
          "live_embed_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchEmbedLiveVideoURLDeprecated"
            } ],
            "deprecated" : true,
            "title" : "MatchEmbedLiveVideoURLDeprecated"
          },
          "match_type" : {
            "$ref" : "#/components/schemas/MatchType"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/MatchModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/MatchName"
          },
          "number_of_games" : {
            "$ref" : "#/components/schemas/GameCount"
          },
          "official_stream_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchOfficialStreamURL"
            } ],
            "deprecated" : true,
            "title" : "MatchOfficialStreamURL"
          },
          "opponents" : {
            "$ref" : "#/components/schemas/Opponents"
          },
          "original_scheduled_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchOriginalScheduledAt"
            } ],
            "deprecated" : false,
            "title" : "MatchOriginalScheduledAt"
          },
          "previous_matches" : {
            "$ref" : "#/components/schemas/PreviousMatches"
          },
          "scheduled_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchScheduledAt"
            } ],
            "deprecated" : false,
            "title" : "MatchScheduledAt"
          },
          "slug" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchSlug"
            } ],
            "deprecated" : false,
            "title" : "MatchSlug"
          },
          "status" : {
            "$ref" : "#/components/schemas/MatchStatus"
          },
          "streams" : {
            "$ref" : "#/components/schemas/MatchLocalizedStreams"
          },
          "streams_list" : {
            "$ref" : "#/components/schemas/StreamsList"
          },
          "tournament_id" : {
            "$ref" : "#/components/schemas/TournamentID"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          }
        },
        "required" : [ "begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "live", "live_embed_url", "match_type", "modified_at", "name", "number_of_games", "official_stream_url", "opponents", "original_scheduled_at", "previous_matches", "scheduled_at", "slug", "status", "streams", "streams_list", "tournament_id", "winner_id" ],
        "type" : "object"
      },
      "BracketStanding" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "last_match" : {
            "$ref" : "#/components/schemas/BaseMatch"
          },
          "rank" : {
            "$ref" : "#/components/schemas/StandingRank"
          },
          "team" : {
            "$ref" : "#/components/schemas/BaseTeam"
          }
        },
        "required" : [ "last_match", "rank", "team" ],
        "type" : "object"
      },
      "Brackets" : {
        "items" : {
          "$ref" : "#/components/schemas/Bracket"
        },
        "type" : "array"
      },
      "CSGOGameID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "CSGOIsRoundWinner" : {
        "description" : "For Counter Strike: Global Offensive: whether team has won the round",
        "type" : "boolean"
      },
      "CSGOIsTerrorist" : {
        "description" : "For Counter Strike: Global Offensive: whether team is on T side",
        "type" : "boolean"
      },
      "CSGOMap" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/CSGOMapID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/CSGOMapImageURL"
            } ],
            "deprecated" : false,
            "title" : "CSGOMapImageURL"
          },
          "name" : {
            "$ref" : "#/components/schemas/CSGOMapName"
          }
        },
        "required" : [ "id", "image_url", "name" ],
        "type" : "object"
      },
      "CSGOMapID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "CSGOMapImageURL" : {
        "format" : "uri",
        "type" : "string"
      },
      "CSGOMapName" : {
        "type" : "string"
      },
      "CSGONumberOfRounds" : {
        "description" : "For Counter Strike: Global Offensive: number of rounds for a game",
        "minimum" : 0,
        "type" : "integer"
      },
      "CSGOOutcome" : {
        "enum" : [ "defused", "eliminated", "exploded", "planted_eliminated", "timeout" ],
        "type" : "string"
      },
      "CSGORoundID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "CSGOWeaponID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "CSGOWeaponIDOrSlug" : {
        "description" : "For Counter Strike: Global Offensive: a weapon ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/CSGOWeaponID"
        }, {
          "$ref" : "#/components/schemas/CSGOWeaponSlug"
        } ]
      },
      "CSGOWeaponSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "ChangeIncidents" : {
        "items" : {
          "$ref" : "#/components/schemas/Incident"
        },
        "type" : "array"
      },
      "CurrentVideogame" : {
        "enum" : [ {
          "id" : 1,
          "name" : "LoL",
          "slug" : "league-of-legends"
        }, {
          "id" : 3,
          "name" : "CS:GO",
          "slug" : "cs-go"
        }, {
          "id" : 4,
          "name" : "Dota 2",
          "slug" : "dota-2"
        }, {
          "id" : 14,
          "name" : "Overwatch",
          "slug" : "ow"
        }, {
          "id" : 20,
          "name" : "PUBG",
          "slug" : "pubg"
        }, {
          "id" : 22,
          "name" : "Rocket League",
          "slug" : "rl"
        }, {
          "id" : 23,
          "name" : "Call of Duty",
          "slug" : "cod-mw"
        }, {
          "id" : 24,
          "name" : "Rainbow 6 Siege",
          "slug" : "r6-siege"
        }, {
          "id" : 25,
          "name" : "FIFA",
          "slug" : "fifa"
        }, {
          "id" : 26,
          "name" : "Valorant",
          "slug" : "valorant"
        } ],
        "type" : "object"
      },
      "DeletionIncident" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "change_type" : {
            "$ref" : "#/components/schemas/DeletionIncidentChangeType"
          },
          "id" : {
            "$ref" : "#/components/schemas/IncidentID"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          },
          "object" : {
            "$ref" : "#/components/schemas/DeletionObject"
          },
          "type" : {
            "$ref" : "#/components/schemas/IncidentType"
          }
        },
        "required" : [ "change_type", "id", "modified_at", "object", "type" ],
        "type" : "object"
      },
      "DeletionIncidentChangeType" : {
        "enum" : [ "deletion" ],
        "type" : "string"
      },
      "DeletionIncidents" : {
        "items" : {
          "$ref" : "#/components/schemas/DeletionIncident"
        },
        "type" : "array"
      },
      "DeletionObject" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "deleted_at" : {
            "$ref" : "#/components/schemas/IncidentDeletedAt"
          },
          "reason" : {
            "$ref" : "#/components/schemas/IncidentDeletionReason"
          },
          "videogame_id" : {
            "$ref" : "#/components/schemas/VideogameID"
          }
        },
        "required" : [ "deleted_at", "reason", "videogame_id" ],
        "type" : "object"
      },
      "Dota2AbilityID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "Dota2AbilityIDOrSlug" : {
        "description" : "For Dota 2: an ability ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Dota2AbilityID"
        }, {
          "$ref" : "#/components/schemas/Dota2AbilitySlug"
        } ]
      },
      "Dota2AbilitySlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "Dota2GameID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "Dota2HeroID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "Dota2HeroIDOrSlug" : {
        "description" : "For Dota 2: a hero ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Dota2HeroID"
        }, {
          "$ref" : "#/components/schemas/Dota2HeroSlug"
        } ]
      },
      "Dota2HeroSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "Dota2ItemID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "Dota2ItemIDOrSlug" : {
        "description" : "For Dota 2: an item ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Dota2ItemID"
        }, {
          "$ref" : "#/components/schemas/Dota2ItemSlug"
        } ]
      },
      "Dota2ItemSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "Esport" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Esport_LoL"
        }, {
          "$ref" : "#/components/schemas/Esport_CSGO"
        }, {
          "$ref" : "#/components/schemas/Esport_Dota2"
        }, {
          "$ref" : "#/components/schemas/Esport_Overwatch"
        }, {
          "$ref" : "#/components/schemas/Esport_PUBG"
        }, {
          "$ref" : "#/components/schemas/Esport_Fortnite"
        }, {
          "$ref" : "#/components/schemas/Esport_RocketLeague"
        }, {
          "$ref" : "#/components/schemas/Esport_Codmw"
        }, {
          "$ref" : "#/components/schemas/Esport_R6siege"
        }, {
          "$ref" : "#/components/schemas/Esport_Fifa"
        }, {
          "$ref" : "#/components/schemas/Esport_Valorant"
        } ]
      },
      "Esport_CSGO" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 3 ]
          },
          "name" : {
            "enum" : [ "CS:GO" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "cs-go" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_Codmw" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 23 ]
          },
          "name" : {
            "enum" : [ "Call of Duty" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "cod-mw" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_Dota2" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 4 ]
          },
          "name" : {
            "enum" : [ "Dota 2" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "dota-2" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_Fifa" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 25 ]
          },
          "name" : {
            "enum" : [ "FIFA" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "fifa" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_Fortnite" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 21 ]
          },
          "name" : {
            "enum" : [ "Fortnite" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "fortnite" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_LoL" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 1 ]
          },
          "name" : {
            "enum" : [ "LoL" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "league-of-legends" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_Overwatch" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 14 ]
          },
          "name" : {
            "enum" : [ "Overwatch" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "ow" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_PUBG" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 20 ]
          },
          "name" : {
            "enum" : [ "PUBG" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "pubg" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_R6siege" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 24 ]
          },
          "name" : {
            "enum" : [ "Rainbow 6 Siege" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "r6-siege" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_RocketLeague" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 22 ]
          },
          "name" : {
            "enum" : [ "Rocket League" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "rl" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esport_Valorant" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 26 ]
          },
          "name" : {
            "enum" : [ "Valorant" ]
          },
          "series" : {
            "$ref" : "#/components/schemas/BettingSeries"
          },
          "slug" : {
            "enum" : [ "valorant" ]
          }
        },
        "required" : [ "current_version", "id", "name", "series", "slug" ],
        "type" : "object"
      },
      "Esports" : {
        "items" : {
          "$ref" : "#/components/schemas/Esport"
        },
        "type" : "array"
      },
      "EventBeginAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "EventEndAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "EventID" : {
        "deprecated" : true,
        "minimum" : 1,
        "type" : "integer"
      },
      "EventIsActive" : {
        "description" : "Whether event is active",
        "type" : "boolean"
      },
      "EventStreamURL" : {
        "format" : "uri",
        "type" : "string"
      },
      "Game" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameBeginAt"
            } ],
            "deprecated" : false,
            "title" : "GameBeginAt"
          },
          "complete" : {
            "$ref" : "#/components/schemas/GameComplete"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/GameDetailedStats"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameEndAt"
            } ],
            "deprecated" : false,
            "title" : "GameEndAt"
          },
          "finished" : {
            "$ref" : "#/components/schemas/GameIsFinished"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/GameIsForfeit"
          },
          "id" : {
            "$ref" : "#/components/schemas/GameID"
          },
          "length" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameLength"
            } ],
            "deprecated" : false,
            "title" : "GameLength"
          },
          "match_id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "position" : {
            "$ref" : "#/components/schemas/GamePosition"
          },
          "status" : {
            "$ref" : "#/components/schemas/GameStatus"
          },
          "video_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/GameVideoUrl"
            } ],
            "deprecated" : false,
            "title" : "GameVideoUrl"
          },
          "winner" : {
            "$ref" : "#/components/schemas/GameWinner"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "video_url", "winner", "winner_type" ],
        "type" : "object"
      },
      "GameBeginAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "GameComplete" : {
        "description" : "Whether game data are complete and won't change",
        "type" : "boolean"
      },
      "GameCount" : {
        "description" : "Number of games",
        "minimum" : 0,
        "type" : "integer"
      },
      "GameDetailedStats" : {
        "description" : "Whether the game offers full stats",
        "type" : "boolean"
      },
      "GameEndAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "GameID" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/LoLGameID"
        }, {
          "$ref" : "#/components/schemas/CSGOGameID"
        }, {
          "$ref" : "#/components/schemas/OwGameID"
        }, {
          "$ref" : "#/components/schemas/Dota2GameID"
        }, {
          "$ref" : "#/components/schemas/PUBGGameID"
        } ],
        "description" : "A game ID"
      },
      "GameIsFinished" : {
        "description" : "Whether game is finished",
        "type" : "boolean"
      },
      "GameIsForfeit" : {
        "description" : "Whether game is forfeit",
        "type" : "boolean"
      },
      "GameLength" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "GamePosition" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "GameStatus" : {
        "enum" : [ "finished", "not_played", "not_started", "running" ],
        "type" : "string"
      },
      "GameVideoUrl" : {
        "format" : "uri",
        "type" : "string"
      },
      "GameWinner" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "id", "type" ],
        "type" : "object"
      },
      "Games" : {
        "items" : {
          "$ref" : "#/components/schemas/Game"
        },
        "type" : "array"
      },
      "GroupStanding" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "losses" : {
            "$ref" : "#/components/schemas/StandingLosses"
          },
          "rank" : {
            "$ref" : "#/components/schemas/StandingRank"
          },
          "team" : {
            "$ref" : "#/components/schemas/BaseTeam"
          },
          "ties" : {
            "$ref" : "#/components/schemas/StandingTies"
          },
          "total" : {
            "$ref" : "#/components/schemas/MatchCount"
          },
          "wins" : {
            "$ref" : "#/components/schemas/MatchCount"
          }
        },
        "required" : [ "losses", "rank", "team", "total", "wins" ],
        "type" : "object"
      },
      "Incident" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/IncidentOfTypeLeague"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypeMatch"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypePlayer"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypeSerie"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypeTeam"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypeTournament"
        }, {
          "$ref" : "#/components/schemas/DeletionIncident"
        } ]
      },
      "IncidentChangeType" : {
        "enum" : [ "creation", "deletion", "update" ],
        "type" : "string"
      },
      "IncidentDeletedAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "IncidentDeletionReason" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/IncidentDeletionReasonReplaced"
        }, {
          "$ref" : "#/components/schemas/IncidentDeletionReasonMerged"
        }, {
          "$ref" : "#/components/schemas/IncidentDeletionReasonDeleted"
        } ]
      },
      "IncidentDeletionReasonDeleted" : {
        "description" : "The entity no longer exists.",
        "enum" : [ "Model deleted" ],
        "type" : "string"
      },
      "IncidentDeletionReasonMerged" : {
        "description" : "The entity has been merged with another one of the same type.",
        "pattern" : "^Merged with [0-9]+$",
        "type" : "string"
      },
      "IncidentDeletionReasonReplaced" : {
        "description" : "The entity has been replaced with another one of another type.",
        "pattern" : "^Replaced by (serie|tournament) [0-9]+$",
        "type" : "string"
      },
      "IncidentID" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/LeagueID"
        }, {
          "$ref" : "#/components/schemas/MatchID"
        }, {
          "$ref" : "#/components/schemas/PlayerID"
        }, {
          "$ref" : "#/components/schemas/SerieID"
        }, {
          "$ref" : "#/components/schemas/TeamID"
        }, {
          "$ref" : "#/components/schemas/TournamentID"
        } ],
        "description" : "An incident ID"
      },
      "IncidentModifiedAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "IncidentOfTypeLeague" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "An added or changed league",
        "properties" : {
          "change_type" : {
            "$ref" : "#/components/schemas/IncidentChangeType"
          },
          "id" : {
            "$ref" : "#/components/schemas/IncidentID"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          },
          "object" : {
            "$ref" : "#/components/schemas/League"
          },
          "type" : {
            "enum" : [ "league" ]
          }
        },
        "required" : [ "change_type", "id", "modified_at", "object", "type" ],
        "type" : "object"
      },
      "IncidentOfTypeMatch" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "An added or changed match",
        "properties" : {
          "change_type" : {
            "$ref" : "#/components/schemas/IncidentChangeType"
          },
          "id" : {
            "$ref" : "#/components/schemas/IncidentID"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          },
          "object" : {
            "$ref" : "#/components/schemas/Match"
          },
          "type" : {
            "enum" : [ "match" ]
          }
        },
        "required" : [ "change_type", "id", "modified_at", "object", "type" ],
        "type" : "object"
      },
      "IncidentOfTypePlayer" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "An added or changed player",
        "properties" : {
          "change_type" : {
            "$ref" : "#/components/schemas/IncidentChangeType"
          },
          "id" : {
            "$ref" : "#/components/schemas/IncidentID"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          },
          "object" : {
            "$ref" : "#/components/schemas/Player"
          },
          "type" : {
            "enum" : [ "player" ]
          }
        },
        "required" : [ "change_type", "id", "modified_at", "object", "type" ],
        "type" : "object"
      },
      "IncidentOfTypeSerie" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "An added or changed serie",
        "properties" : {
          "change_type" : {
            "$ref" : "#/components/schemas/IncidentChangeType"
          },
          "id" : {
            "$ref" : "#/components/schemas/IncidentID"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          },
          "object" : {
            "$ref" : "#/components/schemas/Serie"
          },
          "type" : {
            "enum" : [ "serie" ]
          }
        },
        "required" : [ "change_type", "id", "modified_at", "object", "type" ],
        "type" : "object"
      },
      "IncidentOfTypeTeam" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "An added or changed team",
        "properties" : {
          "change_type" : {
            "$ref" : "#/components/schemas/IncidentChangeType"
          },
          "id" : {
            "$ref" : "#/components/schemas/IncidentID"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          },
          "object" : {
            "$ref" : "#/components/schemas/Team"
          },
          "type" : {
            "enum" : [ "team" ]
          }
        },
        "required" : [ "change_type", "id", "modified_at", "object", "type" ],
        "type" : "object"
      },
      "IncidentOfTypeTournament" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "An added or changed tournament",
        "properties" : {
          "change_type" : {
            "$ref" : "#/components/schemas/IncidentChangeType"
          },
          "id" : {
            "$ref" : "#/components/schemas/IncidentID"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/IncidentModifiedAt"
          },
          "object" : {
            "$ref" : "#/components/schemas/Tournament"
          },
          "type" : {
            "enum" : [ "tournament" ]
          }
        },
        "required" : [ "change_type", "id", "modified_at", "object", "type" ],
        "type" : "object"
      },
      "IncidentType" : {
        "enum" : [ "league", "match", "player", "serie", "team", "tournament" ],
        "type" : "string"
      },
      "Incidents" : {
        "items" : {
          "$ref" : "#/components/schemas/Incident"
        },
        "type" : "array"
      },
      "League" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LeagueImageURL"
            } ],
            "deprecated" : false,
            "title" : "LeagueImageURL"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/LeagueModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/LeagueName"
          },
          "series" : {
            "$ref" : "#/components/schemas/BaseSeries"
          },
          "slug" : {
            "$ref" : "#/components/schemas/LeagueSlug"
          },
          "url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LeagueURL"
            } ],
            "deprecated" : false,
            "title" : "LeagueURL"
          },
          "videogame" : {
            "$ref" : "#/components/schemas/LeagueVideogame"
          }
        },
        "required" : [ "id", "image_url", "modified_at", "name", "series", "slug", "url", "videogame" ],
        "type" : "object"
      },
      "LeagueID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "LeagueIDOrSlug" : {
        "description" : "A league ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LeagueID"
        }, {
          "$ref" : "#/components/schemas/LeagueSlug"
        } ]
      },
      "LeagueImageURL" : {
        "format" : "uri",
        "type" : "string"
      },
      "LeagueModifiedAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "LeagueName" : {
        "type" : "string"
      },
      "LeagueSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9:_-]+$",
        "type" : "string"
      },
      "LeagueURL" : {
        "format" : "uri",
        "type" : "string"
      },
      "LeagueVideogame" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LeagueVideogame_LoL"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_CSGO"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Dota2"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Overwatch"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_PUBG"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_RocketLeague"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Codmw"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_R6siege"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Fifa"
        }, {
          "$ref" : "#/components/schemas/LeagueVideogame_Valorant"
        } ]
      },
      "LeagueVideogame_CSGO" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 3 ]
          },
          "name" : {
            "enum" : [ "CS:GO" ]
          },
          "slug" : {
            "enum" : [ "cs-go" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_Codmw" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 23 ]
          },
          "name" : {
            "enum" : [ "Call of Duty" ]
          },
          "slug" : {
            "enum" : [ "cod-mw" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_Dota2" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 4 ]
          },
          "name" : {
            "enum" : [ "Dota 2" ]
          },
          "slug" : {
            "enum" : [ "dota-2" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_Fifa" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 25 ]
          },
          "name" : {
            "enum" : [ "FIFA" ]
          },
          "slug" : {
            "enum" : [ "fifa" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_Fortnite" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 21 ]
          },
          "name" : {
            "enum" : [ "Fortnite" ]
          },
          "slug" : {
            "enum" : [ "fortnite" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_LoL" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 1 ]
          },
          "name" : {
            "enum" : [ "LoL" ]
          },
          "slug" : {
            "enum" : [ "league-of-legends" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_Overwatch" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 14 ]
          },
          "name" : {
            "enum" : [ "Overwatch" ]
          },
          "slug" : {
            "enum" : [ "ow" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_PUBG" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 20 ]
          },
          "name" : {
            "enum" : [ "PUBG" ]
          },
          "slug" : {
            "enum" : [ "pubg" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_R6siege" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 24 ]
          },
          "name" : {
            "enum" : [ "Rainbow 6 Siege" ]
          },
          "slug" : {
            "enum" : [ "r6-siege" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_RocketLeague" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 22 ]
          },
          "name" : {
            "enum" : [ "Rocket League" ]
          },
          "slug" : {
            "enum" : [ "rl" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "LeagueVideogame_Valorant" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 26 ]
          },
          "name" : {
            "enum" : [ "Valorant" ]
          },
          "slug" : {
            "enum" : [ "valorant" ]
          }
        },
        "required" : [ "current_version", "id", "name", "slug" ],
        "type" : "object"
      },
      "Leagues" : {
        "items" : {
          "$ref" : "#/components/schemas/League"
        },
        "type" : "array"
      },
      "Live" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "endpoints" : {
            "$ref" : "#/components/schemas/LiveEndpoints"
          },
          "event" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LiveEvent"
            } ],
            "deprecated" : true,
            "title" : "LiveEvent"
          },
          "match" : {
            "$ref" : "#/components/schemas/Match"
          }
        },
        "required" : [ "endpoints", "event", "match" ],
        "type" : "object"
      },
      "LiveBeginAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "LiveEndpoint" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LiveBeginAt"
            } ],
            "deprecated" : false,
            "title" : "LiveBeginAt"
          },
          "expected_begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LiveExpectedBeginAt"
            } ],
            "deprecated" : false,
            "title" : "LiveExpectedBeginAt"
          },
          "last_active" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LiveLastActive"
            } ],
            "deprecated" : false,
            "title" : "LiveLastActive"
          },
          "match_id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "open" : {
            "$ref" : "#/components/schemas/LiveIsOpen"
          },
          "type" : {
            "$ref" : "#/components/schemas/LiveType"
          },
          "url" : {
            "$ref" : "#/components/schemas/LiveUrl"
          }
        },
        "required" : [ "begin_at", "expected_begin_at", "last_active", "match_id", "open", "type", "url" ],
        "type" : "object"
      },
      "LiveEndpoints" : {
        "items" : {
          "$ref" : "#/components/schemas/LiveEndpoint"
        },
        "type" : "array"
      },
      "LiveEvent" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/EventBeginAt"
            } ],
            "deprecated" : true,
            "title" : "EventBeginAt"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/EventEndAt"
            } ],
            "deprecated" : true,
            "title" : "EventEndAt"
          },
          "game" : {
            "$ref" : "#/components/schemas/VideogameSlug"
          },
          "id" : {
            "$ref" : "#/components/schemas/EventID"
          },
          "is_active" : {
            "$ref" : "#/components/schemas/EventIsActive"
          },
          "stream_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/EventStreamURL"
            } ],
            "deprecated" : false,
            "title" : "EventStreamURL"
          },
          "tournament_id" : {
            "$ref" : "#/components/schemas/TournamentID"
          }
        },
        "required" : [ "begin_at", "end_at", "game", "id", "is_active", "stream_url", "tournament_id" ],
        "type" : "object"
      },
      "LiveExpectedBeginAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "LiveIsOpen" : {
        "description" : "Whether live is open",
        "type" : "boolean"
      },
      "LiveLastActive" : {
        "description" : "Timestamp in milliseconds (since January 1, 1970 00:00:00 UTC)",
        "minimum" : 0,
        "type" : "integer"
      },
      "LiveType" : {
        "enum" : [ "events", "frames" ],
        "type" : "string"
      },
      "LiveUrl" : {
        "format" : "uri",
        "type" : "string"
      },
      "Lives" : {
        "items" : {
          "$ref" : "#/components/schemas/Live"
        },
        "type" : "array"
      },
      "LoLBaronKills" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "LoLChampionID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "LoLDragonKills" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "LoLGameID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "LoLGold" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "LoLHeraldKills" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "LoLInhibitorKills" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "LoLItemID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "LoLMasteryID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "LoLRuneID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "LoLSpellID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "LoLTeamColor" : {
        "enum" : [ "blue", "red" ],
        "type" : "string"
      },
      "LoLTeamGotFirstBaron" : {
        "description" : "For League-of-Legends: whether team got first baron Nashor",
        "type" : "boolean"
      },
      "LoLTeamGotFirstBlood" : {
        "description" : "For League-of-Legends: whether team got first blood",
        "type" : "boolean"
      },
      "LoLTeamGotFirstDragon" : {
        "description" : "For League-of-Legends: whether team got first dragon",
        "type" : "boolean"
      },
      "LoLTeamGotFirstHerald" : {
        "description" : "For League-of-Legends: whether team got first herald",
        "type" : "boolean"
      },
      "LoLTeamGotFirstInhibitor" : {
        "description" : "For League-of-Legends: whether team got first inhibitor",
        "type" : "boolean"
      },
      "LoLTeamGotFirstTower" : {
        "description" : "For League-of-Legends: whether team got first tower",
        "type" : "boolean"
      },
      "LoLTeamKills" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "LoLTowerKills" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "LoLVersionName" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "Market" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/MarketID"
          },
          "line" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MarketLine"
            } ],
            "deprecated" : false,
            "title" : "MarketLine"
          },
          "margin" : {
            "$ref" : "#/components/schemas/MarketMargin"
          },
          "name" : {
            "$ref" : "#/components/schemas/MarketName"
          },
          "participant_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "participant_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          },
          "selections" : {
            "$ref" : "#/components/schemas/MarketSelections"
          },
          "status" : {
            "$ref" : "#/components/schemas/MarketStatus"
          },
          "template" : {
            "$ref" : "#/components/schemas/MarketTemplate"
          }
        },
        "required" : [ "id", "line", "margin", "name", "participant_id", "participant_type", "selections", "status", "template" ],
        "type" : "object"
      },
      "MarketID" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "MarketLine" : {
        "type" : "string"
      },
      "MarketMargin" : {
        "minimum" : 0,
        "type" : "number"
      },
      "MarketName" : {
        "type" : "string"
      },
      "MarketSelection" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "line" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SelectionLine"
            } ],
            "deprecated" : false,
            "title" : "SelectionLine"
          },
          "name" : {
            "$ref" : "#/components/schemas/SelectionName"
          },
          "participant_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "participant_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          },
          "position" : {
            "$ref" : "#/components/schemas/SelectionPosition"
          },
          "probability" : {
            "$ref" : "#/components/schemas/SelectionProbability"
          },
          "probability_with_margin" : {
            "$ref" : "#/components/schemas/SelectionProbabilityWithMargin"
          },
          "result" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SelectionResult"
            } ],
            "deprecated" : false,
            "title" : "SelectionResult"
          },
          "template" : {
            "$ref" : "#/components/schemas/SelectionTemplate"
          }
        },
        "required" : [ "line", "name", "participant_id", "participant_type", "position", "probability", "probability_with_margin", "result", "template" ],
        "type" : "object"
      },
      "MarketSelections" : {
        "items" : {
          "$ref" : "#/components/schemas/MarketSelection"
        },
        "type" : "array"
      },
      "MarketStatus" : {
        "enum" : [ "deactivated", "new", "settled", "suspended" ],
        "type" : "string"
      },
      "MarketTemplate" : {
        "type" : "string"
      },
      "Markets" : {
        "items" : {
          "$ref" : "#/components/schemas/Market"
        },
        "type" : "array"
      },
      "MarketsCreated" : {
        "description" : "Whether markets has been created",
        "type" : "boolean"
      },
      "MarketsUpdatedAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "Match" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchBeginAt"
            } ],
            "deprecated" : false,
            "title" : "MatchBeginAt"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/MatchDetailedStats"
          },
          "draw" : {
            "$ref" : "#/components/schemas/MatchIsDraw"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchEndAt"
            } ],
            "deprecated" : false,
            "title" : "MatchEndAt"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/MatchIsForfeit"
          },
          "game_advantage" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "games" : {
            "$ref" : "#/components/schemas/Games"
          },
          "id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "league" : {
            "$ref" : "#/components/schemas/BaseLeague"
          },
          "league_id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "live" : {
            "$ref" : "#/components/schemas/MatchLive"
          },
          "live_embed_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchEmbedLiveVideoURLDeprecated"
            } ],
            "deprecated" : true,
            "title" : "MatchEmbedLiveVideoURLDeprecated"
          },
          "match_type" : {
            "$ref" : "#/components/schemas/MatchType"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/MatchModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/MatchName"
          },
          "number_of_games" : {
            "$ref" : "#/components/schemas/GameCount"
          },
          "official_stream_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchOfficialStreamURL"
            } ],
            "deprecated" : true,
            "title" : "MatchOfficialStreamURL"
          },
          "opponents" : {
            "$ref" : "#/components/schemas/Opponents"
          },
          "original_scheduled_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchOriginalScheduledAt"
            } ],
            "deprecated" : false,
            "title" : "MatchOriginalScheduledAt"
          },
          "rescheduled" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchIsRescheduled"
            } ],
            "deprecated" : false,
            "title" : "MatchIsRescheduled"
          },
          "results" : {
            "$ref" : "#/components/schemas/MatchResults"
          },
          "scheduled_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchScheduledAt"
            } ],
            "deprecated" : false,
            "title" : "MatchScheduledAt"
          },
          "serie" : {
            "$ref" : "#/components/schemas/BaseSerie"
          },
          "serie_id" : {
            "$ref" : "#/components/schemas/SerieID"
          },
          "slug" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchSlug"
            } ],
            "deprecated" : false,
            "title" : "MatchSlug"
          },
          "status" : {
            "$ref" : "#/components/schemas/MatchStatus"
          },
          "streams" : {
            "$ref" : "#/components/schemas/MatchLocalizedStreams"
          },
          "streams_list" : {
            "$ref" : "#/components/schemas/StreamsList"
          },
          "tournament" : {
            "$ref" : "#/components/schemas/BaseTournament"
          },
          "tournament_id" : {
            "$ref" : "#/components/schemas/TournamentID"
          },
          "videogame" : {
            "$ref" : "#/components/schemas/CurrentVideogame"
          },
          "videogame_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/ShortVideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "ShortVideogameVersion"
          },
          "winner" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/BaseOpponent"
            } ],
            "deprecated" : false,
            "title" : "BaseOpponent"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          }
        },
        "required" : [ "begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "league", "league_id", "live", "live_embed_url", "match_type", "modified_at", "name", "number_of_games", "official_stream_url", "opponents", "original_scheduled_at", "rescheduled", "results", "scheduled_at", "serie", "serie_id", "slug", "status", "streams", "streams_list", "tournament", "tournament_id", "videogame", "videogame_version", "winner", "winner_id" ],
        "type" : "object"
      },
      "MatchBeginAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "MatchBookable" : {
        "description" : "Whether match can be booked",
        "type" : "boolean"
      },
      "MatchBooked" : {
        "description" : "Whether match has been booked",
        "type" : "boolean"
      },
      "MatchCount" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "MatchDetailedStats" : {
        "description" : "Whether the match offers full stats",
        "type" : "boolean"
      },
      "MatchEmbedLiveVideoURL" : {
        "format" : "uri",
        "type" : "string"
      },
      "MatchEmbedLiveVideoURLDeprecated" : {
        "description" : "Use `.streams.official.embed_url` instead",
        "format" : "uri",
        "type" : "string"
      },
      "MatchEndAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "MatchID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "MatchIDOrSlug" : {
        "description" : "A match ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MatchID"
        }, {
          "$ref" : "#/components/schemas/MatchSlug"
        } ]
      },
      "MatchIsDraw" : {
        "description" : "Whether result of the match is a draw",
        "type" : "boolean"
      },
      "MatchIsForfeit" : {
        "description" : "Whether match was forfeited",
        "type" : "boolean"
      },
      "MatchIsRescheduled" : {
        "description" : "Whether match has been rescheduled",
        "type" : "boolean"
      },
      "MatchLive" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "opens_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchLiveOpensAt"
            } ],
            "deprecated" : false,
            "title" : "MatchLiveOpensAt"
          },
          "supported" : {
            "$ref" : "#/components/schemas/MatchLiveIsSupported"
          },
          "url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchLiveURL"
            } ],
            "deprecated" : false,
            "title" : "MatchLiveURL"
          }
        },
        "required" : [ "opens_at", "supported", "url" ],
        "type" : "object"
      },
      "MatchLiveAvailable" : {
        "description" : "Whether live is available",
        "type" : "boolean"
      },
      "MatchLiveIsSupported" : {
        "description" : "Whether live is supported",
        "type" : "boolean"
      },
      "MatchLiveOpensAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "MatchLiveURL" : {
        "format" : "uri",
        "type" : "string"
      },
      "MatchLiveVideoRawURL" : {
        "format" : "uri",
        "type" : "string"
      },
      "MatchLocalizedStream" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "embed_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchEmbedLiveVideoURL"
            } ],
            "deprecated" : false,
            "title" : "MatchEmbedLiveVideoURL"
          },
          "raw_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/MatchLiveVideoRawURL"
            } ],
            "deprecated" : false,
            "title" : "MatchLiveVideoRawURL"
          }
        },
        "required" : [ "embed_url", "raw_url" ],
        "type" : "object"
      },
      "MatchLocalizedStreams" : {
        "additionalProperties" : false,
        "deprecated" : true,
        "properties" : {
          "english" : {
            "$ref" : "#/components/schemas/MatchLocalizedStream"
          },
          "official" : {
            "$ref" : "#/components/schemas/MatchLocalizedStream"
          },
          "russian" : {
            "$ref" : "#/components/schemas/MatchLocalizedStream"
          }
        },
        "required" : [ "english", "official", "russian" ],
        "type" : "object"
      },
      "MatchMarketGame" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/GameID"
          },
          "markets" : {
            "$ref" : "#/components/schemas/Markets"
          }
        },
        "required" : [ "id", "markets" ],
        "type" : "object"
      },
      "MatchMarketGames" : {
        "items" : {
          "$ref" : "#/components/schemas/MatchMarketGame"
        },
        "type" : "array"
      },
      "MatchMarkets" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "games" : {
            "$ref" : "#/components/schemas/MatchMarketGames"
          },
          "id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "markets" : {
            "$ref" : "#/components/schemas/Markets"
          }
        },
        "required" : [ "games", "id", "markets" ],
        "type" : "object"
      },
      "MatchModifiedAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "MatchName" : {
        "type" : "string"
      },
      "MatchOfficialStreamURL" : {
        "description" : "Use `.streams.official.raw_url` instead",
        "format" : "uri",
        "type" : "string"
      },
      "MatchOpponentBasePlayer" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "birth_year" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerBirthYear"
            } ],
            "deprecated" : false,
            "title" : "PlayerBirthYear"
          },
          "birthday" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerBirthday"
            } ],
            "deprecated" : false,
            "title" : "PlayerBirthday"
          },
          "current_videogame" : {
            "$ref" : "#/components/schemas/CurrentVideogame"
          },
          "first_name" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerFirstName"
            } ],
            "deprecated" : false,
            "title" : "PlayerFirstName"
          },
          "hometown" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerHometown"
            } ],
            "deprecated" : false,
            "title" : "PlayerHometown"
          },
          "id" : {
            "$ref" : "#/components/schemas/PlayerID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerImageURL"
            } ],
            "deprecated" : false,
            "title" : "PlayerImageURL"
          },
          "last_name" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerLastName"
            } ],
            "deprecated" : false,
            "title" : "PlayerLastName"
          },
          "name" : {
            "$ref" : "#/components/schemas/PlayerName"
          },
          "nationality" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerNationality"
            } ],
            "deprecated" : false,
            "title" : "PlayerNationality"
          },
          "role" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerRoleSlug"
            } ],
            "deprecated" : false,
            "title" : "PlayerRoleSlug"
          },
          "slug" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerSlug"
            } ],
            "deprecated" : false,
            "title" : "PlayerSlug"
          }
        },
        "required" : [ "birth_year", "birthday", "current_videogame", "first_name", "hometown", "id", "image_url", "last_name", "name", "nationality", "role", "slug" ],
        "type" : "object"
      },
      "MatchOpponentBasePlayers" : {
        "description" : "A list of players",
        "items" : {
          "$ref" : "#/components/schemas/MatchOpponentBasePlayer"
        },
        "type" : "array"
      },
      "MatchOpponentsObject" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MatchTeamOpponentsObject"
        }, {
          "$ref" : "#/components/schemas/MatchPlayerOpponentsObject"
        } ]
      },
      "MatchOriginalScheduledAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "MatchPandaScoreReviewed" : {
        "description" : "Whether PandaScore reviewed the match",
        "type" : "boolean"
      },
      "MatchPlayerOpponentsObject" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "opponent_type" : {
            "$ref" : "#/components/schemas/OpponentTypePlayer"
          },
          "opponents" : {
            "$ref" : "#/components/schemas/MatchOpponentBasePlayers"
          }
        },
        "required" : [ "opponent_type", "opponents" ],
        "type" : "object"
      },
      "MatchPlayerResult" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "player_id" : {
            "$ref" : "#/components/schemas/PlayerID"
          },
          "score" : {
            "$ref" : "#/components/schemas/MatchScore"
          }
        },
        "required" : [ "player_id", "score" ],
        "type" : "object"
      },
      "MatchResult" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/MatchTeamResult"
        }, {
          "$ref" : "#/components/schemas/MatchPlayerResult"
        } ]
      },
      "MatchResults" : {
        "items" : {
          "$ref" : "#/components/schemas/MatchResult"
        },
        "type" : "array"
      },
      "MatchScheduledAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "MatchScore" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "MatchSettled" : {
        "description" : "Whether match has been settled",
        "type" : "boolean"
      },
      "MatchSlug" : {
        "minLength" : 1,
        "pattern" : "^[ a-zA-Z0-9_-]+$",
        "type" : "string"
      },
      "MatchStatus" : {
        "enum" : [ "canceled", "finished", "not_started", "postponed", "running" ],
        "type" : "string"
      },
      "MatchTeamOpponentsObject" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "opponent_type" : {
            "$ref" : "#/components/schemas/OpponentTypeTeam"
          },
          "opponents" : {
            "$ref" : "#/components/schemas/Teams"
          }
        },
        "required" : [ "opponent_type", "opponents" ],
        "type" : "object"
      },
      "MatchTeamResult" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "score" : {
            "$ref" : "#/components/schemas/MatchScore"
          },
          "team_id" : {
            "$ref" : "#/components/schemas/TeamID"
          }
        },
        "required" : [ "score", "team_id" ],
        "type" : "object"
      },
      "MatchType" : {
        "enum" : [ "best_of", "custom", "first_to", "ow_best_of" ],
        "type" : "string"
      },
      "Matches" : {
        "items" : {
          "$ref" : "#/components/schemas/Match"
        },
        "type" : "array"
      },
      "NonDeletionIncident" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/IncidentOfTypeLeague"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypeMatch"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypePlayer"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypeSerie"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypeTeam"
        }, {
          "$ref" : "#/components/schemas/IncidentOfTypeTournament"
        } ]
      },
      "Opponent" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "opponent" : {
            "$ref" : "#/components/schemas/BaseOpponent"
          },
          "type" : {
            "$ref" : "#/components/schemas/OpponentType"
          }
        },
        "required" : [ "opponent", "type" ],
        "type" : "object"
      },
      "OpponentID" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/PlayerID"
        }, {
          "$ref" : "#/components/schemas/TeamID"
        } ]
      },
      "OpponentType" : {
        "enum" : [ "Player", "Team" ],
        "type" : "string"
      },
      "OpponentTypePlayer" : {
        "enum" : [ "Player" ],
        "type" : "string"
      },
      "OpponentTypeTeam" : {
        "enum" : [ "Team" ],
        "type" : "string"
      },
      "Opponents" : {
        "items" : {
          "$ref" : "#/components/schemas/Opponent"
        },
        "type" : "array"
      },
      "OwGameID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "OwHeroID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "OwHeroIDOrSlug" : {
        "description" : "For Overwatch: a hero ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/OwHeroID"
        }, {
          "$ref" : "#/components/schemas/OwHeroSlug"
        } ]
      },
      "OwHeroSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "OwMapID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "OwMapIDOrSlug" : {
        "description" : "For Overwatch: a map ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/OwMapID"
        }, {
          "$ref" : "#/components/schemas/OwMapSlug"
        } ]
      },
      "OwMapSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "PUBGGameID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "Player" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "birth_year" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerBirthYear"
            } ],
            "deprecated" : false,
            "title" : "PlayerBirthYear"
          },
          "birthday" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerBirthday"
            } ],
            "deprecated" : false,
            "title" : "PlayerBirthday"
          },
          "current_team" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/BaseTeam"
            } ],
            "deprecated" : false,
            "title" : "BaseTeam"
          },
          "current_videogame" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/CurrentVideogame"
            } ],
            "deprecated" : false,
            "title" : "CurrentVideogame"
          },
          "first_name" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerFirstName"
            } ],
            "deprecated" : false,
            "title" : "PlayerFirstName"
          },
          "hometown" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerHometown"
            } ],
            "deprecated" : false,
            "title" : "PlayerHometown"
          },
          "id" : {
            "$ref" : "#/components/schemas/PlayerID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerImageURL"
            } ],
            "deprecated" : false,
            "title" : "PlayerImageURL"
          },
          "last_name" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerLastName"
            } ],
            "deprecated" : false,
            "title" : "PlayerLastName"
          },
          "name" : {
            "$ref" : "#/components/schemas/PlayerName"
          },
          "nationality" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerNationality"
            } ],
            "deprecated" : false,
            "title" : "PlayerNationality"
          },
          "role" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerRoleSlug"
            } ],
            "deprecated" : false,
            "title" : "PlayerRoleSlug"
          },
          "slug" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/PlayerSlug"
            } ],
            "deprecated" : false,
            "title" : "PlayerSlug"
          }
        },
        "required" : [ "current_team", "current_videogame", "first_name", "hometown", "id", "image_url", "last_name", "name", "nationality", "role", "slug" ],
        "type" : "object"
      },
      "PlayerBirthYear" : {
        "description" : "Not present if the client did not subscribe to the appropriate plan.",
        "minimum" : 0,
        "type" : "number"
      },
      "PlayerBirthday" : {
        "description" : "Not present if the client did not subscribe to the appropriate plan.",
        "type" : "string"
      },
      "PlayerFirstName" : {
        "type" : "string"
      },
      "PlayerHometown" : {
        "type" : "string"
      },
      "PlayerID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "PlayerIDOrSlug" : {
        "description" : "A player ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PlayerID"
        }, {
          "$ref" : "#/components/schemas/PlayerSlug"
        } ]
      },
      "PlayerImageURL" : {
        "format" : "uri",
        "type" : "string"
      },
      "PlayerLastName" : {
        "type" : "string"
      },
      "PlayerName" : {
        "type" : "string"
      },
      "PlayerNationality" : {
        "type" : "string"
      },
      "PlayerRoleSlug" : {
        "type" : "string"
      },
      "PlayerSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "Players" : {
        "items" : {
          "$ref" : "#/components/schemas/Player"
        },
        "type" : "array"
      },
      "PreviousMatch" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "match_id" : {
            "$ref" : "#/components/schemas/MatchID"
          },
          "type" : {
            "$ref" : "#/components/schemas/PreviousMatchType"
          }
        },
        "required" : [ "match_id", "type" ],
        "type" : "object"
      },
      "PreviousMatchType" : {
        "enum" : [ "loser", "winner" ],
        "type" : "string"
      },
      "PreviousMatches" : {
        "items" : {
          "$ref" : "#/components/schemas/PreviousMatch"
        },
        "type" : "array"
      },
      "SelectionLine" : {
        "type" : "string"
      },
      "SelectionName" : {
        "type" : "string"
      },
      "SelectionPosition" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "SelectionProbability" : {
        "maximum" : 1,
        "minimum" : 0,
        "type" : "number"
      },
      "SelectionProbabilityWithMargin" : {
        "maximum" : 1,
        "minimum" : 0,
        "type" : "number"
      },
      "SelectionResult" : {
        "enum" : [ "lose", "void", "win" ],
        "type" : "string"
      },
      "SelectionTemplate" : {
        "type" : "string"
      },
      "Serie" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "A serie, an occurrence of a league event",
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieBeginAt"
            } ],
            "deprecated" : false,
            "title" : "SerieBeginAt"
          },
          "description" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieDescription"
            } ],
            "deprecated" : false,
            "title" : "SerieDescription"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieEndAt"
            } ],
            "deprecated" : false,
            "title" : "SerieEndAt"
          },
          "full_name" : {
            "$ref" : "#/components/schemas/SerieFullName"
          },
          "id" : {
            "$ref" : "#/components/schemas/SerieID"
          },
          "league" : {
            "$ref" : "#/components/schemas/BaseLeague"
          },
          "league_id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/SerieModifiedAt"
          },
          "name" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieName"
            } ],
            "deprecated" : false,
            "title" : "SerieName"
          },
          "season" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieSeason"
            } ],
            "deprecated" : false,
            "title" : "SerieSeason"
          },
          "slug" : {
            "$ref" : "#/components/schemas/SerieSlug"
          },
          "tier" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/SerieTier"
            } ],
            "deprecated" : false,
            "title" : "SerieTier"
          },
          "tournaments" : {
            "$ref" : "#/components/schemas/BaseTournaments"
          },
          "videogame" : {
            "$ref" : "#/components/schemas/CurrentVideogame"
          },
          "videogame_title" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameTitle"
            } ],
            "deprecated" : false,
            "title" : "VideogameTitle"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          },
          "year" : {
            "$ref" : "#/components/schemas/SerieYear"
          }
        },
        "required" : [ "begin_at", "description", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tier", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year" ],
        "type" : "object"
      },
      "SerieBeginAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "SerieDescription" : {
        "type" : "string"
      },
      "SerieEndAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "SerieFullName" : {
        "type" : "string"
      },
      "SerieID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "SerieIDOrSlug" : {
        "description" : "A serie ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SerieID"
        }, {
          "$ref" : "#/components/schemas/SerieSlug"
        } ]
      },
      "SerieModifiedAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "SerieName" : {
        "type" : "string"
      },
      "SerieSeason" : {
        "type" : "string"
      },
      "SerieSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "SerieTier" : {
        "type" : "string"
      },
      "SerieYear" : {
        "minimum" : 2012,
        "type" : "integer"
      },
      "Series" : {
        "items" : {
          "$ref" : "#/components/schemas/Serie"
        },
        "type" : "array"
      },
      "ShortTournament" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentBeginAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentBeginAt"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentEndAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentEndAt"
          },
          "id" : {
            "$ref" : "#/components/schemas/TournamentID"
          },
          "league" : {
            "$ref" : "#/components/schemas/BaseLeague"
          },
          "league_id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "live_supported" : {
            "$ref" : "#/components/schemas/TournamentLiveSupported"
          },
          "matches" : {
            "$ref" : "#/components/schemas/BaseMatches"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/TournamentModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/TournamentName"
          },
          "prizepool" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentPrizepool"
            } ],
            "deprecated" : false,
            "title" : "TournamentPrizepool"
          },
          "serie" : {
            "$ref" : "#/components/schemas/BaseSerie"
          },
          "serie_id" : {
            "$ref" : "#/components/schemas/SerieID"
          },
          "slug" : {
            "$ref" : "#/components/schemas/TournamentSlug"
          },
          "teams" : {
            "$ref" : "#/components/schemas/BaseTeams"
          },
          "videogame" : {
            "$ref" : "#/components/schemas/CurrentVideogame"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "end_at", "id", "league", "league_id", "live_supported", "matches", "modified_at", "name", "prizepool", "serie", "serie_id", "slug", "teams", "videogame", "winner_id", "winner_type" ],
        "type" : "object"
      },
      "ShortTournaments" : {
        "items" : {
          "$ref" : "#/components/schemas/ShortTournament"
        },
        "type" : "array"
      },
      "ShortVideogameVersion" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/VideogameVersionIsCurrent"
          },
          "name" : {
            "$ref" : "#/components/schemas/VideogameVersion"
          }
        },
        "required" : [ "current", "name" ],
        "type" : "object"
      },
      "ShortVideogameVersions" : {
        "items" : {
          "$ref" : "#/components/schemas/ShortVideogameVersion"
        },
        "type" : "array"
      },
      "Standing" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BracketStanding"
        }, {
          "$ref" : "#/components/schemas/GroupStanding"
        } ]
      },
      "StandingLosses" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "StandingRank" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "StandingTies" : {
        "description" : "Only present if ties occured during the tournament",
        "minimum" : 1,
        "type" : "integer"
      },
      "Standings" : {
        "items" : {
          "$ref" : "#/components/schemas/Standing"
        },
        "type" : "array"
      },
      "Stream" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "embed_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/StreamEmbedURL"
            } ],
            "deprecated" : false,
            "title" : "StreamEmbedURL"
          },
          "language" : {
            "$ref" : "#/components/schemas/StreamLanguage"
          },
          "main" : {
            "$ref" : "#/components/schemas/StreamIsMain"
          },
          "official" : {
            "$ref" : "#/components/schemas/StreamIsOfficial"
          },
          "raw_url" : {
            "$ref" : "#/components/schemas/StreamURL"
          }
        },
        "required" : [ "embed_url", "language", "main", "official", "raw_url" ],
        "type" : "object"
      },
      "StreamEmbedURL" : {
        "description" : "URL to embed in an iframe.",
        "format" : "uri",
        "type" : "string"
      },
      "StreamIsMain" : {
        "description" : "Whether it is the main stream. Main stream is always official.",
        "type" : "boolean"
      },
      "StreamIsOfficial" : {
        "description" : "Whether it is an official broadcast.",
        "type" : "boolean"
      },
      "StreamLanguage" : {
        "description" : "Language alpha-2 code according to ISO 649-1 standard.",
        "enum" : [ "aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu" ],
        "type" : "string"
      },
      "StreamURL" : {
        "description" : "URL to the stream on host website.",
        "format" : "uri",
        "type" : "string"
      },
      "StreamsList" : {
        "items" : {
          "$ref" : "#/components/schemas/Stream"
        },
        "type" : "array"
      },
      "Team" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "acronym" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TeamAcronym"
            } ],
            "deprecated" : false,
            "title" : "TeamAcronym"
          },
          "current_videogame" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/CurrentVideogame"
            } ],
            "deprecated" : false,
            "title" : "CurrentVideogame"
          },
          "id" : {
            "$ref" : "#/components/schemas/TeamID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TeamImageURL"
            } ],
            "deprecated" : false,
            "title" : "TeamImageURL"
          },
          "location" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TeamLocation"
            } ],
            "deprecated" : false,
            "title" : "TeamLocation"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/TeamModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/TeamName"
          },
          "players" : {
            "$ref" : "#/components/schemas/BasePlayers"
          },
          "slug" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TeamSlug"
            } ],
            "deprecated" : false,
            "title" : "TeamSlug"
          }
        },
        "required" : [ "acronym", "current_videogame", "id", "image_url", "location", "modified_at", "name", "players", "slug" ],
        "type" : "object"
      },
      "TeamAcronym" : {
        "type" : "string"
      },
      "TeamID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "TeamIDOrSlug" : {
        "description" : "A team ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TeamID"
        }, {
          "$ref" : "#/components/schemas/TeamSlug"
        } ]
      },
      "TeamImageURL" : {
        "format" : "uri",
        "type" : "string"
      },
      "TeamLocation" : {
        "description" : "The team's organization location",
        "type" : "string"
      },
      "TeamModifiedAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "TeamName" : {
        "type" : "string"
      },
      "TeamSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "Teams" : {
        "description" : "A list of teams",
        "items" : {
          "$ref" : "#/components/schemas/Team"
        },
        "type" : "array"
      },
      "Tournament" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "begin_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentBeginAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentBeginAt"
          },
          "end_at" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentEndAt"
            } ],
            "deprecated" : false,
            "title" : "TournamentEndAt"
          },
          "expected_roster" : {
            "$ref" : "#/components/schemas/TournamentRosterItems"
          },
          "id" : {
            "$ref" : "#/components/schemas/TournamentID"
          },
          "league" : {
            "$ref" : "#/components/schemas/BaseLeague"
          },
          "league_id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "live_supported" : {
            "$ref" : "#/components/schemas/TournamentLiveSupported"
          },
          "matches" : {
            "$ref" : "#/components/schemas/BaseMatches"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/TournamentModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/TournamentName"
          },
          "prizepool" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/TournamentPrizepool"
            } ],
            "deprecated" : false,
            "title" : "TournamentPrizepool"
          },
          "serie" : {
            "$ref" : "#/components/schemas/BaseSerie"
          },
          "serie_id" : {
            "$ref" : "#/components/schemas/SerieID"
          },
          "slug" : {
            "$ref" : "#/components/schemas/TournamentSlug"
          },
          "teams" : {
            "$ref" : "#/components/schemas/BaseTeams"
          },
          "videogame" : {
            "$ref" : "#/components/schemas/CurrentVideogame"
          },
          "winner_id" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentID"
            } ],
            "deprecated" : false,
            "title" : "OpponentID"
          },
          "winner_type" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/OpponentType"
            } ],
            "deprecated" : false,
            "title" : "OpponentType"
          }
        },
        "required" : [ "begin_at", "end_at", "expected_roster", "id", "league", "league_id", "live_supported", "matches", "modified_at", "name", "prizepool", "serie", "serie_id", "slug", "teams", "videogame", "winner_id", "winner_type" ],
        "type" : "object"
      },
      "TournamentBeginAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "TournamentEndAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "TournamentID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "TournamentIDOrSlug" : {
        "description" : "A tournament ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TournamentID"
        }, {
          "$ref" : "#/components/schemas/TournamentSlug"
        } ]
      },
      "TournamentLiveSupported" : {
        "description" : "Whether live is supported",
        "type" : "boolean"
      },
      "TournamentModifiedAt" : {
        "format" : "date-time",
        "minLength" : 1,
        "type" : "string"
      },
      "TournamentName" : {
        "type" : "string"
      },
      "TournamentPlayerRosters" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "Rosters for a tournament with player participants",
        "properties" : {
          "rosters" : {
            "$ref" : "#/components/schemas/Players"
          },
          "type" : {
            "$ref" : "#/components/schemas/OpponentTypePlayer"
          }
        },
        "required" : [ "rosters", "type" ],
        "type" : "object"
      },
      "TournamentPrizepool" : {
        "type" : "string"
      },
      "TournamentRosterItem" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "players" : {
            "$ref" : "#/components/schemas/BasePlayers"
          },
          "team" : {
            "$ref" : "#/components/schemas/BaseTeam"
          }
        },
        "required" : [ "players", "team" ],
        "type" : "object"
      },
      "TournamentRosterItems" : {
        "items" : {
          "$ref" : "#/components/schemas/TournamentRosterItem"
        },
        "type" : "array"
      },
      "TournamentRosters" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TournamentTeamRosters"
        }, {
          "$ref" : "#/components/schemas/TournamentPlayerRosters"
        } ]
      },
      "TournamentSlug" : {
        "minLength" : 1,
        "pattern" : "^[a-z0-9_-]+$",
        "type" : "string"
      },
      "TournamentTeamRosters" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "description" : "Rosters for a tournament with team participants",
        "properties" : {
          "rosters" : {
            "$ref" : "#/components/schemas/Teams"
          },
          "type" : {
            "$ref" : "#/components/schemas/OpponentTypeTeam"
          }
        },
        "required" : [ "rosters", "type" ],
        "type" : "object"
      },
      "Videogame" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Videogame_LoL"
        }, {
          "$ref" : "#/components/schemas/Videogame_CSGO"
        }, {
          "$ref" : "#/components/schemas/Videogame_Dota2"
        }, {
          "$ref" : "#/components/schemas/Videogame_Overwatch"
        }, {
          "$ref" : "#/components/schemas/Videogame_PUBG"
        }, {
          "$ref" : "#/components/schemas/Videogame_RocketLeague"
        }, {
          "$ref" : "#/components/schemas/Videogame_Codmw"
        }, {
          "$ref" : "#/components/schemas/Videogame_R6siege"
        }, {
          "$ref" : "#/components/schemas/Videogame_Fifa"
        }, {
          "$ref" : "#/components/schemas/Videogame_Valorant"
        } ]
      },
      "VideogameID" : {
        "description" : "A videogame ID",
        "enum" : [ 1, 3, 4, 14, 20, 22, 23, 24, 25, 26 ],
        "type" : "integer"
      },
      "VideogameIDOrSlug" : {
        "description" : "A videogame ID or slug",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/VideogameID"
        }, {
          "$ref" : "#/components/schemas/VideogameSlug"
        } ]
      },
      "VideogameLeague" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/LeagueID"
          },
          "image_url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LeagueImageURL"
            } ],
            "deprecated" : false,
            "title" : "LeagueImageURL"
          },
          "modified_at" : {
            "$ref" : "#/components/schemas/LeagueModifiedAt"
          },
          "name" : {
            "$ref" : "#/components/schemas/LeagueName"
          },
          "series" : {
            "$ref" : "#/components/schemas/BaseSeries"
          },
          "slug" : {
            "$ref" : "#/components/schemas/LeagueSlug"
          },
          "url" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/LeagueURL"
            } ],
            "deprecated" : false,
            "title" : "LeagueURL"
          }
        },
        "required" : [ "id", "image_url", "modified_at", "name", "series", "slug", "url" ],
        "type" : "object"
      },
      "VideogameLeagues" : {
        "items" : {
          "$ref" : "#/components/schemas/VideogameLeague"
        },
        "type" : "array"
      },
      "VideogameSlug" : {
        "description" : "A videogame slug",
        "enum" : [ "cod-mw", "cs-go", "dota-2", "fifa", "league-of-legends", "ow", "pubg", "r6-siege", "rl", "valorant" ],
        "type" : "string"
      },
      "VideogameTitle" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/VideogameTitleID"
          },
          "name" : {
            "$ref" : "#/components/schemas/VideogameTitleName"
          },
          "videogame_id" : {
            "$ref" : "#/components/schemas/VideogameID"
          }
        },
        "required" : [ "id", "name", "videogame_id" ],
        "type" : "object"
      },
      "VideogameTitleID" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "VideogameTitleName" : {
        "type" : "string"
      },
      "VideogameVersion" : {
        "pattern" : "^[0-9]+\\.[0-9]+\\.[0-9]+$",
        "type" : "string"
      },
      "VideogameVersionIsCurrent" : {
        "description" : "Whether this videogame version is current",
        "type" : "boolean"
      },
      "Videogame_CSGO" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 3 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "CS:GO" ]
          },
          "slug" : {
            "enum" : [ "cs-go" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogame_Codmw" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 23 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "Call of Duty" ]
          },
          "slug" : {
            "enum" : [ "cod-mw" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogame_Dota2" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 4 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "Dota 2" ]
          },
          "slug" : {
            "enum" : [ "dota-2" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogame_Fifa" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 25 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "FIFA" ]
          },
          "slug" : {
            "enum" : [ "fifa" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogame_LoL" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 1 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "LoL" ]
          },
          "slug" : {
            "enum" : [ "league-of-legends" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogame_Overwatch" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 14 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "Overwatch" ]
          },
          "slug" : {
            "enum" : [ "ow" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogame_PUBG" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 20 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "PUBG" ]
          },
          "slug" : {
            "enum" : [ "pubg" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogame_R6siege" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 24 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "Rainbow 6 Siege" ]
          },
          "slug" : {
            "enum" : [ "r6-siege" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogame_RocketLeague" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 22 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "Rocket League" ]
          },
          "slug" : {
            "enum" : [ "rl" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogame_Valorant" : {
        "additionalProperties" : false,
        "deprecated" : false,
        "properties" : {
          "current_version" : {
            "allOf" : [ {
              "nullable" : true
            }, {
              "$ref" : "#/components/schemas/VideogameVersion"
            } ],
            "deprecated" : false,
            "title" : "VideogameVersion"
          },
          "id" : {
            "enum" : [ 26 ]
          },
          "leagues" : {
            "$ref" : "#/components/schemas/VideogameLeagues"
          },
          "name" : {
            "enum" : [ "Valorant" ]
          },
          "slug" : {
            "enum" : [ "valorant" ]
          }
        },
        "required" : [ "current_version", "id", "leagues", "name", "slug" ],
        "type" : "object"
      },
      "Videogames" : {
        "items" : {
          "$ref" : "#/components/schemas/Videogame"
        },
        "type" : "array"
      },
      "filter_over_Brackets" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "begin_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchBeginAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/MatchDetailedStats"
          },
          "draw" : {
            "$ref" : "#/components/schemas/MatchIsDraw"
          },
          "end_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchEndAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/MatchIsForfeit"
          },
          "game_advantage" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "live_embed_url" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchEmbedLiveVideoURLDeprecated"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "match_type" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchType"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchModifiedAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchName"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "number_of_games" : {
            "items" : {
              "$ref" : "#/components/schemas/GameCount"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "official_stream_url" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchOfficialStreamURL"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "original_scheduled_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchOriginalScheduledAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "scheduled_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchScheduledAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "status" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchStatus"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "tournament_id" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "winner_id" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "filter_over_Leagues" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueModifiedAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueName"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "url" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueURL"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "filter_over_Matches" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "begin_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchBeginAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "detailed_stats" : {
            "$ref" : "#/components/schemas/MatchDetailedStats"
          },
          "draw" : {
            "$ref" : "#/components/schemas/MatchIsDraw"
          },
          "end_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchEndAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "finished" : {
            "type" : "boolean"
          },
          "forfeit" : {
            "$ref" : "#/components/schemas/MatchIsForfeit"
          },
          "future" : {
            "type" : "boolean"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "league_id" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "match_type" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchType"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchModifiedAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchName"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "not_started" : {
            "type" : "boolean"
          },
          "number_of_games" : {
            "items" : {
              "$ref" : "#/components/schemas/GameCount"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "opponent_id" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamIDOrSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "past" : {
            "type" : "boolean"
          },
          "running" : {
            "type" : "boolean"
          },
          "scheduled_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchScheduledAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "serie_id" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "status" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchStatus"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "tournament_id" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "unscheduled" : {
            "type" : "boolean"
          },
          "videogame" : {
            "items" : {
              "$ref" : "#/components/schemas/VideogameIDOrSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "winner_id" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "filter_over_Players" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "birth_year" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerBirthYear"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "birthday" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerBirthday"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "first_name" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerFirstName"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "hometown" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerHometown"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "last_name" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerLastName"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerName"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "nationality" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerNationality"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "role" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerRoleSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "team_id" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "videogame_id" : {
            "items" : {
              "$ref" : "#/components/schemas/VideogameID"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "filter_over_Series" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "begin_at" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieBeginAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "description" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieDescription"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "end_at" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieEndAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "league_id" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieModifiedAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieName"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "season" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieSeason"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "tier" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieTier"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "winner_id" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "winner_type" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentType"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "year" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieYear"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "filter_over_ShortTournaments" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "begin_at" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentBeginAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "end_at" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentEndAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "live_supported" : {
            "$ref" : "#/components/schemas/TournamentLiveSupported"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentModifiedAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentName"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "prizepool" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentPrizepool"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "serie_id" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "winner_id" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "winner_type" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentType"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "filter_over_ShortVideogameVersions" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/VideogameVersionIsCurrent"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/VideogameVersion"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "filter_over_Teams" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "acronym" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamAcronym"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamID"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "location" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamLocation"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamModifiedAt"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamName"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamSlug"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "videogame_id" : {
            "items" : {
              "$ref" : "#/components/schemas/VideogameID"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "range_over_Brackets" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "begin_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchBeginAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "detailed_stats" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchDetailedStats"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "draw" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchIsDraw"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "end_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchEndAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "forfeit" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchIsForfeit"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "game_advantage" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "live_embed_url" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchEmbedLiveVideoURLDeprecated"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "match_type" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchType"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchModifiedAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchName"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "number_of_games" : {
            "items" : {
              "$ref" : "#/components/schemas/GameCount"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "official_stream_url" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchOfficialStreamURL"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "original_scheduled_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchOriginalScheduledAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "scheduled_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchScheduledAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchSlug"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "status" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchStatus"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "tournament_id" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "winner_id" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "range_over_Leagues" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueModifiedAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueName"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueSlug"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "url" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueURL"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "range_over_Matches" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "begin_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchBeginAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "detailed_stats" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchDetailedStats"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "draw" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchIsDraw"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "end_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchEndAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "forfeit" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchIsForfeit"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "match_type" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchType"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchModifiedAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchName"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "number_of_games" : {
            "items" : {
              "$ref" : "#/components/schemas/GameCount"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "scheduled_at" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchScheduledAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchSlug"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "status" : {
            "items" : {
              "$ref" : "#/components/schemas/MatchStatus"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "tournament_id" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "winner_id" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "range_over_Players" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "birth_year" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerBirthYear"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "birthday" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerBirthday"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "first_name" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerFirstName"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "hometown" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerHometown"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "last_name" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerLastName"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerName"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "nationality" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerNationality"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "role" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerRoleSlug"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/PlayerSlug"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "range_over_Series" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "begin_at" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieBeginAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "description" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieDescription"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "end_at" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieEndAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "league_id" : {
            "items" : {
              "$ref" : "#/components/schemas/LeagueID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieModifiedAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieName"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "season" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieSeason"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieSlug"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "tier" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieTier"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "winner_id" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "winner_type" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentType"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "year" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieYear"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "range_over_ShortTournaments" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "begin_at" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentBeginAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "end_at" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentEndAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentModifiedAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentName"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "prizepool" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentPrizepool"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "serie_id" : {
            "items" : {
              "$ref" : "#/components/schemas/SerieID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/TournamentSlug"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "winner_id" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "winner_type" : {
            "items" : {
              "$ref" : "#/components/schemas/OpponentType"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "range_over_ShortVideogameVersions" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "current" : {
            "items" : {
              "$ref" : "#/components/schemas/VideogameVersionIsCurrent"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/VideogameVersion"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "range_over_Teams" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "acronym" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamAcronym"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "id" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamID"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "location" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamLocation"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "modified_at" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamModifiedAt"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "name" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamName"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          },
          "slug" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamSlug"
            },
            "maxItems" : 2,
            "minItems" : 2,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "search_over_Brackets" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "live_embed_url" : {
            "$ref" : "#/components/schemas/MatchEmbedLiveVideoURLDeprecated"
          },
          "match_type" : {
            "$ref" : "#/components/schemas/MatchType"
          },
          "name" : {
            "$ref" : "#/components/schemas/MatchName"
          },
          "official_stream_url" : {
            "$ref" : "#/components/schemas/MatchOfficialStreamURL"
          },
          "slug" : {
            "$ref" : "#/components/schemas/MatchSlug"
          },
          "status" : {
            "$ref" : "#/components/schemas/MatchStatus"
          }
        },
        "type" : "object"
      },
      "search_over_Leagues" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/LeagueName"
          },
          "slug" : {
            "$ref" : "#/components/schemas/LeagueSlug"
          },
          "url" : {
            "$ref" : "#/components/schemas/LeagueURL"
          }
        },
        "type" : "object"
      },
      "search_over_Matches" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "match_type" : {
            "$ref" : "#/components/schemas/MatchType"
          },
          "name" : {
            "$ref" : "#/components/schemas/MatchName"
          },
          "slug" : {
            "$ref" : "#/components/schemas/MatchSlug"
          },
          "status" : {
            "$ref" : "#/components/schemas/MatchStatus"
          }
        },
        "type" : "object"
      },
      "search_over_Players" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "birthday" : {
            "$ref" : "#/components/schemas/PlayerBirthday"
          },
          "first_name" : {
            "$ref" : "#/components/schemas/PlayerFirstName"
          },
          "hometown" : {
            "$ref" : "#/components/schemas/PlayerHometown"
          },
          "last_name" : {
            "$ref" : "#/components/schemas/PlayerLastName"
          },
          "name" : {
            "$ref" : "#/components/schemas/PlayerName"
          },
          "nationality" : {
            "$ref" : "#/components/schemas/PlayerNationality"
          },
          "role" : {
            "$ref" : "#/components/schemas/PlayerRoleSlug"
          },
          "slug" : {
            "$ref" : "#/components/schemas/PlayerSlug"
          }
        },
        "type" : "object"
      },
      "search_over_Series" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "description" : {
            "$ref" : "#/components/schemas/SerieDescription"
          },
          "name" : {
            "$ref" : "#/components/schemas/SerieName"
          },
          "season" : {
            "$ref" : "#/components/schemas/SerieSeason"
          },
          "slug" : {
            "$ref" : "#/components/schemas/SerieSlug"
          },
          "tier" : {
            "$ref" : "#/components/schemas/SerieTier"
          },
          "winner_type" : {
            "$ref" : "#/components/schemas/OpponentType"
          }
        },
        "type" : "object"
      },
      "search_over_ShortTournaments" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/TournamentName"
          },
          "prizepool" : {
            "$ref" : "#/components/schemas/TournamentPrizepool"
          },
          "slug" : {
            "$ref" : "#/components/schemas/TournamentSlug"
          },
          "winner_type" : {
            "$ref" : "#/components/schemas/OpponentType"
          }
        },
        "type" : "object"
      },
      "search_over_ShortVideogameVersions" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/VideogameVersion"
          }
        },
        "type" : "object"
      },
      "search_over_Teams" : {
        "additionalProperties" : false,
        "minProperties" : 1,
        "properties" : {
          "acronym" : {
            "$ref" : "#/components/schemas/TeamAcronym"
          },
          "location" : {
            "$ref" : "#/components/schemas/TeamLocation"
          },
          "name" : {
            "$ref" : "#/components/schemas/TeamName"
          },
          "slug" : {
            "$ref" : "#/components/schemas/TeamSlug"
          }
        },
        "type" : "object"
      },
      "sort_over_Brackets" : {
        "items" : {
          "enum" : [ "begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "draw", "-draw", "end_at", "-end_at", "forfeit", "-forfeit", "game_advantage", "-game_advantage", "id", "-id", "live_embed_url", "-live_embed_url", "match_type", "-match_type", "modified_at", "-modified_at", "name", "-name", "number_of_games", "-number_of_games", "official_stream_url", "-official_stream_url", "original_scheduled_at", "-original_scheduled_at", "scheduled_at", "-scheduled_at", "slug", "-slug", "status", "-status", "tournament_id", "-tournament_id", "winner_id", "-winner_id" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "sort_over_Leagues" : {
        "items" : {
          "enum" : [ "id", "-id", "modified_at", "-modified_at", "name", "-name", "slug", "-slug", "url", "-url" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "sort_over_Matches" : {
        "items" : {
          "enum" : [ "begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "draw", "-draw", "end_at", "-end_at", "forfeit", "-forfeit", "id", "-id", "match_type", "-match_type", "modified_at", "-modified_at", "name", "-name", "number_of_games", "-number_of_games", "scheduled_at", "-scheduled_at", "slug", "-slug", "status", "-status", "tournament_id", "-tournament_id", "winner_id", "-winner_id" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "sort_over_Players" : {
        "items" : {
          "enum" : [ "birth_year", "-birth_year", "birthday", "-birthday", "first_name", "-first_name", "hometown", "-hometown", "id", "-id", "last_name", "-last_name", "name", "-name", "nationality", "-nationality", "role", "-role", "slug", "-slug", "videogame_id", "-videogame_id", "team_id", "-team_id" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "sort_over_Series" : {
        "items" : {
          "enum" : [ "begin_at", "-begin_at", "description", "-description", "end_at", "-end_at", "id", "-id", "league_id", "-league_id", "modified_at", "-modified_at", "name", "-name", "season", "-season", "slug", "-slug", "tier", "-tier", "winner_id", "-winner_id", "winner_type", "-winner_type", "year", "-year" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "sort_over_ShortTournaments" : {
        "items" : {
          "enum" : [ "begin_at", "-begin_at", "end_at", "-end_at", "id", "-id", "modified_at", "-modified_at", "name", "-name", "prizepool", "-prizepool", "serie_id", "-serie_id", "slug", "-slug", "winner_id", "-winner_id", "winner_type", "-winner_type" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "sort_over_ShortVideogameVersions" : {
        "items" : {
          "enum" : [ "current", "-current", "name", "-name" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "sort_over_Teams" : {
        "items" : {
          "enum" : [ "acronym", "-acronym", "id", "-id", "location", "-location", "modified_at", "-modified_at", "name", "-name", "slug", "-slug", "videogame_id", "-videogame_id" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "type_over_AdditionIncidents" : {
        "items" : {
          "enum" : [ "league", "match", "player", "serie", "team", "tournament" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "type_over_ChangeIncidents" : {
        "items" : {
          "enum" : [ "league", "match", "player", "serie", "team", "tournament" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "type_over_DeletionIncidents" : {
        "items" : {
          "enum" : [ "league", "match", "player", "serie", "team", "tournament" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "type_over_Incidents" : {
        "items" : {
          "enum" : [ "league", "match", "player", "serie", "team", "tournament" ]
        },
        "minItems" : 1,
        "type" : "array"
      },
      "videogame_over_AdditionIncidents" : {
        "items" : {
          "$ref" : "#/components/schemas/VideogameIDOrSlug"
        },
        "minItems" : 1,
        "type" : "array"
      },
      "videogame_over_ChangeIncidents" : {
        "items" : {
          "$ref" : "#/components/schemas/VideogameIDOrSlug"
        },
        "minItems" : 1,
        "type" : "array"
      },
      "videogame_over_DeletionIncidents" : {
        "items" : {
          "$ref" : "#/components/schemas/VideogameIDOrSlug"
        },
        "minItems" : 1,
        "type" : "array"
      },
      "videogame_over_Incidents" : {
        "items" : {
          "$ref" : "#/components/schemas/VideogameIDOrSlug"
        },
        "minItems" : 1,
        "type" : "array"
      }
    },
    "securitySchemes" : {
      "BearerToken" : {
        "scheme" : "bearer",
        "type" : "http"
      },
      "QueryToken" : {
        "in" : "query",
        "name" : "token",
        "type" : "apiKey"
      }
    }
  },
  "x-logo" : {
    "altText" : "Pandascore logo",
    "backgroundColor" : "#FFFFFF",
    "url" : "https://pandascore.co/logo.png"
  },
  "x-tagGroups" : [ {
    "name" : "Meta",
    "tags" : [ "Incidents" ]
  }, {
    "name" : "All Videogames",
    "tags" : [ "Leagues", "Series", "Tournaments", "Matches", "Teams", "Players" ]
  }, {
    "name" : "Live",
    "tags" : [ "Lives" ]
  } ]
}