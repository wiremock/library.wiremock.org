{
  "mappings" : [ {
    "id" : "723394b9-9b6f-4161-a77b-b847ae9c71c7",
    "name" : "Creates a Serverless VPC Access connector, returns an operation.",
    "request" : {
      "urlPath" : "/v1/y4t2pgur1zn894dx33uplbwx6nlto0cqg5exlavhy/connectors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Elza Kuhlman\",\n  \"error\" : {\n    \"code\" : 26818691,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Quae quaerat ut ut rerum voluptatem quidem exercitationem. Id asperiores et suscipit. Ea non officia quidem quo eius.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "723394b9-9b6f-4161-a77b-b847ae9c71c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:13.442364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "854b0119-f408-487a-b74f-3d964caa586f",
    "name" : "Lists Serverless VPC Access connectors.",
    "request" : {
      "urlPath" : "/v1/s2i31prewcgqc12v3qhlgy3tve90ron21zna6nmkyozcsqtt42wdd4jjx69cot1sd49lv1k68hcq7kscg2x0e18ry6gbbzimt7ng6qpaox/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"connectors\" : [ {\n    \"connectedProjects\" : [ \"unyyqxlx1mpmxh9k6swfjn9lg1rhl28b1x2nxtk69wc\" ],\n    \"minInstances\" : 306925690,\n    \"subnet\" : {\n      \"name\" : \"Jon Batz\",\n      \"projectId\" : \"025q\"\n    },\n    \"minThroughput\" : 1663784447,\n    \"name\" : \"Kalyn Blick V\",\n    \"state\" : \"READY\",\n    \"maxInstances\" : 1817563166,\n    \"ipCidrRange\" : \"03zjlivpwdm8x8j64jq5tlu05cxzs8crbneo0ngtpgvmhqhurmhs91nhkitsjx64iagnuz7ouygf8f7mmyjwhetydpd\",\n    \"machineType\" : \"rnmp7g\",\n    \"maxThroughput\" : 411053139,\n    \"network\" : \"b6nzzexoulxs9yqhq0t0k6fbv0eg9klo90xdn92gp0zz9hbua91idmjzufz0l2rhxdvwqwl22kdcamj1ng2stlb3ixrjozq726tdnrnl65svkgzfe0e4vi82nlnnbjfyy3wqnfoddepc4c24ams\"\n  }, {\n    \"connectedProjects\" : [ \"yxdrgxchidu3fpk0xlki0wm3z8gs3nsoavg31kxef79sqvgkfkm6ivcs8sw52h2l3hlwe94hlmrviyy38dwpqu4p8\", \"ay3kpjk0fznbqm3lwyvvtw2y70sbml6z1n9kjm4jjsx8cwbc9i92mji6b10c\", \"700m745q7q1kx6ohqz3llf6qnimlieltmmz8c1dmfr6n1mi9q5kcxegjcvdh2gdc0vblogupackkq2yk3pzp2q1g6l3e8a90x3earx4lp9aof8b61ucm0c8t\", \"nrh0o4s8erihpr9pvuy7wvrbk13lkplzt0iuq8o508y2h9ynrkr9ze4frmo9shsg4aznr\", \"azymmbe7i56totjs5\", \"yx82gcgtkawttwg857gmguimgcn16u4hvavi36g6s8antjq8q86l\", \"xar0m7rkk93gkfknx9wgngw3eh6uph8qfog7wk33kphatvmkzsvv9181sc7n743kecyh85t9g3h01sjopmhx8bds2zbzapjv8ltu62xd383agmrkj7r0rfdyymsh3840zkysjv66cvcyrh6i5wkwie1drue36blt10wdy7mz1lfua9fc754f6ahfoa7\" ],\n    \"minInstances\" : 1225012435,\n    \"subnet\" : {\n      \"name\" : \"Beverlee Dooley\",\n      \"projectId\" : \"w14x\"\n    },\n    \"minThroughput\" : 1592552068,\n    \"name\" : \"Ms. Athena Hegmann\",\n    \"state\" : \"ERROR\",\n    \"maxInstances\" : 1404111746,\n    \"ipCidrRange\" : \"sbbva0cs47ihcxhkxu7ztltr00csnpto08056ks1voj9r7mi1xkosno0eqtew3pkraq71te8mfrixvqe8fgvjnuutw770tyi85e8ut1l31ofef9u4dgkfp0gqueacxzt3mn625vkfloyn\",\n    \"machineType\" : \"zzazvnz22ubtpl6br9rczvuk6ippsq56191yppvs9ly9c8pc30mb6pv2hrxhy2zgwjgalg8gt0x7ja6hei591qu5jm02ny8jb694k4rymh80aygs2ux4hptc0uocx2hveosg2wm6xsenxj6q6k1960yy9caixx3lurbl79fshn1doqtfn\",\n    \"maxThroughput\" : 2011808736,\n    \"network\" : \"0hkrhl90u9ledcjuv9hbrd5w94ihvi86jhuojapl7mjzwm787rh9cobiwdteaa6o5p3dg9msxkhkkcci4qudmbnvx4kl3qnqmspw1xmh6xda4cryduiy6epc0ul2urw52yjwdvsvrntcoynxobn\"\n  }, {\n    \"connectedProjects\" : [ \"pn9n048ifxoq6puoy00wf34bp1ss2tseab78n2fq5o1w6ayy7kt2n1afkcenxxx0b71s1oti34ua50xg5e\", \"2g6zt9391cwj93me65z5\" ],\n    \"minInstances\" : 695253718,\n    \"subnet\" : {\n      \"name\" : \"Donny Reinger\",\n      \"projectId\" : \"0085\"\n    },\n    \"minThroughput\" : 1279669188,\n    \"name\" : \"Kam Reynolds DVM\",\n    \"state\" : \"UPDATING\",\n    \"maxInstances\" : 1973308269,\n    \"ipCidrRange\" : \"vdg3dwe7mcxweqf7favnx9qe6lufzg6sz1raztirfagmieo5zfmjdm3isy0m2800u9uyy4yzpgnznuuome24nf7gyjt2vk2o1wxwtwm7wn3emotpraj805ojfxxu5lai82e8x3inof78fxwvmjms8urmfia3qbqsv87xtz9cpij5diktmqi82v0iieatui\",\n    \"machineType\" : \"azb91dsbsvj5kklzae93b2ox1swmfijuqz3s2dln1gb2rj2iup24opdi33wmx8uqq2m404gmegzzc9a83lth9h7scdu0k4vbav1msupnovw2mkllull9mrlds4gike66yrsib7xjn2nsmqoin2g23p872k8xtqiah2jg0c00ixapx9m\",\n    \"maxThroughput\" : 417505088,\n    \"network\" : \"8rt37f9umrdndifmii0kt63zvdiaz2z9xf25lvz8bigr5fudo1591h95kljpg69nffvprt3yq4sujbz8a87d3437yayarrjc2lf7m9d68o49pmgv8enjnym7de5omp366xvhcbpyoq5ng04y9wg5so5vnj9ofc8ykp7g6izsqerthx3l\"\n  }, {\n    \"connectedProjects\" : [ \"e72x34viiof0rdzasfpq00fwtbe874br5tauun9jhbssosz6ovhfufsghfi7zxrl68azseybk4l2wk42wa2ug7n2fquxgwuc1026occrmn0m0wui0ztl00cwehcvvl03bohpgtdev0e4kfdbkneusynhes0u91mf71c\", \"l6fxqg6q1qb059rpztnwqkw7xo2y\", \"lqg2b70qi6cr22l1kxzjea5f0v8f3wvetygd8bh8bt7lnuc8go0usa545gzei72a8hljjwhsx1gr4dgi8ku13mjhgj1pzrlvybalavrnephiubq7gxiqbmwhc1nxm30tvsb69ownfxflovanefklkxou7kfobgxjm5z3e6\", \"ifqa1wix6que6jiiglry4um3a7mwr7zpe782bx0p0ebdue43yuzftgyl731vz0k4s3aaoohvyeo1b2ptug2vckk9is4qui21esxf17ltkxvfhl2rienesbju8y98njj5fsvs1fjbege33xah05zbmdmpjy3a7kt36mnetscb0ehsdc7rigsfhemwtr7oh\", \"qcgit37g6hn21rfh2ykgkgyom71s85v8gi9q16pddji1lz8fb60vxoggt2clesszo6qqo04knwboe6r4wwrs7s9oxkjgukpu7e30bjo\", \"454nb36qzyxf6yr1nbt9tj7\" ],\n    \"minInstances\" : 603462125,\n    \"subnet\" : {\n      \"name\" : \"Nelia Doyle\",\n      \"projectId\" : \"9866\"\n    },\n    \"minThroughput\" : 751180271,\n    \"name\" : \"Calandra Jakubowski\",\n    \"state\" : \"UPDATING\",\n    \"maxInstances\" : 1179818859,\n    \"ipCidrRange\" : \"hleezei9mwieowc33vu\",\n    \"machineType\" : \"4o47u4p48oel09x59e9kl1710xaij3dua47k2hb93q6sa5vhrudjzsccdnprv28e4l164r7bwpyxw7jprou2b2cf69fht4nnzqmuui4oi6m\",\n    \"maxThroughput\" : 715448007,\n    \"network\" : \"22c93e7wlrevgsddoae0bd2xucl932g2bt3klxmq8ruc9cjmlhwh9ov6r0u1zrj70gdq5xgjj83qoqgk218ysyttmb6avfj23\"\n  }, {\n    \"connectedProjects\" : [ \"ia17b5ee6t297vwxgzj7\", \"w9ujrq23d9xowedfp7kg1d9v5gzrrbr6lu1cn6xznr2\" ],\n    \"minInstances\" : 1497899747,\n    \"subnet\" : {\n      \"name\" : \"Shayne Effertz DVM\",\n      \"projectId\" : \"23x7\"\n    },\n    \"minThroughput\" : 680508883,\n    \"name\" : \"Rolanda Brown\",\n    \"state\" : \"CREATING\",\n    \"maxInstances\" : 754246642,\n    \"ipCidrRange\" : \"qdauxxv4ujz3r87g8zvfjodzvgjjsfc9wm3ec8b1d1joyqulwsrbdm85i75kw9xwusgtejz5ldkepwyy23evljlwtzjn7pcl9p2onaygggkkggq07fgwdx7scr\",\n    \"machineType\" : \"dv3hlvu5mx5zedv1cc7g51y4aj5nx3cqz842pn6wyeus0lv1hvkxajl5bmgcnai98a6g318gq14e6oobch4hbdkh4qywqmazixgxk86hw6nybp4yt2ey4fpg4t7oj649nxz8b57bzpgbs5t8wiuqq8ep71876e4bpeyepf6\",\n    \"maxThroughput\" : 652699465,\n    \"network\" : \"n7aibb5aq6dnyo0t690kwof5333m4kqi6l6a186dtzdptwhvnp9ok23r3sok2z6mdfh9j9391hhwm\"\n  } ],\n  \"nextPageToken\" : \"52l1qi867kpk56bdt3tvlrcpkeb7skq27osjiktln1fed97ri1c8dm1z1sx139lb8wdi71juz95qzg1g4vopcx9jgutj2esw4ddhtny0e3rbspafml1cicx7dha1l5ntmski80rrhopyzaeodi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "854b0119-f408-487a-b74f-3d964caa586f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:13.442185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.list",
          "schema" : {
            "description" : "Response for listing Serverless VPC Access connectors.",
            "properties" : {
              "connectors" : {
                "description" : "List of Serverless VPC Access connectors.",
                "items" : {
                  "$ref" : "#/components/schemas/Connector"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Continuation token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "87ce2337-c5b8-46e7-82ff-210e848365f0",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Ms.+Tristan+Anderson/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Keena Schneider\",\n    \"error\" : {\n      \"code\" : 1366917087,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Natus nihil ut molestiae facere quia. Et sunt et. Iusto quae consequuntur corrupti sint voluptatem. Perferendis consequatur et sit voluptatem.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"pkto5yqf7at0xwovtl6lbgrvmlc22suktj335okpaurddvwgsobb3hilc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87ce2337-c5b8-46e7-82ff-210e848365f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:13.440845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "0bb03a38-442d-409d-a67b-4c1cd2cb3209",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Jeramy+Reinger/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"oo85c58gbjhmzq2qhj0ki9ans9ec4zaf5idrqudma8eetqnb81ml6hrm5tdq4hrrnt58573urs8713tfafaodkypaqe7oandxilelodl9rz9r6xvy572n5rdn8\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Jacquelin Kassulke\",\n    \"locationId\" : \"8v4p\",\n    \"name\" : \"Rupert Blick\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Buck Pollich\",\n    \"locationId\" : \"4g4z\",\n    \"name\" : \"Billie Treutel\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bb03a38-442d-409d-a67b-4c1cd2cb3209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:13.440628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "0f14f53c-4578-4b2f-ba73-c92cff7e65be",
    "name" : "Updates a Serverless VPC Access connector, returns an operation.",
    "request" : {
      "urlPath" : "/v1/Ms.+Leta+Koepp",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. Latarsha Collins\",\n  \"error\" : {\n    \"code\" : 518930256,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Necessitatibus itaque quidem animi corporis. Eum quo voluptatum harum rerum deserunt ut. Voluptatem sed ipsam dolores veniam iste.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f14f53c-4578-4b2f-ba73-c92cff7e65be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:13.44014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "7b674926-af45-4a95-ae32-35cb57208555",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Jewell+Wehner",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Raymond Cormier\",\n  \"error\" : {\n    \"code\" : 1976213592,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Harum nesciunt quidem aut vel temporibus. Nulla facilis odio nesciunt necessitatibus. Odio nam in. Vel qui eum id deleniti mollitia. Non vel nihil.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b674926-af45-4a95-ae32-35cb57208555",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:13.439931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "afb00993-2b31-4334-b540-1a5147782121",
    "name" : "Deletes a Serverless VPC Access connector. Returns NOT_FOUND if the resource doe...",
    "request" : {
      "urlPath" : "/v1/Angelena+Schroeder",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"August Renner\",\n  \"error\" : {\n    \"code\" : 1714445860,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quisquam qui quod et dicta quo. Quae nesciunt id iste est dolor corrupti. Et dicta qui et voluptas corporis ea quae. Modi sint minus laborum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afb00993-2b31-4334-b540-1a5147782121",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:13.439681Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  } ]
}