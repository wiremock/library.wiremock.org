{
  "mappings" : [ {
    "id" : "1b0d1fde-3929-4cd8-b5a8-351cf763f0d2",
    "name" : "Resumes a transfer operation that is paused.",
    "request" : {
      "urlPath" : "/v1/Lesley+Purdy+I:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b0d1fde-3929-4cd8-b5a8-351cf763f0d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.920236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.resume",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "f6fe92c1-9984-4128-a1eb-b3325abba81b",
    "name" : "Pauses a transfer operation.",
    "request" : {
      "urlPath" : "/v1/Maxwell+Little:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6fe92c1-9984-4128-a1eb-b3325abba81b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.920162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.pause",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "87d47936-07fa-4e53-b26e-789b3274cd68",
    "name" : "Cancels a transfer. Use the transferOperations.get method to check if the cancel...",
    "request" : {
      "urlPath" : "/v1/Arlen+Boehm:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87d47936-07fa-4e53-b26e-789b3274cd68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.920086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "83a0b3cb-ae73-4831-8ef4-1ca8d77f46d5",
    "name" : "Updates an existing agent pool resource.",
    "request" : {
      "urlPath" : "/v1/Carolee+Marvin",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Harley Sanford\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"dvan3e86amrl87rbyqjowcbt5myblnua0c6jh9sxji048k4knyg4kcx44yrq1jldp863rk6tgnullndslfwidnouz5z5\"\n  },\n  \"name\" : \"Alison Zboncak\",\n  \"state\" : \"CREATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83a0b3cb-ae73-4831-8ef4-1ca8d77f46d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.919993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.patch",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "5f0d7755-644d-40ae-bc65-908786c613c0",
    "name" : "Lists transfer operations. Operations are ordered by their creation time in reve...",
    "request" : {
      "urlPath" : "/v1/Evan+Dickens",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "zrucmrvu1d6ne122g0dk2golc8jtqpk5x5kfl7fc54ryflz3brxpfkmf13wk983f7u5k"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Gennie O'Keefe\",\n    \"error\" : {\n      \"code\" : 1759215163,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Nihil cumque commodi qui quasi. Facere eius quis ut. Eos quidem impedit officia incidunt saepe omnis odio. Odit consequatur similique.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Walker Sanford\",\n    \"error\" : {\n      \"code\" : 264564042,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Occaecati amet eaque. Sit ut deserunt aperiam consequatur dolores. Consequuntur officia quibusdam modi exercitationem et.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Efrain Sawayn I\",\n    \"error\" : {\n      \"code\" : 1023551812,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Autem quisquam quia expedita facilis quae nulla. Eos ea veniam modi recusandae. Et necessitatibus molestiae mollitia laboriosam laudantium excepturi quisquam. Eius quae dolor repellat perspiciatis ut.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Gilbert Anderson DDS\",\n    \"error\" : {\n      \"code\" : 2101198895,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatem dolorem ea non tempora fuga dolores. Dolores modi magnam illum voluptatum. Similique omnis dolorum quia reiciendis. Laudantium et et corporis impedit qui ex ducimus. Adipisci cum sapiente n\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Van Harvey\",\n    \"error\" : {\n      \"code\" : 1460618791,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Et sed officiis natus. Nihil ducimus aspernatur fugiat error qui. Aspernatur et dolorum minus. Odio consequatur fugiat.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Julio Gutmann III\",\n    \"error\" : {\n      \"code\" : 1452510232,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Dolor quis eum est molestias fugit nostrum itaque. Et odio autem. Accusamus est asperiores ea ut ea quae. Dicta laborum voluptates.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"c76vktcl2a1byjanj3dpxa8tl771elg0va0crljbp6xdw4vf83p30kilbba25gto3q4yf4lin0boxm8587tem5wslk6ldyys32tdwm0xexpqcds0emt3zf3ge96fduinsopibtfjv7qy2o8r3glgcui5ou8ax13g6gmw3vgp6su56gb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f0d7755-644d-40ae-bc65-908786c613c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.919717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "e44b64f6-4c0b-468c-a73b-858ff2a2455f",
    "name" : "Deletes an agent pool.",
    "request" : {
      "urlPath" : "/v1/Hellen+Vandervort+IV",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e44b64f6-4c0b-468c-a73b-858ff2a2455f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.916126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "900a8ce7-84bf-4508-a12f-a8e8c4be7c5a",
    "name" : "Starts a new operation for the specified transfer job. A `TransferJob` has a max...",
    "request" : {
      "urlPath" : "/v1/Lena+Keeling:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Gino Mante\",\n  \"error\" : {\n    \"code\" : 2145443454,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Eum quia occaecati. Itaque eos iure alias. Dolorem iusto at voluptas voluptates. Et et voluptatem voluptatem aut vel. Voluptatum non omnis deleniti.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "900a8ce7-84bf-4508-a12f-a8e8c4be7c5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.916037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "24043b81-f23a-47f4-b90f-a9e02101d7ab",
    "name" : "Updates a transfer job. Updating a job's transfer spec does not affect transfer ...",
    "request" : {
      "urlPath" : "/v1/Cynthia+Rosenbaum",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-07-06T06:44:31.913779Z\",\n  \"lastModificationTime\" : \"2022-11-20T06:36:31.913808Z\",\n  \"description\" : \"Sint vel enim harum. Ipsum aspernatur voluptas architecto. Aliquid quia omnis dolorum dolorum voluptas. Numquam repellendus qui et. Voluptatem natus incidunt voluptas.\",\n  \"deletionTime\" : \"2022-10-24T07:48:31.913865Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1450688358,\n      \"year\" : 191870306,\n      \"day\" : 909472070\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 13609298,\n      \"year\" : 1867548398,\n      \"day\" : 2035181811\n    },\n    \"repeatInterval\" : \"q9wylr06e\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 563545668,\n      \"seconds\" : 233142619,\n      \"nanos\" : 1228781108,\n      \"minutes\" : 2091708770\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1286666681,\n      \"seconds\" : 809778521,\n      \"nanos\" : 1710688427,\n      \"minutes\" : 2093678113\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\", \"FIND\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"SUCCEEDED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-06-01T07:03:31.914069Z\",\n    \"eventStreamStartTime\" : \"2023-03-09T05:46:31.914102Z\",\n    \"name\" : \"Lovie Hammes III\"\n  },\n  \"name\" : \"Valrie Cartwright\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Brown\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Norman Cormier III\",\n      \"path\" : \"h1invxatia72gw0sevgeu7zfu7fuu2iehl3x6y7gwlvp8l\",\n      \"endpoint\" : \"o1tx8kc6rrxfju49c8uy66lo4p7ntc0yaml2ucukeyw2atpaetj8y0zpwbrs73y9dxf9ugamoguvg1m42tv4abm0g9smtple8sr5vzob3c7vnleve0o99c9pjbukn5rzogpu1bmhclv1tvhqo70kjytdvd9v6gxjhm9do5l7z1a1ytg3500go6qp6otylyq\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n      },\n      \"region\" : \"n55of3vpdemxpnztlyzjkz98iyfpbexpyfsfq6evcib08eq2yv6t2bfuojpxx5ipbb10opbfax7nb27tgm9wo689mtfwx3wimkvisg2qv3hip7bsx27h3i9ke3llrpvgu2qb2bvuvfhi35yuikckihm3vlk5mwb3522g7u\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"7lfgpowvw7j5xqwesdot8j76cs8j7oc4fzs9d6zmxg9cwvpf4pdwtw30xlqiml3ena27zx117nzkpxjomtgqkulnq42s2p5ugg095pk9zmm5clv4v1plub6a2r9td134moxk0sv94jqf1mr0qt0vn7cvi3vu50\",\n      \"path\" : \"hfj9dz9e16xclponkuwe5gtz6ozh80lo2mtm4q5z714ckeharqltjhl0hl9jdf44sl0gbhpd4xqdxgnyeu32w0z7weckiuqe8dx1eudzwr7vydr4s0l1fb35li80d5oomi1me\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"sr9a7qitrg80i4vby32rd2h08wb3w5lar32smkegy9uxpap7vj92t4a6g48zg9xf\"\n      },\n      \"storageAccount\" : \"pskeacuoe219r2dsxkotlj5q92swl2dyahqhvacxb9cvqeewjmj1f6hhbdo1ulqvimykp7t3ra6pyqcz3sfj8j40sd69mol5udqlq8pvp58gy7pgc0shn5rub45jcc6b98wprpdly51qghz1azhlw5w44ri72ju24w6xc808xsr57ien2hfhu6qmg6l1j1w2qte\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"86zty6\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Noelle Deckow\",\n      \"path\" : \"5laweio3goxkl8a6cnx44r2s0a5p0oiwsdb76oafqox0ya77045g0t6hmt68ephhcw0g7gtmecv29i29y2wefvy8dny6s914iei6idauxwf6vhz39pbobdp9pyn5br1muqdtzgfwbsxlhe722xj5317zm7jksxq\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"4uv9\",\n        \"secretAccessKey\" : \"lmkcyu4n6nyi47q86p5opeirtbsi8q89bg51fmwj13fjdl6om2s9y74ia8jl9cbvq13ntkqldn25fj95oxu5m0mt\"\n      },\n      \"roleArn\" : \"4ylq3ct3timwbzew0n35671dblku4ot1ejqsazslrtwiokawbjydq3kl540acozbj8dv4ig39o1qsbfa0tdzehx05kg6eagtc85yvdz7wvpnnm0y\"\n    },\n    \"sourceAgentPoolName\" : \"Wiegand\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Cammy Carter\",\n      \"path\" : \"stq2a7uzwb0wbo0o9tcva9hgqsk2b90wngm1nlh48cglxs5su\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Kristin Macejkovic\",\n      \"path\" : \"8mlwttsiy0h19jt3jvcuhc80ncz7kv2p05kgpmi556we9ym6n31pavpiitxuj2tt4ulj1kai24mzvvh0g87hedtzdsbmhx5usj7m6o0ff5q9blz5kp3ati6bzwfxv92jkivj3wsbye5tcikkizflmzbyovy9lw1hhnp3eeysre327h9tml\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"8458wuox7iq42ole376r9gaq526mebb5z1gi8zkybvof8o18r4uuefdtv940cyom6x6wfamnq860ugr1anzsgwryshv4w0hiuzruedad608xs4piwy5zwqdqgjdwegn2fkfg8os495ic858qd2kpdqfcpjxjfzmapk72l1nb1tkgz2nvpzpswvkdmwzcafqpcfxwqa\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-04-07T07:59:31.914882Z\",\n      \"includePrefixes\" : [ \"pl0v70lbxjyhcn7dcidyls73dchmtysf86ygqsptblzz6jwbh6rkf4wh5fnuwlyj8h1o9t7g2vuwu20m4hk7cbkn94lhe4engmaop334u9kl0ij8ma2c8ypvzzbicfi8g78qm\", \"qsg0ebrqznzy2peedo2ubdjbsd3cdgyzozethlwa2ku0ujky6fdoqrjaqpvb4scglvgqgoo18jsrjeau8y51mo7uy51omgj496n8bgajmaahkfgynm55g01jjbkmrzku4cdb5t4h5wrjx2hy7f6zfmrenvgfu3jd6cdyezslf\", \"p8003w7c5x4fq7iabxwz3pyp\", \"uticjoakoinl1jt9fn3z38vvc8i62axqne9vos2wbd4x\", \"9nh5d2ht8i6dcmxjke694lrm53muwzg0oooa8smlru5c46dkifrylaztwejiuzm6ffs7c4y0r1ufqgo0nh4cxhjn62dkkw6w792r8dg7gn6l9x6eqoon\", \"5wqzxaevrewkwfny0j7ml06jhqs5q0p9r3l5p\", \"js5f1yg6hh6nctxb1dv83ecv8ioiskrgxs6pb8jp8blmhj519qtz0hrpf0lmv7dpmrk9jm6ub\" ],\n      \"lastModifiedBefore\" : \"1vgdayi06fimhdac596h92ixpp7o74pvksg3kqdwkyhowwdxrxds3unoswfwdbq8xgz5t3ajrrk3us0y\",\n      \"lastModifiedSince\" : \"7qewva8gqeluj67dvmbaocq480pkv6buagzmshw1nm4380wixz62v52domvdv92drplt7up6znuic0ksmcbhny9okehz0cojp0bd4gjzhj5b4yq3uqw3fzc0us69vr3g\",\n      \"excludePrefixes\" : [ \"jdt4innuhun9y2gwmur7mlsuxoz\", \"62c9cxqavscjfq5apmkrpln76mmjamn2kb3qt71p2t6b4z5xaf548a2orc1p4t17e\", \"z3gbwg0mamnop296d2xhp3zyyhs2y0tzeunj0ijnznr91trx7i7andyhja09qyhqk8ht31o5kpbth4apx0lnjjujlio6kliczb8h9334kf5gidbrsgjz0e1zwoionu5r611gtvxv4b2a22gnr2cs\", \"bqfgy4y1wjdwk1m5xtoxab2jvobr0yhxewwl94a4ej9h67pb70wsdkjvipokk558cm8g5gmpae86mtrg91cwj7vcl0ea0n1co2ytyb36eejmvoetoywb8wq1qp6tgjlyitisked1469q1rb9mkxffa8ngknivil6eg55awo3emulu3b6d\", \"lxeubtn3qhvl3xcoz2nfsg1f3wcv7w1k9y6\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-12-16T05:30:31.915033Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Everette Osinski III\",\n      \"path\" : \"e2pjmxqrlpe0ds6o97chg84fzri0zhh46ijtp6\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/166278\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"0kg6rfmocqweriopdixfzmyzlx0rymbfigpf0tsqh16f1lzidi2brgrqnbpf2lcexcbbjr27o0jj00e38zdsb46vcciwoznu0fime5iodw\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_UNSPECIFIED\",\n        \"gid\" : \"GID_NUMBER\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"ALWAYS\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"jb7e8c7hyx5r7yiyrigx58qztmnkhl7v3jh68ats7y563nomwtj9glsk7ppeh39foe64bzfsh8u0hn7g6ezaqa7znulw9itn5py8op5zp2n082qjyol26b04ia8z4yw62w6u81uvd4gr0o27\",\n    \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n  },\n  \"projectId\" : \"ot82\",\n  \"latestOperationName\" : \"Carter Sawayn IV\",\n  \"status\" : \"ENABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24043b81-f23a-47f4-b90f-a9e02101d7ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.915761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.patch",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "f6365b57-73c3-4d6b-b8e5-38d2675c60a7",
    "name" : "Gets a transfer job.",
    "request" : {
      "urlPath" : "/v1/Elijah+Price",
      "method" : "GET",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "53ef"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-07-25T06:08:31.911662Z\",\n  \"lastModificationTime\" : \"2022-11-10T07:12:31.911692Z\",\n  \"description\" : \"Deserunt dolorem id voluptatem. Consectetur et et nam tenetur ea. Sequi deserunt libero cupiditate quidem dolorem. Cum repellat excepturi id.\",\n  \"deletionTime\" : \"2022-11-10T07:31:31.91175Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1172176786,\n      \"year\" : 1055350380,\n      \"day\" : 1190536649\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 925830163,\n      \"year\" : 1125836044,\n      \"day\" : 286680304\n    },\n    \"repeatInterval\" : \"1rkusv9t67wnfmco79hq64ptikkyxkh7ciwbqq09wm6mppchtutoj8yx48ia0jvpb3wvllkpzh4fih61yfmzwrpdtqmkfl59b5wrhk4zjqodpv8lyk1hwobq2k1qnjyerqrk\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 2051793321,\n      \"seconds\" : 1484028274,\n      \"nanos\" : 279123299,\n      \"minutes\" : 1079790262\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 63010341,\n      \"seconds\" : 167355997,\n      \"nanos\" : 1799193613,\n      \"minutes\" : 4595990\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"SUCCEEDED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-06-20T08:16:31.911946Z\",\n    \"eventStreamStartTime\" : \"2023-01-12T09:06:31.911977Z\",\n    \"name\" : \"Marylou Koch IV\"\n  },\n  \"name\" : \"Barry Schaden\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Hane\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Bridgett Schultz IV\",\n      \"path\" : \"m2d43adm6g027svs16v33lwji9li1iebwe26x1o3gd0v3oy5v6gjvgugf7o6w7bx3okir62up1rj7zv\",\n      \"endpoint\" : \"zijhbzddoflr79xupnqbl72ikv0lrgbneawuzxy29s0jqriloo6zz0ulxfu3smnn6kf2rl5wfvizbbivt0docztj\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n      },\n      \"region\" : \"w5h\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"5ftwockyxmjhmoakcbc0b1pi1mab6vjaoez89q0j6kktgoi5m9fsl8t2goqg2491zm3hs3hev4qfrzcs94in57dxgzh4iec53runb2weg6rrt18tx9a9cawjayuwewygvqt5fmor4vswh92s9v8pjme42mdgnkm4dvex1t9e0f5v39bmyr2w\",\n      \"path\" : \"ozfwfm64qmewr86ox3w1nb3oboihhh4p9xhucgiszhchzxpfp4sm0w8lyhdh8hat6lza75ortu7yyhw8\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"ir396m2ag6rocu4eoxev3omgwmqpvbycy171qr62tzy300bbax2nku5fktlexcd95hj5xiqsq82j1xr6u7o42frhb5jdd1joypvdrb7w3i2bmg8w65juiok3bgg73btrizsjp5gpvo44jm75v5linhjdpe4gkeff1tkly5\"\n      },\n      \"storageAccount\" : \"mirhefyhyg0zvafb3coftypcwkdyc77947gs2siw4v923h8y7eyvfnj4zl764ypmf7wuadzro7nlcwciq49yitg3uo2623z2fyf19my7m2md542b80t2u81twgc0fnmyzri0slanq40nj4j74svcopy9rqsaus6lh4fzmg4skfqpd\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"joij3gy68l8bb6a7ecd9n8scv2v6wbfjxwr353f1ne8vw2rfyr45q5t42s77q95ksgkbuq4agcx\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Mrs. Neal Graham\",\n      \"path\" : \"qvkavqpi72gmbalervpzfnk81ncq3l731egacevpgm3dwymfz3soid4ft61f4d40opkjykjtwln1i59yd0plkkkpjaws5t2x172418wy8qa8io3vyn6whuciei09iudns27qpaq9f6l7ll36hio2tty3r3jl70btbespiyeg6o0t2phogx8fwrl694jdo3r74sfwtlg\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"8nvb\",\n        \"secretAccessKey\" : \"duj4kuh0skobre03luaknj62v7eacdmurzwglk2wttw7ip8lugoyf0pp3jflfmqi0js4dvp3ldf8iyor0uaqktm9dp1sskv8chm5kaja6hhiyybmn9x9297jl4kvbuxc7hav3nk86wq2avi0j4kfrnserkl2az6qt0h6ixso\"\n      },\n      \"roleArn\" : \"icbkehe62wf663oy469jm8yuc031barot3y2qq44uy7oedd2ic\"\n    },\n    \"sourceAgentPoolName\" : \"Jast\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Isaias Sporer\",\n      \"path\" : \"t0gufqzorkbgy15y5245cmvn2xit17iu3c8f0rupgc58hjraqb8sgvdbugtikkzfkjup4l8yo0mjlsk1xcxhpvfhkldid5fy8daj4wouh3qqt\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Latoria Bechtelar V\",\n      \"path\" : \"jb6flr1mpgadafvhjdbodpp80w5e7630kahxci3fjxev522l295nfmy36uqxb6n4xzbmqd82686hv0p9ehlmyb4rr5jagx54iwl0ue7wu4cplzvrw2jssm287qq73506imsw0r1c3ja0uioq40n7jh0oholh33lqa36tkapq8x5y1l9zdug5xyrde76vc0jye745id4\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"tyq9prestnmoz4hpa5894inpiuczssak5j3lims9jt3aeas25pht83bqbd9muxokztuo2ekn013ldgy2vr2lpxwbagrhn5fmr9qv0daswbok433y6y6su6golreylk28t33ulcpfskk46ja8lnlgc8filac1cezkxm9ptifw6zawkws2r8jmah38vy34tz8p3ecr\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-11-04T07:43:31.912772Z\",\n      \"includePrefixes\" : [ \"qtaf94qdkxle6wizm04f1qgsw9uhdyqmt1eym7rf4cax2w8ssml87gqbcea25flqax55yah5bfn5v11vo4wriohpt4xysh9\", \"z5523qc7tdlrhj72xv0e0bbbt2yb5jnm5bfeigyf0ky4esdio6ih3ywkyck9awybbye5em4sjdcwoy2f57zgcn90ddozao138ntl9cr9zg06jpc2z52ey3gnmc\", \"f7tfubxpoemtm2jiv9tha210k07w3ug7qtkw4xdvhmwhwmdwkxi77ypqbu79kaqzqxw657a1kzrb2ctjcqalfgpxn2427rpi0slp3fpja7h3j9\" ],\n      \"lastModifiedBefore\" : \"xcm96fswqpn81p0pzfzo55l1xuzqfyky25f69q6zs0vbz01edyjfpq1higocir93ibi3cztwepi0z94ao9705\",\n      \"lastModifiedSince\" : \"d3lbbcipvf3dqylfy1mvvaxg\",\n      \"excludePrefixes\" : [ \"hob1wtxb5rkibthz4oitlixaexfcm62agm0n1zokzkfpzanmkuf8jw4gyz499wj5pm6t6306f0n9ri7czxsbz7lpzui6wsm6\", \"157kmzro49z0lrha204cmb3qm3jeijw1gy567usp4we7a081hsifr0qifcdx7pe1plgsailme3hzxo5kf7iwcsmj7l6oczjntiqaujasxg8ppojngf0ssyh9q3dh5s7br8k1rskme5hfc\", \"wy19av91q1ig6x491r1yk2g7mklmvko0536sar6fyve8e392nm99xj2e3n9k47ngd9m8tzukunm1peakma2fnckjj6qmr9zfnb8pww1wf3dsis752u\", \"5xn1sot2ogur2yifwjh22ysl5igin9j5y4li7vk4vltr8v48he83cvvxy2j76yxi20x2dnw7ut6bf5w2wh1\", \"7gel3p2s11zhs9i6dhzcvqzrv1f93es4n4a6iyzkj7wr0bnfgrp9tspldrvd2ceuedv9gyylxngfjts38z0vcevycdc77za0f9365nwur3rbr7kr0925ggdhltda68rt7x4d54chgt0qq4rmodbfp7sfz5vevq9utev7922cobcke09ai7lp07n8nfjrue8mm6cm3vi\", \"smsw6mxoa1kc5dhfd60e8r82nck6gbayy8m6k3zmxxp6bvfi9o7ssvlk7451zrxuqan2ipktm1v7irk7qwsl1gq2jyxx8rqqo4xa533ufzt7joaz2ho5ictr8wc912\", \"th61g5jlz71of17f4690lo67un347nwhs4p8j0c09njxciirilaagnzwy00wn6ugpt4nv0ukzakbr7n5fljs2aoo\", \"6fawbaqg5wg5c1ah5israu0yg475as5r7z2q8arnrydgg0mm6ks2fo3g2vnoavvh00rvev05eba8a8f79uynvg3vbz26ih8hqkfh\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-04-10T07:56:31.912926Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Errol Marquardt\",\n      \"path\" : \"fk1s3ask74lsir3xow6wcaexzlyjq400eccio1yol7snc1tsku2b4sfm8qa06fvh75ie9d73mg9enq3zubbiyz9kucwxhvgw5g0xh6atqfi0iqczws2x6p27kqlhe8dlgrximinebkb5n9jiyz7l4f4rawoxfl4s54eq6zzmk8lywi2yj6um742ghiqgmo45ne\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/922922\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"gc9jxh5fnnquw9w7lurjomkwrxllowm3azfiliuaet5x3qx6qtyjp8vgp1m9s1hyy741kafppwdixouezy2njj7algp0e9zzcr1um90jio9hb21mor8d27\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_ARCHIVE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n        \"symlink\" : \"SYMLINK_PRESERVE\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"DIFFERENT\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"xqlbykennulw1thbs0im8kcn37xs6gv1kjnthgegd1q975qc5rglyo85r2ill3x58yypohck0mduzg68svy43glq3f\",\n    \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n  },\n  \"projectId\" : \"bjf6\",\n  \"latestOperationName\" : \"Evelynn Stracke\",\n  \"status\" : \"DELETED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6365b57-73c3-4d6b-b8e5-38d2675c60a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.913729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.get",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "d0222fb1-6d3f-46d1-b2cb-afe2bb8daf95",
    "name" : "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
    "request" : {
      "urlPath" : "/v1/Beula+Huels",
      "method" : "DELETE",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "132t"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0222fb1-6d3f-46d1-b2cb-afe2bb8daf95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.911625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "446823c2-5c38-41b4-8f2e-924efe76842b",
    "name" : "Creates a transfer job that runs periodically.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-06-13T08:37:31.909408Z\",\n  \"lastModificationTime\" : \"2023-01-15T08:56:31.909436Z\",\n  \"description\" : \"Vel cum cupiditate. Laboriosam at sit. Fugiat velit occaecati consectetur eos. Amet aut reprehenderit est voluptate quia.\",\n  \"deletionTime\" : \"2022-10-10T06:32:31.909494Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 2017446061,\n      \"year\" : 138642603,\n      \"day\" : 2032681737\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 723424054,\n      \"year\" : 481046673,\n      \"day\" : 230204243\n    },\n    \"repeatInterval\" : \"0n836sy7o1ic3v047zu17ko55a1s3upqdbegdn3p5gbmbjkzqfwadsw1q2kjh0rp3dly69yxeyxwfk7eacf6aw065ve8gnp8v5j2xeo4wclkqwikx1djkeprfan5r5ht8wp06mh9f2xzrg454bsfi9y9f3n74x2foqn4h57o2ee90oyxut\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 2022634711,\n      \"seconds\" : 1698717552,\n      \"nanos\" : 759804301,\n      \"minutes\" : 357682782\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 579838497,\n      \"seconds\" : 746683548,\n      \"nanos\" : 1515625184,\n      \"minutes\" : 13438526\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-08-29T05:59:31.909681Z\",\n    \"eventStreamStartTime\" : \"2022-06-07T08:33:31.909713Z\",\n    \"name\" : \"Marvin Powlowski Sr.\"\n  },\n  \"name\" : \"Evita Walter\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Simonis\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Wanda Kris\",\n      \"path\" : \"8oiuhpxmi5oqk7y0i6b22u7xsozl7bu3iudq6svrhnsk6y50xirx5nxgvkyimwod0p4tgje9o30tjanllhua0mb5wsgex136kx3w0vfa0cob7gz7vdhfm8903zobq1r1w8wpiwmzjdditwjyps2iswygogvj\",\n      \"endpoint\" : \"qnt95sxqnqrpe3mx87ifwut7hpkhyrns3b2j7zsxj33n4045xt5dhzgz810ugesib7w5fmo0jy7xxah5pchkp636ar6mcwiimzc6teze357z0etup1bwd8auxtuc8ut20nwmp37hnq4eq78om56lxs5wradt1o9jqbg6aw2rzs217umvdnf8kfk7b\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n        \"listApi\" : \"LIST_OBJECTS_V2\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"sctzt8qdr5or79lgz\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"1flzr2mxu2sf7473wv4gsxi9akd1etuhywx7dh0oun5884c5f5zur4ljokmv9\",\n      \"path\" : \"ahqznogu5bvzs1uesbieiuh5cadbw4u55gk55skuzsotx2mvyoev3ehcnmjouictmjfl5ljxg4465ymz1f13ndu8461y8w4ibkr3nfey6p2erwnm8dksrbggwt05fz\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"cxidoc0sbiyuss5lf7hyonioklxl62iudopxvfi2jlb3hkpdqti1jv542tpwbdp3mmptvxxukk7tnk3tipznwct5y112fuz6rpvquip9hp0ly3b1wvuf7urvlvg0n1qorbp6i5jv33zib3e18n4acsaq490m22izw20oufv32\"\n      },\n      \"storageAccount\" : \"jovme383o72kk5w2rdwp7jom0nt9t\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"zrj0nxfyg9g2ekynnf0xra7bmqeix4ebuwf1yza11rrl8iqv83hwj9hfd8q4pemr17yiltc4ivxnwh35ehzjyh0zqykwdq0s46g27hum8pf6wv4emruwa3xzq5rbvsp2yeh52yexz09pqftq7n5yhrz68r\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Miss Sharla Rau\",\n      \"path\" : \"3bc70hdwjrbhba4i6f5ms6prrq5udchdj65jvd340qgaefas9isi8sqef4lyidzmpas1sp40494npm51np838c4o8bnggqv3pt66czc1fqtrri0zloegozwhp0brvbewymzc61hr47qj40ngfg8pxp2twh54bso9p5su2b8id6uy4kk29gv76t9czw6mo8w2emz9x\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"14os\",\n        \"secretAccessKey\" : \"9p3dhc1ezrdmn3mgx9altl\"\n      },\n      \"roleArn\" : \"rwqr5flf1clzi1zbeo4x8mjtx1fw11ee3omkkcnpyi0g2wfjc2qvjmrtow4xdyxejhgudof\"\n    },\n    \"sourceAgentPoolName\" : \"Langworth\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Leonarda Lynch\",\n      \"path\" : \"sas90fcjxrnm6orwgc7rwjzl10o5luxf2z2hj8w\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Corrie Kshlerin\",\n      \"path\" : \"tb0ksr8vx11osuw12wuuip1fnu9pwrluvephznf8oy5wlx5ket06olk7ryzu7ht7efai5ml7ia4jjfilebeew0uuznl3ochhz65pz3jku1erd14s41vgycahcxf8k5j88jph1nliw8uicazzy677d1vsg1d6jzwbnu32nur7shscf3zcigj\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"s4g7qzivd7i0ol7cafqk41gj2eavppaa64cs6g186j0xr394nw6r8m2sm5dc7iwvjvu2zyf5qqhbbw37\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-09-25T08:00:31.910531Z\",\n      \"includePrefixes\" : [ \"d993zhf4vctzjwdngrh9t26k0xu4ko8fesixj47nlnxvenbf6zbwnqh6shvf67dwtj6zuymjwkkevv439iq9a45fakpki89idn90yctar3vagim1qtprwr733zirewmx09jg6av22fyqvns94ye2zntkauc5kyy0a7fru2cki61iqvzskyz219iow5g1y\", \"enhpr72fjqju0r82e8us3f1jhrwx0gr88ttv63qrnjc5yflmfdrq21g4amnjmxgzxrxzu55cp11\", \"oh818gz0ii0f98spbp0ehl9u0ove6t0c8v82m6v8kz0bw6syf1ip0diil64bcg0555x6b0fjwr6yn1c0huz4kfxehykmczf9y3uxr2e22gq26hhmfh6w9qpw95pzzlre0od3ugp89uoth5fd69d4csrvpnp9cif6f5gc5m2tag7scflklf6ubwqjcvdhie4hm90r\", \"tfcd330uhn4ofnis011xxiwdnp1tuhwp007vzpz6unh4nje29zhg5yzw1spzofnnelc17kv2e1hmwcklz0k9bxpmgiitqylo82ze3cgf4s3wb009cfo0mf1ezzsxag\", \"fcoz178cdkck0w2zl1lmjv1ce3aao9yf6pty9uf5bfd4zfkcu4\", \"bmnjkgyka5tjccmfqzhst46k2ryn5umb2bt2y76tcwl3wiqamf3mw6cg98u52uyhvzhnzpnvm\" ],\n      \"lastModifiedBefore\" : \"bj1ydkwj2k8rxnvxiphownzwbtbkcqdf3qih0147a0e3sd2f8b8t6slwv16up8s94mhleegf21pcugpm9dq85k0i6xfn3jki96bdaur4c1anxnjjnyqugorzkhkc6i5g6oepdfgyo6c3fcpegitq4bob5p1okd11nbqd\",\n      \"lastModifiedSince\" : \"507z95bhj954wm58nczn04y4t8tnf4x4dpgt82tr42svmx19761qcupo0a4nsp092hhhfwew6ul9kxpj663m2vqn7jchw1vww9op4xbwiwg7zt6k\",\n      \"excludePrefixes\" : [ \"ryn06l2ljtj1x3zusvlwk1t50844nt5k8zj8c0y1y8owl4sqy31exsl744q4i8nwv7lm9oo2ge1ewfhgn3n96ezc8ynpmcs5f4ai4w7z1jdzmkjo0btosufvmsxv43ole83h2x16cj2v8yd65rx8u9ciknlrjaa6aemihree2rnbtf0m5r9w8vj3\", \"nljjgnxa7eoe63ssv4ajaw2wfkohyajabsprtrk5bqqw9fz9p2xepq9z25hs8vjdh2np8cpoayy4vixvrdbsp0gza45vvcbfxraghnzrsycm9r9y\", \"h7eni0k7ak41nuh606mp8asrjeay4zr4h76ucgf57430y1m4a6uxyrvf69q676zixszi54c7073eqlwwgacmwum179kaho8kwzok7oly2x\", \"yj5q7ebu23obm10gk9rmp6z0t7pjm07vyol8ioubpmahdd2isk4gumyr3oedducvlysyf7uwn6c0yy7hmpbrv0p8osqtu0uxn32gu6d5yvqnmhr1h82kky0m2j8ovalfksc42i5u5l9y5i6x6h7apd6ufpl50fxb8iq8svfrh0h\", \"sfyll9p2fbpiv4ow8o25ix1m181am\", \"mzlmt4sxc058sup36o73jbxgze9m2j59pcp8zan260p8qnvasdggztjx66jtn7z0ljgqy95lowyquau1fvz0ax3rdacani9o28o5ucou5zsc06znq47f4gluo0bzsxuyr\", \"axqfciisuzv8byu39lwxpr6opw1zw1qum7pzr2i\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-10-16T08:41:31.910695Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Ms. Wilhelmina Willms\",\n      \"path\" : \"nbmxqps01vtudterf29lpt19gq3xdqp7aysz4p9vk380z1fjb7upbgjnyswelatez19bjemdijtpman5395l72fhxtt78ladnsz8yqx8ih3zm8i2ueqkmqqudghozr1dsvth27m02vukcr2t2waxkxv7xmot1hm5md3wek62dqu7\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/685631\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"myoixyck51oog2sxn2kziy9wu5i9xw02d0nurmkqi6dpltjtecctaaoq9bqx3spv98gs90k5uqghrr3jcan3zzdw2eup6a5wydymmkn7jpeymtoxp153il4i66y1dl0ugt2eocrunzmi5bqhijr0iadn6s7myq1po374stielwst5gkgqmwvp5wgrugby0mxh\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_PRESERVE\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_ARCHIVE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"NEVER\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"nfw6m487kiqx2e32avm72c65faoq3boam5rxcpzrc7br66dnfh7g41ihz06y94mzxwzki3hsxhi2208x2uy3uiztudit91y3woesqvum866qqpaw3u3c1qcu9qqr6yw4s5e8dotxop3giglmy1ns8xvzf0ux1s8sovr8ezkhlqevxmnprn96d4i\",\n    \"payloadFormat\" : \"NONE\"\n  },\n  \"projectId\" : \"582h\",\n  \"latestOperationName\" : \"Sherilyn Greenfelder Sr.\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "446823c2-5c38-41b4-8f2e-924efe76842b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.911421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.create",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "f1b29102-b598-4fa5-b1fd-590f2d12acd2",
    "name" : "Lists transfer jobs.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "df6t3wrlumpr0woetxakr0mbf7brsavhd9eir2ajh2co728z3ibmmh2tk1s3vywhu65yfl2yhy2toevevrvhgyhekjcmufu521w1s0h6mx7ib45kpynp1a87kwi2l05x3vpjtm2w5oyar9esh07e9lc7ii8845d"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"riq32qbi32jspk9ase2w9mbbtcdsuzo75jlyj4mkc0wzlbvpugvjk86ylrjzn0do2ns56tu6g76i5f0lm7hf7ag4v2u0dwr0trvbqbgc9u55fl0d7hs42ubfw8o7k1lykvw186w1e77pvceq9p1uwg1wmhggbk1fin594terz9i9a1goo2rm29c33h7srkp\",\n  \"transferJobs\" : [ {\n    \"creationTime\" : \"2022-08-02T07:05:31.90184Z\",\n    \"lastModificationTime\" : \"2022-06-17T07:39:31.901873Z\",\n    \"description\" : \"Aut ex debitis quis nulla et deserunt. Nam aut aliquid. Quia quia quasi quos in ut exercitationem. Veritatis eius aut expedita non.\",\n    \"deletionTime\" : \"2022-08-13T07:49:31.901941Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 796983320,\n        \"year\" : 1234715201,\n        \"day\" : 882707249\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 2096390629,\n        \"year\" : 1012802950,\n        \"day\" : 484362598\n      },\n      \"repeatInterval\" : \"penwud33fi7ltd7ankjg77u10xy85vtdghanp4e76kzvwlk2khn0wc0n0hxcln3r8cc1otckv9b2kh8os\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 74789023,\n        \"seconds\" : 1916721441,\n        \"nanos\" : 1041787206,\n        \"minutes\" : 2104015171\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 220967784,\n        \"seconds\" : 811600600,\n        \"nanos\" : 1867780274,\n        \"minutes\" : 1843343843\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"SUCCEEDED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-06-24T08:13:31.902176Z\",\n      \"eventStreamStartTime\" : \"2022-05-06T05:52:31.902209Z\",\n      \"name\" : \"Denese Johns\"\n    },\n    \"name\" : \"Dr. Tomasa Reichel\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Prosacco\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Winter Barrows PhD\",\n        \"path\" : \"pe62h\",\n        \"endpoint\" : \"xhf0meih2gdt9aw4gbzakybq99t5466pvv9hi1vh3y9ezk5hl6gvwmk65dxp3w65uol4o\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n        },\n        \"region\" : \"tkdpmehaei5xcetxv5ie2kcroz2mbsczlmlt2d96x6xmbkf4xr55bclyq0fkrxuf642\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"fqx0v62xih9g8biaqsigiwwzpv60z22uyx229er0gvvklwu7f07xbe9j8bp2jvrzoy0qy2ib1rf0jyttwnvtlxxm1g39v88figecai9zjiszhy51jplxtfxkxekotbp4r\",\n        \"path\" : \"6cynchgorrqanlt84lvi8541uplqyv6a7bfgk3qrr0rots88rjsip4sjpgqrzfapl0eh2odhbncmi95czcy82f2nosj75gxrif3oqjwvxprrab4k65vmr3gcx16\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"67sghjggae3yqkif8cem61t47kh5cy1pg6teaplnt55qkk08vmnd35yfi6iz04ie6nk38ruzu3azn5s67y0mafloygd0fmy3r00otncri9fte0p6pplo416r78s3h8dj\"\n        },\n        \"storageAccount\" : \"8jgw7pohjir4di8dff4xqkp5kg2ct37ignh8gpwd0v9ycufd6eaz66r82yrh2dbp4bd6kj5u2y7ron9sz\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"4shl5yg9f3y9ypmr7rq2blheuqsfh29rrnvcxo61tbqb68ccjft05hcwjkbupouuxpwau6mky1yqgtll7ep0v3vve1xmqh8vi\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Mr. Bernardine Feest\",\n        \"path\" : \"gkxv3js0hvmz5ii655ac9w35syldkek7ispb5cunfflov3433ge2qwri7fh7c2bl5eb1pqk8cuw80eazd7cefkk66x0vil6v3vtq0hydfg\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"6d92\",\n          \"secretAccessKey\" : \"qu4tyqsa6fgruvsmns3xkrry1wioswloy495g8k9j868qqqwovhmy0t72zena82c8eflfi0m4613y7r3s5wyqgzgrstfq7sp34du6om4fwt8shgews9dpe2d2p7y7qlylhbkhb2oxbyn4l57olpbujqtds4u\"\n        },\n        \"roleArn\" : \"ite3ft42w4g5lrbzkxjh4worwr3wn2aoerug908zj1fbk4km5ywd2pvghpmw09qth5g7pgux2bcprs4rq1c\"\n      },\n      \"sourceAgentPoolName\" : \"Crooks\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Mr. Marylin Cummerata\",\n        \"path\" : \"3z3rwua6122n2qi5c9y53ltjgnd74avc3dg1yt5zkkbzrwjwv3kktdbp6k4n7cif9wx\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Josephina Raynor\",\n        \"path\" : \"1ts8jrjlet1q3nkmgv0tjp6wsk6ertkvkdvah6t2ir8z8h30sr531sj8dtviodlif63l3fpumftjfe\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"3nrgqx4qz7z724ugzzn4ww0tfakfwks4ehkl6vmj0d1uu9nn9ad03dlfbbzs6r5ffu0q3d77jirmk0e3l1hfshty2x10teq07hpfdgll7muwos6azo7ccoidwg6bww6jkx1st34ylqp6rhf9gnmz\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-07-01T06:04:31.903067Z\",\n        \"includePrefixes\" : [ \"pv5o86ksvvy7xnfurw60b1a9d67lnelxxl9onxef3xsz2zjlrfkc6dgfcee2ow0fqzi6g3vy\", \"4rwybxeh9p8dfqintdz5j1o9zerx77ya3qteczlkquz6gb197gc6q4w2l6gwoyxm8djlpcjzjegojg1ls60k8gpo5ju2m2zqbh1oklgmz2vyoghy29e8gxrx6\", \"1m6fdxsbiiotve77n8zbt83nyvcs7azwi8zwojnl13pl3hwqgfgi0e86wejda\" ],\n        \"lastModifiedBefore\" : \"k5m0i58xxigxxthqjlapdp5a0d2qn79ddbc3zoira222hgcrsm3b1l3kiwhjowuvf092o2legl4p6z5lkc5r2qtxh1nbouk3y8xkjznl00moyig5v7g6d8i4kcev3cyse7cfrzt1mb0cs6334\",\n        \"lastModifiedSince\" : \"q82h60irvsucobbxaku1287seavbtw69etbj1p78hmkn5gqd4ole5l687t802ojepbo1185g80hfwtn5ufiuynw\",\n        \"excludePrefixes\" : [ \"t72rc9jvjil5lcy50gyik83j3u2fr4b6potxuccd3osdvp\", \"tpeoqotr940wxm3nup6nik4hwnl0e6wcfc0ulzad9qkkeot3srwvtmfjyrtlsqemb2naftlcptin26zd\", \"tsw62kc9hn9umfj9kn7dp1m0rwt3f6manl6ca03ezh6afx2a1jzv17oeq0s\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-05-21T05:25:31.903198Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Adrianne Abshire\",\n        \"path\" : \"71fgda5ph5vydd2pt9l35c2ajstykqt434japbmvhcsw8v0oh0xd7fgsfx6fdc0lgsge64pdj541xed00m1b4e2no31kj4slm1gv842j6ljkopexqva9kso0ctt\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/122798\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"27vt5lxipope2tna0wco5kim83vwqidsmuy1mgz5k7nxfgl0un8ib1pnilnzddmi85wuqv4t6gilo7tysg6cenl5xm1629umsty89xtnn31sx6egngxn\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_PRESERVE\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"NEVER\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"luqeyy0yudi\",\n      \"payloadFormat\" : \"NONE\"\n    },\n    \"projectId\" : \"wtfr\",\n    \"latestOperationName\" : \"Ulysses Leuschke Sr.\",\n    \"status\" : \"ENABLED\"\n  }, {\n    \"creationTime\" : \"2023-03-07T09:06:31.903789Z\",\n    \"lastModificationTime\" : \"2022-06-30T05:37:31.903821Z\",\n    \"description\" : \"Veritatis aut amet esse soluta minima. Aliquam eum voluptatibus quia. Nesciunt est impedit sint dicta. Provident reprehenderit placeat dignissimos. Aut id iusto laudantium.\",\n    \"deletionTime\" : \"2022-04-12T08:47:31.903885Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1951485794,\n        \"year\" : 1285641030,\n        \"day\" : 576704779\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1357380489,\n        \"year\" : 267557940,\n        \"day\" : 656653289\n      },\n      \"repeatInterval\" : \"mpu30kh7vq9203zub3o8g9etd0kazd4l84mk6xneny7ogh1bwqeb6f2euabza9q1g6gv51u9qipuaj1t4bp7i35\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 558323687,\n        \"seconds\" : 959532029,\n        \"nanos\" : 302507020,\n        \"minutes\" : 454992528\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1074693781,\n        \"seconds\" : 928916188,\n        \"nanos\" : 985473094,\n        \"minutes\" : 1577670090\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"COPY\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\", \"FAILED\", \"SUCCEEDED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-03-10T05:25:31.904073Z\",\n      \"eventStreamStartTime\" : \"2022-04-18T05:45:31.904108Z\",\n      \"name\" : \"Alyson Pagac\"\n    },\n    \"name\" : \"Demarcus Spinka DVM\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Beahan\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Avery Stokes\",\n        \"path\" : \"27my1y5v7yneqqywos7n6a6u311yweq3fpzkyd58y6hkid05idtww3d3q867y7tgkync6r306cmq4scjv5rdbz20o74nqxn8t4gct3943p3girdehm9s2sm41rcsjh8uio4etp4s51260\",\n        \"endpoint\" : \"nh7kjy85bh3an7a9vn4g5qhd9r8m4hmlzdqn8wn9tpio515c74ew4b025v9ivunmgjgk7te40f9i92qodow4gd1wk1mw7ko1xekxtki60t3w668oxzb6w6hgqz9rs3pzlj3tdtjt8tke590gbnethwjpi2d574hg22nrf0g6604088ia72h5uec0\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n          \"listApi\" : \"LIST_OBJECTS_V2\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n        },\n        \"region\" : \"vfve25efqsqqjuza4gkz6xyzsggqq5vqj5nj1jpp3a0lxkjqoj5qnow0bzg86z7a9faww83tgmr35avs2qf1p5fscxecant7om8k3t4\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"30fdrxk8vt7o2lysdokipfyohtshquh2mur60epemyatzmb8\",\n        \"path\" : \"i2lpj3vtetwj443ni020z28m35b3jzza67cyvrkh9el448qk6e8vz951dwubti65znv4sz33zcvzl49vau1ymfwzgjsiqljd60lgdvdvo3qtz6cwe4zvjvqhcf5mb7\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"brm0grlpm60ptikkidc9rgaoz2qwp8mqa5t89xa9cvculkcymkfrxfrcnp1sp7t87ud6dajijgzh1hm64nl9tftk39skzvqcplz0168\"\n        },\n        \"storageAccount\" : \"qit8p70psv21zdrj0r8418ag0a67ms6bloa24koeleq9jmh6i4ku7srp1fapq7mas7m3jcwgkrnpwds4uh5sox2a1hok595lye9byrn5ya712f0xcc7vn0mv\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"lqnlmij3n5jyndbxbc5hqqgruwxnkomu22w7eepiw\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Louella Okuneva\",\n        \"path\" : \"vawq9i9nxv5n4aeo3wtkw5866suqyv8t6dq0k19uh3km4x9gz6g75mvwt796q6dx0zylwm9kw67oic2s7x3r8pyqhkhzbb6qg8dxokvkft9qyw0g09mj7\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"44hc\",\n          \"secretAccessKey\" : \"12v42kg66v62w03htefirka78tce6ors9q4vir4as31ttpqadhv36gvc0oc9d4dxn9051qtcre4wyr7d51oza2qvwtrb65\"\n        },\n        \"roleArn\" : \"pwndlges8z5qk5klnphqaleofio11a5qu2af8jv9p1r4v2ux0k7hjmg9iync30fnr4as3yfiwbmy1ze3n6zk54s2u8tqwigtq9bn6pa6t6sski50i8aocolthpz92rn3tbl1j4t9rqndktt2q5wlhjz6row\"\n      },\n      \"sourceAgentPoolName\" : \"Ullrich\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Verdie Baumbach\",\n        \"path\" : \"chdp8895kbp0f58e63imulubnp5l7jbs76nmyrtf7concojvpph8k3kkkhfrwugokftq4keyqk96q17appmfe4tii3fg8zopsnehkm0vcli9c5cti2l7ih58mc6j9r4b3isswmny2yglnwr7s4bpft79\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Jarrett Nader\",\n        \"path\" : \"ko2u1cued0eu20ebmduex6sj9ke184sx14fm0bq6o7aebtqzl60dpw42xpawlue9w4t0fnrl735pa473unyrti\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"bg4rjnu3ajpsy20ef5z2zxk0tl007ckrpre8mkch6i53hts34291e8evqnne0dm36z3tpefshbs09e5ox2wl226z0nvqorvv3cda096kyp2lnt4od8f79j5auonpowkqv51asdm3q56fh280ddt7q7jwpo572lwh\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-11-12T05:52:31.904919Z\",\n        \"includePrefixes\" : [ \"0flzshoflqpy643pryso3atadi7n85fim9jovwx53ht6qhj1xcja1qhu8r1i0rz9g61n605kbh21ih8tceozub2ky2mlbaukaf\", \"ex960chedg3lt6a771a1cm15q6n64u3dsmioo6dj1tfuw3nnna0tktao2mtzhqqo44b\", \"uif7zo106q3zvbb4tm74q9q2q2h1n1hzl8w18wvsi3qkhbk07fz9cpk8hhjfakx0fd0v81l1vduxzfuvltw8sxs63rxszsqerx4jow0cef37xo6kp8sgo1f7yae03palzltgblk2iel6bhf99tiqic8pjgn2hqx09zdklc891sk02ca5mia4yz4veoamp0cd\", \"ackb2mw84u22vtb6ugguh1bq1262d92qtwe5o6tf70jnfav8wuyuc0o9kvgz34u881dsdl\", \"fhuhlhqt2xr9wez8afgrt4i6wozd58ayffjqpi0shlm3v13l55whlkbudpz0ah4onbrqtdu7984xu6s6ev4wksrb9agm4cupy0cxu7ghylxs9vzbtd1wh8xbssau30r8a7or2z42stq6ivc\" ],\n        \"lastModifiedBefore\" : \"dbnrl4lk0n4yq9zcbzcn0unjneh48bwq0\",\n        \"lastModifiedSince\" : \"egvfa\",\n        \"excludePrefixes\" : [ \"1g15xasgtrte0ufappnw4helg2g1579cisi2p0s48xghsv6tey0du0fwzf9n0fi9dlwduprchyn2489ped5n3056zovdsqg98b1lcq8w45dal90ql32nf7f9eqxzk000ojvnkm0ztytsdoa83lbrfax2d79y\", \"r00jzdxxtvpky4nu9t7qs1l5s2p4yp58ga8ust3bgr7t848phrl7aww4h633rs9oxnovk34o4vnwh7bevocxobkn0c83xtmshi4xqsgyovntuf6z2myinjgiizof9c4m18suuom7hac69mtbvdx75w8a7vjt9yomkdks80m32xidsq7fm4jzsfhmu\", \"7cm5ln4c6hozmc3h93ahuqg7akr5g7qt21dht4h2ndzvj2vyfna967x7ophefihdjrfaarchzb5xmbe9tcfkt5ayjq92mfdgrzs8p8berwcxbjwaccgeo6mx4v76i8d\", \"gulccs0e7g4wh2blwu0a8yylw581qliq3v\", \"ksiaagdp7k218hgwapiy2qtqasd519bdmv3hfl705iqjhrb91wiu1r9oa4p25pkyxurrmuxc5und8a7wk5s78sko6swl53h39eg8m512r71umc242kw8m\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-04-02T08:01:31.905063Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Queen Emmerich\",\n        \"path\" : \"kkmdfdy5x5caa67sq63ix8i49bbxrx6rb0v434j5ng5nfr6tij494kyen7lje72r5bhpa2asyqubc7o6gkjgfdti\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/443226\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"g4xyknl234ywo2k7mtxjpkfw60403giti3eq8p0yajwjsq8kfbyghweo2dl8e4\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_COLDLINE\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_ABORTED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"jx02yifj5hter98xjuiq1gmfa466jgbszygluemp1hdqgm1bak88zynzi4c7yxnjoil76f6k6d0u6l4487t6sjs6pp3at7rv8lk001xx8pk1narbszzi7jt9r43bctdm5j5ze46\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"7ij3\",\n    \"latestOperationName\" : \"Walker Casper\",\n    \"status\" : \"DISABLED\"\n  }, {\n    \"creationTime\" : \"2022-06-17T07:39:31.905617Z\",\n    \"lastModificationTime\" : \"2023-03-13T07:02:31.905646Z\",\n    \"description\" : \"Tempore sed culpa. Veritatis cum quisquam optio. Facilis deserunt dolores libero. Odio dolorum distinctio reiciendis dolorum qui corrupti autem. Nam consequuntur aspernatur animi aspernatur quidem qua\",\n    \"deletionTime\" : \"2023-01-14T05:55:31.905717Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1541479507,\n        \"year\" : 2139071639,\n        \"day\" : 1107005370\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 906962068,\n        \"year\" : 787166376,\n        \"day\" : 189385964\n      },\n      \"repeatInterval\" : \"z2ax3k2muo7cm04fbue83dec4vl7onx4p07h8m6t07uqxj4q7xeipdeyy2qw0lgfzxcohiz3kodgahsamfsqy5b95u\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1404161098,\n        \"seconds\" : 1750180540,\n        \"nanos\" : 452428011,\n        \"minutes\" : 284825300\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 863728482,\n        \"seconds\" : 1335878289,\n        \"nanos\" : 1575051415,\n        \"minutes\" : 55945445\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"LOGGABLE_ACTION_UNSPECIFIED\", \"DELETE\", \"COPY\", \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"FAILED\", \"SUCCEEDED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-04-14T07:46:31.905913Z\",\n      \"eventStreamStartTime\" : \"2022-10-05T08:39:31.905944Z\",\n      \"name\" : \"Benjamin Brown\"\n    },\n    \"name\" : \"Leatrice Wintheiser Sr.\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Gutkowski\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Mr. Sung Mante\",\n        \"path\" : \"z2y7gl5h8oelxhllzy3s2yz6nfij\",\n        \"endpoint\" : \"8pgnexdl9igarx9oi8ictdxdchpmo0dp6500mdsz22ucpaulmr8dgiauzjyi64s340ld34j8ri2w0n5m7\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n        },\n        \"region\" : \"9u14illdirstwoj2mul626pkz6wvycop7zod95vuqm5hmoqa84u67tyr3cshech2u0kydfwls04xuar09fmrbu7euj71ut8rpr6d5imteaypbfosr7yl9jzgxkceqa3g48tnbun3y72pvlbb8ku1focuf3lm270tjsy8dztp3k9p8yel\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"s9g8p42rpquvnm8swrzi4bf2hcm39uwhq0t57bt9p1x4vchtseanc5osen4cpna\",\n        \"path\" : \"f3fdmito2dbz8imnvltq8k879s6axekgbkn5rm6kh4gmw18xnyivo6zi7vyc2qph5brtvwjchjnwdj8jddtia001qgwoszicm5jcbb5bljm7rra7vk72d209nvyjhcxfebm26bo8ka33grxy2x6cl3601s20xipnp8qwhqnfv68yehedxfcfj3nrqz\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"0qpb26ir7nfc58z8wx81caxrwhachzw8hlnj7w28p8f9qh08mxe1r9o65nc625ejtsy1219j34cg9ntfpamqep8a9zhw96i7hotpbdr8e01akkdu2rk\"\n        },\n        \"storageAccount\" : \"yxgr87157crszrc7sf1odsim4ula7k6yb\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"qxrjfdn8e6wom81tksh1zb96ann8t1m1lglo5gllm3uu5tlagq1akkktjbmeiluhp68v2tqjorvxixeywwpruidf802gufc6yh5zv4kfgryvmxkp3x0fa4p5dnhil2mw4qn07eywnl33wcm7arya4zefuqldqzzj31im3\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Marybelle Ryan I\",\n        \"path\" : \"0yxixyizb4iflm7tocaooj6hacyzxg3fnnkm1fx5n9ck\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"h084\",\n          \"secretAccessKey\" : \"607wg6mkqiv85uyvli\"\n        },\n        \"roleArn\" : \"j07n8sxv8w8o5413sypmt457d7r8bl01mq715cjeo2bl\"\n      },\n      \"sourceAgentPoolName\" : \"Gislason\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Darren Bartoletti DDS\",\n        \"path\" : \"yslrv8kk5okl0jp6unipgn7sijwnkmn2atpdcw5rtm20fq8lxgrjpn81z9hkei0k9bkru24yp6ka5k1rhtpf9klsqcxjwnia\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Sidney Torphy\",\n        \"path\" : \"8k8gmpoxepkbyytb29u9s0uw90a7exm4loss00p89w9r10swmvuqsevznki7b9x4uoogf1slktrchz0o8bwimgk0oejrrvxea9asl6k2kvwqy1zso9e02c19k40ybbh6m6wt81ep0pm61r5cllmd0vlrax1c94xzu3sizi9jmyikx0xct86w5wc60hm1v227mo9cjqy\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"avu3d9ixitg1wcnm6l3qljbi1ev93p4\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2023-01-26T07:35:31.906711Z\",\n        \"includePrefixes\" : [ \"x3enncp249du7gknrqmgazp1qd29tm3udswz8c04e3d9drox3pcqi872dg68cqlepwinqr852wxdx0e79p71mry4b0gem9f7ih431zw5wrza32h055k76pwn11lw8nk\", \"ac8ig8275rmcxfe7vgwlidbvpq61iu97i441sj2dtmzccvuucjnzrs1uswgu9mlkgkfv0eif59vugg0ewtizjyt9kuz\" ],\n        \"lastModifiedBefore\" : \"b7ixqdfqcj9h2s4nqem84e5r2180tpz6mu9d13idw4iqoxpxsqlvert6osww8ywph0ptuwty02tctvym34rtguc10ygk4d38zmyp5ptwt5\",\n        \"lastModifiedSince\" : \"o2qpd41d7k\",\n        \"excludePrefixes\" : [ \"lojcqi5vj9o3o78tuy86qpud5cznzup597m1gky2che02tjp55jjsjam9tdlrbghj2xbdrnfdoxpk604w57ultt0gtaqqtnz4cpn5wkei89bbqzpoii62ee9wu6eu3au8pwrhnr3q8hx2cfe9wvb1byf1yof568dfxzfgvpmyor0y1853jdqt3xs13iwaa6d\", \"anelb2152d9jle13r579run35c0r8jr3p9hswhn3i8t2iccow3to2x4w1x13uqnfoh7xkm0vznhtu9uxiipsamh98fm02v1hb8dctu35k1y69booimefnjri1mxmqywgh1zhdp8\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-07-01T06:01:31.906821Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Mrs. Lashandra Bode\",\n        \"path\" : \"66iikfza4c4hz3fy58ck3wabcydcvknj2lzsydxuf5v5xdsmtky5p8c67f2ed5ety8f\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/048772\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"nirrqixttg5ed3c9hv94e2ahuzl24uchjnrjrx5zjrpkp3m0gbnlsa5bfrc3qc4euad1dxmy0gn5ys6tg24etbivenysaa9c8vedipht257cgzd8ya82fz7u8ws3aq6s6193uyclgsw7ee1fwsybclifj6a6cp7ci9obzilhe5ygp3vhc\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_ARCHIVE\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"cfv1kiifxezfwsyiis09qe8j41mui6by8w77nbg1u32n1zh4kfcbok58d\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"j03b\",\n    \"latestOperationName\" : \"Miss Arlyne Hauck\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2022-06-15T05:32:31.907354Z\",\n    \"lastModificationTime\" : \"2022-08-23T09:21:31.907383Z\",\n    \"description\" : \"Illum animi tempore voluptatem. Et qui sequi inventore quo ad velit earum. Possimus quis dolores eaque incidunt.\",\n    \"deletionTime\" : \"2022-10-20T07:19:31.907442Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 335493646,\n        \"year\" : 1310647166,\n        \"day\" : 404352840\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 963795892,\n        \"year\" : 1347710762,\n        \"day\" : 714953172\n      },\n      \"repeatInterval\" : \"9fjvjvtcu7xbasxyynjdmbbialbmk8o1hxbk3bq064pk5k43owegxjgbg11dwlb4zlnlh1l4it71i0sqrhoo29n2ujnyrcgv3scd3nv7lhib9fv1e6k2vvm8f6pmi1\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1412104680,\n        \"seconds\" : 268421100,\n        \"nanos\" : 1951983663,\n        \"minutes\" : 1842132128\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1039246749,\n        \"seconds\" : 1255874188,\n        \"nanos\" : 443742578,\n        \"minutes\" : 396279023\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"FIND\", \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"COPY\", \"DELETE\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-10-22T08:42:31.907629Z\",\n      \"eventStreamStartTime\" : \"2022-12-25T08:16:31.907661Z\",\n      \"name\" : \"Grover Klocko\"\n    },\n    \"name\" : \"Anderson Witting\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Hirthe\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Angelika Nienow\",\n        \"path\" : \"hg2np7xbz7738h94zzzh6umvwdi3fuj3mmknz8j6oj0hbitzhiv4vyzh4aoggi8qlbila401crvn46xkj9po87xyutp068kxji5btjg9ze7uvflu9h2p7cdtohtbzb6\",\n        \"endpoint\" : \"1r6mfvlvcf9dj1usxse5zkbsbk0rcd8x3w4tn3ob0eihsymguzqexe20dq5alh8ak7veempp4d30cayjh00baemtluclqq9o6194jgk1qrtpc29q9wcofna6s8yhtq3wzavwuxy4bd9hnawfky\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"pb3c3yg6x83d16y276ddbbg4omtc8x2emywp88db1t8mqzs9egmf81cxej3f42l9esuce\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"zokrpuofkhlpx63m1cc4kgl9ze2bs4oxhc04lwebmpvb4zvngkzkweojo4u75905m2871mqy4tiecasqrrkiqa7mzw2z5u954l0v51p9oyz\",\n        \"path\" : \"uak74ycde50uiulk7d1jreh9wet3a20tvcqa4qj6jyslykdzcqtbb53iz6wv9s5owe3k1a0s9r15pgfrl9oobvcdcy0ikuaurgr5r6apyqvg2h80g7bqmrhmvonzt4g7mejtgnvqsxcsawpygek68yew4yl35h06s8yxmoe3yin\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"umcru3hb1d539wf140vz5oxrphwm\"\n        },\n        \"storageAccount\" : \"pfy35\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"dtmhmh9688r2tqmeimlsg2tmqjkh6y3o1jsnvn5c0urlcj7kiwnlopmec85hcj5u0b648pfzgb9v79zspiuq6rh1gq1qx7fsy85q0oimhjsg30ktg45jq7cd3x8o13h\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Hilary Bayer\",\n        \"path\" : \"koxuyceue2xyh3p6k3a7gyso186w8a61oju7h3gav87k2ixnc5p8xrq5wzvteerya0dcgvkx41o1s08ginpyvjh0gj2uoyh9o8eaf8v8hppbejjq9hp0jmdvnhdqjyqileagda\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"5055\",\n          \"secretAccessKey\" : \"92qbf2p1iy6qmvk9hqxj6fqmudczfty9ob3118jzsmimyahp6\"\n        },\n        \"roleArn\" : \"5rbywk5oyouoadxto996a7gd70pfqiyp451n2u71tps45fqituj219i\"\n      },\n      \"sourceAgentPoolName\" : \"Welch\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Lean Barton PhD\",\n        \"path\" : \"h5h55igvjko4m4xdc28bv968rnbb5gx5bs9kgqt9zyxzob97do7v5mbu78uynmllly\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Mr. Armando Windler\",\n        \"path\" : \"pg00xo3lomfge38inj4hdtz0trsexhpe7c1mtln10w6v7zk1k71bnz0v5cxj1qlbl17k6a6ttdlta0rhtbakh8l9g1rds5crs74lov3lf73kkapichnxhmn83ex4oioasji6o37hg8vynkbk1r8\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"lqfp8cvzwwfq7yyqj8wmwuofhr64xppqaq6cujt8u40qg79fousmf6nnd5np9odqjzd63jikt9at1lennajbbl4cwdkjsufga7tzze7wpqu4ucus131hcqh\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-09-26T08:19:31.90843Z\",\n        \"includePrefixes\" : [ \"1f3rfm39ix0kp2p9wdeazbsbmfwa3ktbytyrajqxrujz3ryfzm57hlr9t6az9nifgwey7zjxzupnvgfi76jmxr3g4wjz3zxiaqzpgm3m3t8zt1hunz8q1fpypygx1m28xjovuvv2ijk482efzcb0jnja0ulpg2l4bxephrla9\", \"fqlhevn6b43qtepo763fz8i463qpjt\", \"66lm3nva5vcw8w4ohoy3ujkgd94lg4wpu4mgp0jjs5a7rn0phklaaim5bt360e90kvujwiwiiy3rw5qxmsa5x1j6i7wfj1yixs9io3fqjpxt3ab7kzkebck7vcbvfsoxti2ilq68pyyxxduomme2w7cfumwk716or2nzjqorae\", \"tbvto1luu0kllgf6d8diirl60st9hslzef8kki8iebf07u6nd93nd07wvr9cbtfuyhyn70ukdz9np285aeo75wq4sge63l\", \"04q3kaln6jxm8cg9f8ijvz2sgjhe7qpuzuxsv8lxp6i2ggwxv5s5nrpkgiflfhooewmxh2l0djqr0qqja4m6r0vz1kln8uh2sh528b9kizknbcc7lsr9uff9xwh8dq5h\", \"o203wthwy1vu1f9o82ylypbouw7gfjibnxv3275g2x99dky9vv2ab8d8131sqch5oeylfgrqhsofbsfte8kvu78td2t6z30hhgk61irbyhbdx2naggv0ymr3pl8l\" ],\n        \"lastModifiedBefore\" : \"xwbes7vczsif66k\",\n        \"lastModifiedSince\" : \"yrqcsi6zra\",\n        \"excludePrefixes\" : [ \"zpalbxtc3csnbrxw7h8z949q5mgi8apnqyr780s1apzybqj5zz87mvxibhp3206nwu73pruspar2g24er2nzpb95aqpwcyd4rxprfb6pupd5fbdc\", \"1s132kpymcz3kt4vkdqgojlhd2fdfi2zyayk883m8autilfob5gm4xlfhdcqve1pz928ng0fcidvi6r834zd24ccw3fmise7no1bibk5bw0hevry49npzkj1i2not59q7lehhacick3gc93jzija5mgei81o6wzue2urwkj816u2e2vu4l4\", \"75haqx6i1vzpthunjelqv4wb8hxj9aafezeawwgrmmlqlbwwjydb0iwlp2hyur1lsvuy0xjmvb3svzh03zirk8bm7kecfskjb9pn95z5k60jcawq8ecar56u0q1ewfklykztfetn0kqhyh9e1avsxbo55xm81egcvl7j\", \"b24idudqkwagum1h0pywr7vchwfa8oj3wgteq3no1k8foqutzuhu82wwubyo56q1w9k391oujjutyvh6y8oui7nixca9kz1j8l8wda2yojyr2c1pvov5feksfc\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-09-17T07:05:31.908571Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Minnie Bruen III\",\n        \"path\" : \"7gz6xsiqtxo222m8apy6w1p5b6lobjnfyxhyatofuwo02hk4sfq2xcx7dirgtb6gfux5cequ2b4l78hfee75h0jy14e7i34ynpr22ie59i3pmsza8f49zet19w22cwzv9w8huyr77pylioz9qce18xeiyjojwsh9c13rpicr1fc0clwf5r8\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/964059\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"efvp8l8ih60oz6ugwi0mcovnx4bezqaz31jkvcaa74f4cbsflwq3tn2dow8qdgpbp\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_STANDARD\",\n          \"gid\" : \"GID_SKIP\",\n          \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_SKIP\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"NEVER\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"udxozliifnzj5emgqlu756xulxx9fhz7ivk4smd964bcvvtq1u6bujmqjlpcrqnvbzzy95ni3fw9yrn05ikh80gmlpnwix44x39omdu77x9y6x4qrhw3hxyskd4egwqs56zf7zk\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"a87z\",\n    \"latestOperationName\" : \"Emmanuel Predovic\",\n    \"status\" : \"ENABLED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1b29102-b598-4fa5-b1fd-590f2d12acd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.909346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.list",
          "schema" : {
            "description" : "Response from ListTransferJobs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              },
              "transferJobs" : {
                "description" : "A list of transfer jobs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferJob"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "aa47437d-3a36-493b-a3c6-7f0cb17747e2",
    "name" : "Creates an agent pool resource.",
    "request" : {
      "urlPath" : "/v1/projects/yd3d/agentPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Seema Gaylord\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"pxrm0hs57ck69f5ycubwcdd3aljcvmhscvcsji92rhw2iyqb7s9w4bmmnmdrdzb5sr17lcw16h96mqhimu32t6vaw3shgnqc3o4phigivwpfxb4p6b4t6jktnkae9h1craoa8r6i0pr51gx310t60est7t1a\"\n  },\n  \"name\" : \"Cliff Toy\",\n  \"state\" : \"CREATING\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa47437d-3a36-493b-a3c6-7f0cb17747e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.901764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.create",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "7fb712e2-e123-4ec8-af74-c7faae672fad",
    "name" : "Lists agent pools.",
    "request" : {
      "urlPath" : "/v1/projects/f0f3/agentPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"5byc2jow04uuek\",\n  \"agentPools\" : [ {\n    \"displayName\" : \"Hoyt Ortiz\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"8sjmf1lcl0ybywxchcmuaseppcjayxp\"\n    },\n    \"name\" : \"Tilda Denesik DDS\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Odis Lehner\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"3ogjrdhr091aumn02652lf93vsy8p2574pbskbc51f3uychl8tsthhhfrzurr0es3e719tzsxdahbnbqht52o4mzrupisp2tsf2cmo8ls9depbt5zb479vc6hfrdltzmnbq83inf\"\n    },\n    \"name\" : \"Terrie Fisher\",\n    \"state\" : \"DELETING\"\n  }, {\n    \"displayName\" : \"Sanford Beahan I\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"yvw7l70bmbcoqsgwt9qs13gyk0ablntncetfgalfrkocp5nehoufyghmlhtad4ndom9ms2jiiby562htdekn5p\"\n    },\n    \"name\" : \"Miss Candance Mitchell\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Miss Rogelio Conroy\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"iotlkijvmfmdkc56ram3ltmpgr79ypcjut7umnejx65dbehmdxxt53xo9r78o3vnl70qpvid5szh0tgwrzx8b2hqh79plk4c\"\n    },\n    \"name\" : \"Arthur Daniel\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Merlin Frami\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"joiyr5rnjq1hvr6ep9efa0yw6kow5m93h4sfo8hikjuqmxxk8pjop6dhnqqt0\"\n    },\n    \"name\" : \"Stanton Mohr\",\n    \"state\" : \"CREATED\"\n  }, {\n    \"displayName\" : \"Damion Howell\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"4m7q3hfp4cqj0ba4rf3jtjzfeiboif5iv6pyq6skq0np9q8vlm9m3tma2wij6a\"\n    },\n    \"name\" : \"Rene Gorczany\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Marquis Trantow\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"b16lysuovc6\"\n    },\n    \"name\" : \"Donnell Deckow\",\n    \"state\" : \"CREATING\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fb712e2-e123-4ec8-af74-c7faae672fad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.901498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.list",
          "schema" : {
            "description" : "Response from ListAgentPools.",
            "properties" : {
              "agentPools" : {
                "description" : "A list of agent pools.",
                "items" : {
                  "$ref" : "#/components/schemas/AgentPool"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "d7253c57-3623-4a27-be75-873bbcee0523",
    "name" : "Returns the Google service account that is used by Storage Transfer Service to a...",
    "request" : {
      "urlPath" : "/v1/googleServiceAccounts/w516",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountEmail\" : \"b4otxpyyw5jc58x17xj5sf3ttg6ob8k19dcp4un8h70bz09l52lmkbdy21xru7obg3ts2w6pk43ila7h7netxeu4d6xwgopalznfetixvvwi2gnc9n69evr284pwesvi1kni5u5ellozrfveryuw354slml2bs5na3w8erxth0eoov1v5d1vt2\",\n  \"subjectId\" : \"dg12\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7253c57-3623-4a27-be75-873bbcee0523",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:31.90054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.googleServiceAccounts.get",
          "schema" : {
            "description" : "Google service account",
            "properties" : {
              "accountEmail" : {
                "description" : "Email address of the service account.",
                "type" : "string"
              },
              "subjectId" : {
                "description" : "Unique identifier for the service account.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  } ]
}