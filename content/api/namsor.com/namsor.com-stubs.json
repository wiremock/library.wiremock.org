{
  "mappings" : [ {
    "id" : "ec490844-2636-44d8-b026-41d2b26569b2",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ec490844-2636-44d8-b026-41d2b26569b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.631802Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "539ce7ae-8ae3-4891-8453-1b39e65fc9a8",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "539ce7ae-8ae3-4891-8453-1b39e65fc9a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.631786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "8ef620f3-8f1d-49b3-9407-6a1169b14879",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8ef620f3-8f1d-49b3-9407-6a1169b14879",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.631771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b0240721-bba4-43b7-b0b4-1475a489d53b",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Venetta\",\n    \"lastName\" : \"Leffler\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 15.244419094189798,\n    \"probabilityCalibrated\" : -0.3737591968236078,\n    \"raceEthnicitiesTop\" : [ \"6azu53yzcyo8hkzjsli83y9kx50kgkjqp4u5wydp4b169av2msp5e4vhrprkeci1163gs31m0f8t995azixk4kggd1ryqf080dxgswdseve5jbsbvf44b48i8n8we7hpcx6q8vt2eis9qi460yf34eu2ryjoubhixd4p8nld5h8q3gaak4m\", \"zpww6e33vu4lomtwlqsng9z14nxgv16yih7d2iimdfdbs9ht7k21dmalv3588l5accqh2qvsjgfmls80lfwhh5\" ],\n    \"probabilityAltCalibrated\" : 0.13454025267335545,\n    \"id\" : \"sqtn\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"fawiq487290tfpywhmtyw0fd6nzy314jmt174ot80ar2ul2vefmja6mm8xb49xfmi18oasnvquw41ep2brz58pdwrjbi54r5p330hw4gjgginwm7gja076spi23iv2jipq04o3f7axed9ffwhaeay97vf68xaa5c463k5vjw90md6ma0mtw5lqatph1ru\"\n  }, {\n    \"firstName\" : \"Clint\",\n    \"lastName\" : \"Zulauf\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 33.352376562119545,\n    \"probabilityCalibrated\" : -0.47923589334390293,\n    \"raceEthnicitiesTop\" : [ \"ybbiddmkx5hinjtqg1\", \"gcs58hla7qbhhouohmk7rj6f05629g3hvxdmkh7h7qnzya7n9n79czwkpb1kwvhtg3nryheb2cturscdgntpto1uffocki0enrq33ujyd5ldjrzqornf2kv177j49fg1ccnkbaxwql0663o30ycjxhsr37uasrh0rehn1i2ki3t32wlqvxw\", \"pj48o7qpb379scuquw1uwdgif5af8rg5te7suylcorbeimeh8rwrpx2z8qp17vxq5oryn8u9ebtl7p9q3r9fmyslo92njls8kj2u1l2s4i7nfnk2ocfgbxb7a9ued98oc6hgeltmjoy4nu2yy9\", \"oq5b93v92nwknxyykrnrny0ey4tuuw57lgee1ooq2yz1eesbd691g01fmkisqozzwhi7jcrnwnztsrzyx35f3vqmrbv7u2lizjv02ju24tldk8sj1jsvr751o9upr3eu31wje5ueilsxadvjb55epw7317hko1j2lsa482r3fy0wr5cow2s\", \"tjkcwb8lxgwjos9x0maxmz533e0r4lc4bg143lk0sn6k\" ],\n    \"probabilityAltCalibrated\" : -0.538065603464754,\n    \"id\" : \"wxpy\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"lps7ee0cf3u2pwwlpdpicd13xvqvt685ub1i091j8uqxfhksryun9nhir9hyc49a7gbjd7mh48d94r9bcxydzznj\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0240721-bba4-43b7-b0b4-1475a489d53b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.631748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "df764654-dc4f-4f7e-b800-26e9d3366957",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Emile/Jacobi/74661-5689",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "df764654-dc4f-4f7e-b800-26e9d3366957",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.631346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "2e08f37a-42ec-4322-8a5a-ba1e8e3ba716",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Granville/Runolfsson/17587",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2e08f37a-42ec-4322-8a5a-ba1e8e3ba716",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.631273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "201c8f46-b27e-4821-8eba-b10a31f87700",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Felipe/Ortiz/82006-1421",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Ramon\",\n  \"lastName\" : \"Watsica\",\n  \"raceEthnicityAlt\" : \"A\",\n  \"score\" : 7.421908872279371,\n  \"probabilityCalibrated\" : -0.4190113776067568,\n  \"raceEthnicitiesTop\" : [ \"sb3712ple6r7ywasbdexsrlb20nsvbgy5jdcg4lni3zchapti78xirni5mz\", \"2w13k8genu8ew10g4c6lynevgsveqnqa7v3u0fi3jxbvhmtaoc4v96xkigxvs4r5ncyse7cej406xkjuqh9fbfzpy7ik68zcrtb0red9kvzq3rixtvv6m568so5gmquum6e31tsih7mnt2ed9y88d64qlo48bsp19d3cccmjffbypbwrfzhcnc\" ],\n  \"probabilityAltCalibrated\" : -0.2578315177138042,\n  \"id\" : \"6k94\",\n  \"raceEthnicity\" : \"W_NL\",\n  \"script\" : \"645fwp9cr4w13nrgdww7rbl9fr3hdixq38schp7ol6irt0zrlztaw3fp4clm6n0332k2gpc2sog7a9irieod6gbmyr6vsqpyyjne54vmkh0fau951eprcmezojy1r67h1yf4g2484u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "201c8f46-b27e-4821-8eba-b10a31f87700",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.631188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "15b2b260-7900-450a-b833-f1153d3aef96",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "15b2b260-7900-450a-b833-f1153d3aef96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.630872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "57be286d-e7cb-44b0-a31a-a6e179143329",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "57be286d-e7cb-44b0-a31a-a6e179143329",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.630857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "e2c0788d-d92f-4a9c-aba7-6a9cf7e3b107",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e2c0788d-d92f-4a9c-aba7-6a9cf7e3b107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.630842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "aa0b5939-05af-410d-a4d3-d9b65cab8da3",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Huong\",\n    \"lastName\" : \"Turcotte\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 18.286537356605592,\n    \"probabilityCalibrated\" : 0.8301015057818237,\n    \"raceEthnicitiesTop\" : [ \"n28aw7hstw78ow97ejqxz9k8eoywz87ewpmgvm2bmogdq1wmqkg2kj94mh3u3aw950hku78xrhf0hh6h8vdp319wt8lq6ht\", \"se9k1azbpqlzycejs2hg4a8cl2alhxkwmp5mi4kxofn042qov5knh1aycvfrumca6ge2sao949z4lqi8n7zdxsyhlkvbknmuelgwkydgjyyj0pvo7f9456fhk4sn2pbsou7gxkohy8itu6t4wqaqtrqpklxg\", \"m4fu6qjndnaq2zyc08vzx4atpofdb7fyi15saitsur762gbmyzhse98hyi0g1fod9hkd5xknkkpsz4l6isdy1thgwuk4qshsnbmuwszgk5lxp2dibi3a59\", \"5kojbplfma217pcme1dqka4r5ou\" ],\n    \"probabilityAltCalibrated\" : 0.13967951753452423,\n    \"id\" : \"gvzz\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"5k4dvbdum4i1acrkh7jx0q0ct2hb78ffyjalrxox39mm2yqg620g2os94jusf7q\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa0b5939-05af-410d-a4d3-d9b65cab8da3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.630819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e84f4a09-34f3-4095-9730-688d304c53f3",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Marquetta/Hettinger",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e84f4a09-34f3-4095-9730-688d304c53f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.6306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "5f2112ac-8d86-4cdb-bd40-6d68058ae3c4",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Janae/Tremblay",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5f2112ac-8d86-4cdb-bd40-6d68058ae3c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.630544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "c9b48711-83fe-44c7-b8c0-a6726da85316",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Magen/Bernhard",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Kristen\",\n  \"lastName\" : \"Smitham\",\n  \"raceEthnicityAlt\" : \"HL\",\n  \"score\" : 40.811749624261594,\n  \"probabilityCalibrated\" : -0.6748387625692951,\n  \"raceEthnicitiesTop\" : [ \"vt5bdm3n3zw472qm2jiv7xyo7ch6jv4wh6m9mkqch3dt9tbulare9gnjmwza3y5935qh3wjybl6t1dt9256li0yp9drkn7dvgs0p784yydbx514e5m5u89qg11h05jbpx5tfsccgq736r56vpf9c9jzqc91yzdv126p59b08mvr\", \"45kpdx3l0jj6l306ctqwlkpeip\", \"stlva77q50fz0t2ygtzb9achr4xouwjfcmq7kv4rhecscq\" ],\n  \"probabilityAltCalibrated\" : -0.14388989573731648,\n  \"id\" : \"sqmz\",\n  \"raceEthnicity\" : \"A\",\n  \"script\" : \"5q8z603k3n9k2nv4a3epfr6upekbvuj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9b48711-83fe-44c7-b8c0-a6726da85316",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.630475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "22e189dc-23a7-4517-87f8-42e6b00f8dae",
    "name" : "Print the taxonomy classes valid for the given classifier. - 401",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Fredric+Gusikowski+DVM",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "22e189dc-23a7-4517-87f8-42e6b00f8dae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.63015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "7c6643f0-4431-4b15-bf34-61cbc84b0bf6",
    "name" : "Print the taxonomy classes valid for the given classifier. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Omar+Koepp",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"taxonomyClasses\" : [ \"k3cu6zv6xovng91iyix46s2byz4686irmhzgguz91u0jiyab6x53k5dm2fl7phhkqr5dza3wbw48exkl6zhfsqzbjaek4tz0\", \"orarf38m92ci3t4nxak8z8gwdshld0kokq7vf9xv2rwnketi48t1ri8kr1onpdbr8gg3dc8galycr4uul4g0o2nvf2t0e62or31x1b45vw392opqry38s5yztd873qil5ldkra7eos12fdo02a09sfyxe3h0l\", \"4vbcy3vcta5bbjqi650uy8x4w2q2grnkb8b0ae1zeb5e5jsq34iw6am8cnpd60pr3nex7heme1o7h2rab7t25f\" ],\n  \"classifyingScripts\" : [ \"clqg7mwovyy4v9ari9\", \"ptex0xl3mqth71x2z1m3yvo8g6ko2yzriyl1aakbhory7r59nfoy856l3qjkx2nnlernu2wbi7h\", \"ulus7ygr2fp32jmq636tbq3h1t2n9f74meeek1bv6v5wssh9wif4mmpz3dg3qc5bqo5n5rioj4xxsl8enks8az50vtzyuf60qsa3e50e04k2k7nfwlf9t6elepgno8td9om37utbtp4nmh\" ],\n  \"classifierName\" : \"Raylene Hilll\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c6643f0-4431-4b15-bf34-61cbc84b0bf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.630086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses",
          "schema" : {
            "properties" : {
              "classifierName" : {
                "description" : "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)",
                "type" : "string"
              },
              "classifyingScripts" : {
                "description" : "The scripts / alphabets this classifiers classifies to",
                "items" : {
                  "description" : "The scripts / alphabets this classifiers classifies to",
                  "type" : "string"
                },
                "type" : "array"
              },
              "taxonomyClasses" : {
                "description" : "The taxonomy classes this classifier classifies to",
                "items" : {
                  "description" : "The taxonomy classes this classifier classifies to",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifierTaxonomyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "4e73820a-c15c-47dd-9cb7-19444d3f6846",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4e73820a-c15c-47dd-9cb7-19444d3f6846",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.629913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "65385955-1ba3-457d-a768-d016de4d0582",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "65385955-1ba3-457d-a768-d016de4d0582",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.629898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "b1aa8bdd-34c2-4ebe-9499-546c7f9e5592",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b1aa8bdd-34c2-4ebe-9499-546c7f9e5592",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.629883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "48758af7-62fc-405b-8cda-1d34a1fc0f09",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Herta\",\n    \"lastName\" : \"Harris\",\n    \"score\" : 63.84424708311296,\n    \"probabilityCalibrated\" : -0.5960354659174083,\n    \"subclassificationTop\" : [ \"ctdwuqp9kd7vtoyx6zf3wxx8nhjpfpvnc0z1cix842o\", \"ewx5w5q725zo88oophk6sq93xciz6kih6xfyzhxb5ri8nwbthvtszjheik97dpt6s0jm4t86mqfnj0jn5y4\", \"v1janahid6zr9220sz4o20huufh50rv4rjnjqqwi62o2fbyr5ized4n03eqnna6fxcuu3qti9incsvtn4jxm9f0fxsvtn7tl0krluxbanafww1e4botydy814v088vp68rsys5aloy6ywtxe2a18wsjv3c1ufskpe9zsf6b1b1qmm3boosfi\", \"jc95ibgpm0lnkbizkue0xoqgsacm4r98ooo54ud5ncgnjxu1pgh0v3ha1eohso7hjcgj4qbxm00is6nbj6rnmlj9r3r8pe2dsekdpbqxrt7vhpb1jec68bsaxrmc7zc72kqslfecrpj2tzypwqfrec19\", \"0wgcrqvernrld220yqihffc9q0lycsnvj4yqoawk190t9g22ggw16ql4tynra30cyk5x6hexxnbf2lh8t4e3nqp4ir\", \"rpswj67ydays1eequsruf1uij5gg6shok74mckjsrffbsj42w9j1c7ypusi39chf50myys4du9znt2a5h6z4gpu7q9p4hnpqar515tzai61ug766dczcji6pgvsjovb6slak12x1sf55hmm5a3eqw2q2ezjr3r526h0xt6\", \"daimtdhzqu66v497na2i6e981\", \"w7qtjutz3kyn2p\" ],\n    \"probabilityAltCalibrated\" : 0.3529846864042141,\n    \"countryIso2\" : \"z8kpp2n369vox6kv82n5woqck0vi4q7xlgvvm4lwqa1bpyi6crpmuj5ahje4y3h6dcs8x6z0oouuiahlx2fb6475ipfg4rnhfmsffnq6mmfwlbbgddml820o5g\",\n    \"id\" : \"8ll3\",\n    \"script\" : \"k5wkxllhp206lre8mtkwuu584s5ycz\",\n    \"subClassification\" : \"mzcag06459jj19nc4g161sysp04qv0vcprqzqte5zah4loau4ldcib4lg97jyf153v0zjwbo4wnd0pr8x4ac9aoz9tmukja8sadr\",\n    \"subClassificationAlt\" : \"bj1g3a7wcxgic96li9bsfm40r2uvucub51nek8x1jp51mb4wir22y9h6jqjic9h2dowi7qq99amaa\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48758af7-62fc-405b-8cda-1d34a1fc0f09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.62986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "11f7f854-289f-44eb-a2e7-defbeaf38508",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Williams/Jaskolski",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "11f7f854-289f-44eb-a2e7-defbeaf38508",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.62959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "1d2f7fc8-ca8c-4d04-aebc-1f686ec4a33a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Lita/McClure",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1d2f7fc8-ca8c-4d04-aebc-1f686ec4a33a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.629537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "6611e457-0360-43d5-802f-6c5b32412d36",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Tracey/Denesik",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Bryce\",\n  \"lastName\" : \"Turner\",\n  \"score\" : 9.29014808430514,\n  \"probabilityCalibrated\" : -0.780114278592801,\n  \"subclassificationTop\" : [ \"ht9gzxjq5xn85ryzhet2f0khx3un6aq1f6uwlphor47bwk5iyjloap9ga7ksp87kml3y6v7lbd548h1bj59lbitrvfjymsf4tn6wrspbepeb0\", \"yhqsieaeuouo0s2db4u5losq17yop7zaayh7h28iu7ga0odn3hcaugl7x0rtsixvvbnbqn5gc\", \"k0rfhtow6ov1um689ve7r2k80x530oy2udz7wqem5496jxo36tstz8vgq39kmiedaj34lukgnlbogbyy7o7qnjxtet79hepho2zu9mq2d8y0kxupc34mo444eeg9zoag1tyhs0gjalm3wcj9hsux9qmc0r8a7w32wu59le2z2zmnc2slqwaf805qngln0u3296vhl\", \"dya\", \"9dg339ivjkzetdtixa3whaqigd24c7grjzq1egfujt5jxs9d2xe2td30ubrvbcjwkrrvjst3fgjzgr8x4ivikkj115zs22apcgjbxm81ev1w0l9kio0pa7zlpdwil8ie6nyf9vhstrz73dgx5920namgwcws48mg7n441pncsvhww1e05et98lceo4h\", \"782dld17yv7h2za687z98n9i1n93idp3w9oxasg58zrzolk7ewcugih37jasmwfgxykh9tmijpevm2z63ou2w1hzpc28f0adux3ljsixvkhwbap26v80402mlkq7usoi317a\" ],\n  \"probabilityAltCalibrated\" : -0.44668454648694933,\n  \"countryIso2\" : \"xyt6yzhn2irh1cputldtsh8bdbf0s4jtvxju4i5qlrq3o99nzy2snn0c2j3yug0xe5pzor1592qiy98rcv\",\n  \"id\" : \"7o1z\",\n  \"script\" : \"znquis4ugk5svuxr9937kx41toh1a2yqprwxz22wkzteizhrlc4h7sp3e75rxt0b9679c0wj87up6d121pufoubghxxtovjxu13dlnvz2wkbwwpgunjkneqlsh\",\n  \"subClassification\" : \"cqc327hk3qxu1jxx0knp279vg5v4ddrqttvdppezm9v7ntfx0plrd8xsdaz9xqrdit97a92blqmio6xn36qm1oys5ome0ok7yntp2j9setumomm7795k6ccno6pqkmf9ztpjhieuxfondcgk2s608vv5iwvd6xc3\",\n  \"subClassificationAlt\" : \"pf0s3qblp42oei6muqitgb0fxleu1t60smec3owbkfmpk2mr57aapqncqhnon3dljlhix25f5zclzretapd024vy3d8zz7ikv8kcjg5czbwgxlemy5aql4o103s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6611e457-0360-43d5-802f-6c5b32412d36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.629469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "b9cb2efd-962a-4553-a06c-2ae95f1a8b27",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b9cb2efd-962a-4553-a06c-2ae95f1a8b27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.629134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "58ec902f-a1e7-4852-b190-7d53d83e976b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "58ec902f-a1e7-4852-b190-7d53d83e976b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.629119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "d5d9740c-e5fd-455f-90e6-db95fa6a0818",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d5d9740c-e5fd-455f-90e6-db95fa6a0818",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.629104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "05aaf5d7-ce3c-4244-96e5-e3bd1637d1d1",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"IIIIn\",\n    \"lastName\" : \"Frami\",\n    \"score\" : 31.64618458018452,\n    \"probabilityCalibrated\" : 0.52429963937266,\n    \"subclassificationTop\" : [ \"wrx35ytfd2piq09q58qihbmk3h8f0eaz9whf7asgjltt9c1aptf9rfnrort1akdpxfst5gdfoqw45m8aen0uvu1gv28cgma51k0rbichuwbiph7z5pl2ro0dduopkckrr0bm0ln7s4m913abk8v121fs40pji2x3sf8a1x44dg3u3apgkbtqm1r817gon83lpboml\", \"369lvdfevd8ipw8sm73o91nginphas9nrpl00qkygnpodpoa1tngo71i49oluvlwuzqqv503s1vy72w65bq57twag8zn7f3jvmcnzros02str60e5xogkkx11sh87pna78r4fkyp8ep01jhgpkc4dortsh7v3odvh9q4k\", \"ktflbajbp7rtskzit9wrleo8buvri9b6aw3ek80f\", \"gc1no4xu6s2jkikfb9i7c9mlh1gj0m7jrkd6z2p6kv7fygfp7yis8ce25qoayd1eorbalje4oe3phtryprh\", \"up5t08xsoh97zokqof99in0tmd6kkozbd5c53tdd97tzpgc8l3fmmbs2w5w0epeyx4tgtmvkoemxku7hwahnfq48gs8lyd2fswxrq0150ati3yop9gkj\", \"juy6\", \"7arwuvt747d8s395i58kb3js2hwqbvm7hr22wx96s4oi1up98hffychs0l0tv8ksnupdgxnhtbzmdjtd3vg75chnxksq1arlmp9swqk17kkrmmdc9svyu4ppy8r39whi8lhoa9gt3zqddwltlktjyj\", \"p83y6aaq730zdxen9w4yql3i0fjv7kl85gku55i9xcidf4kmw4ceejx5g8yzs4gogcs9q0z9nu8jg15m9aqpxcyiiko9hc0\" ],\n    \"probabilityAltCalibrated\" : 0.11703077664798278,\n    \"countryIso2\" : \"e76qwrr1txbd2zxkir56jsthp3qffequak5r2k7a0cpxauwvfqo8fyw463lmh11exu9f9o6fc2ncjhs2uokjllwyqfr32huo891ybrhz5dxgph0z2\",\n    \"id\" : \"bhrs\",\n    \"script\" : \"xn5u79bwe1awcl2v8w6c2u6xpwowcg2qvpcn2kkc23kfzzhe4aurm5o6hx7ngljk\",\n    \"subClassification\" : \"1pogq77qo5javmlkw9\",\n    \"subClassificationAlt\" : \"x8zubr9loa5lqvgkonba7qv6ypjzkdjggbuujf0e8ibz5ww3tgoy4n09736od8\"\n  }, {\n    \"firstName\" : \"Ramiro\",\n    \"lastName\" : \"Morar\",\n    \"score\" : 5.375942934058486,\n    \"probabilityCalibrated\" : 0.7488165769871602,\n    \"subclassificationTop\" : [ \"dmn4w0d8l\", \"3n5co0aydrmmp8s98rvnmpxxva503vk9aodg82167kyt9lc32411r8lul9yv93avf6dhnfbe0fi96qdtognb54z8nl6utqsfr1swpo2xxg382gf4qigjodvsbw8xnispoojf2zovp7owqpyvc8e6owtqk7tcah3q04xnyizg0b93uuf6bz1s8fixyt97b21hf\" ],\n    \"probabilityAltCalibrated\" : -0.7730591636445803,\n    \"countryIso2\" : \"di0d2dt9bv6ehjgma7e0m37oeuvi28h74rqcjgro39rdls47vps9jtnt8pjev\",\n    \"id\" : \"l0kk\",\n    \"script\" : \"64e4u1tenkxxalx2xdfixpoftbh11scd5\",\n    \"subClassification\" : \"4qs1lzg9u3eo6tr2m23zzj0dgb0glkp4apz0hqw57ssd9nvrkmg5oz9e1s0md29z18ahbg6uxib18y1yx57n8go5jhntqqy2h0ihfdcxyarpgd97p38e4tag0hiuvwuqm8u0ksu5pstcsv620yf6w02uuho16gmq4oe5j7m2eu47etp3udpa73eb3s\",\n    \"subClassificationAlt\" : \"9oyy\"\n  }, {\n    \"firstName\" : \"Lora\",\n    \"lastName\" : \"Sauer\",\n    \"score\" : 55.37703739050303,\n    \"probabilityCalibrated\" : -0.5696432974813239,\n    \"subclassificationTop\" : [ \"8ovgw440u7z2xniso97zkou6nhh5wa97vqnhxs50qofv5u1tj92diwjb85zczscrh37uy6s8ycxs52k41qsho2iqvztte7ddlpwn5jywhgsuc68nccw3oo54ryfly8wbsep64nkr73o9h9740x8m33qr9y8rhmhzdqbysm1z9a34w0jx7vavma4xwkksgjg3\", \"9hablzkuv8i0tvy0tl42as0xjd0wedzz24q4az669hh6m8ypw6umkvoysydmssy0klkfkaehtfqqpv1riu1lcwghovzdaz7sb2o\" ],\n    \"probabilityAltCalibrated\" : -0.9069050020085285,\n    \"countryIso2\" : \"yu3ks7tgl1aqy2e9sbn4nlsi7dsb9yn0ktwp5dbsgnyyc1n1zy5tc54zyfy8agpd8unwrhurre0sh3ec2llu0x2xqt1i329gfbv8i1oxqzguca1byqlf0n93tewx1cgcp1nb7j99lymblg09n6c1b\",\n    \"id\" : \"4wm7\",\n    \"script\" : \"3c1k7xjcu2qk2tyjvfm61irmcqi7qnycogn692rkg8eexz2zl3v1ztp3qst9k76oj5qv4sonj44qbbml7q8kof50enndqr82andh57k0pysybpnw60kjhwjmjhqth4127yu1zn4ofpb8uaheml3ud5yl3b9nshdb\",\n    \"subClassification\" : \"lhao9vnzmtacqt7nhsvwth22vo7p0db67hw771qqsfx6kqzecdcvtoc4xuklvx93gc63bexvgnd0o4vftuo1qgfif6g1v6oixdkllmxnssygwan4ckt0fqa0jcr\",\n    \"subClassificationAlt\" : \"papicerp1drse7ftbd9p2g5vcgjyo8npqluve1iv8ajzwg5qz4antgwwzk8ktmeh8x12pf4hx6\"\n  }, {\n    \"firstName\" : \"Darron\",\n    \"lastName\" : \"Buckridge\",\n    \"score\" : 8.363239589108884,\n    \"probabilityCalibrated\" : -0.3228570954790333,\n    \"subclassificationTop\" : [ \"3hlwk8ndsf26s0uvpzwt8hae2koup9eltplbzi8owehxpq0kv0obung8ogqho3of08jmwsd34g6i24o\", \"yl7ywm6y5qmxz4q3hnvcm88yxkkaz9t2r96grhwuroyezvuwvyh2fougtcwi\", \"y31yw0npmaqxvoj0vcbf9zla1hg5r93nr864yyvpd5h7e345gk1fgg1z2jnj5i7xwwbb2nkkps85bxslyotizu6tmzcx8ut5ht3042k9mq5to749ix72y1iigkp8go4hdecr99qhjzzcs1bnsa355ofdqrggxv43dh0onrzqpdl2gbphvw54c9xblon9nx\", \"feuimplgfwau7kw4gq47u5z9ccfoz3bnjj4guhkad6ubby\", \"ynblv51xpi3tipdw\", \"gqk295xd5qbuk557h88xuqyrx30ck5n2t57rou8ml86s9dc91plhjosnqgvpdq0o15jjg22mtbakobgu2dmhn1ssqj2ysyj6394gpa4pcp9gms4v7flpf5qh2r9li3pm57jzc8uyb0y22mlc6wzxu1tvtvhkp11wt5e1o3ombhx0pzezlw5cwkta\" ],\n    \"probabilityAltCalibrated\" : -0.2915612773433447,\n    \"countryIso2\" : \"ngx9qfrctl5h09gwvp36py4tfxjdr2zt0btdo6676st3n7dibrws92wq26tng8ymoq91i\",\n    \"id\" : \"063q\",\n    \"script\" : \"n4196ymku859g\",\n    \"subClassification\" : \"jack7emgu1hnlxzs43crfqv6mnjyf5bbihci8qm86us70puu\",\n    \"subClassificationAlt\" : \"bfihfkok19vjr1dmcwd1ss6qtaqoyt2e2i1f8racbtc59lippig859hrabt6v0vnh5po3bgzw3k12znkq3uv6lul17l6dziu3lime5dcqrhhpfqz1zbaatljukt3raoejqsb0ziszp9gfud5\"\n  }, {\n    \"firstName\" : \"Virgina\",\n    \"lastName\" : \"Wilkinson\",\n    \"score\" : 41.52527532090225,\n    \"probabilityCalibrated\" : 0.5214111488394404,\n    \"subclassificationTop\" : [ \"cjy0ola92wqlbbepl988a5vylg79v8gmk1fl42rodfee973vmlkci0gfikm1fryg75qumoifd1p1507e9mj0cqml6t3w6rakm84g1vwt9igxov8xgcoa8zd4jc9z4z0jjp0jyr9yszmzt4gcopse1uhgy8wl0u0j0k2ygo1a0z3nx7o\" ],\n    \"probabilityAltCalibrated\" : 0.3409189832876476,\n    \"countryIso2\" : \"2jmvkphugzki4vfrlduxolc7a08q84b2tje04bd49k10bnvy0mbyndovrvdfo3pzimweumjnz6fdu5hq5l5w07x4ix42xdtnzamm1u7x891na43vru8gmth0326wrm9q7doyuapbu1rtipj8xtd1bdtdfyjch7vfy91p86hcwuqokznb2un\",\n    \"id\" : \"t107\",\n    \"script\" : \"vvx7y1hc3pgooz6etmg\",\n    \"subClassification\" : \"8lm1znp95vikoa5b8uyvk0d2lw4zh2gdi\",\n    \"subClassificationAlt\" : \"mzckmhz4xd0pzrboppxll6nm7yw2i9buxi2vws7zbcx2pa7fdux9uk08en5vmva7g7tsylagvdce8dvcp85g5im5gmf25zg9ppqq\"\n  }, {\n    \"firstName\" : \"Kyra\",\n    \"lastName\" : \"Hermiston\",\n    \"score\" : 44.27380901537147,\n    \"probabilityCalibrated\" : 0.39507101751335627,\n    \"subclassificationTop\" : [ \"kv6zfm41b2yak0mwkp7j378nit5i7b\", \"ucap2ic01p1yj7ps2m6mmm0buxtrtv0e4h6l5y2fx6eezr8ib4v0j5jc5y6oz5c39a8a4dmyhfmlgulfa6elq49t35g40b8dn0\", \"h9pktwcf17m1aod7l35funx47l90eq3qghnzn1qzvc\", \"s0dt3eq80gzlyi9am6shhfmmiqta8ji9l2rfe86fg4ss0o4uvdb94y6l2m43n4qnbtx3w5ystqqv6mdwbjl74iocaqqdrfxe\", \"xsm\", \"333c309oc47rep\", \"u42x2mqo0imuzkkqyvv2b5jwsaxyu1tamvw5ylnutti79curmjyvgslglocfl3\" ],\n    \"probabilityAltCalibrated\" : -0.5520920698623526,\n    \"countryIso2\" : \"1thzwp8ffy858r816chaovlo0mrg8q4z2za032uei0cei0r2hw\",\n    \"id\" : \"868r\",\n    \"script\" : \"gebwdmfldgiq29mt7gvu3vbedzesbhzyiut7clzddwrzcd3yq2s1x5v9qeqalbwd633zm\",\n    \"subClassification\" : \"tr88hchu8r01wfjrywc9hybc660slfhr368rh3fpy55r240th1t9na08lsep1fyxc2jxm90tfgdt5h2hhpq6\",\n    \"subClassificationAlt\" : \"vhwj6ljyj6waj2b4pnstndyiw5rogm6lvqg6qwfz75tps6hxn4lmxnptd5r5o719sdnt2r1tloa50ri0s3fh0zjrena57p4sak9t1lx75\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05aaf5d7-ce3c-4244-96e5-e3bd1637d1d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.629079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "1c04571c-4b0e-419d-b5c5-65d00a6f85b0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassification/6qo1y79eomwuexspwj1go7boutrq30dloik93pzl56h0fqcvz147v36mt1w56cft9zk71697bkvwpddbzxt1lirujcokd401qubyfkiim1yrhvbvmy729pegwq/Willie/Erdman",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1c04571c-4b0e-419d-b5c5-65d00a6f85b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.627855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "9c4ae9aa-4b2b-4c79-85af-cc2b15854b65",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassification/q0m22jgi5y0lf4ktajyeia99dsxhjipkumyxzz8toug876t21g501eo6wyty8fhex0pq4solwfdgvjbiunevxl7jxuwpw56hzhwnsz5wfwjokvu62nx7ik70g9e7zny9od3cv8moip6w1t43g0xtl3mkop/Danyel/Hodkiewicz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9c4ae9aa-4b2b-4c79-85af-cc2b15854b65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.62779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "da3203d0-8e19-4d6e-afc5-ef6ee37595fd",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassification/uwlisnjdrfcs7d2kqe/Babara/Heathcote",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Lizeth\",\n  \"lastName\" : \"Corwin\",\n  \"score\" : 8.861744554567608,\n  \"probabilityCalibrated\" : -0.6654934484802368,\n  \"subclassificationTop\" : [ \"y3y4omibsiqkkw3d3rns33m220mb5e528hmp5ibazdypvpez1ocw5ort63xod6pafgh8cwmaj5jp4bnzaif025wcth2osdprj0x71lp8mqit7o7lyrx9rnnesbz1d15wr39zb1df356sdhrpdy078ypyf0j064okxri7ukere53oau2cj03p3i927km5z\", \"heb6w9s3syoqjjbwclp98v9q75o5am7aiofzbshl64ha9y05k8fd18tvlb4q6lzc29wzqksl5bx60ut9mn0asogzyfx9y016j8q1z12f1l0l11sjmntongc3f0jiqzjhgu2z0ndyf3d91uznpcues2\", \"i7f8s22024mpcaurpgaweb5p9ti97qti4voatxczs7f7wi3s0r0ctuwd8uw47co3om8h0dq65bf9j39bmebkpcl04sscnpe0yibbxivathklei\", \"zcrej7vuq1k248gntebijs6vav97wcazeyawwvigpwvbkjy7zsvqh8dlblseaurcxnhwbn70h2fq2p4m316aykl8q0mzi6yek38d8x22xssts41d9ki18hp3dhz8rsuae5fgjq4yvdqe9blmk2khio9m6gfqhco7bt9l5zkd\", \"lp3nau82oo1cphe0mfwy3zfu1b7iyhnq5q7iwd7f0gaw4tt9vqdtgrlkb6ffrhbki4qviq5fuub4wr7p70wp3qfju476qu9c5717fl1iy6dfgw1m2yg24eijpjwmlcryq0v90xn15pn5mnymwverzd4sxytoi67mb69uq84i213vo6m7aj1cgzje5acf7aw\" ],\n  \"probabilityAltCalibrated\" : 0.5390181746462186,\n  \"countryIso2\" : \"ad0uco806zwa46sr6b4t9zazigr23xcgrvdjxg9srq0kdrtpywi\",\n  \"id\" : \"1vf0\",\n  \"script\" : \"8ynjl66f8opvz7yels7k683lureg6dqerkobgu698lg6giltr27f3zvreif5bmf7mf\",\n  \"subClassification\" : \"upof04g2474adop0bk53jell2e6t645uy66ttywsrxsvs5jh6p1lmq8cefiau7k4pgxwn838hbcm1n4tpw3\",\n  \"subClassificationAlt\" : \"63bsp5prrbor4foyptcojkh03ye757683v45esix9cybp5og9ah6qitf6b9d8d98cy4u1tzj3begy7rvrfpddgo1p1s1vzkq4m2da1hgjamli3blenl2l2y7m1dkxvya482c2b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da3203d0-8e19-4d6e-afc5-ef6ee37595fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.627711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "cdf840cd-bae2-4b60-b0d9-05c647a86f7b",
    "name" : "Get the current software version - 401",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "cdf840cd-bae2-4b60-b0d9-05c647a86f7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.627348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "8f28ed22-19ac-4e8d-a029-eb85463efaf6",
    "name" : "Get the current software version (application/json)",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"softwareNameAndVersion\" : \"iwggb3atfotnvtp34hqqnzww3jpjswcsatmwj7zwm3wzti7hegg6qjc9bdjn49wgzto3q04rj2t3v8983e\",\n  \"softwareVersion\" : [ 351126943 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f28ed22-19ac-4e8d-a029-eb85463efaf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.627323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion",
          "schema" : {
            "description" : "The software version.",
            "properties" : {
              "softwareNameAndVersion" : {
                "description" : "The software version",
                "type" : "string"
              },
              "softwareVersion" : {
                "description" : "The software version major minor build",
                "items" : {
                  "description" : "The software version major minor build",
                  "format" : "int32",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "SoftwareVersionOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "f6618a34-d062-49d7-9262-f7e65abb235c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f6618a34-d062-49d7-9262-f7e65abb235c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.627241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "64fe7d47-6445-42a0-9f24-0c5066f1be13",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "64fe7d47-6445-42a0-9f24-0c5066f1be13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.627227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "c01236a4-2748-44ab-bae1-d4a6732d159a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 400",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c01236a4-2748-44ab-bae1-d4a6732d159a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.627211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "c4f74011-566f-4952-884a-172ba8ccf678",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"9y764p7vulz4mx4d3geleazf3hh6jbv0nvoqnm3eea3o15nxz03vdnvffi31kncdqntvaz7kbbtllyvlmxue\",\n    \"score\" : 1.613139239551875,\n    \"probabilityCalibrated\" : -0.5570674239720723,\n    \"name\" : \"Ms. Kaleigh Cassin\",\n    \"probabilityAltCalibrated\" : 0.8975948743814866,\n    \"id\" : \"vr12\",\n    \"religionsTop\" : [ \"224ynx0rt1l966jy0ff4b69ovcqxzzh6165n6yuyip9ixlzhdryock7b290j16ijhif2mcqedcz17umahvsjpa10f3jtwebvjh2r136h3kvnc6britxpvsyyz4tnrz162yi4e78b43s3zo\", \"pzou1augjy0gkyv36mvbyqd3mkutjaipyxypbwivqxys0p4pbrsn3y8ms2mvjtc0t6j4zj0b5n5hv4keljt3yn2c98dh8g6s3celctgw834sfei\", \"bwlgxxn\", \"5554reh43o3yhp8ggtmf148m122df2rppcidd0788zfmmlo97q8kajkn9kquyfstpkrlzs373x8az\" ],\n    \"script\" : \"ev7zcmskp7161gw6e1d7dzfork0pzlyz9eyitgq21lsetwtm9f86a3r1nf0sgi9wwr2c7ale6yca31vx6xxwyldu7nim86r7sixua9v2hp9c74a86mkchthoq7bkl1tj5ntl68u31szqd972gzcawkwe0dudp36x6ig\",\n    \"religion\" : \"iilz77h5fk0ua2p0504e51i0nneo8f1qi9pn8ro3ngoxvmmsmlsb80r3j6n5tyqrw4tje9n7jzfd9l5vv1kgda754uuiaqwhlyrp1dwsrw6vpjaklotv3d2i7mqi30qull9vdb\"\n  }, {\n    \"religionAlt\" : \"jd2y\",\n    \"score\" : 54.0393562229472,\n    \"probabilityCalibrated\" : 0.07080047573648418,\n    \"name\" : \"Rocky Vandervort\",\n    \"probabilityAltCalibrated\" : -0.5612453501383892,\n    \"id\" : \"winh\",\n    \"religionsTop\" : [ \"g9mcyf6aj82tg40ouj0401mvxkikqwum145khytiqbr2p332lxflh0kwe1vkysjdz2wrqxueq0\" ],\n    \"script\" : \"4006wqc72jk63nr7ftx38hj2s2tscxmmnrqtryfpziwvwveulyml\",\n    \"religion\" : \"oidzlygx10zhros35l2d20dpc6qhhyfaj19xu2qnh3u5qpy9xcst580utkvg5hmp3ty7yf28h4jhxwz7wjxb0m2obphiawq6q7sd5nwn\"\n  }, {\n    \"religionAlt\" : \"h5hckexm0xl3m2djta90jraayzbge257kuxg94sx86xljjo\",\n    \"score\" : 93.00520257763402,\n    \"probabilityCalibrated\" : -0.2810460720736583,\n    \"name\" : \"Mr. Karla Miller\",\n    \"probabilityAltCalibrated\" : -0.5981729427215283,\n    \"id\" : \"6fsh\",\n    \"religionsTop\" : [ \"j0j4vse9evt21wpui24ioq6j2n1a9v8i265qgbawi616dnt752pu4okkvlfc4vf4lfsezgbhghoengrvx24fupn1z1nnam3bc3ldeavevg5ybklqsqkhnp1t2ffdp6gubuwbq\", \"8wap0vj3apfkrfdtnjyx1m5nb7fwhijlgrq2a2to5t8mfn8usl116j6k52tpdpmnbpshuqhrc7ky8jleu60ft0mdpod26x699ve0esmry7xocppwgbwcgop17g7efr3r9jiokxto535kfbnwjw6o6xwt\", \"h3e7x2xmjes8nbw2eas8chubrhylmqq1aemi1dhz0581naihp72ma71iub01i12fl1uo9g9uqerixakr66ag7dumbo97b8o6wpo\", \"u5yesytlzslyn6u9pxwrw8pu54jzo1rlchrf5vnsohponbm07rxf4w3g1f1zm6fz3ipuuhwhwzuw8pjupr9mn83hexqs7rgxp636nmb3vy0uf\", \"b9po0dx4y97c099e191ilzsp7xgd\", \"vu0xleerkfyolei9rqom8\", \"o6h86fskupo9cyivo5gmapr92x2a1haosh2jalelmsl3vvsmvi6oun9e0vrzy1ro0eacv3vkq6zz48dksgqhuh1s4uzd1nt2f172zf2dn8pn\" ],\n    \"script\" : \"ox0qcjw3aw72jzgy1dtl7uytm80ej0b1g8c23x74vm2ch2u12z4esg8yuwl66yisz53m0ylhftod243dggcmkptaktjvedl\",\n    \"religion\" : \"4701i7kzez3cizy9m9xf592e7p31nm6ea1omtqgbh2rm1l1ayutnbc90yz1enkntpadhnxwveto8sggrwpcfq4qfp07\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4f74011-566f-4952-884a-172ba8ccf678",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.627185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "7238d0d5-4a6e-4d5b-855e-c18b4869c742",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/elmyfx5a519nx96qpaq1lluqg623auau5wthwllbbcl1j55r56kj6ydkfuf0qnxklb7qahnmsy12etmjivbg2puiv4tvyvhkos724/xry9c6t33eiipyww14qld4bfhmypwlevyvd822b6vxurb5okbs1bikwekadwudx1t9xtxkc6tz91d4qoklsvrpv1mbxbifuvx9zbr5ic1dye8i0ekt6z3jf85twfx",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7238d0d5-4a6e-4d5b-855e-c18b4869c742",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.626623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "3d0befe8-75b5-42b2-9a84-e19775a23a38",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/1bpreyl6p2ujizxgjsovl7s1cam6yx1mjri2vgooxovk9s8w426bf7cveqrs4ljahvzbziybim14zrrd8dnjmgdf704/0hdisrys90wvzf7sgljwwle17gusw7wsudas59076lodbsbj67wkd6wewf8w2sg6l98fmqtw6bp9kfgo7ewn7lgn9tx0sgx4nxajnwsm5dvfzic1181dpb4oixp95odzml8slqatzd23vffj3j5ioewrdhklpjemn1yuos6rsd3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3d0befe8-75b5-42b2-9a84-e19775a23a38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.626584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "811bf489-c5c1-4a13-b9f3-efdce35afff2",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/o4laps3bpr9sdlsk6c7g16hw5gf7fv3lfxwberoxcmgnyd2pyom4ijrayqkvl9r/ip8eekhjulb55ehrj6olm4ky2u1bzdevnhlof9vkmi3mx6y3f79uxwqo3oqwpa0j8yg8purkg5ewjpagen9dztgiysrpncvd9urbvpg6ioy8ezsgy51ma3im4c8pgwet",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"vcz4fjaz9lbmg3v4uwbl88olv7ydlcbbvqj9x5yffeninlvdmc5gbwt94h76v7vgosc1mjeyby1dqgjjstqjruc\",\n  \"score\" : 2.6895953394970085,\n  \"probabilityCalibrated\" : 0.38696682630247303,\n  \"name\" : \"Mrs. Raphael Gusikowski\",\n  \"probabilityAltCalibrated\" : -0.25029907195657164,\n  \"id\" : \"h93u\",\n  \"religionsTop\" : [ \"krw4zy6bv86tn4c517psm1hwaexudefy2gn3a1syd53oqzgncholhgoty94oqyufqga3u9s\", \"wqxdxemfeni7ce4pmgyr0kt6jgt7k2redmn\", \"eycn2cb36aivvz\", \"v1vcg1qmf6kwfzvke95j5nzvyktsd4obqmunut2gd9vtpmjduc06nxvjq8edxq7t084c7dqof2u2l4rhrqdj00sno3swh7doh70hwstp211c2k7gq2mpnt6rxb0psmqwivo9tvwsyebqjj\", \"rvb3q5xh9lr651u8dunlcnh94fzxo6v8bq1awpuz3wad2cg2xt95k048agxknt55cpidzsx0vow993b0klmbwdhc1bkqo49o27e0ptbbtk2ubwaxjrt8fzicc6xn1hcsiu8mkt1tq5bcllk1ta7erx8c7f8r73g27jw9s2lxc\", \"78n909h98yqhtug5mc18a4hj7d6p4oi29pbqbsjprji\", \"0iqr8bjfc5nfffnljdxd8itkdd4bj1zlsfkah3cj579ret79tcjheeqd6hs86zhep9av1nr2va4alwhc6et01of3ik6irl0gej\" ],\n  \"script\" : \"x8jlinubtzb3g615a5m7vq4lo4nd7yafa36udqjcp7d776ch7cc6naq7v9n7r0b1bnlnfgxasmt0wugpmfe4xi14fqsxxj7niuaqtpf\",\n  \"religion\" : \"w82eoo003sso99syyysy7n0riyh4ga39kbb4e0vsx3fw2afgb6zsl9q2fnw347zj2d1rxehzqenfimyroql0yg17xlv9zolx4sk0sfmj78h0fehwinqdqklvx4dd30qxry0ihee7ftl4aaspwkljwdno78b3yhlllzwnvltbzqnqbqzg39zk2q93u25ouw5fh6h31\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "811bf489-c5c1-4a13-b9f3-efdce35afff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.626535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "b81aee58-0ad8-48fb-a80e-73030ce185ca",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b81aee58-0ad8-48fb-a80e-73030ce185ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.626249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "1f1922b2-50da-4667-8d7c-0b5f9180027d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1f1922b2-50da-4667-8d7c-0b5f9180027d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.626235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "da89673b-3c8c-499c-a56c-8f8999878b05",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 400",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "da89673b-3c8c-499c-a56c-8f8999878b05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.626219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "0026715a-a367-43ac-bb85-d6c8f26f0f16",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"teh7cmn1ggbaifxnuag07pjykcclz9jifoptnk40m5chq2wfrtrp9pj3ao8uyt1ihh0m830sl2b0o8z93kur1sbj3xg4pd1rscfq1vhu5il7gzold08uk6z4npw0nt20buhtvopq29x2mdxsd9uaeo3veudzumjxe3vr63ea9p8pe15tc23b3gjutcr7oi6\",\n    \"score\" : 30.713284331647284,\n    \"probabilityCalibrated\" : -0.9064797434233822,\n    \"name\" : \"Randall Ryan\",\n    \"probabilityAltCalibrated\" : -0.06870322212211533,\n    \"id\" : \"8y6n\",\n    \"religionsTop\" : [ \"cblqfiqzxv032bzwtoe8jphg2pnpjitb8isehumtzfkkgq3er35d4t7hj6iviayow33gl8nns2yrywmkib6956d7u1rpe4pm\", \"1ww4gld51a4o55p9yt5xvu28xj9pg32zuhv9jj6gll9xqkne0hd5hsik6x5d6m6qr9gq5u6qag7iz0to5uj30oz15n4na17fx1p16cl7t10islrxd5\", \"6di6qahxpjspohva2ppf2ayndyur092p275tqw9g9eqq3u12gvuumsfl6archb74c2kl8v4\", \"bvfiuv0bcr6l8qwis4lgk03th3wwhljphi5c0tm1sl994x1pzitm7lew662vnlhju7xbi93q0lz84jpkggxnkdq0xm5lzldnjyzzn\", \"m9awwp3drv6zuadoj72b4sav0ajufjgveepywfrpdvh7sgmscx3epiehdj8nu7cgdj1g25id5dml0jzp7j8xod65xwr8lea32qo\" ],\n    \"script\" : \"e5ztthd4xbfcy2p35mh97ize2jqzjwarygvnhb8mkc6k6rodpvjegda7m5fs792j30c4zzclhnuz449xsnfok8ss9\",\n    \"religion\" : \"htp4nnm8m\"\n  }, {\n    \"religionAlt\" : \"zxpgv0va3nsvecke9c4axlcamqou69d43a7l5ui10va2v8g5llwbtvdeter\",\n    \"score\" : 18.956680168362116,\n    \"probabilityCalibrated\" : 0.360711009517078,\n    \"name\" : \"Moises Strosin\",\n    \"probabilityAltCalibrated\" : 0.781161192284902,\n    \"id\" : \"c2kf\",\n    \"religionsTop\" : [ \"z45sv4ekkmfyhu2rqj7vo\" ],\n    \"script\" : \"dcbr0g2ci41a1n3m1usgkmu7z8f4aik85zqburfjato3n221cmsa9hi5vpfhwwqhkqcbvbjqf662mmogpj4ufgb413la915ouazdcplfr6k25lyjqkchvpstdu4rvinpwplmwfzk0tech94foa9bl17ysj9gxqu4gaq9r\",\n    \"religion\" : \"nyv4mgckpkxdbr2trv653vf53g3effy39kmhju5lxy2hkrh4jz5kzzkirs63162x5jaqftar3e9tedkkkqk0im39s030zw6bujxng6koozsbxh19bf8i6sk66kgfojl5q3qb5b6m8ethhjg77vf6xh5x93qd1e85yv9kb19krj9g6v032lq4tyf3oet6ow251ttowoc6\"\n  }, {\n    \"religionAlt\" : \"djj4w0mbzoteqi55pbiyyabktzzqauiqlkppx3nb0mdp4lcjg6u59tbfcjj3cdj3le8vk33q1qymgus9x0ykgkt2cjsan1eqz0h0ogorbj6bnpgrmg0srtt6rec2i5czgzyfe7wmsmc\",\n    \"score\" : 50.169921758713656,\n    \"probabilityCalibrated\" : 0.011400432720669151,\n    \"name\" : \"Lucia Torp\",\n    \"probabilityAltCalibrated\" : 0.03786409874767349,\n    \"id\" : \"t7wh\",\n    \"religionsTop\" : [ \"0lg7pjbw7dbarj9tbj8xra26wyne12whyc5wygfyd10pid1ao8mlfmfr6j31jt1jrqa6qft4qs7ektgqw74n7t7v0a6djoynwis27r0960c5qcxgg6ol7faz6nqwjfwnzdn77lsu4rnmjlseniq2zdcql614\", \"evjkkq447u2t3zmii1v8979w7qabk9a1i5ibum5q1to2ty8ls1r1tcv4n8nt65o6n176k1utejc\" ],\n    \"script\" : \"lh3g4pam1z9sfrrkz4iotr3jpm45tv9jrnguv1aapoeqhnw3cp8bgle89heqrc5ic5rie2566mv0ob2fro71eb30tfntp65hyie37io6ls8cdp0181f769pezji7mlwa8fcej3bjo2uakusncygg03eqwhnj7xdbdbyv5227wl40828f\",\n    \"religion\" : \"c7ycp0b5icgw14m38ndlbuofagw7pli7ezqelgzwonfrm51j7onmpg3\"\n  }, {\n    \"religionAlt\" : \"ir2r1577m8ynaq7obbm9fdvdh5wvwqin11sa1ftslo52gcg42b8d6l1yclb8a9qldgvb5jrtjxt3yp5d1m0fibsc99wtheauwbpkvr9q43pez3gm0z1pjqics81nppc1u4evj6vag02y883w4z45titt\",\n    \"score\" : 69.52146825150417,\n    \"probabilityCalibrated\" : -0.013009448160673287,\n    \"name\" : \"Marin Ryan Jr.\",\n    \"probabilityAltCalibrated\" : -0.1711714906481976,\n    \"id\" : \"47se\",\n    \"religionsTop\" : [ \"g96096jswj89b86yqzz3tyvhy93x9izwq979tg9vzsl\", \"r4895lgxkmf01r8brs19pep2gf9y2l1vqfkngfd4ysed88rydijtznud16eo1ip0g4dytnn3ulu\", \"ofg82ejqxvc8vspbmnz6chq3cxq19myqt2gaw3577zfxstt1g0u6ow2k1oagv9zd5iv1ftsx42hgog\" ],\n    \"script\" : \"is0xm37zgx67hrl6v12k07sx23lfdgxx97fhnych31n35dszoli0fw77zhq8qq9u7ckta8ewjb39b81qkq9p7oxcz6fc0zjjlde2jyxw8gex5nmqcknmuesollo4m28otqafe8fdx6getosdmrmpp127ti7v1x5pe5kxui5zqccgoh8iao73kq6t\",\n    \"religion\" : \"4muzzvptdfx1i1pm45axckvt2wwp407v00hhvc39fb69q2lh5b6h72dnubw74q4qcnt08dteyyj8zx0tctjhlul05z4tzb18iodikp9bt0q34xw6wew9g11z1fb0o3mukbi9znltlkjk3j31hvqh15jgoo6ooy\"\n  }, {\n    \"religionAlt\" : \"m2okhg5uhu0ohq4jxi6icxmxgzirdc21bg6p2ek5grcsqms61bh5fdxwmt1sp131e907lhrcufafihnpfg0jbon88hgeiiw5asgzm2sq2wycp\",\n    \"score\" : 12.918330758452147,\n    \"probabilityCalibrated\" : 0.7108115922180767,\n    \"name\" : \"Tyson Ferry\",\n    \"probabilityAltCalibrated\" : 0.5631896100169225,\n    \"id\" : \"e17n\",\n    \"religionsTop\" : [ \"tg8f4gksbvmbm\", \"h5p76fem3itm7zdbyxrj1ef5rlew\", \"r756a5x0uw77agrciwhjgnm5ugo13ls40w53r\", \"un387cg6rbnaxdbki3mgh56ojky7arcv11g4x7nnthh6n4oere\" ],\n    \"script\" : \"c2e5ypp08pyi99xou0fcl0gxzkz78s0d3cbkzxf1zhrg96g811\",\n    \"religion\" : \"9uxd1ng9siazza37h5oalv9leq7ovx43mvpnvhrke9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0026715a-a367-43ac-bb85-d6c8f26f0f16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.626195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "4c800d66-0cb7-4736-8e06-d4601082e4f8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFull/mr6bcxfgi2mt3b9rqi6ktprcik8m953wdmb0pnd3neeyb5x7vz49o4kxx8qvjeqhcucb2k639bprdn4qp377cgyyyvg21uwjbjadf8v97jg1c5cvx/0bmatf6jx0i68qydbxg712sm2jy7q53arnt1t2pd37dwn106oqqr4loy83zkgbyfniz7wfng5geq5w9pxis7kqkpnetfgq6hy6i3m3b3iuaqop9tvnpghepikj0uuzfd8eedf/p0lxm42xm8fyfpkey271055yvis0l5f87i5h2xc5mo6mfn8x1f769rcmtfrniynikzerkkx67octxcmbi5ujo476bibjun0henps6p3wps3shf7j1s6hy01kbbs27grjc9d9p2nslzujbj",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4c800d66-0cb7-4736-8e06-d4601082e4f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.625291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "e976cd5a-28d8-4313-a0d9-97c07467385b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFull/6z8y64pgc6wqzzzvqni0/x9qi33wnz79858kff92o0qc52oy16q90yb0azzp1xl3chcnt6a42jzofpyup0yukks8kj01dxkv11wrj71uhkt53fffjkcyi3lk15xoej0stiasy41u52hkhpq3na6suqdmt3qb5zf0xb4g5rjxyhg0nb4rpuq0d5hobk71o/gfonwxug8t60dkkqp4t2od953hgae9llsvp7wnl1nn3itmccpi4nhktlf196qoszdnfqv9sl3higic8qsdxx8y7ac3v39bdnfmewlji0tw7abkkxtpecblr8084j509159d0v5wfczy0l0wcxfef7a08sjmkcg0aks2k3qdh1",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e976cd5a-28d8-4313-a0d9-97c07467385b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.625244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "dba765ae-aeff-4d56-8eba-81d51a27bdb0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFull/pv3y90bw4di4tbko7vixxqcp0b6a8zz5seud2vlr7cd5374b2xql8iqcuc8eidl5oqzgfwcjp6uounls04w5kq6r5d92foy56sx1082h1w1uyv64yzi467n2nvzersp605sb83klb8za7e9bnu4ia/1vw61yebcprz3dpcdjrje17l46f2v4rpr2obms3afycyniy3yugeihf2prvjp4oeh6bxafhy7k0vblg0efu0fw1jxjxlkbh5cipdprp91o1n72xdo7lahafwhzt09uf5ae9inriu0l9l68o9t9ww03kpkqyz0tply/wzkwod8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"u3sjp9r1o2m44ecigi7up2trd69mucl2qn2agbh9x1mq5gyiu23ig5bvetp6cey6u4opi3lmn63oicrz1dl9njfuqgx55hlimx7gzlt8usqlvqtfnudi217cp3on7kl2bg9s74nyvlqijna077r6vewccvexek0uno581kcaos7hf73vxnc7\",\n  \"score\" : 35.56298880502761,\n  \"probabilityCalibrated\" : 0.06501638705272694,\n  \"name\" : \"Danika Wilderman\",\n  \"probabilityAltCalibrated\" : 0.8389076856438067,\n  \"id\" : \"51wu\",\n  \"religionsTop\" : [ \"1yrzexx8o0l0a6o2kcw\", \"02xdan5fkedldvals5yf5ifuu2wkzb\" ],\n  \"script\" : \"lt89hv50d\",\n  \"religion\" : \"alxkauv2lplgn7xlxjg9mbect7ppcw0fpczzrj5h9ktt3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dba765ae-aeff-4d56-8eba-81d51a27bdb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.625182Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "3d2b1861-fed7-440d-9be6-6f65c9bcfb9e",
    "name" : "Print basic source statistics. - 401",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3d2b1861-fed7-440d-9be6-6f65c9bcfb9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.624875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions"
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "c7eae608-a9d3-4710-a7e0-8495d959b26f",
    "name" : "Print basic source statistics. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"countriesAndRegions\" : [ {\n    \"subregion\" : \"vligp95cvwkqhyxb8suu0cmrgd2eeo6w9foepw8i639oak4g9rvh7mp91d1eohsrfjwvzy4iek6\",\n    \"countryFIPS\" : \"6glkt5rvuhv0qe4349cipaugsdxzghinqqfl2\",\n    \"countryISO2\" : \"7qv3huer1i309owfvnsmf4qvivxms4m66del\",\n    \"countryName\" : \"Shawnda Stoltenberg\",\n    \"countryNumCode\" : \"0b3623e3osjoc5uzoyqa4l3567z5ydz746ohvh6aoovuk0d8jczriass06r2pwlpgcn13ho793w2s8cks7b05n40lai7mh9dflnv5wgmu6y5bomfzmg00phkk44tgoi1687n6rjsp\",\n    \"countryISO3\" : \"ukiews5iz4cndgjk2nu32airu1ro3nxzqxmm6qepx6i81533w0y5qjp\",\n    \"region\" : \"mbq5\",\n    \"topregion\" : \"1mjr0crywf4qorp4xwrz2r3qh5pzs0ln2h8lvcxg1c1hq3own3u0beb2\"\n  }, {\n    \"subregion\" : \"cc05qkp8j418mop83gp1jxpxeuv9iwlzdxvwyse0dbi8dz6w8xpl620ja9v4z5u7uyirm186\",\n    \"countryFIPS\" : \"35tt7uivnv03rtmifqvgmlaj2x59sey7vgta8cmqnp7d5gmprhhncjnp8ieb37bn9kqivmoffpcvikxn4z2r5u7jz7gbrbs0t58igcwna03mv9ik0k24sfjl38uvpqjuakwucmdk8tci3n74ode377f7gq8k5kntu4paj8pctl0rru2zly94ugzl6gmxigjp8lj1sh2\",\n    \"countryISO2\" : \"26honoqhg76lad6p3fy3reup4jzslpltofu7mfe9gnvot3pgnrekdrrwatab080uv31w0k4gn3ptgjxkr5s94cuoixov4e82820y8i3ak7p0yp0d33htewe2de3f59j4ngjhelj9zfidb65e66c8c\",\n    \"countryName\" : \"Miss Dillon Weber\",\n    \"countryNumCode\" : \"9neuy71toygotk41sogqb0f9ta6x2y80rlgm80ld2rmcbupuoam0uf5\",\n    \"countryISO3\" : \"j4gt33y39xfkd5cica5ueazm3vgo2rn92jmwfoyu95qf5dldxyme5slgfc0kf14n28vxpkgknoue7ikv3edxr4o7qjo9spvugg505vghhb2ml\",\n    \"region\" : \"qf81yanj9tzb33yriv3b3ktwgvijnbmtxt7q1a2oszb4k47l5xv54pq\",\n    \"topregion\" : \"c4a1uoptoe2lf65phxnhj7ccbom7i3zxs1kf42itnoqxu9zk7iffxyzrrrhl2mdi42kaen0svm8ur88r616cxedvfq3b6qiso40657nqfysxiusirqxrv6b09oas4wpw8td2g9g7lfmhdcipqhmlgrkiehp0q7fvz3kyr2n3jpqb2m64vey5r5llqd4wzcn36pjznuf5\"\n  }, {\n    \"subregion\" : \"e45pb\",\n    \"countryFIPS\" : \"ml27jpnsmqragczfv3c1na0v59xhzusl578lvq47rdfztbfxjd6bjaa7q44avoghfhb0k2l9oy9n1oobjdrl32u004mlfqi2bwj2f\",\n    \"countryISO2\" : \"c1fl60jihqf4adu9qyf5lyzha4cr418yc74v0c1agj6fwlnselafy73u87yfkuqrputbl60xill9skk714y65zjcyizc4viuoimpn5inmqcno57r4mcp9b7ftinwaiq2or6mcfioxi1gd6euj4rx0iojw6tc7pchmyaq56k\",\n    \"countryName\" : \"Greg Bogisich\",\n    \"countryNumCode\" : \"rxph07g08jrfkm472not8ceh2l8j1bkqvp44k63fqs435mx0nj5nos7ymf3tmfk9mpcjkpf85aqc0qh1mtp81t4oxdmfzcchyu1is5pglsnvkpbi36cotrsnbaus3vxwl7bn9xl3ysu0t907hgel\",\n    \"countryISO3\" : \"zgpcvitg8s0lw4n39l78u3p4a0q53zlce8jvg68g2ddoqfsap88n4bi9n19w5f71c8ojc3ggzfx84o7udix4sqd5kiwimqcduliqt54xyaohoqjnsz6u2gz7uls3uhcc7yfhygxqgvqjynlpb6nvbxnk99x6tlkvd0hob4ib1e7l0ywl907dtt6bd86o\",\n    \"region\" : \"27ut8gtanuar1hehc3v5itsjetni6rantyl9zi\",\n    \"topregion\" : \"ptcklquyti0g\"\n  }, {\n    \"subregion\" : \"436xj3rtd2yx9zwv0yl0dwdwpz63ryzsa0ktabdcq719hgjl824nbdw1bik676pbxtq985w6kxmrmh5qdti4zqgwxlyo3ng87yyhr7xrrk2rld\",\n    \"countryFIPS\" : \"1kn7sx1hjbvod6imwgr4bn4yzycpw5\",\n    \"countryISO2\" : \"u68gf5jtl1hixtms2etw4olv3belkvjrzfkprjal72af\",\n    \"countryName\" : \"Mr. Lonnie Price\",\n    \"countryNumCode\" : \"tequfqy\",\n    \"countryISO3\" : \"qst4db8gl1oorszyryobnyy4ujkqr2kh3vh1s6i7zrowkanwpvm4d31hs0xtdyzd7ql29lqnlidvgu6q4lli2avozfzmsfq\",\n    \"region\" : \"0hkreij6kk3xlfier0jzmndamqm2hm6dtp2zbvsw1ai3eum74zhyfmlidvj72wf46n0up14zsvehnn1ajxhbh5q1k4w4o2zgopiafdvn7ig1rb5mst\",\n    \"topregion\" : \"2xzt91sis0wn0u216wdy1li6pb3mfagjum4xogx81mdtisniyoy84f5qk5b3fi20673j21w4omqisgafozsq3r8qzjlsgj3yjg9e7i8e8bvteebv4ffn\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7eae608-a9d3-4710-a7e0-8495d959b26f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.62485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions",
          "schema" : {
            "properties" : {
              "countriesAndRegions" : {
                "description" : "List of countries and regions",
                "items" : {
                  "$ref" : "#/components/schemas/RegionISO"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "RegionOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "691eea6f-2f07-46c7-a3cb-7b100877c0fd",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "691eea6f-2f07-46c7-a3cb-7b100877c0fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.624311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "766d5fa0-5cba-4c7c-9196-a922262a8ce0",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "766d5fa0-5cba-4c7c-9196-a922262a8ce0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.624296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "d81bea8e-1051-49f4-af48-dfa6f1afd9a4",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d81bea8e-1051-49f4-af48-dfa6f1afd9a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.62428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "cafc0af7-b16b-47f3-996b-3c997df8b66c",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 70.91020641071434,\n    \"firstLastName\" : {\n      \"firstName\" : \"Elmer\",\n      \"lastName\" : \"Bartoletti\",\n      \"id\" : \"r5j9\",\n      \"script\" : \"w7s1rnfqcmy7cv7t2l8kgxod8dozmk8r7qhrgjzjdl4o1vygmlziv9rafnwe2yn6y4miiomyrfu1swfbl97i6s9ht2e0pzmvufu92a3oajxkmzlifwx531dj72bd94otm42kyrbhnzth5rcdfcgdbc3bg6eph0xg37a7v6wsa6laegcj6wu4va371cp\"\n    },\n    \"name\" : \"Marshall Hills\",\n    \"id\" : \"v7dk\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"hr8lbj1idu6kczas5z3d41qd3m3v95qisp6j43joi\",\n    \"nameParserType\" : \"LN1FNx\"\n  }, {\n    \"score\" : 5.87090196592851,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ellis\",\n      \"lastName\" : \"King\",\n      \"id\" : \"8y6q\",\n      \"script\" : \"sb7s9995c3ibq365kzbspbtoznyodvbkupyjck8anbhkkw4c7fxpkvxcjp\"\n    },\n    \"name\" : \"Analisa Cartwright\",\n    \"id\" : \"v46o\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"x1fay0wrl0iql5rihtq4wmco42phhmnv8jq33r46r8bmdbg2v8c9imfny1iw6ww6ajkmzer6kwpm0mz1pi3bt1f1461tcaot0tpzp5xfkn2ti3x5e1qx3mtmuo1rj7v499l\",\n    \"nameParserType\" : \"LNxFN2\"\n  }, {\n    \"score\" : 29.745029389410593,\n    \"firstLastName\" : {\n      \"firstName\" : \"Deann\",\n      \"lastName\" : \"Kuphal\",\n      \"id\" : \"298w\",\n      \"script\" : \"wogvgdwrte6065zy33ytldqz1\"\n    },\n    \"name\" : \"Leisa Waters\",\n    \"id\" : \"q0xm\",\n    \"nameParserTypeAlt\" : \"FN2LN2\",\n    \"script\" : \"jbzf0qw5cgw60czm8pe0hw1x5evwqo6129d0bbcjr4cju0gq308pa1gpcnty2y0xr28bbbjubz4yzh4mdc4fng76e21hil8exxag6q4o0emtgp0ass1bgovm3mw4brlles4q7ojd18wej174g1xc2t3jujz4yjnk\",\n    \"nameParserType\" : \"FN1LN2\"\n  }, {\n    \"score\" : 10.799573632238857,\n    \"firstLastName\" : {\n      \"firstName\" : \"Marcellus\",\n      \"lastName\" : \"Brown\",\n      \"id\" : \"157b\",\n      \"script\" : \"ooo1esgv4v1zd1ekazob9ybpeqpqrnxdksu7ny3mjfr7xdhgh16oyl49z7fl\"\n    },\n    \"name\" : \"Miss Bill Legros\",\n    \"id\" : \"596y\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"ntmop6g7mkavu9lppd5nklabvw71m4074t0e2rpnk58sz\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 52.8387441135161,\n    \"firstLastName\" : {\n      \"firstName\" : \"Christian\",\n      \"lastName\" : \"Koepp\",\n      \"id\" : \"an84\",\n      \"script\" : \"2ew\"\n    },\n    \"name\" : \"Lauralee Morar\",\n    \"id\" : \"5esj\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"51zqnicknbdd3xh26yr686u13l7flf84m03jdlkrnpnwwl8a6qywozq4obir624ya6hy92wln1syrok7chojdxlexfu1tns27tm5zlerpk0sez9cwx36mv2t5jj09xol35cz4j8w3m0i59liukjnja21bnder0gzjwxszz21nje8reekify9poofsd\",\n    \"nameParserType\" : \"LN1FNx\"\n  }, {\n    \"score\" : 74.66561202992551,\n    \"firstLastName\" : {\n      \"firstName\" : \"Matilda\",\n      \"lastName\" : \"Kling\",\n      \"id\" : \"55q5\",\n      \"script\" : \"8xmaev27po5w27k9hmyqovlvtf5ngcpki6fsgzq9wb7bjopv32a0gj0eu28udqmt2f26m037ysrcim3ay9p32esf\"\n    },\n    \"name\" : \"Kirk Bergstrom\",\n    \"id\" : \"2963\",\n    \"nameParserTypeAlt\" : \"FN2LN2\",\n    \"script\" : \"joyhj4eg26xzalqbibyyhiv24pjtv4glizuerwtzdfl7q7luuznhhfu2c2hwlmf40q1m2j8vrda34eo6cf044iq37rwyjm4s6v2hlqe9fq6bnpsm\",\n    \"nameParserType\" : \"LN2FN1\"\n  }, {\n    \"score\" : 28.70992825847356,\n    \"firstLastName\" : {\n      \"firstName\" : \"Fabiola\",\n      \"lastName\" : \"Marquardt\",\n      \"id\" : \"3mw9\",\n      \"script\" : \"236ctknpx6p5x6mhq2sqxyqw1zfqb08m5rs88qr4o2c\"\n    },\n    \"name\" : \"Reid Labadie\",\n    \"id\" : \"9nt1\",\n    \"nameParserTypeAlt\" : \"FN2LN2\",\n    \"script\" : \"bre0gb4cywej8c3ypkmaatrk9zgmronshqt33p3x8kh3ew19503aggfkao7v7kkv8i4ppqureutz5quhk2\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 10.647398080474012,\n    \"firstLastName\" : {\n      \"firstName\" : \"Grady\",\n      \"lastName\" : \"Purdy\",\n      \"id\" : \"2j77\",\n      \"script\" : \"lhweoll7fwcwoin0vzof847igehc4qxxw8dgf3u65812jrmr25bz6vr6mndmdvfzxz8asoi04zeson52d1n4zi3y8\"\n    },\n    \"name\" : \"Devin Hudson DVM\",\n    \"id\" : \"4851\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"76e6o9vekx27tje40o26hni4cycekhwi6b9g212wlplay8jle5mpfihjuswvlvdf4v6vxse9vp0z44pbe2b6wdulikfxmqpjf7zw449bbun6wjwmg51gr\",\n    \"nameParserType\" : \"FN2LN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cafc0af7-b16b-47f3-996b-3c997df8b66c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.624228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "e548ff2a-349a-4027-a6df-f22762010f52",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Karly+Effertz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e548ff2a-349a-4027-a6df-f22762010f52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.621759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "5516982e-49ee-4295-8508-7a9892aab293",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Tenesha+Rempel",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5516982e-49ee-4295-8508-7a9892aab293",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.621702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "5ebee2df-354c-4d44-abd0-9464d3afdb66",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Oleta+Strosin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 77.1186272643165,\n  \"firstLastName\" : {\n    \"firstName\" : \"Hildred\",\n    \"lastName\" : \"Kulas\",\n    \"id\" : \"7y2t\",\n    \"script\" : \"gy2q2k8jelp7few1rw5ge3hsmjtxuyizr8drk31mie6w\"\n  },\n  \"name\" : \"Pearl Swaniawski MD\",\n  \"id\" : \"s96k\",\n  \"nameParserTypeAlt\" : \"LN1FN2\",\n  \"script\" : \"0cc1nbs1ou3ualhcr9hld0xfsrq6b83nabs0lp6twpy49ybt8nct0hc7l0h1ltcx90npjjdzj4s1nhchumg01dtzpwzdxixchwp0fx1i22p1xxvow4pz6c945bad7rj4lhuonhnc7k2j7skevpetcd1soxiiuo8lde9uxthcucnvicrmxb\",\n  \"nameParserType\" : \"LNxFNx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ebee2df-354c-4d44-abd0-9464d3afdb66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.621597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "39b4a175-0efa-4d00-87e2-e106cc9e041a",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Alex/Blanda/1-504-588-3621/fs9e3tjq8dv0nl9i57uia75psyks94kd/whjqi8yjei1ywiuhu5t99qd6g2vh3udwbsiolruflji44oymnk35d74kfzwte6vwl4rven5zw49rf7n5wg0jkutk8vat25w8by9exatp4erwaj0nveh337cc74tg4u0cg81dl9t3c4zur7kuwtl",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "39b4a175-0efa-4d00-87e2-e106cc9e041a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.621047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "e055b484-bbba-4e8f-bffd-069bb0dd9668",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Winford/Lesch/773.788.9784+x602/ctrqmkb357zfjv5adlkksy23l0s1msqrp880uhorktywte5t5bz261rs6izmkqrr4aan2eghbon6wv43w7x3lhsw7bp0pv5bp85vuzzx8cgn/vs4zr395mq7ud0ksy5pziug0rqy6os5dckimg0hy6fy",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e055b484-bbba-4e8f-bffd-069bb0dd9668",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.620943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "477e6af4-a7d7-4539-8879-42a84024f047",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Wade/Leannon/018.656.8961+x15743/jxm8r10rmijb1fpnod0myt013jvhtimjqb5x7zcahih22elsba6tlcnd7xgolwq0mon35gnlj2m6ylux5ph9fz4uv5i/6t6g1ewd1i4mkrv12zudvd3cnagr8z86ofwmidg1yqo2x13i7fxvpetfntl8mze8khh9gpoceebydq3334pemn0irjn597iodn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Howell\",\n  \"originCountryIso2Alt\" : \"qdmzepydu5kz08du0a9a5puin537nb3w23wynvv4dxunpde0ukacrlg5qtfqzv3pgamd8fnrtb1qrttu4ylkz67cxymv7rv\",\n  \"phoneCountryIso2Verified\" : \"bycrnmp4pf1p1jbqn3xak82zui73ketal625soxlhsn06abrwkepmkh1wqipnyd1ptn173wk3omf2b398pobgqux7kmlulnkjmfvtuz3z7txiydikasiyncwj6sy7s4vupqk56xjryrvaiu0w4g29b3u3q4dmu867e5rrevw1gqsssxss9lqcxkjd3u9xwmp69\",\n  \"verified\" : true,\n  \"script\" : \"9hrvqry6\",\n  \"firstName\" : \"Sharonda\",\n  \"score\" : 62.764298566798224,\n  \"phoneNumber\" : \"(884) 417-5887 x8444\",\n  \"phoneCountryCode\" : 1052663826,\n  \"originCountryIso2\" : \"k0yh2yptncqpoud4wt2ut2raxwxc3ehyaan1z9e\",\n  \"phoneCountryIso2\" : \"blverhnz6spwvt1o8sggctbh425jertqkzuhpgcn14h37q4hnshc2rtzzp2is80au7vtaal5mj7lr30tlpaeg1qdi2aqci6baxxznuahwpr8xklgi5eo5ppbuzkvrubpapoy85vi13uyigntfy6hv0p5\",\n  \"phoneCountryIso2Alt\" : \"eoilj9nigfu3r8btg8ho3ztlk99bq9xfsfv1pg78rxe22lxqkg67xp6y1auvif390d60wyexsz59lu2u8dgrznkjbmcq7ngkcnbftmooc64lqtviblqmcqrtplsc5kn5m98e45ldhq6y28s5x952y5jnsvudw6k\",\n  \"countryIso2\" : \"sxty6qlk2jluamrk8xd8wbgfgu2rayv8q83hekv8etv2\",\n  \"id\" : \"k44r\",\n  \"internationalPhoneNumberVerified\" : \"5lb\",\n  \"phoneCountryCodeAlt\" : 650226158\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "477e6af4-a7d7-4539-8879-42a84024f047",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.620776Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "0685558d-3cd7-4e54-98d2-b4128b36ec2f",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0685558d-3cd7-4e54-98d2-b4128b36ec2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.62012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "66de8da7-01b0-4104-9e37-d6d71bd45474",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "66de8da7-01b0-4104-9e37-d6d71bd45474",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.620104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "674129c6-5352-4789-86d8-a01c284b6e70",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "674129c6-5352-4789-86d8-a01c284b6e70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.620088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "73714aaa-929f-48c0-98e7-a112b385892f",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Marvin\",\n    \"originCountryIso2Alt\" : \"nnweybx421s8gurewikh1lc1xjx9gye5tu4l0oq88c7vakp0njm8pfmqzszzs4p39wmsn5ybpb10hpifvdd1us1s8mqkf3x31vm9hj9tmuub1vr64sf9ugkjzants6o2g29ly6bykobbpbk56ra82bd48nce79kjaq97jxbql9vl\",\n    \"phoneCountryIso2Verified\" : \"6tfq97ome9cvev6niw8v2h1czbyisdqo4aicrbe8isr6pm3gk5odfv3xjpycdk0fq0wijvuawadn6acq498efe2537zqw6gpaw8avy5gbum6am45zgl69ziav9hce2l2m0e4hu2t832wckbt2jxqkd612fsz15753uund8qvbn6d4qe\",\n    \"verified\" : true,\n    \"script\" : \"cgkx8hemxbtknaxu73vwrruwg7wr2jdqz7zxch5zxmqk0p7zay1nu5isbp2ckg9cbl41rhq0nkqe1czegkvdzzhnl8ivu6ndbhlxi01df6z5vfeao43cpjgswq0ilr16td96daxsd\",\n    \"firstName\" : \"Gertrud\",\n    \"score\" : 69.82498898913468,\n    \"phoneNumber\" : \"1-611-834-4468 x26870\",\n    \"phoneCountryCode\" : 1966588471,\n    \"originCountryIso2\" : \"0h75tjfwuq3nnf1hh8voko7y3oca56f44107myx2s2p4gmzt306xjrhg7q0k5iug5neds1wbksh9rdniggz59gu8naz5he76va77f1b6xh03tmc23kabmr4c3iddopctx0w5r1q4ghh7ot2ehkumrpd9yfptwj0isjpg9uiht83rloxxas9haxhn\",\n    \"phoneCountryIso2\" : \"4qoi80jhfuoraay65aiti7w8vzg1wa3\",\n    \"phoneCountryIso2Alt\" : \"m38twudxwhdnnwvj3vgk1j64sh02aevjseevpegsb2shqbbo\",\n    \"countryIso2\" : \"mi8henmid0csuzgj0ke6cfylx733k6f2xuuk2myufvth8rnws8n9vr9nmrdtygvif0b9k0l1pe7px0a1a5hge0ob317oic5s19kv16yel4lfl04h97aroqoyaozrbusz7gazzq25hy8wghx4ihxtzplm0lbb56h0p2rd0pcel\",\n    \"id\" : \"471d\",\n    \"internationalPhoneNumberVerified\" : \"9ww4oiv80aiofb4h37kgfy99blg3p90z11lo171lev4pg5ilg5rbgdeezfjv8rojrg3cvyq2qz0iebo1da809qx9trtec6aa791vb93rfjlgzdjj2ssj0fcapf7c3vavmpcijyzk29t25y9evefzyl1s295cq6sg0qk5kei62oq9uos2md1\",\n    \"phoneCountryCodeAlt\" : 1996337971\n  }, {\n    \"lastName\" : \"West\",\n    \"originCountryIso2Alt\" : \"so1lx5ws7g6hbtx21dpvtvo12x5bcnv5t7h480s010dwwuxvo2nw8sepyfc68af0xp7tw7lhzlur3nvokjum6ifm33tuov0h27z4spimxuwugdn9pp1zatunexsfve83eni9pbt6hrorerl2t9h1pmxmpe425htbgrbtj4o4tzkgy\",\n    \"phoneCountryIso2Verified\" : \"cq3hwfpntwmtn17dood3jj0w8joylxkn8q724g4h6hxtus4coeblj4njny43atqodqrlkri6mr65yuxw73bb4ptrglei6q60b8fjo7y708ekr68\",\n    \"verified\" : true,\n    \"script\" : \"zc8pyebvslmsplbu2fl9gg1b48no22jypyyp927c4yuyrekx4\",\n    \"firstName\" : \"Gregoria\",\n    \"score\" : 41.00928145218064,\n    \"phoneNumber\" : \"1-302-022-4476\",\n    \"phoneCountryCode\" : 1428833843,\n    \"originCountryIso2\" : \"aolyajki788y7au857qwjvvbropx8455mmhjpg2toiqhipeszj5oxbwzd9enkjvq6vpr0974nhnrhxfc7mfp0xx\",\n    \"phoneCountryIso2\" : \"kipzfw6ec65n440f1uhgq7i11xpux3t8kp94f27fipa20p5n6hr8ohv7cfgnkfvrk66tdppzligemfneio7b196tr5ikuhf05\",\n    \"phoneCountryIso2Alt\" : \"6xedz\",\n    \"countryIso2\" : \"umg90rzajx2uacbrrynozgd73d32slhcjuavikhlv0ltj0uw3l\",\n    \"id\" : \"actb\",\n    \"internationalPhoneNumberVerified\" : \"vvepf\",\n    \"phoneCountryCodeAlt\" : 1932131613\n  }, {\n    \"lastName\" : \"Marvin\",\n    \"originCountryIso2Alt\" : \"fzvtycgc9wov4swjo50kcmn9rn7zd69bf3a35rxt3xc992zsgzoh9d18hhpq8md9xc85y7pvntpe41iz49xz7vlq18laxhkrok9w6o1aegdq3m1l8b7yuva2xcr0vh1g965yox1x4fiem0to32q44i1q\",\n    \"phoneCountryIso2Verified\" : \"3khh636dl8uvta72u1dfdnmsj995s2rsh6z51w52r6y69961l6akcdlfls6ubwtebubthh4g6ixas2qe68ecm9tdqoobf853tq55jaj7u1epm3ctx7jy1js2xza4k35d95p2func19ysvhqihnab4f1am1xwh5riu4ikpm\",\n    \"verified\" : true,\n    \"script\" : \"4jse2zjta17mq83yjhmb90q97ptr39vkh4tjvn26on3b7tpe91z88bk5udiedbdfc43b4q0be2n7ounpjbgk37q4bc9ptz8uaxfh70vt\",\n    \"firstName\" : \"Gonzalo\",\n    \"score\" : 90.75830278726085,\n    \"phoneNumber\" : \"(380) 207-3596 x0232\",\n    \"phoneCountryCode\" : 107630639,\n    \"originCountryIso2\" : \"0gd5ugsffcpk5iaaj4i18i9ue5s23ii9xtskk4ossj2dryk7o561qkm0ck3qhbr8twr2m6hv9v4hu03fj4dixij5httl1oq\",\n    \"phoneCountryIso2\" : \"opgu5le849zey2f22lgirwo2kdlllcpmwo7kra33ernaqzuan21j7byinokfv2y2runmtsfqjkmk2bx25sebblko8kk570scxp6puj6rt48nugg75fo2ym0ynuhjxio8jwgc3n7gv8p40gyf1m27yycysx8k2c\",\n    \"phoneCountryIso2Alt\" : \"4a1vkqk88m7nhsn2rwrn25es6575egvot3ibgsmyn3582k5skc715xyfxlm98jdrwq6wuk1uqjmn6nuo6z0iiehwd67svvd5264ytm9eoyo81hpn5phmfqbh37ajqgkluoep4a7wvep2xum4ozgob3th2wfu9e40ls6stwy7haqivipf8x75i7jsozq0wq44vcpo\",\n    \"countryIso2\" : \"s2nie9zyfgc43j2q4zkk9pkmpnowbxscfpw44sv7yhy08xyi2awut8vprimpm9lh5h9mekv2of0w554493z5h3t8aw6h7ipqqzmwjzorq2gsr8k6xco6b62kojmvy81pdgwdvv5q885dkt5yd2ywv0lnrh983ug8kdhx78rim2vayxvp\",\n    \"id\" : \"ncyd\",\n    \"internationalPhoneNumberVerified\" : \"dc4pbqhrr04tz\",\n    \"phoneCountryCodeAlt\" : 472000756\n  }, {\n    \"lastName\" : \"Schinner\",\n    \"originCountryIso2Alt\" : \"0zf26509d21kjyy2ciuftu3bfun3rcyvrh43kqb0bt6dz9qcm3qb4vm4cb0epaa54twypor89p4r0fnc0c4g4b7l7ikvpdmgp5xxlkvub0wx1fa6jfs2ikra0v070od8s4ao5dcnk4k3a23wrripo\",\n    \"phoneCountryIso2Verified\" : \"2gorhh82rxt4wzcahbl7pjyurfs7tlgwicpy7orxz0a1xglvwut4bbigom47uiguiemaef7edhrqo2g7n0julq5ug37rvzv172mlyjai1mt592pb3rbnd\",\n    \"verified\" : false,\n    \"script\" : \"izjteesiy6ecinnnuifkrd2lh2xe60krt3wapty95l4txoyebjt3v8me82zlhg4wp3jjwr\",\n    \"firstName\" : \"Tory\",\n    \"score\" : 4.257985594562507,\n    \"phoneNumber\" : \"362.984.3486 x986\",\n    \"phoneCountryCode\" : 1413178224,\n    \"originCountryIso2\" : \"pbqzzn9kzjg1f9zq83xbrd9w2w3g5q8brr7ttfnc9zmefjpw9177l309ib0o08m69xkxsmkzorbqetmdg08zk7cu1gj557wj2uhryzf336iptj7exgynuw3niiu\",\n    \"phoneCountryIso2\" : \"u75ei3kw2q3h290mq3o2ndh6ege\",\n    \"phoneCountryIso2Alt\" : \"flhcmbu6k9hsds5xoe6c5rc9d0u2pk4m0ffpfnd2qd2lpw\",\n    \"countryIso2\" : \"ej0z5dszao6g9yxw8gzp1n3wdt3poailh9v0fdhxi4ctnvhp6ojlmlqqwupfejdpfzgw760axmbihsop4vyzbxelwzzwtedizo10ueh0en1s23mhud0i57llhx989hl0g50s46r9jydzvuvz9z9jf7wgeu0nf63gs5xjc2zsrwfe77a1z\",\n    \"id\" : \"tar4\",\n    \"internationalPhoneNumberVerified\" : \"9d7qdvfgg9y7hwzi058ju5u0n0oz86xzqco9wp9u0f38m6gsjf5os1o\",\n    \"phoneCountryCodeAlt\" : 826379438\n  }, {\n    \"lastName\" : \"Skiles\",\n    \"originCountryIso2Alt\" : \"lqgyevwp7g6ov9vg57aulum8g6y414y\",\n    \"phoneCountryIso2Verified\" : \"fk1k2zqoy2q384ht9koxea08bjc8sgmhuiv3fo7utkbeizbtp0\",\n    \"verified\" : true,\n    \"script\" : \"cg3sbzwamkqzpzqdbaes3mk9sfweyzq5yd62akw29g\",\n    \"firstName\" : \"Nathanael\",\n    \"score\" : 75.15450253608856,\n    \"phoneNumber\" : \"1-212-245-4471 x57742\",\n    \"phoneCountryCode\" : 1864476272,\n    \"originCountryIso2\" : \"2n2sm5csrwdilroxbyc9ty9w3ldah4jsqgk7u4ino78mkmksys1sv918iasu4fy7hdizgbof93v8p5o0uve1m5fmfy7ml0sebwffsledmvgny9hy04b1k4qcarfqytip5rl868dnof7v1jcj3avgir0g8br9p0mo7lga5\",\n    \"phoneCountryIso2\" : \"v7cqfpmbtcwqkgza5m8ufhwnrrjsmtb51blk0tke6nur5gz9l3vz8jkz2gqoi78al21ftqnkvyn305qsux7737nju37tl3tlf4m\",\n    \"phoneCountryIso2Alt\" : \"8ef0\",\n    \"countryIso2\" : \"igx64502t9xjejf4m7p1z7tek5x113qjfueejdoc12usmjnuj7zx548t3oqkfkc669aoprv5w54hrqu30qyi5kk578z3waa32pihk3whemntp899sovwf4z67kl1bhye3fpk2o3\",\n    \"id\" : \"so1c\",\n    \"internationalPhoneNumberVerified\" : \"3qfrzfz0hnaa2fbou7pzq0gmo8tlaufoqf\",\n    \"phoneCountryCodeAlt\" : 1740647153\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73714aaa-929f-48c0-98e7-a112b385892f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.620034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "64a28375-689c-411f-a439-72932b7a15db",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Darius/Crooks/083.528.4528/odnhloyjihbj2yqia2np7e4r5o1jwydw73ia5f6jttc2v1uzi09bhp34c2ee4kthvognz0ltfphqbv34kajwvwocw244tkrrht0kfu",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "64a28375-689c-411f-a439-72932b7a15db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.618458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "ce8f421f-0396-43c5-9e0f-690ad977fe22",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Lan/Kreiger/810.962.4323+x749/tovg17aipctfg29dsrxb8ocvwsplicqxenq0l4aonhlmrahag",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ce8f421f-0396-43c5-9e0f-690ad977fe22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.618366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "9dfdc691-86db-4ccb-89f2-684d28d1df30",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Vincenzo/Schoen/%28847%29+836-6019+x136/kdfbv6egpxtd08g4jgm5g7ao4ov6nsytx7zhcaqnl4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Stark\",\n  \"originCountryIso2Alt\" : \"khm7fxotpe2lfnyssmdz50qq5nqhutnajpv\",\n  \"phoneCountryIso2Verified\" : \"wk82r5olhd7lzq80plngd4nca0pwz9s60fn3orjgaomi68py4fxfke7tkq5mbk2lvitwfvl8ffmnoyn0j6q26tkgceq3ndpbgihciifzz00oc3mzb5tk\",\n  \"verified\" : true,\n  \"script\" : \"t96opcl8ig9iddgghpvg48jgogfoa0oolxqlu7dy9vxhzei0ryzpo4xtvhx8qi0z1438eyffdqhrqa0jq35y75\",\n  \"firstName\" : \"Dannie\",\n  \"score\" : 17.651427983443448,\n  \"phoneNumber\" : \"1-502-505-8733\",\n  \"phoneCountryCode\" : 422526583,\n  \"originCountryIso2\" : \"cpaw0ttbon3greftaeyvdjqvsbjte76wz9fxjrhsc41pm03tjf7oqmkj8unqxqbglfwsd96wth8dsyux5o5xcj2bba6lr85hg9tgkt2qbeov14xog2qhu5t4swxstj1vu\",\n  \"phoneCountryIso2\" : \"g1xri2gln1sntv40wuk7jnixmsm4py6xnpluj7oosjrovcjhrfc\",\n  \"phoneCountryIso2Alt\" : \"e5ctffcqtqff0h7w86tmk2axmewo8pswt2sifmwadbfhqgcjcsyya3yjuhkyn6ltozjmoye3uwkzeohfi1xzoyiasui6mn61a42m8majabkexqsol396a0ao4biteq0kbdgctqrvjiidihilhk2aroa33mptmi7531uy0zfm0jjtfyv8a6ljcr24j56k7\",\n  \"countryIso2\" : \"xnl2wnzz2xcf67mociod2etw787mpaukh93yvf286ro\",\n  \"id\" : \"lf3n\",\n  \"internationalPhoneNumberVerified\" : \"gzudub1tf0fzl7diuq65u1zzuj8cxi74zlv9ix1w13shd6\",\n  \"phoneCountryCodeAlt\" : 365691773\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dfdc691-86db-4ccb-89f2-684d28d1df30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.618219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "d97491ca-f156-49dd-943e-1c75d13723b4",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d97491ca-f156-49dd-943e-1c75d13723b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.617595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "da892921-e69e-419c-89bd-dd97801014fb",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "da892921-e69e-419c-89bd-dd97801014fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.617578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "0054e703-f02c-45a9-ad18-a50852ce5888",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0054e703-f02c-45a9-ad18-a50852ce5888",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.617562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "386e20ae-4f00-4932-8a7b-694b20596ab7",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"McClure\",\n    \"originCountryIso2Alt\" : \"zj42zy8o3fq6itw0wljqscyf0jfckao3q8yo5t49f2vvlibsrd5selv98a2y6xfhbyy40prh32u3zket8dj73yyot95p0g0074yp87m00g7evcil5bb18i6ftotd2zsenz0\",\n    \"phoneCountryIso2Verified\" : \"h1odm41yhyqnjod6j8ybctw\",\n    \"verified\" : false,\n    \"script\" : \"nu1ptxua7sziwz5nxryptghs61rtxs16z1c63y2ct966c202k9rlt8j85ybeay0cpros4qbb92klg9oop3v9ckz4cvfkqey2ozh78o7kzak3dzw8\",\n    \"firstName\" : \"Lolita\",\n    \"score\" : 56.65931527472631,\n    \"phoneNumber\" : \"813.115.7791\",\n    \"phoneCountryCode\" : 1947418361,\n    \"originCountryIso2\" : \"gb9abfu5slhi7mv0fdg1ciark9vaaw9q1dv1mde8ytmkngjze7sjxtrqy2bjk2c5q4idclt868nkkvbwege6kbx0srzrctx8ozou8rvlno6x826227zgjhogho32topruogabyfakbbv3fm2feyk2u8r19posf6do6jvo6jo3ndz7ipsa8vjn6olw\",\n    \"phoneCountryIso2\" : \"umb2705q4dtbhkjfc7uv430p0o16swzlgqwy\",\n    \"phoneCountryIso2Alt\" : \"rec07fugb8f5njyed84hxcd23b1gq13m2lovpamyo2tp5vfxxpwsm6cn2y0zns4ish422cuvhil72c18989t4dete859e80dktn\",\n    \"countryIso2\" : \"vvoedflb8aeymfy8fy3xst3iy1g5g8kd3kpls11urh6l7lt4t5wtz9apejfu4gi00as3zw16le5p\",\n    \"id\" : \"qs91\",\n    \"internationalPhoneNumberVerified\" : \"zys52bsshrv9hwlzgygm2ee2e6ga49dtb2y1n6qb1ghuc5nr1iejziddg87vo50sai5f2jfz3ci8epvisy784cd754rmflkvqgx4tkq814mtxb37mzcuzqkdy5za3y9b\",\n    \"phoneCountryCodeAlt\" : 117932836\n  }, {\n    \"lastName\" : \"Emard\",\n    \"originCountryIso2Alt\" : \"ff6kjkiglhkjjuj45nex7l3il2dly226mjlr2wv17ytpb7at5x2vxktpzg3w596cksz8gv7z7etynvcc5znxbdt\",\n    \"phoneCountryIso2Verified\" : \"ae8wmqxyexqnz0f318lq6hwtfutk9afvmkur78u0ew2ytl42y3rjmgw0pse0nvdq1wgvcenznd00cjslkpak0msr9am18njwj1myk9eqslv\",\n    \"verified\" : true,\n    \"script\" : \"0idnc9lk9f7nwl59d1en2ji86epju9yqzso33zc\",\n    \"firstName\" : \"Susana\",\n    \"score\" : 34.85312649723522,\n    \"phoneNumber\" : \"(117) 103-2955 x1379\",\n    \"phoneCountryCode\" : 1922269948,\n    \"originCountryIso2\" : \"x10xv8docy8q8qkkogeeigrwdxka6a0sqbzpld47onf1g81namh77igplsom3uzqin3outljdcvyrvymytugsxterbcuhw6uu6iowksmqszrwlakj1tpd57w41ack4bza3lusetrknciu\",\n    \"phoneCountryIso2\" : \"tzhb7e8nc6v7dc4spo3o56koce4swcu81u2g1h0826qg1ox7o0nzba32iosl3yjtbkdugrq7f2cprp8yb126nowtqp6btz57otybvxgibj6973wcl8i2mf9sbvlubqunyhtm3z0rqs45c9\",\n    \"phoneCountryIso2Alt\" : \"g3bn3copdbulbu8hc2je0opdls5xv7wskr0lx6cmp3lchngxd4m8k4avl14t3ctwms6gcmyegrcwg2453m9hlc4qoswutxt6gxzcxy8a7mn6fmw9q9dgo27ztc56uz\",\n    \"countryIso2\" : \"5c71lg7ewlodmag53bfhktn5s93c4mh4dz4v6tve4ds96fh6q49o7uh0h6xiyphbzwsmr7widci\",\n    \"id\" : \"e6e3\",\n    \"internationalPhoneNumberVerified\" : \"p84hz3z0equ21b7wyo4t2n9ygcaelmf1xcu0zdrgm0s5w2ox\",\n    \"phoneCountryCodeAlt\" : 285084147\n  }, {\n    \"lastName\" : \"Price\",\n    \"originCountryIso2Alt\" : \"ml5sf63keg0namb7leji5txanqws83i3awsxnntglywb2jwkrpx6hfxgradonevizae9gow434f3pkm9p2ze3o124f4tl7syey5b5pcmwy6a\",\n    \"phoneCountryIso2Verified\" : \"d4q2dxjkcb5msbsnyd1my8n3sqx3vptwb1x27yovqz4x9lah6uvdf1nvxmbax3576nwsto1d5cqj1wlqhwso6wt0jh1eddn8d7cidahiql9eupg4uwk9yto302nov1gveogux3sn8vypjq7iuujur5\",\n    \"verified\" : true,\n    \"script\" : \"9xbhrohoq9xdhkq910gac1y1gk2bxmy7a2qpp3wilqj9o1p8zuk0x6379u2wwffmqyhtugvqkg32kg1z1tyfn4e2c5hmlynq1lsoajbcfynrfvfhthejflb8sn4nwpv6ufjb6g7kuh8k37apd79pvabjinliylbgax5\",\n    \"firstName\" : \"Corine\",\n    \"score\" : 36.04355214558308,\n    \"phoneNumber\" : \"1-276-636-4101\",\n    \"phoneCountryCode\" : 1118676004,\n    \"originCountryIso2\" : \"30kh44e2s9y3kw7ez3l28yk45nvy5rie5x069686vra1dopezpwn17x0nk3ng4ggkpbdcupflcj7t90bbnc5va3v1mdefn4aa\",\n    \"phoneCountryIso2\" : \"bx66u85lsmasqg5gavbwzd5g817bilos59wifdubegrn4hf7hcb04xpy58ppj5gjy0zad5hd816y192q056h7e5m01e6g2q1p0i98803ci\",\n    \"phoneCountryIso2Alt\" : \"by0sihm85nrqkthlw2nqrijqac2olkg3g6gyeazhbx1e8w80i1mv0fng6zvg\",\n    \"countryIso2\" : \"e1u6pdcb0meonpmnnjmosyckhcfq5jwyqxvkqwiheh98krgotolebovv5a7498fbnm9eon56eo01orslmkmdx63b9xqq1fgohumk3r850h08dcxlxwdz3te7plg2wv1g7vjior8fu1wjgm3\",\n    \"id\" : \"4q4v\",\n    \"internationalPhoneNumberVerified\" : \"5sc3nvc49fjeo9f65ah5yx7m6c4dpyxk5zu1al8yl2ipkvm6q\",\n    \"phoneCountryCodeAlt\" : 932755679\n  }, {\n    \"lastName\" : \"Watsica\",\n    \"originCountryIso2Alt\" : \"ycrd7qiuruund399df097m0mftmcv945ezh8ul4rqacj6m9qjpyn2ltt1w7jz1h6qgoqbxkbxtmae73rnidyu4orrweckqpa23ejy84ipbqqt0u2ov7aioqerhh4yox0qfa4kpl2af22vg3k3cygjbniam6h63ckit8jk4ng4ys91s23p8gm33yw\",\n    \"phoneCountryIso2Verified\" : \"b0l5n0f620b7t3gq5yvhkf\",\n    \"verified\" : false,\n    \"script\" : \"bwbd8f3b6ld6du0rrkhu2ihrl7qdzxcdbbqn6730b0v1ho7f864s680mpo8rlx1909682x0av5pj0r4q96tgq8x0xxgbw3vmdsmjvv29d7lp49y6xp9s9kphd240szs4s42ll392sf26s3rdoqj4su7i6yrz8gptgsz1x\",\n    \"firstName\" : \"Reginald\",\n    \"score\" : 61.958767951947024,\n    \"phoneNumber\" : \"(953) 069-0481 x91423\",\n    \"phoneCountryCode\" : 176607548,\n    \"originCountryIso2\" : \"zplorloi8ho5mlte1o54c6z09h3nbr7c61kufvwvkb4vycqe1tp8hol2lk37iixnyj2xuxpgxx4qqoaglquazb33tqoew4f1j1fno6gxob9ua\",\n    \"phoneCountryIso2\" : \"zirrkg1v0uz4ixprl9obendj8m1ssoc17e066omh9\",\n    \"phoneCountryIso2Alt\" : \"a1k8d931xyy0gge4wf4l2bxtthl60ly1wmli9ooxtpbvewdx9qfvzycllxpxgfbg\",\n    \"countryIso2\" : \"ll76u952d648j7vh5sho1gsnd80c67u5ao160682qew9t8ll5csfg872sk97xt6vhe7a8le1kfr32wsakmstio0h3achd48bphuiem75ioeu636hix184oisnz861wsb36w2lu3w1ypekp008va5yc5wrzay35lxas95y8eijx3n2j72hxzorslxcp589ktdaho1\",\n    \"id\" : \"un5e\",\n    \"internationalPhoneNumberVerified\" : \"nrqhjvgxteccgr50lqcmfw6jlbk8rxdc2n4axp6xpja9vccxps8o4hepaf394htki8nsqywnnnrxf81pt2bsivvo6wmck681fjf0bi93vfanw47csc2s25yevfy\",\n    \"phoneCountryCodeAlt\" : 1497041328\n  }, {\n    \"lastName\" : \"Gutkowski\",\n    \"originCountryIso2Alt\" : \"kr344czh0pumc9ib2swsmobj50gz76jdvbnloo7t5otiz15wbhnu7zfa122fr6ior16kf54p6u7m5e93sif3t0x1fl60sqbntugeczv3976qiyhsk3se2v765pc6rxfn1chusuudjjg8zqeiho35w6oi\",\n    \"phoneCountryIso2Verified\" : \"vtj8k005jilhk9x677ws4ywok0ny61xogw32t5mkn6ure92knl9mnf43gsaqea9oom6queprrnofk568k2kwntywap1otnlsn1nsrn9784crs6g1y32ua6obyuj2i2mkulzns9indb\",\n    \"verified\" : true,\n    \"script\" : \"ejrxvzkal6wv456d24m6mz9who2o9sjpe8c4e5il35wv0li0fpu9v6ydb18yutxspvw9a6utih5jgkqjpjc\",\n    \"firstName\" : \"Alonzo\",\n    \"score\" : 86.04534959142339,\n    \"phoneNumber\" : \"560-895-3733 x934\",\n    \"phoneCountryCode\" : 1137361593,\n    \"originCountryIso2\" : \"gfkoo6vx53ap72gf0rbn7egtao6is6lek3m2f9rw2d685sjqk7ard72jdy9swe98kjk42dn5p81yg3oca9uig73gofleypkj9gslft6ol8gi6wg1jh7hd1byrzn1apob6sbr4\",\n    \"phoneCountryIso2\" : \"620x\",\n    \"phoneCountryIso2Alt\" : \"y3khfz59izi15s3spt6ynydamn98zn40ho3iv44xn74icskecmudw\",\n    \"countryIso2\" : \"3ud9w7icswc7eakua5svxuwuq6g59im85jfz7ttr9wxflr2blgrkh5c80lwd64slax0ks60ls6tcjza1m3dudlbjw0hz536cb9ios943j7wk0ybfxdc2pllojc7bq4z2czzfmbhs73ilp5aqxcomu5dqqt3u8plaaviem7ygt6o2deq5sy7rj90ejbb6bohhas6jh\",\n    \"id\" : \"h3nj\",\n    \"internationalPhoneNumberVerified\" : \"xcsjdf\",\n    \"phoneCountryCodeAlt\" : 820096042\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "386e20ae-4f00-4932-8a7b-694b20596ab7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.61751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "db7e7092-6b1a-4afb-9f3e-bd5eded5065f",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Evan/Brekke/434-938-8722+x6629",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "db7e7092-6b1a-4afb-9f3e-bd5eded5065f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.615873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "bfe961eb-2b11-41f3-8773-2b332d5409b6",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Taylor/Carter/%28596%29+468-6713",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bfe961eb-2b11-41f3-8773-2b332d5409b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.615789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "6cb4f7a4-9882-452c-b937-e7e770ec6366",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Jenice/Schmeler/%28702%29+111-2380+x114",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Runolfsson\",\n  \"originCountryIso2Alt\" : \"eexe17bpuggkmng8dhs87kxdjuo8iojsgixpjnf9tqfezbz\",\n  \"phoneCountryIso2Verified\" : \"8fy1a4pklf9n6rdqilk5xye60vtxe0w836rkdg5f71jyz3ufbvljzx9tv5mzxg3rjhlbjbspz4k94w4kqz57nel\",\n  \"verified\" : true,\n  \"script\" : \"grcvn3sni2hdu26oj61gux2bhv02ka5nfh5fuxuhs1ahttuw75ctkrp97ua04aosahqrw0fgfb\",\n  \"firstName\" : \"Fiona\",\n  \"score\" : 84.39006493296726,\n  \"phoneNumber\" : \"1-028-299-7878\",\n  \"phoneCountryCode\" : 1428203053,\n  \"originCountryIso2\" : \"wgaanewjsakrj5k1mgh0onz5b0i3jih98n4n2hdb401fq6g305jc0bl4bcam5s078kw\",\n  \"phoneCountryIso2\" : \"m6s96sd0ejtivcjg552v0qatk8nr6iuqpsnkrdty7c2ddzztqhw7ezgixy7tlzlt2jztbea0pkhervxsokbaexxaowmbffno2gs74rtjneximhx0406twm5xav4qor6y6a1sos8i5r7dxjn1hu3ks1pui7niv1p8myrq8m4qwfzvejvsg\",\n  \"phoneCountryIso2Alt\" : \"rphlcyv3klq3cmxuneql9456xftrumyjjhjxpuk1ej5tffmtl3gzlg1b2fv6x5em7lcyvzos2k\",\n  \"countryIso2\" : \"n23ghf692ebcairr3tahnn0wkn0fvgy4i9nf49y3r38di99o5810dohnxy7ei4u4cxjq6npj5p7fyx8nkiio1j7i4x13hk05mq58xg09bpjwfljupjronrvkus8e2hsqvc2o8sxw20\",\n  \"id\" : \"e2mk\",\n  \"internationalPhoneNumberVerified\" : \"3ft9d98uopt919r3322rfru3xt64as4fgbrahssvoddf8xv8fw8psbzezt4sa602cppvh1iszinzeqgdc3g152oipbq32qqva9s42805mh2vy254xmvj4zn5dtgtzviomg04hf5icw7r3ie\",\n  \"phoneCountryCodeAlt\" : 1933654420\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cb4f7a4-9882-452c-b937-e7e770ec6366",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.615625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "95c0a8ea-5b19-4b15-a694-b620c9e9d880",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "95c0a8ea-5b19-4b15-a694-b620c9e9d880",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.614905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "d1641290-1754-4432-8876-04f15d403d5b",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d1641290-1754-4432-8876-04f15d403d5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.61489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "6fd91a11-9ca0-4c5e-88ef-9a5593006eb7",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6fd91a11-9ca0-4c5e-88ef-9a5593006eb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.614873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "50583a31-d16f-459e-b353-d39f9b8d92c4",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 23.67052897407578,\n    \"firstLastName\" : {\n      \"firstName\" : \"Marty\",\n      \"lastName\" : \"Abernathy\",\n      \"id\" : \"4h89\",\n      \"script\" : \"3ya6t7jrudhczsgstmrh9mzur7hpgfs04yafqdjvnm35t7xdc2gmg02ruj95tgech3ykjfempavrif7lddvwtvsx00\"\n    },\n    \"name\" : \"Miss Ignacio Watsica\",\n    \"id\" : \"8fut\",\n    \"nameParserTypeAlt\" : \"LN2FN2\",\n    \"script\" : \"yica71\",\n    \"nameParserType\" : \"FN2LNx\"\n  }, {\n    \"score\" : 85.43400053834499,\n    \"firstLastName\" : {\n      \"firstName\" : \"Zachariah\",\n      \"lastName\" : \"Ferry\",\n      \"id\" : \"2k2m\",\n      \"script\" : \"1assol24cv2fxnyw7sp90ofiagnkwlbo890wu008b24r8uchqy21fq94wz8cfcfsg7rl86nalay1p6rh41z19xyv383midueyx8xagqzqmbrz2olveleuue63cb5txqlf10rmd36yqnhnzjpvjzq5x5r89w2rkln1l9ka2\"\n    },\n    \"name\" : \"Gaylord Herzog\",\n    \"id\" : \"zxha\",\n    \"nameParserTypeAlt\" : \"FNxLN1\",\n    \"script\" : \"po9asfiok7lhuj6no7nlsixpeuez7sp4elehno7oq7g1i39job1jopzumlgmecju6x3m5n3b92c418f39smgwqmjtyqaq7ftigwhkh90xp1y7ltu91oxc7ct38n7vrs15h45i7i7yjffkausxnk6gpj6nfbs9xu\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 57.263346788881506,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lloyd\",\n      \"lastName\" : \"Ritchie\",\n      \"id\" : \"gf1s\",\n      \"script\" : \"u862yfyxw1xp3uw\"\n    },\n    \"name\" : \"Odis Donnelly IV\",\n    \"id\" : \"1283\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"nqxahyf9qkj9mbf\",\n    \"nameParserType\" : \"LN1FN1\"\n  }, {\n    \"score\" : 30.032380715660434,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ardith\",\n      \"lastName\" : \"Little\",\n      \"id\" : \"0h0p\",\n      \"script\" : \"jnmmeqz67qxqno3uqido1saegby1a9w0pylzn60vivfh1h4ns8mzj77eckaslsyehxltaxbr0f30bipoau6v90\"\n    },\n    \"name\" : \"Ms. Kenya Mills\",\n    \"id\" : \"jhc0\",\n    \"nameParserTypeAlt\" : \"LN2FN2\",\n    \"script\" : \"x2xiamqblaxljxw006dt2o2c37w3xen4bmowylss5t12bsfq0770zfc5fcqps24ytqx45lsaflyu7wgmaflq98auv0qz55mus6e1uqcby161ib7ublo34dajevz20jvfrrg0fz2eikll6vth5pol3gqkt5e6pe9\",\n    \"nameParserType\" : \"LNxFN2\"\n  }, {\n    \"score\" : 89.04500394128341,\n    \"firstLastName\" : {\n      \"firstName\" : \"Harley\",\n      \"lastName\" : \"Beer\",\n      \"id\" : \"j2k7\",\n      \"script\" : \"1k70if59qdkiohig065m4x6nab6zjdm7wur1wgwryqobpmrw969dp3dvvexy8ro0ydsm8jqphpa0o3px0nnps6fwq37nlkjt6n97km3vsweecvvi2ngve9poq95vmihhcf7ntffh6\"\n    },\n    \"name\" : \"Jon Rogahn\",\n    \"id\" : \"8p65\",\n    \"nameParserTypeAlt\" : \"FNxLN1\",\n    \"script\" : \"6tzh272xf4\",\n    \"nameParserType\" : \"FN2LN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50583a31-d16f-459e-b353-d39f9b8d92c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.614825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "cfaaecef-83a8-40d7-9fac-be0896a3d6d0",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "cfaaecef-83a8-40d7-9fac-be0896a3d6d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.613092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "c3389811-5c60-4366-911c-84455b406cc6",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c3389811-5c60-4366-911c-84455b406cc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.613077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "74f9b1a5-85c9-442f-b443-f3f774c74689",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "74f9b1a5-85c9-442f-b443-f3f774c74689",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.613059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "73e31f4b-c251-467b-9bd7-c74469c9c135",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 22.914093244855593,\n    \"firstLastName\" : {\n      \"firstName\" : \"Dayle\",\n      \"lastName\" : \"Haley\",\n      \"id\" : \"a98z\",\n      \"script\" : \"c213nted113ptm8yp84fnmd4lvsliwx2ie9vkycfcufh0i2a8hc2lnj\"\n    },\n    \"name\" : \"Miss Maxwell Rolfson\",\n    \"id\" : \"0f81\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"55trf76uukpm3tdhs7x8wr8a94ia2h6tzsb2ituc8lfu5ycvps0hsa30wvjcilj7v08xmrya4b5nc1t1p33ndtlcniu01pg\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 80.70272929629927,\n    \"firstLastName\" : {\n      \"firstName\" : \"Winston\",\n      \"lastName\" : \"Jacobi\",\n      \"id\" : \"i4wz\",\n      \"script\" : \"7kca\"\n    },\n    \"name\" : \"Berna Ullrich\",\n    \"id\" : \"kj2u\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"7grdlaig4co9u3ninev63y37v\",\n    \"nameParserType\" : \"FNxLNx\"\n  }, {\n    \"score\" : 36.402180722002875,\n    \"firstLastName\" : {\n      \"firstName\" : \"Iluminada\",\n      \"lastName\" : \"Howell\",\n      \"id\" : \"m13a\",\n      \"script\" : \"0168k58au0s37iubwvxjfv3s8s2ot7y4uryh9yiuz07s99mhieoc5j02js5hn8f4qn43us662pki5zxpgfqr672lzfmlc8z8n6gcf2dj4fc5tb4eiagz0iwr4yzf5cnomvqxwah7gjgxywt9bkbut8z\"\n    },\n    \"name\" : \"Andy Schiller\",\n    \"id\" : \"561f\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"8mj8b3q3s1ky2yleeym0fwpw3ksnuhbu4yvbhf47s27dy7p30mv334q51hw0sga6d42afkdlynm93ixbwni\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 83.32982886944282,\n    \"firstLastName\" : {\n      \"firstName\" : \"Concepcion\",\n      \"lastName\" : \"Daugherty\",\n      \"id\" : \"9x3i\",\n      \"script\" : \"kknosqc99027h4sab7qoscw8300jip0l35pz7ded7ff38lnthz804zz1e5qhuffvk90or5vdrl1w1xmu7kx9073tm9ldxz7fzbjajxvhoids4t57hpcbvgwe71ffds2ixkrqhcvo3jiadp86n2i7w125mjlcgfv9iasvvll02axg\"\n    },\n    \"name\" : \"Annika Koch\",\n    \"id\" : \"0npp\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"g0ijolubzemmsp7suhcz7a\",\n    \"nameParserType\" : \"LNxFN1\"\n  }, {\n    \"score\" : 47.969074907353836,\n    \"firstLastName\" : {\n      \"firstName\" : \"Philomena\",\n      \"lastName\" : \"Buckridge\",\n      \"id\" : \"gy25\",\n      \"script\" : \"uj9tzqinkkyhzzuc18viog0namzwbauy3c4wxxbvj37fkkpergnienhgb7h8r4ixiv6t3\"\n    },\n    \"name\" : \"Pasquale Kuphal Jr.\",\n    \"id\" : \"l434\",\n    \"nameParserTypeAlt\" : \"LN1FNx\",\n    \"script\" : \"zpa1xbgjc3aufy793s429kb0tmuapxppy12p89un2xdpgjwf51zq9o5k7js1s2etjypiyog4n2zjpimiuhjb9vgvl14kcchkeermabitcr11d6w7g98vec1hkpt550v8v04d8rb4eewyho26pu64f8f9gexrg17vyc9d5cvncx6j4sp7yip28qn1og\",\n    \"nameParserType\" : \"LN1FNx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73e31f4b-c251-467b-9bd7-c74469c9c135",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.613009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "17f723b4-fae1-43c2-b24b-d9bec2bb0703",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/ye3p6ds6yotwv3gfas73ch5gutjggdsm7ab3aixzqc4rzel1dmzt4hxs2wu6709ib27dqt5481j87kfrjqkuohj98bnwkyt4hvndcfyb3vrr2uqiapja5zn8oabp3uwkd9yqktq2ov/hrcp3rz4kmvcd0gh4utwguzw8m63oz5shx37349wim8wygjg1bakaktlffo445t4nhaihvp4rtpr6",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "17f723b4-fae1-43c2-b24b-d9bec2bb0703",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.611313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "ff2f9bf2-3f0d-4155-8e12-7e33daad3954",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/x5to6o34t3rhud5oiny3uvuyazqhxkspl97ehkb14ti4ez5nt4mi8gm9ghon05gw05r2cvkzq406t9rblrf5sh6b3yfyqsa7u9psdkca8kl3p9dd9ofogz378h/vzvr3aftn40hli9qf8zv3z4yu0fo6pi1tibkf2ci7wywm57oaxwrdf2175z4m5l2xqfr4zkwe3b3ed9bwyfyo9xecr8ife3gftlkctbzb9l1qzcwevyzn7m3nnzm2a45etacjj26c3vrgyrj4p6b6ncmyz1ilyb33s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ff2f9bf2-3f0d-4155-8e12-7e33daad3954",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.611273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "d0f1c786-b7ac-4f1c-ba77-987dd0522217",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/qy0xdcffrmgy3i9gnu7q5uq89gmnuujcboasy4n84s7akb75a58jg/caa0lotr9dou4z3eak2q3qy2ii5tvfzlzjwdx2blandblzkyttz798jtzgim4nckkx0q94rqbm8dvhij4pn9scy2ki1xk0dtq8ym5o2cu03ve96y7rcaajf2efsrs912eue7m4qzfes27s7eirwn6e3cwc147",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 80.35618639454893,\n  \"firstLastName\" : {\n    \"firstName\" : \"Adrian\",\n    \"lastName\" : \"Emard\",\n    \"id\" : \"z206\",\n    \"script\" : \"hk3bu35ek5p0v9udu4xtfhsi6e85zfogn6ii72xifwxuu37ojbevpbbhd5swsrfk4bqggiodkbtzj8imnzf62bivchky66c0yy0l24pkthz\"\n  },\n  \"name\" : \"Dr. Taren Maggio\",\n  \"id\" : \"95h7\",\n  \"nameParserTypeAlt\" : \"LNxFNx\",\n  \"script\" : \"z3lhstg9f63ug1gwxo3kju7ys4mgl92kn3nflyrx0o29usw61dxw3nk81wnat425536ytoqbpnujt1hyq09ixb16vrr80r3\",\n  \"nameParserType\" : \"LN1FN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0f1c786-b7ac-4f1c-ba77-987dd0522217",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.611197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "df2058b3-0079-4e33-9fe4-ed0c67e2c1f8",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/f2n5z60d6lj9091y776r95gvg35bdgcu9q6qmaqd1ac29ym9uqlx5b3nk15pg8p7ai26nsozxu8is68jexb7wxsghndo809c9cfg5",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "df2058b3-0079-4e33-9fe4-ed0c67e2c1f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.610678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "e792a979-9e5a-4b9d-85ca-140458b2f487",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/n7nuiiu5pzjprbo5i18pnk1082tbt1bukhveixbfk85xckjntydbisldpppmhra5yfv7ph",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e792a979-9e5a-4b9d-85ca-140458b2f487",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.610647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "3e5b5c8f-e281-4562-8aaf-c3a1d2d881c3",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/qfb71b6btv9rw99a2wn2c9n0giqa6oje2hek339bsthwa7hzfya",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 7.739894111630341,\n  \"firstLastName\" : {\n    \"firstName\" : \"Prince\",\n    \"lastName\" : \"Leuschke\",\n    \"id\" : \"shfk\",\n    \"script\" : \"t8pvz3w11cpwh3xvwq7qhebr235wdp9yqaunwlw8pg7ro6t96vkt1823ynlfdosu30zmcb7vrdfnfiev8undi3i1ue6kkmwrtl6kblypavlu2mcibualxlkku4iu\"\n  },\n  \"name\" : \"Wiley Kuphal\",\n  \"id\" : \"ix0d\",\n  \"nameParserTypeAlt\" : \"FNxLN2\",\n  \"script\" : \"g649m3ft7ydn7hnox9ddiahc808pgl5z0mdib0hliqzcsfsq8mv13rfndk7o983\",\n  \"nameParserType\" : \"FNxLN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e5b5c8f-e281-4562-8aaf-c3a1d2d881c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.610582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "77db93b2-2cba-40d8-82d6-aaf228e12a69",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "77db93b2-2cba-40d8-82d6-aaf228e12a69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.610071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "323ac290-e590-4af5-abe3-c5a0028ccc3d",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "323ac290-e590-4af5-abe3-c5a0028ccc3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.610055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "b40c9a7a-ad66-452d-8bbd-1c12e3503850",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b40c9a7a-ad66-452d-8bbd-1c12e3503850",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.610039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "7ebde1c6-2804-482f-8959-507cc352bc77",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 90.95581199835856,\n    \"firstLastName\" : {\n      \"firstName\" : \"Quintin\",\n      \"lastName\" : \"Harris\",\n      \"id\" : \"rf00\",\n      \"script\" : \"hvjpfidt95pi09cfb38vfukymw6925x9ctj9ykehlpgfv0hw05n00pwr7o6rxa3n144r5uqf72xq8wqrixfvvvdid3514avdtm1l1452tsvjipedc3u5p76qr53vudxgucawh\"\n    },\n    \"name\" : \"Miss Robbin Hamill\",\n    \"id\" : \"c106\",\n    \"nameParserTypeAlt\" : \"LN1FN2\",\n    \"script\" : \"vg1nu1ytxzo1hdycewqxj9fo1tepq2u8lwse3zbacllptcc72hcuxk6i18p4wkc5srlyyhiavzr0u8reeb2zt14971t46rqgmylt1udk8gzi151lvrdhv41odsblzisgev8j4fxhl63nyeosvv8fdw1otqa84fyyx30is\",\n    \"nameParserType\" : \"FNxLN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ebde1c6-2804-482f-8959-507cc352bc77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.60999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "0f735470-57ea-4e60-90ce-e57704581db2",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Ms.+Ned+Cronin",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0f735470-57ea-4e60-90ce-e57704581db2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.609513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "407c81e4-c004-441b-bef7-d53cbf98cac8",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Shona+Quitzon",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "407c81e4-c004-441b-bef7-d53cbf98cac8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.609453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "ac94a02f-a229-4cdf-b1e6-58464c0cc0d3",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Emile+Murazik+IV",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 96.46154222136042,\n  \"firstLastName\" : {\n    \"firstName\" : \"Charlie\",\n    \"lastName\" : \"Predovic\",\n    \"id\" : \"3609\",\n    \"script\" : \"zcskyi9ky8skzlvvnqvl9o9v4108tlo6ep2dj2t13wfzcn0504tnm5x39nvy0dzweaehhb16ea18b3b5193j5mbivpaqvxmq0n72qhur4l6p\"\n  },\n  \"name\" : \"Arica Hoppe\",\n  \"id\" : \"cvr3\",\n  \"nameParserTypeAlt\" : \"LNxFN1\",\n  \"script\" : \"wn504vn1vhvgqereasv3jssaci1jvj45iaufsrsujufmjzfmq70yi16vn8zqzarrvqc4xz8t381vjlfmm0hqp255txaibp5iveo7b547zl9bdycx7hkpwqmoc6svr1u6ioo1bh7ob7fvxyp4l4v9yy5zmqjaoptkg224o127zvf50bbywa9tr8xfxbmpu1b3hpdlz3d4\",\n  \"nameParserType\" : \"LNxFN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac94a02f-a229-4cdf-b1e6-58464c0cc0d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.60934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "0410a5d6-b805-45c6-af95-263b7a1c5e30",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0410a5d6-b805-45c6-af95-263b7a1c5e30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.608776Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "f47ce4f5-a1b9-4004-9560-c79efacc67e7",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f47ce4f5-a1b9-4004-9560-c79efacc67e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.60876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "ce09ce18-f037-4daa-a7c6-dce376993d07",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ce09ce18-f037-4daa-a7c6-dce376993d07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.608743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "f4f49d54-d5ac-492d-9e1a-7a2e12d0929f",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 42.57768268901167,\n    \"firstLastName\" : {\n      \"firstName\" : \"Meg\",\n      \"lastName\" : \"Borer\",\n      \"id\" : \"ajm3\",\n      \"script\" : \"ggjlxncyl0h3etmb2nfvkbdd2n8m1si3oj7l0t8u5clkn3p5shsxt7hgkgbo533j5t3phg1igzwnj3f4dohdyiouknu1dafy0h1vvsrqh3kx9ensvcs9jpi9fspr3u0jtpbesm35\"\n    },\n    \"name\" : \"Karol Howe\",\n    \"id\" : \"u396\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"4n2bnoxcu2a3lhmmkc7px2fmm63gm6uy6o6ksgzlgfs4jyawy4j2vlwa3io6c690igwv28h5p0xg3jl2sdk852kee5ytvh0fcr154r43u21v9pakjvtah18fhatmxjv04l40vul8i31ukj4d9ij04tuhi1q067yvqmp6m5eshgkg1atfcaxjpe30gmcbkqtciyxunacf\",\n    \"nameParserType\" : \"FNxLN2\"\n  }, {\n    \"score\" : 61.64620981224509,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ozell\",\n      \"lastName\" : \"Willms\",\n      \"id\" : \"cx8a\",\n      \"script\" : \"7tbdg\"\n    },\n    \"name\" : \"Carlota Nikolaus\",\n    \"id\" : \"5302\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"je3zg4y92btpctq300yg64j2rmlcf9yezlg1yw037u0psjceqo21y3ass6mfvi701ukdhjgdugg02v\",\n    \"nameParserType\" : \"LNxFN2\"\n  }, {\n    \"score\" : 84.735950538155,\n    \"firstLastName\" : {\n      \"firstName\" : \"Coleman\",\n      \"lastName\" : \"Roob\",\n      \"id\" : \"ywk4\",\n      \"script\" : \"1hazin4rmx19ldumviwk9yobjx54adju6iyfoj0vftsct0kb90qjv5fvj9liwk3rd6j337rrz4pj6welzin4op8dhk0nd51nj4wbnxas3ugbx7lly9ifva5t8vrzz4di8gaiv2ocq7ogerf95s3fmw0f4ktho83wvbps59ghp4a5pqe\"\n    },\n    \"name\" : \"Lee Kovacek\",\n    \"id\" : \"822m\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"11j\",\n    \"nameParserType\" : \"LNxFN1\"\n  }, {\n    \"score\" : 88.61996393169116,\n    \"firstLastName\" : {\n      \"firstName\" : \"Aisha\",\n      \"lastName\" : \"Schuppe\",\n      \"id\" : \"385x\",\n      \"script\" : \"9rblmtyuc6lvd33yh5hapkr1wgxo7xrlace2qbml42egg5muaugpq3a32pstiscijq2w2ct1p5olw6ixq\"\n    },\n    \"name\" : \"Layne Reichert\",\n    \"id\" : \"i396\",\n    \"nameParserTypeAlt\" : \"LN2FN2\",\n    \"script\" : \"j6srf43lqnvamnx8y2m370du\",\n    \"nameParserType\" : \"FN1LN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4f49d54-d5ac-492d-9e1a-7a2e12d0929f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.60869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "982aa257-4ba0-492c-bf54-16265aab06d3",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Lynwood+Conroy",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "982aa257-4ba0-492c-bf54-16265aab06d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.607241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "eee527dc-e4bf-4fb5-8170-585ba5982a9f",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Sterling+Hermiston",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "eee527dc-e4bf-4fb5-8170-585ba5982a9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.60718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "e689bff5-2b3b-4f89-95eb-ea54a232ea8f",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Eusebio+Schaden",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 37.05323452215394,\n  \"firstLastName\" : {\n    \"firstName\" : \"Hyman\",\n    \"lastName\" : \"Schneider\",\n    \"id\" : \"542r\",\n    \"script\" : \"6eb2r8j0cgz6h726l6bzib1qx93s8s9zh6hedu5qywivp2dkoqukr3iu3azco34k1u78mqq8ljpmv79mpnbg6k1j1aeg\"\n  },\n  \"name\" : \"Taylor Boehm\",\n  \"id\" : \"xzov\",\n  \"nameParserTypeAlt\" : \"LNxFNx\",\n  \"script\" : \"qwdzhiorx68z6p3p162qjdbtiucxt3cvbmdy4sgwoni59mbnkq91fyy6itjbo9reds46umhutxnhgxxg18pgw2lklv8usaqq7adzblf3v0dsbl6glghhihr9f4zquj\",\n  \"nameParserType\" : \"LN2FN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e689bff5-2b3b-4f89-95eb-ea54a232ea8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.607065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "6cc0fed1-2dc4-4fa4-89fb-9d323355ebcc",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6cc0fed1-2dc4-4fa4-89fb-9d323355ebcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.606485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "dc0ca543-6cfe-4d5c-b237-34a30d5777c3",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dc0ca543-6cfe-4d5c-b237-34a30d5777c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.606471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "4a0cfc89-a882-4dd8-a1a8-eab9e910d50f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4a0cfc89-a882-4dd8-a1a8-eab9e910d50f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.606454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "bd46cda4-5423-4193-a7e5-03a462911832",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"lastName\" : \"Steuber\",\n    \"probabilityCalibrated\" : 0.9869210629739564,\n    \"script\" : \"g33kjdg3t9eq4jn7n1qdhqs817pn1kxcybtna0sjhtmzqcg8ynjk3okzfvpurql3f8yvw90z1mn9hwqqtkuie61kxm85vhh0lpnspuohog5ln5s387v7pih\",\n    \"regionOrigin\" : \"25i6rsmz7agw8c1dnixtkxlmbs8uumjufhfb0ez56l4g22qjlezvw87s23roq1j00u81f3vghew5cau7q1ccsyy1ffa5k8ejuwum9c28exmb6l39hngctotp0ewlvnhtzfsouwnxrm9rs67ce1utniqor6h5cvz3pjbjlks2y52c9m0hap295bb52pms2wb5rpq5gvj9\",\n    \"topRegionOrigin\" : \"j5a4mt4iuub4x5h4g5h9om70wxa8paa8dkm61biw6woj76yzeo05k15afvtdjhpltcfx8sjjxcb4yfc53fbknsgv631ncdva539pvrhkq89faor68iqn7o9kaw2lvjgnazdzhdbqlzxhiwz63mkt0hdy9pqrmin6dmm6v5lj6oox8j8g6xdi4equ10wafvqdpqgq5c2d\",\n    \"firstName\" : \"Fabian\",\n    \"score\" : 95.60325922982223,\n    \"subRegionOrigin\" : \"5upritb6lxx2gb77vicmvyng0bmwv4q5jp9dkz0sqvl90qek4sdk87z40zw9zsoqxc8pig563x62609ywgniwc5ts18js11fbqyiga1w2wyadldyphmk79xhiuuqrvpyx30tv6dmik712hiy14v97tvb45fl264l7ghub5dlic1mks0gngxqn2ij9jmh1e96ppds\",\n    \"probabilityAltCalibrated\" : -0.7330521962921366,\n    \"countriesOriginTop\" : [ \"zydkebrhnho4cxj71xh9n5usyltzwiif0akq4jo5j4phi1sdycs4bi0b99uv41k4e61547pjlt6elfw3quwkliqavw88m4zrcmsak4o8sr6033qfbesfblahoiny6etaqbaouegetu2\", \"k16n0nfq0m1dsbba6ei580ec62rg1haocafx5msdwy\", \"v73gzcc49n7ytpf5r43ohy293y7g43lc\" ],\n    \"countryOrigin\" : \"7y8u3sgbaxe0h6ljj6n7m6uwswce57ry7y4lm2ou7eljrub4pg2g0w5885hqw1cjp32d58qhexi5wj826ht4ifnjj3saz\",\n    \"id\" : \"sqwf\",\n    \"countryOriginAlt\" : \"vkiprvrhal6ugnjaj2ptu8wwwgkxhgp7jsws0p8i08lfbe6jsdespxiaasmtm8egiro4d93mdfomrfpx5drq954lruukufso75mwi61hqt2732n345c6jjb1ix3jomvh0435yvmzfietc711oxhxnsba2a1uwqhl4myjqxdpo7vhl\"\n  }, {\n    \"lastName\" : \"Conroy\",\n    \"probabilityCalibrated\" : 0.6164118185493945,\n    \"script\" : \"qig9i0fjqidqj7wnnc6sj0ljw5atx05i3k7pgoo8i735vw518ojurktoy9p85p33kzrr3cs9fasopoeqe3b0yqjhq0cve8tubb8uvmcszriaaxk4shve8s6v87vwsi0ru\",\n    \"regionOrigin\" : \"qut5jsjhn2y8acqhapmxxndbnuedvxpe4uhxllvn2xa97z5pk7pu313369dq0oafbsltku432uq72j530uuyshjksasyeyr1uo1x8rxlwavuf4vu7wxbscdtyzshn4ed5p0t99u7r2tqe7ig92ubsamosdc85t9m\",\n    \"topRegionOrigin\" : \"mh5ssrin3kunfdlnfa2k6u3rbob4ioktkh6sdnoe1mm70tv779xstnf3mdvp8mnef4ndric72of6nq0yzuiji6462dbi9jznhosi5ubxaz16jk8zzd4cinqoj8dbt71xor1lsax5tnh1dsl3fq5tcb12tq7cd7l8h2v1265qzvey4l5d2o41ll8k83clku6\",\n    \"firstName\" : \"Shela\",\n    \"score\" : 56.25766691497741,\n    \"subRegionOrigin\" : \"gg0ibskvby4kaonxs16zra4m80wjshnp0sn6rfd818sqlsrptc99e1xljw4ir835396vypjn74pmlkhb7zmub393dhkqtmcp5ji263mla3keqm8aa\",\n    \"probabilityAltCalibrated\" : 0.9740866844319298,\n    \"countriesOriginTop\" : [ \"idp32n22mr3jdxgonn9e2ume6vu3hn64751vlhhi9ivnyeh26y7njhx1eqyrf54fpw5l57z63a5g5jeb9eu6ev7gvv634b4ziv57h54kcuw0i2u2odbdg67vlf6v142fwphbabnsgb11gaqond36ckzhwbw39sh\", \"gjjdy1b38nczrs9qjwuvuwmvgyv8wp5na1pzpivshki45ygpzjfw4zq2juiezs06spovkjwlzr3ottxi0lb1cfljkm1lktndimnmetiv4hs30q84a7i52izmnv3swav3yiquka9dmykcd8p3qt31eoo458wpe6axey2z24ljctk1nrgwjuv6\" ],\n    \"countryOrigin\" : \"s1aaj5l4yg5k9r13kgl8sttafilcli95x2utbm0vw8wz1npvqmirmjf3zzlnf65yuj5aciizg76qaoq2abs0myqc6giooxb8e13fdxf533425ay03725ovud49a75mbee83ex8k9v6pioofoye58kps9g1vccail98216fzy0end4q4fjwhg753p6mu\",\n    \"id\" : \"5jy3\",\n    \"countryOriginAlt\" : \"ap5fowgiirlv9ah9t1zgn6felj8wrh8ktsev72iwomev89dp9fqlhci4nb1qb9f50vwbhtn3vr1dvq4\"\n  }, {\n    \"lastName\" : \"Price\",\n    \"probabilityCalibrated\" : -0.3382788570280091,\n    \"script\" : \"ca07ub9pe76n67zzlrmdpcrtisaj02fqr0o7\",\n    \"regionOrigin\" : \"1sz76a36j8iap0y9mth1pvc7lqi0cytovpe8bewl49obxj8tw4v5uxc441ro7ksm62xpyz55ufsth6ia91gwdbt724y407qsptdioikht898kqwdrajhg4ztw7tsablhxtp492amlaz4iiaus\",\n    \"topRegionOrigin\" : \"aocb0h7le69mhzvxhffaf7irsgdg06dyjrm5mwv61ufwc3pzowxnpjxfzee9zv84w3xldylfpkkibihlwlj8086lhpcditejplj5c6fvmt0c5sybr5qz312ci9vi89jahhrolc6e4x8m62x\",\n    \"firstName\" : \"Charley\",\n    \"score\" : 37.63379688305274,\n    \"subRegionOrigin\" : \"tkjoyynj6gum6ml2my4xvr10r39kycnmsn3tlq42cpbste4wp1vk937r4pmsa9mo6okfm7o3igh0jd737cj272qahaevjbnikqe5210k64h89jyc7yqxihrf8n2iepdnz1jnxy2i7nm\",\n    \"probabilityAltCalibrated\" : 0.32337004640928946,\n    \"countriesOriginTop\" : [ \"fodhvmbp1w6pfq6fu34mpdsyel37zviq8un7zg8uk\" ],\n    \"countryOrigin\" : \"bcqfu2lfo6ig2otzrbbsml06lwavqo1tgi3jr50olbubh2ymyybdqgsg91yltysl3zep3y652d1wlkzc3iadz8d5w5mcp5wxx431elqeagrdsdf2n1du9ktkf8jfc194i92r4fo5u4kh3qjzt98fsgiesy0l13wbllis\",\n    \"id\" : \"p9f3\",\n    \"countryOriginAlt\" : \"o4r6l8zuxdg30yvtyj5sbwfou6sf008q056qinqqpcm5qhgxf4ebs29fdi2lsqmu3sqtjh5ps6enq45aod9bvxksyrgd1ivh45mb6bq1vz0ioy3se77dqd1jsauoqsaj38v1yqz45c3aoc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd46cda4-5423-4193-a7e5-03a462911832",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.606404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY origin from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified origined names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameOriginedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "33d9512d-7d98-4748-a896-eaaa3e8be834",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 403",
    "request" : {
      "urlPath" : "/api2/json/origin/Korey/Wuckert",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "33d9512d-7d98-4748-a896-eaaa3e8be834",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.605417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "39c56483-dc94-47d5-9d65-f449b2fcae60",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 401",
    "request" : {
      "urlPath" : "/api2/json/origin/Hugh/Kuhlman",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "39c56483-dc94-47d5-9d65-f449b2fcae60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.605349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "9d9f3c9b-ce98-4d4d-83a5-0aef82012131",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/origin/Dylan/Donnelly",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Skiles\",\n  \"probabilityCalibrated\" : -0.43592483485597056,\n  \"script\" : \"vwrmhneahgb1242eqwyrvgtip5dawoxjdr04uk8a3aytxcnet80c03vhmzh6uwjfi5po8jyl13j19gzz5w8e4vtadngwak7eypexbdbo2n\",\n  \"regionOrigin\" : \"rnc3nybneej7s1d6q7os7wmrji76t5efd098em79ed1s8eddbuv5tl7jztgywmzrupzyk7xnudig77smtee2fh4143ejt7dtdq4vt0yapqh7m2zwzoh38ax6z80a8a5sqji55qtiscoxe6dw5wwstjitf0wxpbue7byekvau3\",\n  \"topRegionOrigin\" : \"5bjyunwamyier3judu58x5dc6l0jxg2edx5o1jvwb1kory2stdczcpe5u03l5utq4dyqknju70mlnfxv9o7hsw48ogw8bvhouo44z5b\",\n  \"firstName\" : \"Elisha\",\n  \"score\" : 25.662850500843014,\n  \"subRegionOrigin\" : \"6ecvnin3l8gubp3ftdtk1pyhjbapq64x6sd3m4og616uv71yg866aukmsn5lbu3jx2znttyk8bi0w160p52e0wwtc3vtgvirkkf481uinqcf\",\n  \"probabilityAltCalibrated\" : -0.012463871044323449,\n  \"countriesOriginTop\" : [ \"5vh9yafi51qnosjmwwl7xn6h5oq3xoyvoiy\" ],\n  \"countryOrigin\" : \"gswtu7wfxkwv8aaov8afu6bqdwy3i2gcleqn7ybq2lzwg1cczjbk6m0zb76rlzqtozenrso86bx96o8svr\",\n  \"id\" : \"xf0i\",\n  \"countryOriginAlt\" : \"vcd90r5dym5a38iv8rlfqrwjp877f9t32aqsky670itiqjf5bzkpu749zwpx7k1g7wwddpnmk7uifadhhgpnm9b2mrioj9mdk21o4ipmamxtfel430pptzluxe7hszeemhvbt208qi9gphq9jjm80m29z8rbxwevxwa43hsyojmbesage4qk6eqsmqafaqi1uoc42bw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d9f3c9b-ce98-4d4d-83a5-0aef82012131",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.605231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country of Origin from a personal name.",
            "properties" : {
              "countriesOriginTop" : {
                "description" : "List countries of Origin (top 10)",
                "items" : {
                  "description" : "List countries of Origin (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "countryOrigin" : {
                "description" : "Most likely country of Origin",
                "type" : "string"
              },
              "countryOriginAlt" : {
                "description" : "Second best alternative : country of Origin",
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "regionOrigin" : {
                "description" : "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegionOrigin" : {
                "description" : "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "topRegionOrigin" : {
                "description" : "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameOriginedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "2e5e9699-f3a0-45e3-8fa8-7184019c30fd",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2e5e9699-f3a0-45e3-8fa8-7184019c30fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.60465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "9c3f3e5c-74ea-4009-b434-e9bab7510e21",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9c3f3e5c-74ea-4009-b434-e9bab7510e21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.604634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "a5ff92ab-2582-42e0-917a-dcd9adf6f341",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a5ff92ab-2582-42e0-917a-dcd9adf6f341",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.604619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "ebc5a218-21a8-445f-a583-f5661d131dff",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 89.06634054280192,\n    \"commonTypeAlt\" : \"s128zoo48z\",\n    \"name\" : \"Mrs. Wilton Schaden\",\n    \"id\" : \"0rip\",\n    \"script\" : \"4vhcp0midqbht98q8hlriiwusz6phciqn6zx0hrb51k4a1q5kewjnx507437jn48xtjuhjek1ou3yc4x1dot9zbckcj8x52kydvxc9n0d5wi0gkmblt0lnwx0uwi4wa66obsgwa0traxd5ss6kk0il59q45f8dq8i\",\n    \"commonType\" : \"1l6wppt70thgxrkigk5isimvkqfulo7ekw8imdpkg73u0d6o7ux5ffhl1ifcwp92gdkk0zzcbe8xbjgk6lpfaj44ntatfgks532q5z07wal1kkh8z2be5o83tiulv89nsg7kf19j4exy8zrswco7796m3ij8whks417yv9oi2zp7n21ms43e\"\n  }, {\n    \"score\" : 12.045046925338475,\n    \"commonTypeAlt\" : \"tyahh77lyulzubjszem892swy141kqy37okli7suwudt848q2v6uh3nxhn7327zkjes1a6vlpu4oig1g4ezh9o8bwrgsk8tf473pfy6y83no6sa1dal7chul06ysvm2n3nspatwe9xqtte\",\n    \"name\" : \"Myung Waelchi\",\n    \"id\" : \"c51h\",\n    \"script\" : \"ydiii9eg8a30uqh7hgu5wwo39gh4vytkdnwa89f00g8phbu35u22f092eg45gx31erf5l0pyzcrigx1h546pu924wt48irdv\",\n    \"commonType\" : \"1aeq4xzqlkewp0uhi7rnxwmbc4snwh8bhgy530xwxfn2dycl4s1wkgkbsf2ki1kuhprcfk30qviyrhjzv6qje7jjeg4dmgrxgxl49vxgnnpgloj83eb8xzhxbjfkj5eor96cx5bm\"\n  }, {\n    \"score\" : 55.20462050182471,\n    \"commonTypeAlt\" : \"s29mav0zvzvmgxw2pzfo3lzbp56djv\",\n    \"name\" : \"Ahmad King\",\n    \"id\" : \"78nx\",\n    \"script\" : \"9zj6ollvqehuk2cwyww8smtxywpzi9pn7qm6f21vibr4buhu3do9xz03d1nvqlplu7fhsjphlwqy8a09h4syxsbqtsinpv45gkz2933lkpvzij\",\n    \"commonType\" : \"ez899ixgrrk61139jas5mcejb6hucb7g2urkrq9nn0g1lrkjmgnzo8hg60djawsq2k7lzvpoix51p8un2bkacwf5ns0q22tiwcyb3qyu2l79\"\n  }, {\n    \"score\" : 3.8496360586377176,\n    \"commonTypeAlt\" : \"xpncjvd5kr5fd75lofkjqjgmjo4nqfc9izdtjihxcs5x14xmobdg0a80u0fv6j5aa5uzezf9mxrhhnkh\",\n    \"name\" : \"Daniella Wolff\",\n    \"id\" : \"f255\",\n    \"script\" : \"jgq5gxkom3wwsprdjl420mv0ktsp5xngbvpaea930w883z61sftgn9xcz073zns3y4dp4pxmu2ntjetxq9ag878ewwrhy5b5pw0k18v73udg8scq2k4qz\",\n    \"commonType\" : \"4ueb9v3zcn65ggnkvdlftkgv8ti65nna\"\n  }, {\n    \"score\" : 5.345878546419314,\n    \"commonTypeAlt\" : \"fho3d5kz2fdqioyih22g6yigi4r7m25ttppjxs4d6z2egzbknnccmz1ws2i34b06jd4rsw78v8pr3k4xi4kicfpe1wxq89ky5bm4pm9vlgxhlw9b4wa2u3a3pizs107vbelkxt2fc92ob6p3safotnkr9sg20ffr9xhl3\",\n    \"name\" : \"Kum Huels\",\n    \"id\" : \"1sy7\",\n    \"script\" : \"tm3f1xmbct362ebf5vix57dn8yk2er4ktuuw0jgw24iuauv4mfaypk4phop7dh4uovzkdfgz47yd1ok7v29cr043oaix9vrdmd6xzpdltpdczgqfu83qejm65kv99eg9zv1kez1u7whx76sh2g943x950a9hepkj6nh9jr9hclkypjyomv528\",\n    \"commonType\" : \"yabh5evp60ofg1oq0zkj8wt20vub4lfgi9qr6jrqs7ir8uifd61nxasl6p1h04wn10mid338ainosfiqo6ilntabeeg381vjgekxtbf7duv4yy22wbmigzu09ehwxea6z8jl4e03katsrp81aqeqpm80ynql31n1c1lpdm878mim41ridyegun0bhz3p6rwg99\"\n  }, {\n    \"score\" : 51.40347939740768,\n    \"commonTypeAlt\" : \"8n0kdjqqdqsro4dvu27rsljwwj2rlke4425ny4votxj7dpkixumg757wrddqrgmn71kz4lnc6ismdf7awd5g21k5b6hjxmhn01cx7syur1z5v83chvzhwkz2djhckj3ttup50ka0fy5er3fbnsoqx20\",\n    \"name\" : \"Jae Miller\",\n    \"id\" : \"71i9\",\n    \"script\" : \"uaf2tbvtdbyl059ya734i5o0lveyodmwzm586kz0zppr2qv3r9xyahrevd1nmwdbynvshpe6rc1jggm9te00zjs67nqb1l6xgp58whm7j9hle9jo79xwt2jqokarfk2t8rmqash8ejx9g3gzyn7oje8025k8\",\n    \"commonType\" : \"8i8fe84tlxu8mocvh3dy2jtsggp6zm9ogyodfzojxk7ao2epc4o3zbn7hh3jvd3\"\n  }, {\n    \"score\" : 41.91165065049982,\n    \"commonTypeAlt\" : \"obqocyagydql4hiy2lo4t1alazkd52h7gbw2s5y70m3y9sj3a2oion6\",\n    \"name\" : \"Kelle Tremblay\",\n    \"id\" : \"5bte\",\n    \"script\" : \"4p6xyaelc6x8o9l7j7fm56oni1f3xogyg4semg9g7f2bb5ah689w36zidq1669zwg04j2cdxoxdbnjf8zfmpvzpjram0ybu38k8wji3tpwehgeqe696gas8s02wq2fux74hec8vwntpcb8bsn1l973tuwcu\",\n    \"commonType\" : \"sw7t3gzaek2vxy4outtefnhgyadf0fu9brv691qru9therb3s8qya2aijz4la3itlm8rm6g7abl49adwykq9ka8zd3uyrmztwdgd1bcgkabdd\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebc5a218-21a8-445f-a583-f5661d131dff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.604569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "84d8c8a5-34a3-4465-821b-3ac7ba2721cf",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/4a060t7wjyhhrv8i8fjl7im88nci4ifjjzzbprsuwnyj563f80k1rd99waf6zk1xqw7s6g77vdta985wrugsuc4z6t7u08zl0x8xc37z6/pnpu8b7w9s0nwhen58dzh1jot27xmzkfu6p88arnstj3ia2hl",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "84d8c8a5-34a3-4465-821b-3ac7ba2721cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.603194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "629e8c8a-e664-4472-80f6-7af9770dbe9b",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/c2ke9byf6gom0bmaktd7oe88olzfepbwjpll22efyigt32nuuxqd7dddts9nikcskvks4h6tprp2hul71rvize149twe7t44ytwr9s9jiiuwy68y1i0d6c2jr/ruizc9uj",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "629e8c8a-e664-4472-80f6-7af9770dbe9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.603153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "91a7b028-831a-4f0a-a6b2-36503f6f9a5e",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/2wsx5jaqmo5mqb/8e72punhqhbag7x2vak2xuy65q8dh3nv4vkmzs9exksgfyx62j",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 51.41718680146125,\n  \"commonTypeAlt\" : \"l0rqrzcsg39yedoags7ytkecxo1e49shmouodjlaqzo\",\n  \"name\" : \"Ronald Lynch DDS\",\n  \"id\" : \"0v0g\",\n  \"script\" : \"g3zqrvmy2o4rkpyt8bmzughqloh8penbk0kvg0b3vvw18v4wy6u\",\n  \"commonType\" : \"fpg63snbsor5wrx6jvpxglo16ltyx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91a7b028-831a-4f0a-a6b2-36503f6f9a5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.603085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "2b510fe9-e36e-467e-a8b5-7f2b059187a5",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2b510fe9-e36e-467e-a8b5-7f2b059187a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.602709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "234af64c-2161-4fa5-8b3d-db83cf0e2abf",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "234af64c-2161-4fa5-8b3d-db83cf0e2abf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.602694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "49c45479-6c4d-4279-8bca-1e1c6f2b3183",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "49c45479-6c4d-4279-8bca-1e1c6f2b3183",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.602677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "1465b069-ba3a-4bd0-98e6-ded0e9425820",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 78.23040395488131,\n    \"commonTypeAlt\" : \"999oa8c33wdd9g9v7cf022qmjjah3w6aybqtnttxkd1alzolfoeawthnejugfxxf3hh4kelnyczr920ratho8tdy55jc04mrhjorj39cen3zqv4q4z2gkfme3y7qcvu9ng9wq8h0wqpwigk8wcjrqcxbh5je7cc9q4izgdgz7a1gbvhvn\",\n    \"name\" : \"Glenn Rowe\",\n    \"id\" : \"8s88\",\n    \"script\" : \"a53stslcr1htavpf5bv2ztyfb1gqjr2tr69i6psrc2rn9174rlt8z\",\n    \"commonType\" : \"2p3cai630hl5u1x28msmjov5ug7lx62ozxdmvrd47hivejkcpgx3xsp1vbaiw\"\n  }, {\n    \"score\" : 71.70821247044724,\n    \"commonTypeAlt\" : \"g4qhy3thbbvadzubnkh33g93f5jqjo8i57g6ib2pcea32cg5vxdj715zo0oxxlvv2uimjpri3re71isuy0r0bv8e27c5vhhosawd2bow1dv0s0iwhy32mpd8k1zr2mn9w6zuvgbn8g948lhh22xkdx2p23au6hpqgzqe\",\n    \"name\" : \"Porter Medhurst\",\n    \"id\" : \"p8j4\",\n    \"script\" : \"oh9ohlzoa7q46qkagtgn4vo3989dekqjcueohbj8mt89ka7wee6sgu1zf37u8vi0czgmeqleoake0li1pri1vny8lonwvqfp8m4b87q67njz9ankb5eb50uf\",\n    \"commonType\" : \"pqbet3zqtv0n2jowdo6w305onjtb5wr8h9pxt6sgp846dr2kwe4673xor0fxykfeu4xr5d9luae4bvltlq1gcnbgfgtwsmi68etr00yip55m6xc64zyg2ej\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1465b069-ba3a-4bd0-98e6-ded0e9425820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.602635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "d59cc5b9-a3d7-41ff-9986-c5c0f62c95bd",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameType/iwohwy6ws3nm",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d59cc5b9-a3d7-41ff-9986-c5c0f62c95bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.602081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "81dca04a-8f28-45e9-966d-4c50823d78c4",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameType/l7muauwwhwxr2cl1vs6sfdbsxp9o2su99ghz47pm1wqwdd6q2wto7nz3f6vmv51pura79z8zgi95eyda4rcylfui",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "81dca04a-8f28-45e9-966d-4c50823d78c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.60205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "04b1725c-e810-49b5-afd3-18781a126a62",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameType/0ls6mhyuvughsiz1y0ftmsqxuje0ye4b5oi7pvpiywyerswr6xpgixmqw9lxgh14qc14vcmsdw3wcuz41su506dbxv8mgi2njslpav4qth68hbciwxi49lwytowecwp4z49fp502afmpw4ojy90ugcu58pvd3tnj7gza9iyuoz5w89r8yzua5n82qwm0xrj",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 82.2403513023182,\n  \"commonTypeAlt\" : \"ta10lmnsf17t656ff8n2elhy8mqjoaduhs5ph6utlbhh9822nym24o39mry5qq42dnm5r043ooi5eit3xt8ydpiwrm0cjigy6q24h682wqt01azv1s1selkpny2\",\n  \"name\" : \"Titus Padberg\",\n  \"id\" : \"05yd\",\n  \"script\" : \"rnyh24h1rplyjxvb7dabm17xmvjglhx1\",\n  \"commonType\" : \"jnwxoazxio3bwc6kuieljm8hyk1u3psee0y69zisc5khzohhrkl7dm6ec35e6t4erc72evo8cqp3vwzo02yndfwqu3otjzls\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04b1725c-e810-49b5-afd3-18781a126a62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.601987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "3b71501f-4487-42ad-885b-9a9a276a0053",
    "name" : "Activate/deactivate learning from a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/learnable/kgbq0crqicuutltr241b9oi0n58jurnjtlgmn4kw3szzhh60cc3vzxqrz9u9c4cqo40ktqnxqna8qwpqtrigrl1jqsu9l23ng58dcuchzhcwv2wrtag2xh5c704mg12ady/true/vuj5hdnytf97dxxa6y68m7ck4uwqi8hmek38y166b7ihyuc8nkh5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3b71501f-4487-42ad-885b-9a9a276a0053",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.601575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable"
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "659b3927-1467-47ec-b64f-a6760d2f548f",
    "name" : "Activate/deactivate learning from a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/learnable/gg4fbv2oevim68ob89cmmhdi0b2xwh1pw3whc2amkc58zq24e87bc2tsb1vrlm2u1jj6c7jft7qftm743nklkjxieqwvhn1gv8jelpv8fovt/false/js1194xvwrajt6sbqk7lrf90sh7lo8x5xeswgv9gs844bma8ayr6yc8sv6mcddp9agcsxyxzobcq8axoydsd5a5y5e53f695vtek7cdmdhjew0y14xkz8ilcqk9921z9rdhk",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"yzyebq6l6un2tcsrcqvc43qe9b7ai4cdx7bas\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : true,\n  \"admin\" : true,\n  \"disabled\" : false,\n  \"userId\" : \"9jgr\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "659b3927-1467-47ec-b64f-a6760d2f548f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.601506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "93f3a13e-77b8-43ae-968b-152bbe2072ae",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/wckmql1w351fs2ltqyrl6qeeqgwoigqxq16c9oy9r055w5zf84qkbcj8q4ojt0sf46i61iol7df0xb6az44a2fjisnpoqi3z22j9o63n1nep0mxc0zkaou7eh5x9z2q1f7d0cy/a0bbf0t9utgdh1mwhixcfdi0du6vwwlxs30iwqqgcpmwhots2yfg2wdfzstxzj5zigrja8uj6779vbn9u9wrod7nsrkz5cnogm3p5p5yfjjl3fhn1j5hxvv55il/Hector+Mohr",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "93f3a13e-77b8-43ae-968b-152bbe2072ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.60117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "f069718b-109b-481d-b7f2-e82510d6daca",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/qzimyx4sxlvd8spfyo46p0ru56w2zxythfjegfz4fsggmwt9b0tr1ek0jvt8sygzknlpc9npch2f6fatmiox90wto4lo/9fxxtl0mcd8/Maynard+Bailey",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f069718b-109b-481d-b7f2-e82510d6daca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.601087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "5eaea69f-ebd5-4394-bde8-6af277c1ef4d",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/fpkhbkvwkvgxkfdx01ppfmqkfk5nphlwntd7gxcjl7i5bqximw3gbfjky9crnqlnc483l7asz3vcf3rhmw406v8ys0kkugra1ms3f6zieii4xnl2lghosuasytkqwqymmey22u/3p9j3r5ojksh49mzb8xjv1xw9qi0ex7181oj38zgvb1lynn2ng4dqxlgk5wvgpg48y54qt84aexita4gch8lbo7kt18bxt6nnbgp13nf688xg71ne2kdlq9y1uwig46rihivz5tt6x358bx16jor8b0t6sedpogp7e6yt9eqpi13ss20ulgz/Aurelio+Crooks",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedbackCredits\" : 6077534911747255180\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5eaea69f-ebd5-4394-bde8-6af277c1ef4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.600989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop",
          "schema" : {
            "properties" : {
              "feedbackCredits" : {
                "description" : "Number of units recredited as per feedback loop successful classification",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FeedbackLoopOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "2d3a8a21-ac8c-4891-bdd0-3efe954a9c7f",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2d3a8a21-ac8c-4891-bdd0-3efe954a9c7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.60081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "748a114f-3da5-470b-8cbf-46cdc24a89bc",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "748a114f-3da5-470b-8cbf-46cdc24a89bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.600794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "762859bb-dcc3-47e4-9d57-94e409e79914",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "762859bb-dcc3-47e4-9d57-94e409e79914",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.600777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "233f4df0-f109-4a08-904b-f4f5274c8316",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.0896647945151557E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"1141\",\n    \"script\" : \"j7yh5z9lunqhstzwl82dozltjq4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "233f4df0-f109-4a08-904b-f4f5274c8316",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.600742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "4af1b18c-dceb-46f4-8bc1-8cfecf9472a9",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/821mpwwzqd73vb25lzpt8fq8h39dlr801dbwqmqq40mszkigql6gjyr0s7nfwb0tjjwh0nbft7gv5sj6m1cdu0pgkq2b346wypni0xrbgzyuuzbrdqic8z9w4kf63umx3u17yquhuczqq908w59433ltokx10ml38c5x/ad0ks2axxhkm3pk0ha7pgihtqhx3uvpqnkzg9qceyqyqet9e91mi6tm6ldzt3faq6g6684y71e051ayu48pnoqlpdyi69b1b7zkrae7i65e7v6cw/Kirk+Russel",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4af1b18c-dceb-46f4-8bc1-8cfecf9472a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.600496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "2858cc63-58c5-4c62-b928-dcfab280ea01",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/0eds56rq6kzkvq5rpu05ne6mchxka2tv0j6/5fs6x8381u0v0z4wxvrs1fwiudq7ioulm1myzc6l892vdigjo58xdwm5gpugop/Jimmie+Ward",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2858cc63-58c5-4c62-b928-dcfab280ea01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.600409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "9ca7622a-7613-4202-9f93-07f96752688d",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/tyn1ztxwitab8zsfodqpqawa785d87ae84g7tthmck3e2rafljd9je5dpjq23sf3/3mdo77vvq15uy18f6o88q1c40vqa9gx7xavg1vec3q9x4qmye7kpbwlrim7xpsfyd0mbir8iz9naqyu5livhygzewj0dze51lgq2w43jhsgpmyfnn1qx247hy0mhw12ii34bgs5hw1/Ellen+Goldner",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 9.981116884402106E306,\n  \"matchStatus\" : \"Mismatch\",\n  \"id\" : \"l6z6\",\n  \"script\" : \"07wvqkm0txu5ipr6q85ezm5eslgfcrhctv0oqzgxnwybh60x6jspe7d1e1k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ca7622a-7613-4202-9f93-07f96752688d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.600284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "a6080e55-8a49-4a4f-a5ed-e28c3528c815",
    "name" : "Romanize japanese names, based on the name in KANJI - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a6080e55-8a49-4a4f-a5ed-e28c3528c815",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.600003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "6c8a3b77-c189-4776-9758-1f27445f7dc9",
    "name" : "Romanize japanese names, based on the name in KANJI - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6c8a3b77-c189-4776-9758-1f27445f7dc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.599985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "50c91ca2-0b60-4340-9a4d-90152f6d7357",
    "name" : "Romanize japanese names, based on the name in KANJI - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "50c91ca2-0b60-4340-9a4d-90152f6d7357",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.599951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "4649bc64-c33e-4f0d-be08-3d81a532c812",
    "name" : "Romanize japanese names, based on the name in KANJI (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Breanna\",\n    \"lastName\" : \"Kertzmann\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.076502372959509E307,\n      \"candidateName\" : \"2023-02-01T07:58:14.598753Z\",\n      \"probability\" : 1.0087163091295173E308,\n      \"predScoreFamilyName\" : 3.490868537982444E307\n    }, {\n      \"predScoreGivenName\" : 8.529168502887385E305,\n      \"candidateName\" : \"2022-10-30T08:45:14.598795Z\",\n      \"probability\" : 1.3541012369121147E308,\n      \"predScoreFamilyName\" : 4.3345686538142204E307\n    } ],\n    \"orderOption\" : \"8piu4qmqu89j4e07zlclzy1fwvyly5yhrts153wpr537\",\n    \"id\" : \"5221\",\n    \"script\" : \"elf9hq8nlzov21tiuz77wyb6dom497wxksojrgxeyfbmwr0ykoa46ylqw15yih6ln1erydl44g3x1hul3yul4cgu5q3a5wmg55ay0gws\"\n  }, {\n    \"firstName\" : \"Gilberto\",\n    \"lastName\" : \"Pagac\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.326831264281212E308,\n      \"candidateName\" : \"2023-03-02T06:52:14.598997Z\",\n      \"probability\" : 1.43164283194444E308,\n      \"predScoreFamilyName\" : 5.336531890175593E307\n    }, {\n      \"predScoreGivenName\" : 2.5386731486659534E307,\n      \"candidateName\" : \"2022-07-30T07:52:14.599038Z\",\n      \"probability\" : 1.7210896063367123E308,\n      \"predScoreFamilyName\" : 2.480081072360205E307\n    }, {\n      \"predScoreGivenName\" : 1.0918672566610492E308,\n      \"candidateName\" : \"2022-12-11T07:42:14.599082Z\",\n      \"probability\" : 1.1059114737167888E308,\n      \"predScoreFamilyName\" : 2.673317391903343E307\n    }, {\n      \"predScoreGivenName\" : 1.278319072609554E308,\n      \"candidateName\" : \"2022-06-15T08:47:14.599127Z\",\n      \"probability\" : 1.2934872516035993E308,\n      \"predScoreFamilyName\" : 6.0973846518862E307\n    }, {\n      \"predScoreGivenName\" : 1.0723178276318504E308,\n      \"candidateName\" : \"2022-07-05T09:12:14.599174Z\",\n      \"probability\" : 3.56501210606349E307,\n      \"predScoreFamilyName\" : 6.391257134622256E307\n    }, {\n      \"predScoreGivenName\" : 8.874208137529033E307,\n      \"candidateName\" : \"2023-03-05T09:20:14.599215Z\",\n      \"probability\" : 1.7408076445021673E308,\n      \"predScoreFamilyName\" : 4.035278662196044E307\n    } ],\n    \"orderOption\" : \"048vp9xu67vd54v18whpf5ph4c19n068ear7i23whaqo7dkhz83lm\",\n    \"id\" : \"j0l5\",\n    \"script\" : \"r3ri0pd5hql5rzea0qeexwxhh8gkpv1wvo1mddja7q98i49v8619hvokv5l8anex00e8lho37cgez896vq1s9m4xybjp1z62rimlqu51qm7sk1tuz3q3pimdm18kl2o3\"\n  }, {\n    \"firstName\" : \"Madaline\",\n    \"lastName\" : \"Wilderman\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.228323308000788E307,\n      \"candidateName\" : \"2022-12-18T08:02:14.599418Z\",\n      \"probability\" : 2.4935088723652245E307,\n      \"predScoreFamilyName\" : 1.0307938233216352E308\n    }, {\n      \"predScoreGivenName\" : 9.49202540024219E307,\n      \"candidateName\" : \"2022-11-10T07:23:14.599462Z\",\n      \"probability\" : 9.185838703915664E307,\n      \"predScoreFamilyName\" : 9.34782981618608E307\n    } ],\n    \"orderOption\" : \"4mdx30mz53rygl5bqeteoq8oe0840uhpqktnq59rreuabutv6vjovapuftoptzon9dnzal1ly7vl0r19pk6a0acddg8ux8b69w6fh3g5s0b29z3dgh33ur5jocwg8gwmj4jtvzvankl12rdp124bqkv9u5dle1xzhvt5h6netjmipm1\",\n    \"id\" : \"86xi\",\n    \"script\" : \"ribvnwa5tqy01go97u1cct4hohdzs4egwmbw3r9a8vf9155pvg6s4rysh3m1kqev7bsqshab8b01jel9ly0eru88d9bwhgwlum4uej2wmd0ojll2u2\"\n  }, {\n    \"firstName\" : \"Jim\",\n    \"lastName\" : \"Sanford\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.314741155192502E307,\n      \"candidateName\" : \"2022-12-31T06:54:14.599659Z\",\n      \"probability\" : 1.050174889064331E308,\n      \"predScoreFamilyName\" : 1.1698961277996856E308\n    }, {\n      \"predScoreGivenName\" : 1.5411272734026897E308,\n      \"candidateName\" : \"2022-05-10T07:33:14.599702Z\",\n      \"probability\" : 6.586367826455989E307,\n      \"predScoreFamilyName\" : 1.5455684962767553E308\n    } ],\n    \"orderOption\" : \"10zesw08oolbylluyndm3qxbz16r9kq88tszezjn7g6ll6vioh4a3zzkxpemzpn1f5m6m0l82c5mydjkpg6ymwtdbyx387oq6c91axo2wobo1e61snsow372o0mi6czfmh32bw1e6z39e1t41se\",\n    \"id\" : \"8ou0\",\n    \"script\" : \"zas6zggkk1xsnife4qlb3r2q5q6e1oforoigsiezxp62my0wsz2n7japmvfxcdmrr8fqhxo5n5kfj164q7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4649bc64-c33e-4f0d-be08-3d81a532c812",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.599917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "8e54e5ac-d46e-47e2-979c-5c855536312d",
    "name" : "Romanize japanese name, based on the name in Kanji. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/n2qvb2obtuy7b0rr3w7xq31b6rnapbwgo61bc0g7s1qmb93suqxqc5pvehddld/sk49cmv9p03r42o4g4iqrgp7gdotu4md9zfvf5txww2nn7rj407l6tv76wikn5srl90n0wb52ntit127wx23612d85j0sx54qthtc1c6iud03guy4pqbeni",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8e54e5ac-d46e-47e2-979c-5c855536312d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.598654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "497874e7-e12c-4a3e-9c31-74991475615a",
    "name" : "Romanize japanese name, based on the name in Kanji. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/2zuhwsgsodlbm67ggc9hsokpsa3y9fr07jvs4fowyo3c8q7dhkdu/v6vaqybcw4wbwxw1ok2tqfj5btm4",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "497874e7-e12c-4a3e-9c31-74991475615a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.598614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "fde81e4c-cc86-48b0-9985-def911ffbea4",
    "name" : "Romanize japanese name, based on the name in Kanji. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/rsxtv31wlsbz6cv21ks9js6scxtawd5rl86b4un5ng8wbilw7em5da9hwkaug3eyqqvr4pgbps6cecfyy96lzukaq9yv0qhbgn3526br53h7t28au50dmf0bvr916kph/ap6yztfi2rd8gm7b0t6b5v1ao9rx5beq922reskusmxekfnfz2kk8u6d36jn7xt5n4p26hq",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Warren\",\n  \"lastName\" : \"Crooks\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 3.0752557941498734E307,\n    \"candidateName\" : \"2022-11-25T06:35:14.59836Z\",\n    \"probability\" : 4.0556045565234634E307,\n    \"predScoreFamilyName\" : 2.44456671169871E307\n  } ],\n  \"orderOption\" : \"j08mbr35bngww8wne0rx62w868pthoftmv9h5uzmglfgipdqy8ic8szx0mzwavo9jecgicw3tkm2fq71m73xmn1jsowqx3cgnacxy9ks5q2a8fdtm92a049bl204tmzh9rqixaoo0oyot014rey5wpusjfyzsv5xhcpsmxcvbx\",\n  \"id\" : \"70gn\",\n  \"script\" : \"zy7z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fde81e4c-cc86-48b0-9985-def911ffbea4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.598563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "5510f76c-b9f4-4af0-914a-c7ca7ce6ea3a",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5510f76c-b9f4-4af0-914a-c7ca7ce6ea3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.598265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "5afa90ae-8927-433e-b675-cf165c7e4c99",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5afa90ae-8927-433e-b675-cf165c7e4c99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.598249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "d947c86e-0601-4e00-90e5-7d473312cd34",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d947c86e-0601-4e00-90e5-7d473312cd34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.598233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "fb3cf49b-8b90-4930-aacb-26c04f74d3a8",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Remedios\",\n    \"lastName\" : \"Satterfield\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.598658590877783E307,\n      \"candidateName\" : \"2022-10-17T06:39:14.59656Z\",\n      \"probability\" : 1.2028688098832536E308,\n      \"predScoreFamilyName\" : 1.72598638820627E308\n    }, {\n      \"predScoreGivenName\" : 1.3707311766007023E308,\n      \"candidateName\" : \"2022-12-16T06:15:14.596604Z\",\n      \"probability\" : 5.79612516105365E306,\n      \"predScoreFamilyName\" : 4.2620378457066455E307\n    }, {\n      \"predScoreGivenName\" : 5.77043090978046E307,\n      \"candidateName\" : \"2022-05-30T06:36:14.596647Z\",\n      \"probability\" : 1.1577326337878562E308,\n      \"predScoreFamilyName\" : 3.4605788260863673E307\n    }, {\n      \"predScoreGivenName\" : 1.5096377033665874E308,\n      \"candidateName\" : \"2023-03-06T05:46:14.59669Z\",\n      \"probability\" : 3.6561545229986093E307,\n      \"predScoreFamilyName\" : 1.1701633811485957E308\n    }, {\n      \"predScoreGivenName\" : 2.7899563012613737E307,\n      \"candidateName\" : \"2022-11-13T07:35:14.596736Z\",\n      \"probability\" : 1.0775143321927522E307,\n      \"predScoreFamilyName\" : 1.0204730879870938E308\n    } ],\n    \"orderOption\" : \"b8lv2xql2en8bolbskbpnl4j05hr645l2\",\n    \"id\" : \"j2u8\",\n    \"script\" : \"ezdvhflwx7wwlhjf188ec72bw1yyszw45at5jspmk2sqdq\"\n  }, {\n    \"firstName\" : \"Chanda\",\n    \"lastName\" : \"Stark\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1804668119792443E308,\n      \"candidateName\" : \"2022-04-26T06:08:14.596949Z\",\n      \"probability\" : 9.71367078344619E307,\n      \"predScoreFamilyName\" : 6.363826528346371E307\n    }, {\n      \"predScoreGivenName\" : 2.1460022870340992E307,\n      \"candidateName\" : \"2022-04-10T06:21:14.596991Z\",\n      \"probability\" : 4.4626431898630536E307,\n      \"predScoreFamilyName\" : 2.478611581403524E307\n    }, {\n      \"predScoreGivenName\" : 9.82232758689196E307,\n      \"candidateName\" : \"2022-10-01T08:02:14.597034Z\",\n      \"probability\" : 1.2444454375679562E308,\n      \"predScoreFamilyName\" : 1.098743227406205E308\n    }, {\n      \"predScoreGivenName\" : 4.955428096709128E307,\n      \"candidateName\" : \"2022-05-16T08:39:14.597077Z\",\n      \"probability\" : 2.793444176548113E307,\n      \"predScoreFamilyName\" : 2.0813180683572992E307\n    }, {\n      \"predScoreGivenName\" : 1.4553461812711684E308,\n      \"candidateName\" : \"2022-12-18T05:28:14.59712Z\",\n      \"probability\" : 1.0412139901336757E308,\n      \"predScoreFamilyName\" : 7.281739969602783E306\n    }, {\n      \"predScoreGivenName\" : 1.42802778078132E308,\n      \"candidateName\" : \"2023-03-07T08:43:14.597161Z\",\n      \"probability\" : 3.0070415016784206E307,\n      \"predScoreFamilyName\" : 5.434527932847346E307\n    }, {\n      \"predScoreGivenName\" : 4.502256136693111E307,\n      \"candidateName\" : \"2023-03-03T07:22:14.597203Z\",\n      \"probability\" : 4.50031730122601E307,\n      \"predScoreFamilyName\" : 1.6613765515093367E308\n    }, {\n      \"predScoreGivenName\" : 1.4666372458222587E308,\n      \"candidateName\" : \"2022-12-28T09:18:14.597248Z\",\n      \"probability\" : 8.491319010132663E307,\n      \"predScoreFamilyName\" : 4.4534840898434096E307\n    } ],\n    \"orderOption\" : \"doj87jhxbu43fmncwrsremy7ewm3noec5p\",\n    \"id\" : \"e884\",\n    \"script\" : \"og19ik14sx3qm9hlkaovv9o76q22eefq2cod6erv3nj9f2zq4ylg052owgsgyxfek8xdsw0bd9bqwbqdcjq806dt\"\n  }, {\n    \"firstName\" : \"Roman\",\n    \"lastName\" : \"Kunde\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.684993609997923E307,\n      \"candidateName\" : \"2023-02-12T08:46:14.597459Z\",\n      \"probability\" : 3.6619364427407173E307,\n      \"predScoreFamilyName\" : 7.35556178896887E307\n    }, {\n      \"predScoreGivenName\" : 1.4428378120652401E308,\n      \"candidateName\" : \"2022-10-20T08:21:14.597504Z\",\n      \"probability\" : 1.5722878463075452E308,\n      \"predScoreFamilyName\" : 1.540351630235997E308\n    }, {\n      \"predScoreGivenName\" : 6.259175059184728E307,\n      \"candidateName\" : \"2022-05-24T05:35:14.597547Z\",\n      \"probability\" : 3.362491681869114E307,\n      \"predScoreFamilyName\" : 1.4787241311868261E308\n    }, {\n      \"predScoreGivenName\" : 3.4480338308754164E307,\n      \"candidateName\" : \"2022-09-13T06:13:14.597589Z\",\n      \"probability\" : 9.753699949443498E307,\n      \"predScoreFamilyName\" : 1.6706765111912208E308\n    }, {\n      \"predScoreGivenName\" : 1.4475334672099003E308,\n      \"candidateName\" : \"2022-05-21T06:36:14.597635Z\",\n      \"probability\" : 1.625798001152164E308,\n      \"predScoreFamilyName\" : 1.7243907599520285E308\n    }, {\n      \"predScoreGivenName\" : 1.499211784627974E308,\n      \"candidateName\" : \"2022-08-12T06:19:14.597678Z\",\n      \"probability\" : 8.345492181102262E307,\n      \"predScoreFamilyName\" : 5.906011727315875E307\n    }, {\n      \"predScoreGivenName\" : 1.655235328307272E308,\n      \"candidateName\" : \"2022-12-24T05:41:14.597718Z\",\n      \"probability\" : 2.1132617890730625E307,\n      \"predScoreFamilyName\" : 9.68912624013316E307\n    }, {\n      \"predScoreGivenName\" : 6.364402141094721E307,\n      \"candidateName\" : \"2022-06-17T06:42:14.597761Z\",\n      \"probability\" : 1.3923354393153582E308,\n      \"predScoreFamilyName\" : 1.7684095009232738E308\n    } ],\n    \"orderOption\" : \"i0rjeo5ge9c3zq8dr83iatxhqkyp5k2iqd81ncyup0s8ddfo0emgq45fxx35dn6dkodjgo2wgbxpxd24p\",\n    \"id\" : \"t8w6\",\n    \"script\" : \"scejjb6ep3a2dz282rcv3a90xtcqo9ezv1172k43wxtfugwxs6s4tefc96h5rl6wdue7afjwylb41vrah77nyg3raz8eixlsow1at6ap7zn2od3hnzmwlmmkjj7ez0jbdviypn9nqemh5w9q45e\"\n  }, {\n    \"firstName\" : \"Carletta\",\n    \"lastName\" : \"Kunze\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.8551734838633757E307,\n      \"candidateName\" : \"2023-01-19T05:42:14.597963Z\",\n      \"probability\" : 1.0424171830311868E308,\n      \"predScoreFamilyName\" : 1.1606270837515612E308\n    } ],\n    \"orderOption\" : \"xxlcammb8ich3jenatonmqq64gnz2h5dwa3beuw86vzqcbw8lwjvhavlhni5epzb0k99m7oxzxb6mxp1f3gv3u8w2mscsz089o3puvr4iyj5xb\",\n    \"id\" : \"e96r\",\n    \"script\" : \"5mz42vc6e37s0bew4kqao76jnjy832nf4zm7lb3gahjqvwvzhoi7vkxkp7lowi16xmb3df21t0jlowsbuetukpa3ruemxe7lgdaqhp6jnx5hyhbtbn4e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb3cf49b-8b90-4930-aacb-26c04f74d3a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.598201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "f4bf6688-7033-4c4d-8427-feeb24e1d0b0",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/xfc0lt4de82vw8sdlbb1tdllmbisroctc4ahhb3zx7sdbmk1jc9uzvftoxtsg4we31k6hcu6vnokqhtkuq/qlp37vnjv75fui7z04unbywnbstjc1sk38bhvbww7oxtq88lm5e1d0yeualxxtfjm3prc47pq9m7cj8jkoj0fknafk7piw4idizo8lo2yknydgfrscq4xf5wupcrbvmn3yrhdnnuygdl0v4jx32ue8e0z1/Genderfluid",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f4bf6688-7033-4c4d-8427-feeb24e1d0b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.596459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "36d92159-c0cf-4a1f-a457-16fcb8a59301",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/nyrewiqemtignll51kx5dejee0ubebmcig8vwv2hiu1782hpjqpou168vf757jhrqjlej5f0suctm7ch7jq4s8v4f561k1t1wb90a1rxo8sf1yzxjva9t6flwkoiznr9j88gg7da70plxsoxfz32nwzeybtt8ply0fc7rfli/085hzhc0wtt27pjwto3tcflebo74ucy5cxgwseqq6ytlzpkottbaax7ccx2y6ldi5ctwh9jpil4b05eb8nt2zfyewry18wuofuzdabtbxwejx4d96pgdc2voyv6r2pvualyo6ceix1einbkp8jtw4iuijnj3lrbi26zj1v40gisiuxxw446yhtj44xku46dek6xopt/Bigender",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "36d92159-c0cf-4a1f-a457-16fcb8a59301",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.596399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "a3ce86be-0ca3-430b-9c27-99d54ee6fe52",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/8620lao77daf6t8fe7du9kcjv00qtykk5pyckugu9uht6d61azxzumcq20nevp7oeazywuh1umzlw90odttzylsi0w/fhc9zjf4ympdh41os57ulg123uectcldjfwqdlk2f793pm79d0kuevfqvelu9w7gecjmtvww8m4lchlz3te72p132kayvz5uhqhd3ylmtpccpqyei8dlaea3r96chqhme068q1kwyix3l0hl6qyduxjo9iglkkp2iaze/Polygender",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Marilyn\",\n  \"lastName\" : \"Koelpin\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 8.183317450122441E307,\n    \"candidateName\" : \"2022-10-28T05:27:14.596093Z\",\n    \"probability\" : 8.231418973342125E307,\n    \"predScoreFamilyName\" : 1.2462398418141888E308\n  } ],\n  \"orderOption\" : \"xhhmds5pozuymqzw86r0191ldz6zuirupyfjtvulv3hi3p3\",\n  \"id\" : \"zq9v\",\n  \"script\" : \"5aystfgphmnoqd2vaeid4a9rif9gsjov3p7iqtahu0dgdy9p1dvmizizpsh90t70z9eney7xb4nenjwt0yw7pxg2trl7m1nc68upq2lb3oswazmvbh90pjxfy2jy2mgor7ohg7vcuiny8m0efudda1b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3ce86be-0ca3-430b-9c27-99d54ee6fe52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.596326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "a67d5f4d-6eb1-4097-9ff1-04901e9e0cfc",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/ide4y42oewpjo46ob8m96fkqhnxwz5ymcrgfjkz8tm3xe7bnwq7o2u579pwjrj7zludkbad30m4v4avinoc42dxhp9tpgvu2b845qvcxd2d5xjsaw/c6ny1p9prm32bgpm4kqf1b1u76gixoee8rmjar6hncatanlraob2gzu9u6yduvbhdz15sncplqkh38cyz5mk3bim1z4g",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a67d5f4d-6eb1-4097-9ff1-04901e9e0cfc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.595985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "06d62790-c817-460f-984b-0f452c350c31",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/pspvsuxz2sl4thupqyji5coqrsrdwkabi5fs2n2rt41e6lugrk1hxukn5xi6590ytx7ag3f9vcjyk13drivfe53fw8ti1phrkesp2hn12j4on95lyo9t90nw/u8llot2ldaok94ipje2mgf3uo48yzg6gk6yb1pb7iwnmrxg1xwvpodpecm36as0jjdddsu4nt7qx44gsdtxwp233vw767rvju4fezwvpdsx0mhmjsjg3ah4naw53uuh0lr7jkzb93if9v3ukhcrdh8k4488xvtgitzyvxaov65xwg",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "06d62790-c817-460f-984b-0f452c350c31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.595941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "d614ea57-a621-4212-a344-7752604fa341",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/11o7nw4f3zh5je80bzel361j1w0y4hwdpkczs41jrsjv3tzb08rcgv37goe08dc0o03qfnevj9l6nbhbvl382h007yxw964l3a75xk83ls6ozw4vo90lh6ofswpe7popjeqqp8y6biz799tjqiuf7xu4c72zbhzn68qibtu/ifiy5ugxg47e9mt18e7oq98u7pjo5s6ggg6iorqctnfksa8q",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Shirl\",\n  \"lastName\" : \"McKenzie\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 9.850613993976157E307,\n    \"candidateName\" : \"2022-05-04T05:54:14.59524Z\",\n    \"probability\" : 1.2982417872292024E308,\n    \"predScoreFamilyName\" : 1.2026958984446018E308\n  }, {\n    \"predScoreGivenName\" : 6.776227872579663E307,\n    \"candidateName\" : \"2022-08-19T08:52:14.595283Z\",\n    \"probability\" : 1.5695037946307275E308,\n    \"predScoreFamilyName\" : 1.609317429241345E308\n  }, {\n    \"predScoreGivenName\" : 7.750253614494874E307,\n    \"candidateName\" : \"2023-01-23T07:04:14.595327Z\",\n    \"probability\" : 1.4729488991660435E308,\n    \"predScoreFamilyName\" : 2.0844676273795182E307\n  }, {\n    \"predScoreGivenName\" : 1.6430516670587332E308,\n    \"candidateName\" : \"2023-01-09T09:12:14.595369Z\",\n    \"probability\" : 1.5469760083727829E308,\n    \"predScoreFamilyName\" : 5.399502471191862E307\n  }, {\n    \"predScoreGivenName\" : 2.4667414703434863E307,\n    \"candidateName\" : \"2022-09-24T05:49:14.595579Z\",\n    \"probability\" : 1.6815048487969004E308,\n    \"predScoreFamilyName\" : 1.5775927643145895E308\n  } ],\n  \"orderOption\" : \"fys5bopqjrl11hr06cv69k341haoen53azaidj7wrdvhuckqdl5uf2oiz19ak81skclh9gf678f1vzgqmfzhncxmm04p4qbg09y640y1iwm40qgomjk5vuq966whuldoqdtlre699pwi\",\n  \"id\" : \"4oyv\",\n  \"script\" : \"96tmhiuhdzk2wsqsz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d614ea57-a621-4212-a344-7752604fa341",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.595877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "a64506a8-6365-42ca-b6af-721f98e4888c",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a64506a8-6365-42ca-b6af-721f98e4888c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.595133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "c73187ad-f3f0-467d-bc22-f5ec119ee938",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c73187ad-f3f0-467d-bc22-f5ec119ee938",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.595117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "35cadd6c-1b67-4b36-8eed-513cdf2368c1",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "35cadd6c-1b67-4b36-8eed-513cdf2368c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.595098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "9716ec3e-2c69-4784-aaf9-58a5a0c50f77",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Jaleesa\",\n    \"lastName\" : \"Lakin\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.204676059581364E307,\n      \"candidateName\" : \"2022-12-11T06:38:14.578274Z\",\n      \"probability\" : 6.643742743027888E306,\n      \"predScoreFamilyName\" : 4.001712394287055E307\n    } ],\n    \"orderOption\" : \"myrmnga6z49t0fmi9\",\n    \"id\" : \"eih9\",\n    \"script\" : \"do5y8xwzojqok7h3jechfsvwi00lts9fehv40xstl9tybyy44oinud1kf36w6tbwl5q\"\n  }, {\n    \"firstName\" : \"Vonnie\",\n    \"lastName\" : \"Collier\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1550502711950086E308,\n      \"candidateName\" : \"2022-11-24T05:51:14.578506Z\",\n      \"probability\" : 1.2124020966836294E308,\n      \"predScoreFamilyName\" : 1.2282313926811738E308\n    }, {\n      \"predScoreGivenName\" : 1.636091704764576E308,\n      \"candidateName\" : \"2023-01-06T08:44:14.57855Z\",\n      \"probability\" : 1.491505759232738E308,\n      \"predScoreFamilyName\" : 1.1457385560967718E307\n    }, {\n      \"predScoreGivenName\" : 1.2337553080923997E308,\n      \"candidateName\" : \"2022-11-26T08:36:14.578593Z\",\n      \"probability\" : 4.913261082684205E307,\n      \"predScoreFamilyName\" : 7.875790717381854E307\n    }, {\n      \"predScoreGivenName\" : 1.607300298523218E308,\n      \"candidateName\" : \"2022-07-09T07:44:14.578638Z\",\n      \"probability\" : 1.0724924403388745E308,\n      \"predScoreFamilyName\" : 1.2630790616609466E307\n    }, {\n      \"predScoreGivenName\" : 9.233124746938237E307,\n      \"candidateName\" : \"2023-03-19T08:55:14.578679Z\",\n      \"probability\" : 4.2931443205425364E307,\n      \"predScoreFamilyName\" : 4.915792008651803E307\n    }, {\n      \"predScoreGivenName\" : 8.334218609943135E307,\n      \"candidateName\" : \"2022-06-19T06:48:14.578721Z\",\n      \"probability\" : 8.886833263206362E307,\n      \"predScoreFamilyName\" : 9.871259818419659E306\n    }, {\n      \"predScoreGivenName\" : 4.623325858033537E307,\n      \"candidateName\" : \"2023-03-16T07:22:14.578761Z\",\n      \"probability\" : 1.3450627001911643E308,\n      \"predScoreFamilyName\" : 5.950263637920231E307\n    } ],\n    \"orderOption\" : \"u9h599b399lfxtsy14n3qhe9509r3px79m56lkh1wjku8eho5nekrlss5gaipmkapvzt4c8uxm7uppnl9ch19nprs881wsb515sty5p0v2y2vaosb3ka0caiyuop1d2ihv0zvzah7w409xv7rd12kw91wouelymkqdme2a1bgrqczpc9h\",\n    \"id\" : \"vry3\",\n    \"script\" : \"grnefqlw1ttr5mntgnzqmwpuq2k9d1t2ay6elu5eyeb3tfnblgghestjklirx2csj5yf8262ip4e0391mb8zl6m805tzy9ljedzj80m1v2ywkdzqlswhv0iaa4pswz571qtxmf537g7dvdlfo9mrpdngpb4yiq3heb90p\"\n  }, {\n    \"firstName\" : \"Willow\",\n    \"lastName\" : \"Lockman\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.7459098355905642E308,\n      \"candidateName\" : \"2022-04-03T09:17:14.578952Z\",\n      \"probability\" : 7.866407235644188E307,\n      \"predScoreFamilyName\" : 1.6736458044882457E308\n    }, {\n      \"predScoreGivenName\" : 6.643400628677962E307,\n      \"candidateName\" : \"2022-04-01T08:16:14.578996Z\",\n      \"probability\" : 4.581230590778775E307,\n      \"predScoreFamilyName\" : 6.664769003619523E307\n    }, {\n      \"predScoreGivenName\" : 1.4902585715296596E308,\n      \"candidateName\" : \"2022-10-17T08:50:14.579035Z\",\n      \"probability\" : 9.602808919288573E307,\n      \"predScoreFamilyName\" : 7.157241504870584E307\n    }, {\n      \"predScoreGivenName\" : 4.764941160035946E307,\n      \"candidateName\" : \"2022-11-12T07:21:14.579076Z\",\n      \"probability\" : 1.695013167323946E308,\n      \"predScoreFamilyName\" : 2.864222808910614E307\n    }, {\n      \"predScoreGivenName\" : 8.444222021103493E307,\n      \"candidateName\" : \"2023-02-16T08:49:14.579117Z\",\n      \"probability\" : 1.5662413344873542E308,\n      \"predScoreFamilyName\" : 7.037783105498048E307\n    }, {\n      \"predScoreGivenName\" : 1.473813290758267E308,\n      \"candidateName\" : \"2022-09-16T05:28:14.57916Z\",\n      \"probability\" : 1.8717865231414113E307,\n      \"predScoreFamilyName\" : 1.7825569758967369E308\n    }, {\n      \"predScoreGivenName\" : 1.416471504225057E308,\n      \"candidateName\" : \"2022-08-07T07:45:14.579201Z\",\n      \"probability\" : 8.086583981581473E307,\n      \"predScoreFamilyName\" : 6.646074677547351E306\n    }, {\n      \"predScoreGivenName\" : 8.859456087873709E307,\n      \"candidateName\" : \"2023-01-26T06:51:14.579243Z\",\n      \"probability\" : 1.714381559416195E308,\n      \"predScoreFamilyName\" : 8.30201021972032E307\n    } ],\n    \"orderOption\" : \"vp5ytw2qa3il45qq1lgavgbkolr321e4z01kq27y7prud4gloddtl1jem84rikqahe1\",\n    \"id\" : \"46q6\",\n    \"script\" : \"vz1qx325ujtno2273lc3ugyu7cm7pj9q4d6rs4eibo2ii25e3a0u0jn6se6q77qq5erdvahu2hoi5b8xxfv3msq7dhu05v54mx4rss2ouguvn19fvcbr2g88iqcxb10g49pdujaygy9529vdudl466wmyruuxrjdb7tzw6jl3zplgunzly14ljalddd1vhsxaw5y89\"\n  }, {\n    \"firstName\" : \"Germaine\",\n    \"lastName\" : \"McKenzie\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.340766223571131E307,\n      \"candidateName\" : \"2023-01-03T05:57:14.579436Z\",\n      \"probability\" : 1.5762986676254683E308,\n      \"predScoreFamilyName\" : 4.255229953938509E306\n    }, {\n      \"predScoreGivenName\" : 5.818269983292683E307,\n      \"candidateName\" : \"2022-05-04T05:41:14.57948Z\",\n      \"probability\" : 7.107842226277467E306,\n      \"predScoreFamilyName\" : 1.6899278889622362E308\n    }, {\n      \"predScoreGivenName\" : 4.929320899965147E307,\n      \"candidateName\" : \"2022-09-22T07:22:14.579526Z\",\n      \"probability\" : 9.513697813869926E307,\n      \"predScoreFamilyName\" : 7.373020213323608E307\n    }, {\n      \"predScoreGivenName\" : 8.605495300917948E307,\n      \"candidateName\" : \"2023-01-30T06:03:14.579567Z\",\n      \"probability\" : 5.049792087317494E307,\n      \"predScoreFamilyName\" : 4.403352871635098E307\n    }, {\n      \"predScoreGivenName\" : 4.946386305961347E307,\n      \"candidateName\" : \"2022-10-29T07:42:14.579608Z\",\n      \"probability\" : 1.053774694397674E308,\n      \"predScoreFamilyName\" : 1.518457522311872E308\n    } ],\n    \"orderOption\" : \"6ktz4fk3lirre3hdwiyy7ermnl9whdabaqz1nndkixzv1iqz8vc159gt0i6ft0bhqnfkax7ls0j3u38uhtgbq7a1ndmv853y6rbqu18i7ng4pofm9op4ahbg6uww7el2efuxm7p4jzkdhryk72ga88t9oxkt5of2vmh1rm9pzb9omhfvisnaset45jbj787\",\n    \"id\" : \"7abj\",\n    \"script\" : \"t4cfgd0w0htw0ypx4hduvl1cg0abdu971t0x\"\n  }, {\n    \"firstName\" : \"Kanesha\",\n    \"lastName\" : \"Runte\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 6.270912498422389E307,\n      \"candidateName\" : \"2022-10-10T06:31:14.579808Z\",\n      \"probability\" : 1.546046683315191E308,\n      \"predScoreFamilyName\" : 8.355087142941605E307\n    }, {\n      \"predScoreGivenName\" : 6.718653502842183E307,\n      \"candidateName\" : \"2022-12-12T07:59:14.593949Z\",\n      \"probability\" : 9.792776389232505E307,\n      \"predScoreFamilyName\" : 3.9548528872846436E307\n    } ],\n    \"orderOption\" : \"vidi96vy7fs8zywgbqyguu5h1fi45bp82c350ny3bjxh42fsswvwnrdl68wsrzr9a7r1ql44ka8sk056\",\n    \"id\" : \"077u\",\n    \"script\" : \"ncwm444qwz7amp2amql992s80lymgejmah7d9k4350xkoghsoavg0t8fjw7qf5udw6t4yswdpif3yz9wfr30v0ai1dsldcw8ld8upfla9fmudcjjnuxp4zn5pr7xx0nsk0jjpff01cyhnjv5zht0rhy4ml9dbw8xn5lc\"\n  }, {\n    \"firstName\" : \"Leeann\",\n    \"lastName\" : \"Maggio\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0038973898434616E308,\n      \"candidateName\" : \"2022-11-12T07:17:14.594213Z\",\n      \"probability\" : 1.3899310480663471E308,\n      \"predScoreFamilyName\" : 1.2737750154064234E308\n    }, {\n      \"predScoreGivenName\" : 1.2629520276369313E307,\n      \"candidateName\" : \"2022-11-09T06:23:14.594261Z\",\n      \"probability\" : 1.465069645534143E308,\n      \"predScoreFamilyName\" : 4.610485461810077E307\n    }, {\n      \"predScoreGivenName\" : 1.0666160318729075E308,\n      \"candidateName\" : \"2022-10-27T05:47:14.594305Z\",\n      \"probability\" : 1.247788218716348E308,\n      \"predScoreFamilyName\" : 1.4540625391557114E308\n    } ],\n    \"orderOption\" : \"9otmgxzdsk4snv41jc21setqz9onjju00uq55bairkop99zkn8ypn8i43yz08g5up\",\n    \"id\" : \"38w8\",\n    \"script\" : \"xi1ota48nm2nffmvxurbb766n1142tkt242jeue77thn43z7g5xqlatot8h6shryo1qu5gjsp8f8wake2y8mm4davp7wnb013e5tx174lhdqzcalf9z1vbyputqrirfkof24czyq4ai5hxzishft4msf9kj27vn\"\n  }, {\n    \"firstName\" : \"Loris\",\n    \"lastName\" : \"Lubowitz\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 6.513708496511986E307,\n      \"candidateName\" : \"2022-04-23T08:02:14.594513Z\",\n      \"probability\" : 6.372350649094031E307,\n      \"predScoreFamilyName\" : 1.4002400026504508E308\n    } ],\n    \"orderOption\" : \"a0k9zh084guy50d0y600nu4x646a908hrf1imj4kjl3yxxte12oinddxr0mfbdv1lxmcpjwcnyk8fx2dyrq1unwyvj84pqjwqv54sgn4ckxyq1kdtq5v8xlmntpbfsjn4ok5d46\",\n    \"id\" : \"s6zh\",\n    \"script\" : \"lgv0vassdz5ws142i6nzy48xaceuenmmensa49u68ywotvy3xiewhee8jnmxtfxqfhuge19r4kvuw2yc5yr8kfboz2dm5v6819f6awci1aq0p33odmqllzesfqz2x63r7q4s6x\"\n  }, {\n    \"firstName\" : \"Yuk\",\n    \"lastName\" : \"Ziemann\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.065966659979455E306,\n      \"candidateName\" : \"2022-12-01T06:14:14.594717Z\",\n      \"probability\" : 1.929673817323537E307,\n      \"predScoreFamilyName\" : 7.826279132391114E307\n    }, {\n      \"predScoreGivenName\" : 7.258577965850328E306,\n      \"candidateName\" : \"2022-12-15T09:01:14.594761Z\",\n      \"probability\" : 1.5846549918426304E308,\n      \"predScoreFamilyName\" : 1.3819258588378532E307\n    } ],\n    \"orderOption\" : \"1b2pyaa7gxbigk4pcj6gn665xihhg9e8rlll0do8p5z9ohie3re53\",\n    \"id\" : \"m616\",\n    \"script\" : \"9hb05fvegrx3bos8ff3ru6g9bsus0mka1qyv6ftotyo12c6oseqwcy7qarwr1k5hkio7f96i3xm69udir95lpms61ckf5csa02ups8wg7xhtfzd882ild2ibenf30wte49esn\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9716ec3e-2c69-4784-aaf9-58a5a0c50f77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.595059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "243d3f5b-6c65-4121-afa0-ed914ca579ac",
    "name" : "Infer the likely gender of up to 100 full names - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "243d3f5b-6c65-4121-afa0-ed914ca579ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.578138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "b592062f-54dc-4a01-910d-bc1addf0e989",
    "name" : "Infer the likely gender of up to 100 full names - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b592062f-54dc-4a01-910d-bc1addf0e989",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.578121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "c534f9fd-b5f3-4631-810b-8179e2ad3b96",
    "name" : "Infer the likely gender of up to 100 full names - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c534f9fd-b5f3-4631-810b-8179e2ad3b96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.578105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "29d3a6ba-5a29-4daf-8e35-45e9e43d826e",
    "name" : "Infer the likely gender of up to 100 full names (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.5172573208189943,\n    \"score\" : 58.001570970648984,\n    \"probabilityCalibrated\" : 0.6758629484032572,\n    \"name\" : \"Isaias Graham\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"rfvt\",\n    \"script\" : \"i86kio7sut82mxjjwrpa0coq7sw9h2f13rjmgdhrv9726b1d2ut2crrzcwpkhq4bx07ezv4ki661kzng093rad5ia859d73sgagtpfu40mf4iajzujfg28wtd1jffhbugxg6r5r0slsjl07iv9k6jqam\"\n  }, {\n    \"genderScale\" : -0.14075077072008813,\n    \"score\" : 11.240531385466113,\n    \"probabilityCalibrated\" : 0.8038364292294198,\n    \"name\" : \"Marty Olson III\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"6tps\",\n    \"script\" : \"oen6s0vabyqhccf6smzk62xsxcmywro4hv391vudlhl69kzfl2rhdiwgjdx8kqwxkfn4n5931gz1err0ujjngqbxqocwmydfgnwvvcz4bwhstdnsv3nsmagysiyjcjlayv5x5afynx3orv7ze4pe4723zv5pvqi3cysg1mfr2mocjjza5m\"\n  }, {\n    \"genderScale\" : 0.48128320240877387,\n    \"score\" : 57.71343342567289,\n    \"probabilityCalibrated\" : -0.4906424488046064,\n    \"name\" : \"Saul D'Amore\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"b1mm\",\n    \"script\" : \"jxskig4hsympqgy9gr6jifc30lo6e6vztweymoypsehpgsftuawdmrxiull4vj5mnco3rojcx7dhp6nlgr7hqtunr8k85focwjt3ahpzipplce6to5bjtij2t2ym7bwl4uu6ufmifshqansrx2x1k582a3\"\n  }, {\n    \"genderScale\" : -0.9996922645629689,\n    \"score\" : 89.28446897490132,\n    \"probabilityCalibrated\" : 0.4013675827970338,\n    \"name\" : \"Dusty Harris\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"73v9\",\n    \"script\" : \"iw2nc1e9cj857fes3etbzzck44f32fdk2s0hg4kuku705ck6v2u0o6orzrnjonof3d8m3piz3z5096vl79enokicnysg6c9qi22zbi\"\n  }, {\n    \"genderScale\" : 0.562392693142707,\n    \"score\" : 56.5601933317487,\n    \"probabilityCalibrated\" : 0.5812268456546246,\n    \"name\" : \"Modesto Hansen\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"91lp\",\n    \"script\" : \"6xs3y8wyt5o0i5ke2t1f8y71exgk1lbmiibhbm09yozex2eiw1x94jtzc7f3q8ip71uksv062egah6t9hkdjusdw6u321ufdh6nxg39lo3ntx1hzukko9uq9l6bdfd3p9el3\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29d3a6ba-5a29-4daf-8e35-45e9e43d826e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.578073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "539adb8b-547f-4092-af90-2e71c791ebb1",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Jeremiah+Brakus+V",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "539adb8b-547f-4092-af90-2e71c791ebb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.577271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "97b4f97f-f830-4fba-af7e-81ddce06a028",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Anisa+Jacobson",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "97b4f97f-f830-4fba-af7e-81ddce06a028",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.577211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "9cbf477b-3045-4275-875d-1ef251fdfdad",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Jamey+Funk",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.9580199421789477,\n  \"score\" : 73.558073210571,\n  \"probabilityCalibrated\" : 0.11550900400464847,\n  \"name\" : \"Jannet Stehr\",\n  \"likelyGender\" : \"male\",\n  \"id\" : \"7648\",\n  \"script\" : \"qj9c4uy8f5n6iuesshklv6oxprcaorp3g59lwa4m9t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cbf477b-3045-4275-875d-1ef251fdfdad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.577139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "58ea4bcf-9b19-4162-876b-1619629c3fc8",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "58ea4bcf-9b19-4162-876b-1619629c3fc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.576837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "fbbc5d7a-c920-41bd-83ff-dbf644a08f19",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fbbc5d7a-c920-41bd-83ff-dbf644a08f19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.576821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "764040a6-716f-4aeb-b5d6-4568e3becd56",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "764040a6-716f-4aeb-b5d6-4568e3becd56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.576806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "959b3e5b-fbf8-4751-bee6-6a0198bf0142",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Dwain\",\n    \"genderScale\" : -0.47528795662263823,\n    \"lastName\" : \"McGlynn\",\n    \"score\" : 15.058606061102765,\n    \"probabilityCalibrated\" : -0.04122056443909572,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"8z09\",\n    \"script\" : \"hzj57v7kt23\"\n  }, {\n    \"firstName\" : \"Evan\",\n    \"genderScale\" : -0.43153620922294733,\n    \"lastName\" : \"Effertz\",\n    \"score\" : 52.9694856753599,\n    \"probabilityCalibrated\" : -0.33122330266209454,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"6454\",\n    \"script\" : \"p79oqerkdiruz91d8guql6k6qiiwe0mt95a04vz0xz5mtlvijvi9udqrolhnzuhfsy1fycc7ph1hly3ef4p1qsbpye132zg7hiuht0dpz2ukychaq1y4t2yom1aduyuhodugknkmpgpm1i52uje5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "959b3e5b-fbf8-4751-bee6-6a0198bf0142",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.57678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "db2379e2-5ae7-4199-bab2-5ef9018bada0",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Sanford/Anderson",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "db2379e2-5ae7-4199-bab2-5ef9018bada0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.576424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "333ee347-194c-4bfa-9a41-5cb8b50a7930",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Beatty/Daren",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "333ee347-194c-4bfa-9a41-5cb8b50a7930",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.57636Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "4fd88917-8bd4-4cdd-9e5d-4e9e2fd617b6",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Dibbert/Federico",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Joe\",\n  \"genderScale\" : -0.7965280040106903,\n  \"lastName\" : \"Dare\",\n  \"score\" : 90.8194370767927,\n  \"probabilityCalibrated\" : 0.9444204854466622,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"r36l\",\n  \"script\" : \"q18ecl9le70kfz2fi7c31576ixgpaytvwvh8607bsjmu7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fd88917-8bd4-4cdd-9e5d-4e9e2fd617b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.576281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "f93d3df0-2ee0-44bd-b892-6306e22efd28",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f93d3df0-2ee0-44bd-b892-6306e22efd28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.575997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "fb5e2547-0790-402f-95d6-4af67867f0f7",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fb5e2547-0790-402f-95d6-4af67867f0f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.575983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "9e793d9c-8973-41d0-a084-fe4a1afd38e1",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9e793d9c-8973-41d0-a084-fe4a1afd38e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.575968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "3798530e-ef79-45a2-8fd1-a1d3f006dc1c",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Nanci\",\n    \"genderScale\" : -0.9713891857450476,\n    \"lastName\" : \"Reichert\",\n    \"score\" : 93.17527082729684,\n    \"probabilityCalibrated\" : 0.3740170238497398,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"l480\",\n    \"script\" : \"683ffpsx9yoy0migx3n1g13jzpmreum6tdd0x9q3epr8jvyez3fc7ci2e7a40yp14sz6p0i3ko05lzhbf3w3545lk0stv4dm3zkbvqdm7nyd90s8x4y206gc4eqg7srj945tv72nqh8bl\"\n  }, {\n    \"firstName\" : \"Ryan\",\n    \"genderScale\" : -0.8718900505997258,\n    \"lastName\" : \"Haag\",\n    \"score\" : 11.79925001019777,\n    \"probabilityCalibrated\" : -0.8305035999975652,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"1mh0\",\n    \"script\" : \"2wo82bvj1sgeom7qu0dk9wrb0zwy8lhvql49urvbqmuyj2rep6ns3imypsl0m6k36hqt84heh3bmofyz3pp1o70ke3fvnms06clsqidxh9uh7zw7zcvapwaa6jh0lq14fxyaluqya50d8h56tsg13nhfahnb2rzx0tke5zao5\"\n  }, {\n    \"firstName\" : \"Rob\",\n    \"genderScale\" : 0.9153572216725552,\n    \"lastName\" : \"Steuber\",\n    \"score\" : 54.168408195873155,\n    \"probabilityCalibrated\" : 0.26354500370660805,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"0026\",\n    \"script\" : \"gpvv4thjjp360j3msiz2f7pj331\"\n  }, {\n    \"firstName\" : \"Stefani\",\n    \"genderScale\" : 0.4508621877495105,\n    \"lastName\" : \"Flatley\",\n    \"score\" : 64.54262135501807,\n    \"probabilityCalibrated\" : 0.8493296659989951,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"8377\",\n    \"script\" : \"kgg55gqbjmm90e4vio6fhvlftv0i1nbbosmay3o2hek7zryxv4nxr3k9kh8bdi7bfumaiv9rigfx9honwsbdl0nmkgdn\"\n  }, {\n    \"firstName\" : \"Hollis\",\n    \"genderScale\" : -0.8834979877443454,\n    \"lastName\" : \"Berge\",\n    \"score\" : 63.65292374170421,\n    \"probabilityCalibrated\" : 0.6099123776832913,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"6vov\",\n    \"script\" : \"z620a3tjczoona4d55gn06k730g252jtjd\"\n  }, {\n    \"firstName\" : \"Randall\",\n    \"genderScale\" : 0.3512397892602135,\n    \"lastName\" : \"Kunze\",\n    \"score\" : 74.94752090916522,\n    \"probabilityCalibrated\" : -0.31595723320664515,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"v29z\",\n    \"script\" : \"zn5ffnbabw24xqyf3rrstqpxe5z9jo48ligxe6dq6l5zk2l6zzgb13v8fl1wr8aa48tpj23yzo8am4g7brj24q26mxqow9fjm0ybqi0nkvn0nw857cfh4ceg5ndhjdvot6qokfxy70v2stguzw0hlt8kleqwvwd9imxc811dhxej04lca1qd\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3798530e-ef79-45a2-8fd1-a1d3f006dc1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.575942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "359960a9-2869-4561-a710-2d8ce779e321",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Jayson/Waters/a8rcrxi3iw9esa23zi41lfg0mtti7tulw4m127gblahw6yc8pi484e933fdw33l9qclnokk229t1h48s1wiej755c8aetlo1x1iyez9ewhltfgeykxfgfwcws190gb37guh02rzhrf4nd1j45j",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "359960a9-2869-4561-a710-2d8ce779e321",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "d32f6395-35a1-4284-8743-1cbc6d65c520",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Lori/Wilderman/u3rq53ilksjaomq79xofk32et70dglkcn8qza69g7wzrekti43a09jh6bqcyqegcmd86z9huq42ss5z3cgkuu4dkndwf98dnbfyne54q8y0ru5secfhn9uwqci5y6voeb4zm5w5up8pukt8ypomhs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d32f6395-35a1-4284-8743-1cbc6d65c520",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "b16adee7-14b8-403a-8517-d4499aba9f6c",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Evelynn/Lowe/i9k4p7jj73y2nxz7krbcxzfitv09kv1vbyskc28jqjioxf5ml3cteussnqgcf01xmq6vs9d5li9qpllg2kx6hyrbebc25dmlydfo8ks2260jasj7c6vg306rfyu4n32zlrf7pmwanlqge3ndhdhm8bcchjd885ny64hty7wp7xb82fh",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Chadwick\",\n  \"genderScale\" : -0.315573935435121,\n  \"lastName\" : \"Kihn\",\n  \"score\" : 35.14103313152921,\n  \"probabilityCalibrated\" : 0.32570467424793836,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"6456\",\n  \"script\" : \"s7pkwr7vxns1w80ymm8hsut9dcp3mas61h41985jpi0q7qfptznlgim7ajc06odamiba1hnvrfqyixvhrpg3adpimuq2llgxlikddz7m6cij\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b16adee7-14b8-403a-8517-d4499aba9f6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "33f8f2f6-a255-4ebb-ba58-545edaca4d3e",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "33f8f2f6-a255-4ebb-ba58-545edaca4d3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "799583bb-ef83-46bb-8411-653a5b2ac374",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "799583bb-ef83-46bb-8411-653a5b2ac374",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "4724ab1d-8c9c-4edc-b1a1-be97cdf7a0fa",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4724ab1d-8c9c-4edc-b1a1-be97cdf7a0fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "7ae2b796-8b3a-49f8-a2c5-53ba411a1093",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.6508994494785092,\n    \"score\" : 26.346041218814754,\n    \"probabilityCalibrated\" : 0.03703754725065611,\n    \"name\" : \"Dr. Emilio Johnston\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"0cw6\",\n    \"script\" : \"kbkrq6wdiecxleiiwyqbnfzsm6us3gv1568cra\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ae2b796-8b3a-49f8-a2c5-53ba411a1093",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "d510dc9c-6aa5-4555-bf1e-3afc7d609f6c",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Del+Durgan/r4w7vq08t7do9r8lv8pc7r26s9hnd2wrwfyx1oxyftzsimykhzatql5pdrh",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d510dc9c-6aa5-4555-bf1e-3afc7d609f6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "4bf66177-f8de-4044-b823-806d9927ceb7",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Andreas+Hessel/dvsaohokep2a",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4bf66177-f8de-4044-b823-806d9927ceb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "6342be2d-e1fb-454e-bc9a-f2ae28dd8763",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Marina+Rippin/xj82a102x18d407s3av",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.5011283980979746,\n  \"score\" : 21.17217925917172,\n  \"probabilityCalibrated\" : 0.061471084979574986,\n  \"name\" : \"Dong Grady\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"32a3\",\n  \"script\" : \"m7ia58aiolp45lm2z2io5f3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6342be2d-e1fb-454e-bc9a-f2ae28dd8763",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.574139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "0e535b3f-874b-4d65-99fb-7ae093878204",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0e535b3f-874b-4d65-99fb-7ae093878204",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.573876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "7473d5b5-5318-4523-b891-620ef842771b",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7473d5b5-5318-4523-b891-620ef842771b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.57386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "8e680dd1-bde3-4495-8b6c-3df52c1b9642",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8e680dd1-bde3-4495-8b6c-3df52c1b9642",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.573845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "57a019d7-f250-4274-a014-029d90048506",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.9004508246833178,\n    \"score\" : 22.774591539555466,\n    \"probabilityCalibrated\" : 0.20650368241425676,\n    \"name\" : \"Darron Torphy DDS\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"3109\",\n    \"script\" : \"cu5hklcrdlvjqn1026e7i4k6dg4x9f3pbeievoc5zlq7aeradcru49jesu2xdfusc3vsf8xhfc5xg\"\n  }, {\n    \"genderScale\" : -0.21296430241809694,\n    \"score\" : 55.796567789595784,\n    \"probabilityCalibrated\" : 0.7335614140693085,\n    \"name\" : \"Callie Walter\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"cj3u\",\n    \"script\" : \"jwj7m57rbg0rkhc0qok44tdpp9r4krm3rgmcppv\"\n  }, {\n    \"genderScale\" : 0.3999402022556171,\n    \"score\" : 10.561413127358676,\n    \"probabilityCalibrated\" : 0.8274436310357824,\n    \"name\" : \"Ardelle Jacobson\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"9rfu\",\n    \"script\" : \"g570uk5uq1rgs5z7ng\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57a019d7-f250-4274-a014-029d90048506",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.573821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "82df22a7-3d27-4093-bf5f-1074a974721d",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Dr.+Alex+Murray",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "82df22a7-3d27-4093-bf5f-1074a974721d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.573359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "2a94004d-ee88-40d0-961f-ba44f6c61a7e",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Cole+Beer",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2a94004d-ee88-40d0-961f-ba44f6c61a7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.573308Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "83f1337b-b0fe-499c-b6c2-d8aeaa0e824c",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Gerardo+Botsford",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.4924539900178022,\n  \"score\" : 17.46980773141039,\n  \"probabilityCalibrated\" : 0.6136935817284828,\n  \"name\" : \"Shanta McGlynn\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"w7pw\",\n  \"script\" : \"p4ei3d0zbonpx9qe331gfz3xyufhekwvsqftiyzyzcvh1xwwuxz35y3z3h48p8b73d2ojbckunaboexrwmghdevns4mug23agi35hz8z2ok41wyz0y66lsz2cc5ajcys57qcsniesuxnsamrvajvp0smtztd789cbujc8vfw03xsx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83f1337b-b0fe-499c-b6c2-d8aeaa0e824c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.573251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "b10faf04-e1c2-4e6f-a0ac-b06844edbcf5",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b10faf04-e1c2-4e6f-a0ac-b06844edbcf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.572989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "00a04895-e0b2-49fa-87d5-ccd0c67fac1d",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "00a04895-e0b2-49fa-87d5-ccd0c67fac1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.572975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "e23e5ae7-4038-46c4-b4b1-c8e0a3081459",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e23e5ae7-4038-46c4-b4b1-c8e0a3081459",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.572959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "c9988f26-f0db-478a-87c3-249ded8f3940",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Darline\",\n    \"genderScale\" : 0.8474658521507292,\n    \"lastName\" : \"Hermiston\",\n    \"score\" : 3.8793755969154575,\n    \"probabilityCalibrated\" : -0.6192130569187861,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"9qd7\",\n    \"script\" : \"7d5zbh6ush\"\n  }, {\n    \"firstName\" : \"Claude\",\n    \"genderScale\" : 0.8587577013630205,\n    \"lastName\" : \"Conroy\",\n    \"score\" : 70.25315043931775,\n    \"probabilityCalibrated\" : 0.01615472451272737,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"flm6\",\n    \"script\" : \"zofisacnfylfd3mf2dk01guqdbbpgstyh18x3ww8c8bkg7bj45d1ae344tkks1i5vw983ob5pxwmp2o5iszfe1mdwzh93wpzfhfbofumeyac1uyfcg9b5d10\"\n  }, {\n    \"firstName\" : \"Quentin\",\n    \"genderScale\" : 0.19869842754883016,\n    \"lastName\" : \"Leannon\",\n    \"score\" : 37.768807068644406,\n    \"probabilityCalibrated\" : -0.6724998733555703,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"4b8t\",\n    \"script\" : \"6cvr5a2ibfdic\"\n  }, {\n    \"firstName\" : \"Judson\",\n    \"genderScale\" : -0.9405183510823807,\n    \"lastName\" : \"Ruecker\",\n    \"score\" : 41.636289030935,\n    \"probabilityCalibrated\" : 0.8589654707342798,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"8q0u\",\n    \"script\" : \"8hbrlo750dcltmll9nt6ehgxxp8nf4p08bm507o4rz6hhdy7fset1iabhbfcpeax50f2gscldo2xtjo3wcov6\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9988f26-f0db-478a-87c3-249ded8f3940",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.572934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "5d56c6ff-7f32-44cb-b541-b4f7649f5421",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/df254sfk51tlnreosnk74fs72re6t6vaqk9h0h1u0t9w3stv72xjpbet6prlzav2su2im6s6iq9ayyhx5vfrim009mz90fxnb7ht34/g4codwb1hcjhvvhqcdrw4zwodjy9quaohjl02296gwek7qfto9lxg5h4ndvci7fpxxdjutivvmhs384h0au9e6ze8doyfdi03hmc21yzqcqi4r9wq3hztqyk6yjg0ju5dk6pa2opxtkd",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5d56c6ff-7f32-44cb-b541-b4f7649f5421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.572278Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "a863b83b-30c2-4078-89a8-110ae801ad70",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/zwoqtaos11miw858ndidwfe9e6mu0pj8l86p/dzfgljjhkuvzbxqi5fquj3wlj7mezcx9uqq7bzyqxjpffbk1lct640x05dlmjyhowiwid2ipd7x0xir25ex8wkg0i46xofwx2lrpwf6zmzlfl38grr3tkqq4z1irgkjwce98ccujw5marlxhroqwmy2p",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a863b83b-30c2-4078-89a8-110ae801ad70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.572236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "27060883-e5c3-426c-873b-3be66f36b822",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/y4jyzgy5cvj7l8n1fwh2wn9bht8cxdlmyl63rfiwvhf109igc3n4e7fdvu37vhy7um0dzkbaomsidc2s3jyjma6arl2i4y2ji/iizap8xnwql8az4iv7g",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Gerard\",\n  \"genderScale\" : -0.8456958232419336,\n  \"lastName\" : \"Larson\",\n  \"score\" : 82.41333743384523,\n  \"probabilityCalibrated\" : 0.1140902466439877,\n  \"likelyGender\" : \"male\",\n  \"id\" : \"9ck3\",\n  \"script\" : \"20z7gm9s0636ph25rh784ijztjqltuel0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27060883-e5c3-426c-873b-3be66f36b822",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.572184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "fb7c30e5-ec01-4d59-94dd-ebf4d7ae6d59",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fb7c30e5-ec01-4d59-94dd-ebf4d7ae6d59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.571906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "30f41d92-b3cc-4545-b4fc-81dfd280dc27",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "30f41d92-b3cc-4545-b4fc-81dfd280dc27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.571889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "37542323-a533-4661-81f9-f8698634232d",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "37542323-a533-4661-81f9-f8698634232d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.571871Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "96a630c3-0e0c-44d2-991b-aa1d04964f8a",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.624101883700861,\n    \"score\" : 25.228993574004267,\n    \"probabilityCalibrated\" : 0.1029832008483893,\n    \"name\" : \"Lena Feil\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"jky3\",\n    \"script\" : \"qzc7zlynjkm5ign6fk66cvkndkjo4ntmz5fit349swm899y77jb6xk5sq7wsiu8hfl5t\"\n  }, {\n    \"genderScale\" : -0.45917920870208695,\n    \"score\" : 36.693507765407084,\n    \"probabilityCalibrated\" : -0.5995874931288991,\n    \"name\" : \"Mr. Herminia Crist\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"5bjs\",\n    \"script\" : \"gfmapm6tmm5kc3a1tvmuco23o3imm77f18qe0a5qf9nok8gxxb79yavxkf5slvk6kqo2ymt63vstvxsptxnatps01bh5aa1vm689i6v0znfiybkj8but460ywk1oskn51zsshpzlxilwglq9cdtdkt5d7upu7x2ouq2bnddvefxna93mo1r8krt0ss1r8\"\n  }, {\n    \"genderScale\" : 0.7757399562569867,\n    \"score\" : 42.88265356465287,\n    \"probabilityCalibrated\" : -0.572027660557795,\n    \"name\" : \"Kym McClure\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"ecbq\",\n    \"script\" : \"76ppq\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96a630c3-0e0c-44d2-991b-aa1d04964f8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.571844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "e3171787-31cd-4e26-b34f-a9e7a79bfc13",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Mrs.+Cheryl+Morar",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e3171787-31cd-4e26-b34f-a9e7a79bfc13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.571376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "1710dcb0-b3bd-44af-84be-8f11ef1cb8ed",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Ms.+Paola+Towne",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1710dcb0-b3bd-44af-84be-8f11ef1cb8ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.571319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "8d0d2d36-6be2-48e2-86bd-f75ad95a782f",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Minh+Reinger",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.7242664306446822,\n  \"score\" : 0.34832666043592697,\n  \"probabilityCalibrated\" : 0.9820092687316884,\n  \"name\" : \"Efrain Lubowitz\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"6da8\",\n  \"script\" : \"t35tas8gmnrfo43bqz0b4xhjzbn4yh7b1xixgr89mht6gctd8mkzrv2vfm76m4nkd950lkra4a4kwb97p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d0d2d36-6be2-48e2-86bd-f75ad95a782f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.571249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "c7830b5f-36e6-4d56-9ebb-01215115ea2e",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c7830b5f-36e6-4d56-9ebb-01215115ea2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.570943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "6ebda9e4-8997-4d3d-8b7e-da8e80744509",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6ebda9e4-8997-4d3d-8b7e-da8e80744509",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.570928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "d4105db5-f4f0-4d93-80a6-00fb4e3f0577",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d4105db5-f4f0-4d93-80a6-00fb4e3f0577",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.570912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "fe18d34c-a4ba-4f71-ac8d-15ccf4f7ccd5",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Everette\",\n    \"genderScale\" : -0.9146693665559098,\n    \"lastName\" : \"Ryan\",\n    \"score\" : 42.555659472038876,\n    \"probabilityCalibrated\" : -0.4711741588932592,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"66ot\",\n    \"script\" : \"wvb634o9pf4yb0r8n2n7y\"\n  }, {\n    \"firstName\" : \"Fernanda\",\n    \"genderScale\" : 0.37619060590023645,\n    \"lastName\" : \"Nicolas\",\n    \"score\" : 11.403346466910492,\n    \"probabilityCalibrated\" : -0.08157867525968898,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"8yh4\",\n    \"script\" : \"c83dtt27xrcaet6tcbmlh5tfb6ydw4g31qeltnrluu1zurvw3yugd6kgqtgt0mu7rgs1i3oycil98oki6rmq1j7lp3jfmvnsfq0t6\"\n  }, {\n    \"firstName\" : \"Napoleon\",\n    \"genderScale\" : 0.46651230882013484,\n    \"lastName\" : \"Morar\",\n    \"score\" : 5.502567043806838,\n    \"probabilityCalibrated\" : -0.3461559576449129,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"m7gu\",\n    \"script\" : \"m06gfm072nzg7czc7tpo7bpjs6pqrwbr58yucv2byp2k3i4qffgbpb1n76xp35km75xo171s5p1qxyea8okpa3\"\n  }, {\n    \"firstName\" : \"Brant\",\n    \"genderScale\" : -0.7538129853953646,\n    \"lastName\" : \"Hartmann\",\n    \"score\" : 85.16557691816799,\n    \"probabilityCalibrated\" : -0.21274661746362122,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"c8j3\",\n    \"script\" : \"047v16ktf8viujzps0s1zx0mn8yxszogkq7zjmlzhitpx4ag7lnguyd6804ac3wfzzef5km7qk41wvwdb3wh7ilnv21pnvjnhkquenckbr8ljprdfboj1azy026zk8zoqbyom03s0xue7abwhvtjs17e6gxvr1duda5mh\"\n  }, {\n    \"firstName\" : \"Shelton\",\n    \"genderScale\" : -0.4719416575687865,\n    \"lastName\" : \"Conroy\",\n    \"score\" : 91.19750382717828,\n    \"probabilityCalibrated\" : 0.1829057503103959,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"c0kx\",\n    \"script\" : \"iqeshbtlslajrkxv9zqu282jkxv1w0erkrq52vzau2kothapcnbnh8ou9df7a5ttv3kwzj51nfwt56lje4kxf1k77096dg4oxmwp6q8gk85sn4dh0y9z37n03ltj\"\n  }, {\n    \"firstName\" : \"Althea\",\n    \"genderScale\" : 0.4154459044328873,\n    \"lastName\" : \"Bogisich\",\n    \"score\" : 96.47544643643047,\n    \"probabilityCalibrated\" : 0.21226091741783182,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"198t\",\n    \"script\" : \"jd41cdijpd67hm9xvetqj52i2sidjze2ex0qwls2y0csf2b1t2j9s6pm24eujf1dc2wongqhe8ir1jxdfhqai9fknlwkkesigwjjduordih07s1t6aintwig9t1p0m5yaia6twux45sb1it55yk3cgv9\"\n  }, {\n    \"firstName\" : \"Vina\",\n    \"genderScale\" : 0.9854049916610976,\n    \"lastName\" : \"Volkman\",\n    \"score\" : 87.82699015722443,\n    \"probabilityCalibrated\" : 0.15913446469302084,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"113k\",\n    \"script\" : \"b5s5vcnxlhps0ng96n8o3ik1gk7g46x2llt973h97x1fn09c6jannlk96nei746l4cxwi8z2zwgejpvcwyco0pqr8yuyovfzmsvn6gyao5i5x00lcszp2xzu8y7pxs0nx2n8mtmhdekj33ieqzhk0tyzc8qxxu4tjmdlzpq0\"\n  }, {\n    \"firstName\" : \"Lacey\",\n    \"genderScale\" : -0.7113511701588513,\n    \"lastName\" : \"Gutkowski\",\n    \"score\" : 73.15545793577049,\n    \"probabilityCalibrated\" : -0.639134782758185,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"5c78\",\n    \"script\" : \"ewsiiam54m6yk86xp5bki1vqzzgj5odfihewwf971j32c23ej8tos4cb786li379cv2t8ejohkcon4nyx8s7ufhc8fiarfzsb75a1rla3aoa\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe18d34c-a4ba-4f71-ac8d-15ccf4f7ccd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.570885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "6fd1f856-7401-44a3-8640-de73d925d2e8",
    "name" : "Infer the likely gender of a name. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Mauricio/Dooley",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6fd1f856-7401-44a3-8640-de73d925d2e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.569611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "258ca2ba-4981-4a27-939a-cea70eebc70c",
    "name" : "Infer the likely gender of a name. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Melony/Schaden",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "258ca2ba-4981-4a27-939a-cea70eebc70c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.569554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "ed154e25-a45f-4289-af60-30c7724c646a",
    "name" : "Infer the likely gender of a name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Warren/Hansen",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Lani\",\n  \"genderScale\" : 0.6279539425980696,\n  \"lastName\" : \"Mosciski\",\n  \"score\" : 91.42617646045778,\n  \"probabilityCalibrated\" : -0.3936728176547539,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"wt0h\",\n  \"script\" : \"23n44yshyuzdgfv151og1ok3p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed154e25-a45f-4289-af60-30c7724c646a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.569483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "8d223ff7-4f6c-4f6b-aa28-9ceea0679c1f",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Svetlana",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8d223ff7-4f6c-4f6b-aa28-9ceea0679c1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.569206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "33fac47f-8c14-41fb-833a-883f9209ba04",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Dennis",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "33fac47f-8c14-41fb-833a-883f9209ba04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.569162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "79e7476c-493c-4cf2-8d8e-ed886de9eb99",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Shirley",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Leonard\",\n  \"genderScale\" : -0.43026328036313877,\n  \"lastName\" : \"Tillman\",\n  \"score\" : 32.77856407015539,\n  \"probabilityCalibrated\" : 0.9966315364332072,\n  \"likelyGender\" : \"male\",\n  \"id\" : \"e53k\",\n  \"script\" : \"qc303n7o8e28xg3h77rdr55klaop3rej2z8q9rw9awftpln7ud4dvunugc3x0l6nhlpk3roxemp0vm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79e7476c-493c-4cf2-8d8e-ed886de9eb99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.569105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "e5edd9fa-012e-4ca1-9a4e-6950da7da24e",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e5edd9fa-012e-4ca1-9a4e-6950da7da24e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.56879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "ac74ea67-7172-433b-b1ab-32304628d3ce",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ac74ea67-7172-433b-b1ab-32304628d3ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.568776Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "918a05d2-516d-4f04-a14b-c7eb3619636e",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "918a05d2-516d-4f04-a14b-c7eb3619636e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.56876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "ff4df33f-e0ba-4eae-96f5-c571e8e1b0c7",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Dillon\",\n    \"lastName\" : \"Boyle\",\n    \"score\" : 38.8446295601104,\n    \"probabilityCalibrated\" : 0.3877072280097049,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : -0.7790710249441397,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"ytgkdmix1pri9deeng2bp4j5bx50dl9hlzo2g9z1x85loyd88gcfs2nmts639nr3pa6i4j71756lxv07kb2u36zxnk0qxcjgh6i29ptlmdqhc1yvy55l0f8f1hb\",\n    \"id\" : \"h66y\",\n    \"ethnicitiesTop\" : [ \"7yb3d694vfcp2hqn050mul46nxwabq1y9k2djxddhlk1tdoo94s0mnhral3bunr535zzf88iq8n\", \"n1mwlc8j288a77uuw2x76a4ysx8eru2xrf760uklmksez2h4r62ii6wlnoxel3een9pc\", \"wf1rtd6saqj3sfhaj0y1uaovmq03ypcnnjqhtwpjzp5jzejyawvu7erp691691ok\", \"awvxyzt0vv2gfqhipb1nkizfqduycbajzct2f8rtgx0kf3013fav10ebtb6i6q8imc2bc83mbbqdclh2j40qvj478ifl3cqu167c83gwzstjxr1hu9kjyku0bv036z9cpo7icmsra2v1fxwlk3pane0oiaekbllrqod7no9t2vydtwav96ju6tx3lbqkzlxpo\", \"cb8uk9n8jzlv7ywa72mp51lpogkeufv\", \"4arhdwkk154xfp9f9oacda9b0iud13uym\", \"6tx4jzrop5q4r3sk53lhqvk0jn2hcmeabb2gnnlmdu6e9oeoy73w8nvgth8c5t5vtjz3o0781bb6rf8y6si06acyrtw4wcsn1c6802gszmou07fqzcbwhgf42xb5c64b7490ih98k1xuowfnb18oj83kyjfbt474n\", \"wkjkf9rpeb4dnvf7pt0gak91hlpa9xywv5ckjd780drbjuj1d4v1mafqfyt1ronty0b2q23gcld8shkx186xf5ajevi\" ],\n    \"script\" : \"l876a6a6zfx00li6ajfymyfuk94flhadh9m2l2ukq1amk97ribk025bccwenocmc20x1qgc8pohu45bofvi3mx3z7nygl2gcau4x228ipa4d657t7v3eilk9dtxmahfehvy34zj2283\"\n  }, {\n    \"firstName\" : \"Sharen\",\n    \"lastName\" : \"Huels\",\n    \"score\" : 18.547201525959846,\n    \"probabilityCalibrated\" : 0.8366093281664979,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.3017647301478126,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"80o2g70z3jajpsi\",\n    \"id\" : \"7934\",\n    \"ethnicitiesTop\" : [ \"jknwjfejcxqwi04vpmk9xv87vwkyk8gtc2gky4wxirpnyd17hqv0jhyvu9ov5u2w8krzzv62w8eko52bmtu0t25xz20ueor1u477ico59uq1p8suj28ztqq2aerqsvur48gqm59iv2zth02xuixmhedsj63by2l345\", \"ra0o9lsawvc6plp7pnnf5aa9dqhcd71j6s9h6l4mg6yo6t08hd46rem48pef77rkjqn131s83xbxmyy5gcd84f9fs9879ucymr4nokiqlcoeb8pe8cr7j5v4pwwd6whmwn\", \"fcvzxm59tocsctgxkskr5zfmeyowf8esg9nacgxu8s3ls3bitmlumrj3ts0zq6u21\", \"h1sis8lggdh0e9p713zwnavpea09qjyj9qry2wfz725wd3fa6mlhvovsgeywtk9v31d916yjtulluksf39kgmuzi8rhix21eg5emla3pfso16g725s0fglhch3qnhhtmsq6bq\", \"6e9snsgpqjclry9ku3dyzoqbuwzjtvim200kc2597083wr65z1zl87p6lmxo5c2cq3lz68zgwalbisl2fpg2vfwaeos8i2ag6934n8jef099tlbe073qwo6ui5acduzahs2gp2smqkf0utkzvb6xzdbgpxgjcc0uh7ll3vvuqqm8fp3zci4\", \"z8j2r1c1p2basaxcj062rf2k18p0nq7u4hvcsntu6ozabg5lwvlj7oyo3jqbounc7z7q4oy3fch5sie5i8m3va1e2hd6ov68w9ytmlk8uxe62k8r48dzd22e3jm2h38zgg123tdzl1p8wrn8y399njdvt1e\", \"4660jzhspxiqw9g3tygbyktxlxo1ssmiuz9nc68n3rbs2dohrv705da3dn0bsz3r5pmbw64cmtp5s3i9g3bc6ix41rrw550ohsa0nzt0zlt5ajy8rcgoc8lq03rnoc5ncy8bhtnt1uijbcln81mvbmns23951equsda8dcu4o56f\", \"ttzfz7dns2w77pyw4tm4i4mlirdq\" ],\n    \"script\" : \"t70z267nngxoda2vyrbdluo130xu6k1kdno5w3l3bzqdvm4i2xcbgvw7iwwj2d\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff4df33f-e0ba-4eae-96f5-c571e8e1b0c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.568735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified diaspora names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameDiasporaedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "d9025000-f033-4493-b310-ec1f89356264",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diaspora/h0fvdtyfx1935bs6rvtecrtw9j70753kiwf6wk81i7nba6rb36s5i27s23g/Leann/Blick",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d9025000-f033-4493-b310-ec1f89356264",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.5682Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "748aa680-e5d6-4a71-b5d5-d57f156a861b",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diaspora/1v47rlkzh0lskhd9ukhuhb2buuthts/Starr/Weber",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "748aa680-e5d6-4a71-b5d5-d57f156a861b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.56813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "13d3aa0f-69c2-402c-8be5-06933c206c3f",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diaspora/ef7s02t3hg5378lsy0flnr70pc11l84vdwob7a7ydm4/Stephan/Wisoky",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Sena\",\n  \"lastName\" : \"Bernhard\",\n  \"score\" : 0.4874622551578778,\n  \"probabilityCalibrated\" : 0.6062829096765439,\n  \"ethnicity\" : \"Chinese\",\n  \"lifted\" : false,\n  \"probabilityAltCalibrated\" : -0.7046695630810715,\n  \"ethnicityAlt\" : \"Japanese\",\n  \"countryIso2\" : \"mfc\",\n  \"id\" : \"a8dh\",\n  \"ethnicitiesTop\" : [ \"hayefuas5upuxsdj1dn0jk8wyrkr4tel86erlkxrurweegsg8iawrrppnj58fj3\", \"yvrq8ttnyyz916wkmach0b\", \"p1ub6h2a1de9zutz7cs6txdxfgf38iinlb9rebmctbhwia5nr8pc6q6k1pqpuil1drcd0zl92s1ufuxn01nzys072wgo8rafcavhrzinrlqfwu3u6rbl7alypxt7cv8ffjii6a901qsuzaycntlmvu8efe1glhvgefoeqgbwo2i5\" ],\n  \"script\" : \"zo0a9q5ox13vhpce907qnvb22iugz1jzhhm44xvo4dbg01bsp3hu1spqqtwrc4dtx76v24y9vohmn04358j3hbpssnjh8n6z2wz9hloiony0skuox4hfkibx9xohvm6zpz3v0jonvle0y2pak2f0wjkwcut15ptneuo8zhr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13d3aa0f-69c2-402c-8be5-06933c206c3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.568041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "countryIso2" : {
                "description" : "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicitiesTop" : {
                "description" : "List most likely ethnicities (top 10)",
                "items" : {
                  "description" : "List most likely ethnicities (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ethnicity" : {
                "description" : "The most likely ethnicity",
                "example" : "Chinese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicityAlt" : {
                "description" : "The second best alternative ethnicity",
                "example" : "Japanese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "lifted" : {
                "description" : "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "type" : "boolean",
                "xml" : {
                  "attribute" : true
                }
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameDiasporaedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "d35c1115-d72d-417a-85f7-f5f8ada0c923",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d35c1115-d72d-417a-85f7-f5f8ada0c923",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.567559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "5a577ed8-fc92-4ef9-9949-61f2dba76f8c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5a577ed8-fc92-4ef9-9949-61f2dba76f8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.567543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "ad9e1e9c-6ce6-4aa1-8f80-ada2906e78fe",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 400",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ad9e1e9c-6ce6-4aa1-8f80-ada2906e78fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.567527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "dde1da2a-8683-4b12-90f1-e40b8df4752e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"country\" : \"South Sudan\",\n    \"score\" : 34.173866539720436,\n    \"topRegion\" : \"i4f8it9w94o6w7bq32zlat2zqmmq4ffojkatmut2slwubsrzs2sdwz88xmhr98yil7a824zesdn5ja3jacsd9lz4z8oqq5mk2cjno3nzxh08h2hoo1jbo39zpvg7y2fq\",\n    \"probabilityCalibrated\" : 0.8175403243968458,\n    \"subRegion\" : \"5rzgs0g2vonf03oojmwat8outl481wbzaipk\",\n    \"countriesTop\" : [ \"j27lej3jzz5vna7h0jrei2pji259a6hw4f4jmknus18wmgq8dx0e3y1az99y3ak2ik6mibwz20q2mau2w67l724nve9rf38qvpxqqpm4xw2mr8u5kp6a9unw16pfuqkskrlyjle3pmwv9lczjak618ta7q26pnhr5oxq0w05loza969xv59g0i36rwq5mx7\", \"mkzbaag00m184hky2az7iflgby304kg8lj6s2cftvzdts28n0etnuy5a3u4vfr2va487bxukt5wgykbga3fboic8gniglczrmd7dgh6mmvm76mbtkcev5ga3u7mqvovlzhmtm13gv9puzoihijp013zjaoke1yg9bji4x1to6z63m7yukykdwgzoiwqiyvpvhxyc8\", \"26e9lczrwcze4yi8aenoipxzv6pvjj2z3nxbruhhwsges6llsay51y2xgc2k8h8ma89gcuuggxo5nq0vuo8e9mjpnt1qyg0x4p8ystlwjbi\", \"k8no3czc1nrwmylcv6n1hltb3vkojon78ikc1z07hmg8ajxm8ibphku7f9ty21tqj1756rmha3cgmynf4trkdifq6xxksmgm8h\" ],\n    \"name\" : \"Danille Purdy\",\n    \"countryAlt\" : \"sl20ylu4gmh4jcghcmyliq89mc7g6rzlk84i4trr5zyqkdd1asermbos7g4j0y5euir8ehz0gk5zo\",\n    \"probabilityAltCalibrated\" : -0.2889812876563962,\n    \"id\" : \"cqx6\",\n    \"region\" : \"cbl40z9q373beyyyj2fscjx32hgrwt5tmp\",\n    \"script\" : \"p4l7r8333qbi745409s4maww4xi0n4tsx39h2sj03zxufq84fnsya0j0mlm475x3xoe0o9q68vkfjaby1snjfqvhs5y0w28t5iwj54c575dqydqldb45gj0ygdxb2nwresiuck1du8rm9aonr6reusmeoxjpv5mlz0o626odr6fbomv2zoltts4\"\n  }, {\n    \"country\" : \"South Sudan\",\n    \"score\" : 5.054026433430359,\n    \"topRegion\" : \"3a903rqvqqbdaz8rjggnocnoox5m577ze9srth71xn4i4slzrp3hbjq5itxn71kuhpsxu2hexskc90a051eoqzvvcrvqpw48bbjyt9zi63wxqb2t9uykyinfpp1v59g52zo6aeeun9yj\",\n    \"probabilityCalibrated\" : -0.2485400069915329,\n    \"subRegion\" : \"ad6qt1gpnkiig33o6rbew5qr8fm0e05ux\",\n    \"countriesTop\" : [ \"eddc0sovtn6jfx43e7mtp0akd9bj9asn11shmtri0orw45yhm01db8ili0u7cftkmtkg9ixuu1uvvn43h0mzvvzldddrv782xlv\", \"93g5nzzzirvceomktfbaes79\", \"b9ss754093uzgmrdx7ksxlwfrm25d2j2asov1gxdd1i4ag3hsqwteeyj9nm9gl7e5gu3yvy4ajug7jtp9oxa4586rord41ovh53tu7lhhjmuc06k8k2qr31dc8yqbk15xted\", \"zkolfqb553q6muhd95nhy902aupy36012t0xxaucwph2vktyql24xnhp6ln0rdmu8gu53rkxbusc2d4k3ptf2g2ex\", \"va6dp1vqk26q2ltk9go69e5hwdjm5k483n3d798k51z0ytz7snfj4xc85p2izatpmqono9l3abx0vengsj00wjp04lcos3e60feb55o64rscl4hjauckz693uz2frbrniqdxu9b1u223bnui11mx3ktk\", \"p4dneeboxptsekqtcekzwyy5mtaivmjmckri2ntnjlfvhg33q4sg4b0h7dwb96wk6j6n14p4b97w7osbmb2u1cf1aia9s8qwcnodlcgobgfc80lvvjinz\", \"fyvzs29w8xduxwb8h1q0wdn5dpjlv36dskvz52hjpww24iwnw3g33xj55487dfbwqo7njfth0z0f1pfbm1vw5bhx0z7sy\" ],\n    \"name\" : \"Buster Mitchell\",\n    \"countryAlt\" : \"2riu9g6paeqmyf2q8lvy46mb6r6cjvrlur4qzpo1kuzp2aknyuvvp4ihrrx7v4sggnmqck9namctvqltawqzws4tesg6a6ule4931vtdo1fjd5yrqy3q0b3yoy1kv7b9rs3wlzbrmcevnd2p85zfmhyxfuzibstrmmr\",\n    \"probabilityAltCalibrated\" : -0.5255248026617236,\n    \"id\" : \"is74\",\n    \"region\" : \"3neuq7o9dx8dqyqkvjya\",\n    \"script\" : \"8reli3ux6ekuk8kacwefg\"\n  }, {\n    \"country\" : \"Iran (Islamic Republic of)\",\n    \"score\" : 19.88083364152771,\n    \"topRegion\" : \"3fcnm1fxsnxq119lusb0zx0moqp4weznf8fcx1gwk0ejrgj99tppdnnig1121yrpyqloo31h4vuo56\",\n    \"probabilityCalibrated\" : -0.9831317981203884,\n    \"subRegion\" : \"ra4rm3wn5awktdb912eykvye54q1wbk4gi4prp78rbic7vo11wgqc19ec7s4rh4bnb\",\n    \"countriesTop\" : [ \"numyhivr7c1tbh\", \"03ur89zj6rf84zi36z374o65hs3srxhqs6204nsyakxrlvswjpvfh8ykqra7e6ny40cjz7c5ev6g7v67thn2z9m11e5wrtqlt3vopl\", \"9sfznv3ac3dl7agszzsl6erp664tn5vz6rnj4hoto9ax6dfb3x\", \"ibqxv6x3cbb9f9bs0f9y1khe8g9mdvpx7ph163y9vd151hdrtmkqhfautc6u23l6oo9dk5jgbhla7tgvsdpw5m7ghgyhdfn3mgxy0xu0hn2oo7e2djxgvc16pddsesyo3sxr7jss72tk9wky0073h6t2r1854aw4xih8h2th381lpfqo5ovsbb9d5xunwjz0ytramalj\", \"d6v3oo51sga4tpd1ve7lwoc1v4doub4mjldbnshqg6ccl6xp0uh4fdpkkjaocdi10fmr82uov42xfirb1d5aetsrrztvrs1zfp2gpixwmzr7flb73oejkdv0bkeqxcwyoik2gomcsep0dkyapbv\", \"spd04py4r4i9nbupaopy6oev2fs6swnmsglhk0z3eqnkcskwn9g60212spij2o6q3gd85uio5s4wv1c21epw1owtvfb7wac6s63jbh1a33pa9gaqv2ehduyc1\", \"lnjjrblf9pt46todtcrbtnt8vo2ln8j57h72xvl5wzpmemt65g4u3he9x2jpn7qjyo2h4pceidc9c3nakuyf1kcq76yx4un\", \"g0m4efjjgzj2w\" ],\n    \"name\" : \"Felipe Jast\",\n    \"countryAlt\" : \"avahtvwnny27bzr0n2wcok9oc0c9z3rir70v7r29urigi2chgi09nwhwe5arimwllwkk9oxgs55iiw6npx80xr8eta0nc\",\n    \"probabilityAltCalibrated\" : -0.057949989794022105,\n    \"id\" : \"2460\",\n    \"region\" : \"lsmwg61u2fr9h6i1wv6l2nbcibhtyqqx24v0ddljljnog5wff0iqcsuhklg0yhseo3nqj\",\n    \"script\" : \"gxln2dqhsyezlzyevegco9lcm2bkacooh88o1q42n8c\"\n  }, {\n    \"country\" : \"Lao People's Democratic Republic\",\n    \"score\" : 93.66287579017529,\n    \"topRegion\" : \"vpbdvar54jcchtmxbpfcde8xl5uy50sjricey4tlr81pwytcn3qzb3hv1kk8a1814tj3z4ftph55v2khxpmm9826snzwwawt1atirmn4x0wuiyu96qu63ppqlrjfjdcz6\",\n    \"probabilityCalibrated\" : -0.4089601871584261,\n    \"subRegion\" : \"k50on9buk1d9dndrddoiwtzx4s1nhsz53g1modl5p6sx9o1waohj4jte0tb56xsy1t7mlhf8jjbd3u7bbjw73z9x1y1c1as3bntcayz7du8cdmoyuqqz7lpypgib49t78z0oem3v33rhs7usixnc9h727y7gtoma8dz2vrlcevbl88iarbechzlob575cujlncflr7\",\n    \"countriesTop\" : [ \"yowan3fo15pzw3snkjkmr6ng3r3aqm9rujt5yq856slxz21xkqj20okz2qsyikpajvfiecmnduxk2ct66uinmbg4d32v07w3fmwnao93sfn6zduddp5xox2au9y3b7w33\", \"6e4zulczj4v1r8bc4crq3gnndjnhhude2s58be5aqkebn3u8kqn0684je\", \"au9kfw8sd71o0kvsfr5zglyhysaf51waz5hwl9l8y0ewhfwivm9lbamvuzf0vrl5bc96r7m1ii05753rwm2h8q9hwgnx\", \"w95eqh98hkdj3ozvwdb5cmr9wl3egj9vq9avyvvfrj88dnfovpo1rcglebsy0uya9h0je14gqi0s3361624mk3zi7khfmrt6horqcrtduuygyfui34zbqh3c4nuvew3x92mzepqhxiac89qknowug88j9dy800fqttfkrbl9pigcnc3uipx9w6vzp6\" ],\n    \"name\" : \"Ardith Klocko\",\n    \"countryAlt\" : \"7ubugk7hkpyrtp94nj05a61ov6rz6bf6l1y3kzy3s5wr2sr23hkyu7lrvjknihcs7k3tlf9wgfc9q6lbrqmv2rre8j4l60ot3s5xrcv3xzy7kbwjli0souyuonp3zfvueogo36k0poj75xgj749lf137ebibomxq0ekclyytdwp7gicquql6wz\",\n    \"probabilityAltCalibrated\" : 0.1898706654304292,\n    \"id\" : \"46v1\",\n    \"region\" : \"r39qdd6tnch9spxvfz63nf55l40syoh94ith0otsib9isy9kc9ukaqdf79u3t9t17i2prkvxring6\",\n    \"script\" : \"brrv4tcvw4eqai3b0g31zl7apgdhomet2z3uguxvkwcd3ujvnm6j6bgxojh47rgtq2f8rqw3qzmq0dtwlq3far1vav220ajxyvlzq2cvytw3plmbxe8h88qrl1usncr0gw6y8xyocgrermq8xkvin6ayrx04l40fijjldnyd8alp6iwe7x2ws1vzlvootapqigv\"\n  }, {\n    \"country\" : \"Mauritius\",\n    \"score\" : 17.014057624795896,\n    \"topRegion\" : \"wp0qnfyr9goe15i9zme9sp7p4dn7xktmgl85hmgjdyhp0gfo1gqodt36\",\n    \"probabilityCalibrated\" : -0.8345051832434474,\n    \"subRegion\" : \"vylisr6vhdl52l2iiz55gvnpr1212zwofhc56mh3malsmgmcxbkdkc6p4bn047x1qvcsdo5q89zoe741ldy4rb8vzvrztdao52lrhcf76pvu0th6g1rpv26pen0dd534r1zn0n6fa2pxnbdks0fhja\",\n    \"countriesTop\" : [ \"kmmtugvmkgw5cdx9xipy31qjv0swc8u6d9ezukm415rp97pnn\", \"2gspyj563qvoysjj1ddtnv7ieoxlphluadvwf9l8agy9zq1n7mh6m1vo5j4fbs1e7cdgrk7mrteuvzukfjzarmwgsfitu8gefsxs10ke4kv177vjpz4r4fqzmy4\", \"z852phpecev8p83dxkv9ut0teebmom16j69dr9zedefnjj70ayfym4n5km6om4dlbqlq1rgihsk2ftbzb38gcap9jjnw3ie51q56fei04oagzha28g7fzs8b6kulomk05kg8tfyyp7tpspg4rck2hdzdqu4kryj4tnf\", \"o2uouy54fczbdu1f5gg4480q4pjgnq7mecivag70n4m29skqs5wg12v6az3z03s\", \"gnq\", \"1oswjd9wzml9r8x77j1vkg53smfxpccbf4m2pte0gskco1l04gp99u9ojt3ys5yipztme0sjm56vhdaqf5phblx2cl4ofmzoyvmyd8a6g5\", \"soq2y89gv3m19kmk3t2rj01kxw0otr14f8n1cbn6svooz0dmhp3z1u3l7devewo7qrz2nx91zu1vdfp9lmqayomr8kwawiio1ea0bsudeann\" ],\n    \"name\" : \"Ms. Benedict Kemmer\",\n    \"countryAlt\" : \"zzlj7c7vjb72u4ksa48tuefsq74\",\n    \"probabilityAltCalibrated\" : 0.8800071215162835,\n    \"id\" : \"b281\",\n    \"region\" : \"gi6misdo1ipkmbeq6770npva8xmsvv8z8oiib98bbxsftfyf0imuquncd51w5id6959j54zuee0huuyhwffrsf9l87yl22p0520ysktq2n4t14m9ux9slgsjy3mijfbuqamqvvb980w49mo1uk4hohekjegszp\",\n    \"script\" : \"3xf9df17lor5xzg0olwlueihi0dviq3g3nngc7tu67sqir0xb4eja82gwzczziff1zm5jc3lavmro7cphqj54i7bqbepbmrd11olxzov47xjahf17\"\n  }, {\n    \"country\" : \"Bulgaria\",\n    \"score\" : 90.82462058345148,\n    \"topRegion\" : \"t3gtad53cjv51fxwgkg4pgdw0a1j0un0sseh6vc242b811f9kzd9j9az7f74gbua6qne7rx2sb8hyf704hemdek20x35xh93616bil8bne0z2nitx71qt7cnm35ix559du12p24y9p\",\n    \"probabilityCalibrated\" : -0.9960728452307575,\n    \"subRegion\" : \"1g8m3hv6p356aas6p518n82cyns4vlvn0596uitp6d61jh9ypdc01t3byvpwycx5x8ng44q7qa7j2i4a8b8pp2lo604eswr8sn7lms\",\n    \"countriesTop\" : [ \"q85dy77h88lutml5uhqeatikc2rw2ehv546x8ckvxwdc7mds5bkuch\", \"n9anaihw87fukmq0dz26436gi5wshx1g985azk6ue1tdtsvsd41enuqajjmxkn4v98eql62p3kpeojek1woamsud6m5iej5\", \"rm2d6v\", \"yv1dxa2mruv22l7lwi76aycywk1b25s5x0aobr346s0h40x5ofjlx17t83pk99zhjgm7xtn0s2thu5ee97cmue64e8btjso3cnl3ujuwu3sfwwc6js9t4v19eulibgavcj5fivk7dkzjvxxrqqqkcuyrca5mizrtvz4pe7od38h17gh4fo81d1beo7\", \"eu4pnj67f1hduh6xk75m5ck7y69vdtqdjnaxj0apwwq71hlbd555ex85rp9z9x2p231khfjki\", \"uhozm9eyb7rda4wdvrfyar3gfwbhza02pvflb8g4akwxwq79z8qmwdhlfj52zt656h0h62hevy8nh7annohv6z6\", \"l8oh49mt9frn1n6k1pzruy6zvmprlkv53ns3vvs2lxk6c0vcrrezftcc2gx5jnalejgemkelklvj719i1ulelovydwtao7guyyb7lvwy5pdremgbha05tcgv99dkg5g48u20nhu1ww98bio69t5i\", \"nvp3ot5gh33lee3ev7al19k3uxncsnpafxwq7m2fg2tj6fd0xnx05xlabu2igbcjs5k370x7sxlafvy9hoodrivo8o5pnzgs1ceb08z1izkg6kb80a6eghpavocjrk2yuhxvasmop9yqu4i5cgo40zuj6h8vygg\" ],\n    \"name\" : \"Ricardo Dicki\",\n    \"countryAlt\" : \"fljvhj6ly0dq78zko9bjqt7ky22eyabjr4y5nv6020pxzm7pnm9ho5b\",\n    \"probabilityAltCalibrated\" : -0.7311541249399158,\n    \"id\" : \"sm6s\",\n    \"region\" : \"88qjb1pm2x9d8nhhfi74hdizw5hyrbaf1fs5ptiknqp\",\n    \"script\" : \"evyr6ihyz6shv9b8c1az2mn49v\"\n  }, {\n    \"country\" : \"Estonia\",\n    \"score\" : 26.225770358956847,\n    \"topRegion\" : \"r3g6ysqyseotcyv104hjcet6jdkf7x7ooe563quo03ytbeva4yd6qcoiab25bk49002xydm05zsea19phhcq8tqbkfm2egwfbd7j9qi5wkkr1nsval8n4ner7dy5z4jjch05rd7l8hlx87lokmbq1whm0e0ey5qfw0lukhlyk\",\n    \"probabilityCalibrated\" : 0.30381382666392276,\n    \"subRegion\" : \"0mhhb5asau06\",\n    \"countriesTop\" : [ \"xagu8soyt2ggocuzkpgqnm7hls7lcamp3p5txxr1ph1ojcbqusc7640t6pr5ydrj6tg1bpcnweechv4wc1op0uj5j5t8phm6bci0qupaknmeyh95h34a68\", \"27ldsbpac4gg0k9pte4nddgi0mzbh49bxsrnanx\" ],\n    \"name\" : \"Perry Carter\",\n    \"countryAlt\" : \"wetgyfsqczv78f7gtx3c6e6ev52u2ion5lt0\",\n    \"probabilityAltCalibrated\" : -0.015443456114121012,\n    \"id\" : \"03pi\",\n    \"region\" : \"ydepsmtp\",\n    \"script\" : \"lg419t6j9j6luthu71i1v4im6gt9eqizo7\"\n  }, {\n    \"country\" : \"Monaco\",\n    \"score\" : 53.787210024103025,\n    \"topRegion\" : \"po7vhu76nci27a5htyj2xw2ucyo75hd8q0yxe7w233vkc578940dg1is0ib7tzecqdes34z9jl2gz96rapw7wkxqyauwwniwlwim8pjt8lyzfb0o076ljwz5uwkfxfufo0nyh34dpw7lnl8r8gifb3gj5euy15yqyjcb59au6i6n\",\n    \"probabilityCalibrated\" : 0.6805800591821793,\n    \"subRegion\" : \"ab2c5ruckplvu04liu87ys\",\n    \"countriesTop\" : [ \"mco4gdotn4nmk61ehx9m51azg4ecxfqmf5p0b98ct4ocm8kr65esczfiqxvlf9jt80fss5kjsavul0w5h5x8afz1\", \"ey0uxt5a38y33l5154y8te6cw23p6rugv18y7oz3ict167brei7x7c8z24\", \"kc9c97ovlacwgbsit4iskbsj1ztb8b02eumdb9q6dtufpi4x2lrq3u09mhlrkul0rxv1vth08p96dvvoc5k1mfot23oqke7dznfw55bzw28t8q18mjoh4y07zs0r6pe9u5empdep4srdpqm8f7ozm1oiiso3wfanow10q2nn0rbt18u\", \"0vfeidarpryu2uun0ox2svg44ouxw13f302at401b9uypkq24tq0k2fkbl50c5wjsui2r7dodhgaz75sgtjfsue00qzu94esgh4a7e2eqso6kvfq4cu4tcstuzymgadzixe521u6xl7cu4kac397zlapkxi9pr5btg24wjf8k5o2y5fegtrr1jka0bt\", \"podu4wbb86zflj6v7rxufayc1noby0y0uh0eorjmbiamantym0maj2y5x43zq15xl0z2ltk2d1aw0unm6lnselimu5gi5nz27glcgs3gbaxft9nd3laxtt52p3ruc32vcyte4pzn8xxokuql89d9vprt6hctsbu5bh45k5tztsgnu775alhcrl9b8o300d\" ],\n    \"name\" : \"Boyd Grady I\",\n    \"countryAlt\" : \"5i6e6pcgcf1fapgvyhg6sa3eilglsu7lzosmjo0kvxqnqey2c9hbijcg3l6jgh0kybs1j3sv7sloew41tio0ly79vnr2hbp5u4wqeunp1faffq3tg1fjm2bicksotwrhmi6vhqhntzwnvubx2qk67t01roxvn70ynr023tf8qfx3cj2tfwc66y79b6\",\n    \"probabilityAltCalibrated\" : -0.8470217061850915,\n    \"id\" : \"f294\",\n    \"region\" : \"g26dc712tm33dmkk0mle8ydigt1fy56kps7moztatevouj3lax0b2l27ivz6e081xb0olrytf0b7qemmvn8arnkpkyvlrnmf7dshbkcfqt4bwmvuyta370pv5va3zlvz9gw7yl5oft28wf67ne5nem0j2c84fvrw3qw92ar794ouym1fsoz4\",\n    \"script\" : \"61185kkb3siwyra2fr2ue0a30nmr568cypneaqs6skx7kpzs8nhzn70qku4ks34ntl1ksipwje7bsrneyxrb2915mbed2et48icjtk3lvku92\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dde1da2a-8683-4b12-90f1-e40b8df4752e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.567488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified geo names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGeoOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGeoOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "d4e6313c-769a-4ed0-8727-5780b346af07",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/country/zdd1zc7gllj5qwynj3le3zxw57p7zqldjxler34ykenzv6mi305sk",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d4e6313c-769a-4ed0-8727-5780b346af07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.565396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "c55ea6eb-41b3-4d3b-9580-ff9517c07941",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/country/reb6mtr14bki140cfd0l15o9mxooddymjzfa3nqlxe1kt96wbyh3eddfeg8xvxpkc55ocu2i8vd0akyrqhi9j4pi13m67sco5nfnre4eo0tze55xi7oayi88491opv3xyd2j27mci",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c55ea6eb-41b3-4d3b-9580-ff9517c07941",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.565365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "6b3e24aa-8338-4dda-8a6e-80bf36579a6b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/country/c9am3idzvmpusjd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Togo\",\n  \"score\" : 17.18450112361879,\n  \"topRegion\" : \"eeppdpi6ugjce9p\",\n  \"probabilityCalibrated\" : 0.6594847418585967,\n  \"subRegion\" : \"42d05p8qz02grqotyd1nh6argkos3udmlzotlzvdu4qeeo7pv2oift5m2srwalm7z90jxs7lfi5i2p\",\n  \"countriesTop\" : [ \"xp9xk3vxf79xjvha0h5jtpak3kmt6r8bcmsowh7qrykuzu93ceiq8bc71f21yb46xbsfpg\", \"iouc3rd5a6uin98yl6pzxb2o1ivtur99qi3fydzjjplfmhiuihr6lyqb29io2m7p8ylmb2ikb5iynsrc6krz50dodiegilkkni8zvvi5d0tjwduyt91sl60bs19ogdyew4st02kaujhnjgo9s2b0lv6nfdgnbpw3\", \"rzfy9yjpvcnfdciebcz578ridamw9b8hbrtc\", \"ht7tyttrj0ruayz\", \"dj55o9b9sh6wms13pt2kb1haey4t1qjk44znr\", \"88oma6i25wbvny8ia\" ],\n  \"name\" : \"Issac Bahringer\",\n  \"countryAlt\" : \"b6hhtgwdbbcim0fx5xrp2fg4vuqpbga0jehk1crm0wjj0vxb10h5j6u9r16ylkkiz2lpqy5uxeq4q\",\n  \"probabilityAltCalibrated\" : -0.5938711105623768,\n  \"id\" : \"9vet\",\n  \"region\" : \"f4tflkix9s5v6jr63\",\n  \"script\" : \"hft0hjyrgdfuwe1s6bv50x44poxyn0ib4wkdzopvr68uyp8gsgomra54b2sx35ctrwfc9l9zy2yaqyitkjfwlxe7odee36uug9nprr38dpp8ejdj9bdhoa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b3e24aa-8338-4dda-8a6e-80bf36579a6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.565317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country",
          "schema" : {
            "description" : "Classified geo names",
            "properties" : {
              "countriesTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "country" : {
                "description" : "Most likely country ",
                "type" : "string"
              },
              "countryAlt" : {
                "description" : "Second best alternative : country ",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "region" : {
                "description" : "Most likely region (based on country ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegion" : {
                "description" : "Most likely sub region (based on country ISO2 code)",
                "type" : "string"
              },
              "topRegion" : {
                "description" : "Most likely top region (based on country ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGeoOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "378e867d-bfe6-40c6-b109-efdc26d4e830",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "378e867d-bfe6-40c6-b109-efdc26d4e830",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.564821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "80128124-18ae-4d9f-8828-0f7ef19fcc41",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "80128124-18ae-4d9f-8828-0f7ef19fcc41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.564805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "424a875a-893c-46ac-ac96-ded00d84368c",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 400",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "424a875a-893c-46ac-ac96-ded00d84368c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.564789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "c94b1aef-7362-481a-b016-792f5cd65012",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corridorFromTo\" : [ {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Kelly\",\n      \"lastName\" : \"Buckridge\",\n      \"score\" : 78.66110004935337,\n      \"probabilityCalibrated\" : -0.696252982108243,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : -0.9703836073085965,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"t77ugfc7f8q0pbb3a4dyziw96g71o5vwy9kq7lnnknpj7z\",\n      \"id\" : \"c949\",\n      \"ethnicitiesTop\" : [ \"nxgh3xkvpsmfliq9n2iabx6fomz43rpb35949l508lqgbhnonlbg0khlhfhtg28uks46xtmlv0xfn3clzxlituxb6ikc5jd13lzrk2u0\", \"dax61ydyg6zwnr17dd68ffsaweqosze9kxr7t\", \"yexolzf4m527bchfs4mla82etim4kw54wtqk67qgydjrhmow3wguya3av2p0iza9xw7r6wy67m88nik9vidl78umqk6m22na9eg2u8qyr2r0edmwklf566sukwbalmikc3h0ch6v3v2mlalatxgq\", \"sbci0aaatwnlla32tkkk3xvpyr465d567wv4dnfvvvna0b9h8xlvkyslwxq7es0msyrucp13389zz9j3ny6sp5900mheg1dzi6lrdexkrvaui3nkai\", \"rj5yog78cnpbdnsomel6ymzytb1svj3dvdfpk7quk3lcpwhhmyv9icxikjv9bfedglb1mw3aum2n1864oaofnwjh52lys3mo0m6u7ij21793t2z1g1cqgpq76p6ibk5fhkm62amy96q8oyw42jllj5ioil\", \"c7mpcjts8uxt0npes2paoocdx3s5keg1ieijvmq18hwlhlut8aimomgchc73t7im48llt0az2kjqno\" ],\n      \"script\" : \"2tk6su7cniietnft12bzhf2wcrrnhqt7vjcein9prj0ilb4f4cegvhwhzfl16ql0qkrgd03u\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Harriette\",\n      \"genderScale\" : 0.9151489142511917,\n      \"lastName\" : \"Schamberger\",\n      \"score\" : 68.22597695775092,\n      \"probabilityCalibrated\" : 0.9084081239558222,\n      \"likelyGender\" : \"male\",\n      \"id\" : \"1w94\",\n      \"script\" : \"5ior5gkthv5vb6m7zd57frxo3lh1dsky9ubt0exuj9cbw92jnt51nofyczdyt64sgjgstu2utl0f3rnz94o3ao7sjtq5shb76h3937q0yyf503o3wamo4n9vwv34x04n6sisi66tk5vn4uu17qgmh2pun195l7c5er6uf1ao5f2vu6lk0moka42u0j66y\"\n    },\n    \"id\" : \"88yi\",\n    \"script\" : \"ygzh3u3nk93m729wx3r8222a7unsm4lw5ndj4cikt8vp1fsai72rzc0op6feohx1dghdgebtweoi4x1qajacn6xty4d2hx9dys5yrmdn6ptrwwxw1sz3fem9g4llszxh4rw86299p3axvik3impt97\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Cremin\",\n      \"probabilityCalibrated\" : 0.9349457451385572,\n      \"script\" : \"p2wfipf5b5b3yqrn075lqqjmnwlaz8lqgu\",\n      \"regionOrigin\" : \"r83anngwhdp2pcx\",\n      \"topRegionOrigin\" : \"z22gw7wo4e61z5nj3xdd98vvd6e18ibwnbmg4gt2mq9pn4yw25fvbb4cyvgxz27f1r89iaogbtaze2ov0a45phpjve5p3abqcum4eqgtipxag28yx80t4zhvp0jhs3cf9bpb83hyklysp0qa2j71uo1a\",\n      \"firstName\" : \"Lionel\",\n      \"score\" : 93.39615088227396,\n      \"subRegionOrigin\" : \"pexvrow39a6zhlurcceglcscnn5d4xpucqorwrqmx3vjta6ktbjq6uc9d5xypzk3z8cbuajmvbflkgpioo8nai2bvgmbvh94guf9u8ixq5ax2uduzdunqoz09i405p0ztu4layjg79gw19wmo43vkfa7q9jerog133vq4bznyrtm\",\n      \"probabilityAltCalibrated\" : 0.9803591917897512,\n      \"countriesOriginTop\" : [ \"o1ld86hg2h9ckm4205zz0jj1o8s59j9ze8o4xavjvgxotjcz4vwss3boh3zyfcg5krojkss7dty8xig92kces3vhm3qfqeay7fgiungf1o42po0iykyzta02d693v5xfd8kabjn192ge8dw0w4azexutsenvicnbgvd\", \"vcazjxers0dg46wonwyyaa5wmw2klp3qweksa349lkmrrh44o4n1r7hu3bdqcqxnj25h7nzciff\", \"x9s2jhra4hnw8xa6rwjklv5f1mj89lra0h9gf5xqmf6kgs9b21t7kxsolkjjklxy1seqj27dlqx832iuizxbkyepbpz96a6uhaev5d2qriltbe14rzvd6\", \"7ec0gfntk7mx6u7eudxoe2hss0hy1sl9cvf9vi87i8a7ps9b0ztsrw60xo37qkz61f5xbpudicur6bbchtjqwpuo9sn30vv5jkk6x0o5k\", \"x21hk8zfu8psstmvw\", \"efzguobv8yhx3woly3sm4ejdmcquw3jyn7c7d57dfef980w4nl1lfjqs38coeqyw5qv3ar2a6e\", \"rd7qvt8m53imnelf5vsa5rise1o6hc75aud3wkv8zidxqzcnroy6zy\", \"58ht2zmug5mnt75vaj3f1t2eefpi93fla1swt5s65tuawj5a\" ],\n      \"countryOrigin\" : \"e8ianit47lvdootsfkypido31j5cbb4y4elel8uz8fllb7zdkqusbda84deav8n6m13wq30j3228eknpoaaidb49qj42qlmzkrn\",\n      \"id\" : \"xytq\",\n      \"countryOriginAlt\" : \"jj4amitoqurh3ocp4vnnpdb8oiiwm0nbzgx5ci3t5pqo0me2m2dapfp6ub5vkxsa7m2d7rj11t2kwa7wwvtq5ssezn2w7xuw13inkl96suug3v63seeckzmw6q6s7ksxvhdhnnp14kukc69ndzhb39pfo00l7r4kkeomkazhw3f0heurrqpzu5jwf596gu\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Jeffery\",\n      \"lastName\" : \"Rogahn\",\n      \"score\" : 7.064006046376581,\n      \"probabilityCalibrated\" : -0.48487109612866797,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : -0.5718101305619576,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"ouwn4442jozzp2gpcnljx76xjd8cno3vrboifz5rjc7zi290cva6u65oz2adz2evppr4n72kdr67nz6l3yksjwtiphlct4vaoeiomgef6iui728wnlobs13ifx6g8dmat5nnu5eu60ekaf6lm18jmce9it62g6hd4rs0uryyhk26s9xc15mmf6igpjj1yb50wif4ra9\",\n      \"id\" : \"k76n\",\n      \"ethnicitiesTop\" : [ \"ku1hht0evy7oao0jxb\", \"nrd3t5zz1xn8o7t0y5gb0fsy0205scgo9lnjfa6b6fctzbb5l0erb09bqsakprg59nxcggzyya4zyeg7v8m6awea5r4fieux2rxymj0mswtfrnbp4xuo9oiroptqxynzpul9rs8ll50ykmsstrc2czpy7sj\" ],\n      \"script\" : \"4innn9311124ze2qpih9q9kvuria7o0bncy0jgo4ptf7gd7kov7o1orryk3prqokougp5hby2apbkjfhz2lo3fj4a5hok2a1l38btzhnq3hsjgw5di9nt7cdm891t6qd0svvqs2motd3g91g6x43j6brjh7lg8gu50xsxjnfsztpl5l\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Sherman\",\n      \"genderScale\" : 0.595316778607172,\n      \"lastName\" : \"Purdy\",\n      \"score\" : 85.34051145426092,\n      \"probabilityCalibrated\" : 0.8071295378548891,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"b4xb\",\n      \"script\" : \"ed62lkaotew9k7w72ikljjiz72zt8x09mqqe7s94m4e9u9dpfxqflmkxqdkjjhcbj0wwe43oo1ioaf2p4fgt2riltwadt77k8c3farbtxcuisq6drtubjituck5zooe5agh7suihvx9al2e6idcbqmx2m3p6rcrwait5jxnhj4jkord8\"\n    },\n    \"id\" : \"8p02\",\n    \"script\" : \"bqu5vji317xqosfxqs36dsmm3r17ki8rncte86ia5ktr742rkle0jlvg9bjqv73yd0lzqdyelxi9gg1dnigctatjghprbzs\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Wilderman\",\n      \"probabilityCalibrated\" : 0.8392542820777544,\n      \"script\" : \"2gju28tz5si0rwfx5xfova33t\",\n      \"regionOrigin\" : \"475odgug0s9bnmedezumqf3ui0fjijzwxbvmiuwx70vhr32zji8bgi0eb26gt7o0ekho6hdcj2djzr9r9r0rm1eo3dpp60nof6s6kxlu5a1jmmsxmz69\",\n      \"topRegionOrigin\" : \"wzc4dh2iu7ydaqpjyzr48i9e79pslerk0uc2gvu72l0zx2mbxw5qswjn6kl8f426s6duniwo2i77efcpiot9vk5aswwerqlgr0dglcauausb3m0cw5vfzul8o0vwerkmd4zc77y1ngidxqjtjdhdk2dkaxhs4abveiht2picrtuurznb85w7so7if3vww1mr3dftjw\",\n      \"firstName\" : \"Jamel\",\n      \"score\" : 36.75966108024821,\n      \"subRegionOrigin\" : \"xf4cqwy9mo9ja2nifleuf5vd514dmg0wsb2agg7f45u7ycro175pecw0c79hcjl23j651b6cgc19cx2dt3mwzglk1cflmcyhtca0j0igk8vs66vfbx68305l9c9paqwm0xj7u437x5ah6fq9bu6zw1hmwbiz6mux2uar8v2df3ff\",\n      \"probabilityAltCalibrated\" : 0.5861285770696483,\n      \"countriesOriginTop\" : [ \"v6alwcc5siwla3onqpy3txou5kn591amqmtxs1v6oai3uam\", \"694ycxt98hdq2n9fabo75q5bp8einkne3tgvnuck5cp5ncpe0czblj6lxguxmoddawifkb2elafgd5a32uocvcutmemyqeyzohkytyv94b2wq5zc88szgqu3xo12l6l8ktmlj080b\", \"5hygm1pnvew61fbzcysmp2rs4y3b3h0vo51z26wmw00eup7vh1o8t44b5rebnsl2fv3qc6jt2gvqey07nso4677654e41k1sqfi7gsbr13pmvi4ffq01jqt8cmvcplk4590o7o49t9n62pxsm9hq8xima9ed5o0zkh80sz5eaen6dwv\", \"msb7n9\", \"ka5wc71pi9alk4z1qzedcum14zt1okyztmq3rwm3g2gplbzvxiyp9uadlevcr949e\" ],\n      \"countryOrigin\" : \"oyytyl6078vpqtlih8543wzdd3le6n54cs06vgadpfy7lxrumados1h2pwrut726gvn6lv4uc\",\n      \"id\" : \"oi4t\",\n      \"countryOriginAlt\" : \"jdbgknn6zi6wqtzpmklco06ch4grwtv85xp8kyi17pcid3yfcgc1vr1ixilm0aq6uth710lmvg5g7gcpvkrefayouyz74q06srbnnadzazdwyr4v2qqznjy4wtu97kmjc14eufy2gihorml5p9x8lyhgrxfcyt827ag3d8kp\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Marlon\",\n      \"lastName\" : \"Shanahan\",\n      \"score\" : 68.80239660839415,\n      \"probabilityCalibrated\" : 0.5323965203315462,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : 0.37668975684194717,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"jjctviwdxl\",\n      \"id\" : \"t5at\",\n      \"ethnicitiesTop\" : [ \"jn6z9hqawov8b3p8jeurc0jfeatrp3q4dxztvmfzthzf4b664nx07\", \"y3klyx54naj4ycnym84pefmjjzg1odafxidhvkbktnog88ovd08nl0z2eo9jk\", \"c7ne4x30bc1n1kaqms8vmjfo53u451nrrpfn4v58sffbo5ykt6r9qgtjkhfn2cwuf0lz6l9a5t37nkdskwxcckg5z03do6e5dpxjogvq0xxchjboz1iuyyy40usq4g5um7xbriutjjuqzb3zu1bx85kn16put0gc0m7q9czpk\", \"zy3z4oljgkjhlrgqj5xvb4y2tvhsvx28u3i4qkmi8ociovkb9w\" ],\n      \"script\" : \"dig46zle26c2xafd3wmuuxfnm12d\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Audrie\",\n      \"genderScale\" : 0.9451584415642162,\n      \"lastName\" : \"Hegmann\",\n      \"score\" : 88.03160577111385,\n      \"probabilityCalibrated\" : 0.5027257478046747,\n      \"likelyGender\" : \"unknown\",\n      \"id\" : \"lw5k\",\n      \"script\" : \"duv5osgi3bb5n4wcwf1ifwp11o8hrvvub03qyv19gx5y87g77nlms7ayast5ad573akps249ddtuib306kb8n0gv4sx5cs6d5cgtqamnpx23icpgw3ra\"\n    },\n    \"id\" : \"w9x6\",\n    \"script\" : \"k2hjj5pjwutajf0o4ex8dws5x4fosrotwbtsmmisv1y0zuderk7lnau3fbfdz5qzy3f3gxh4hku1awmhvw93qgs3m80mosi48gq02jj6udp066aubh79yy67ntqhztj1wkoz6nnwcqmf5rhhj9p\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Sawayn\",\n      \"probabilityCalibrated\" : -0.6989878453391396,\n      \"script\" : \"c0jqwzhgpwzma5f06vz6x5j7823buwupb2xu5xdwb3ocmwvnkytvnd472xwdz9usxwg6i1722r6fr79r44ejkio1vbq2czvxv2riwo306o30pi9ihop1jccnfw3rknkgxckjuxk8enuioso996g6cyvq958vshiorfmo7um3oi6\",\n      \"regionOrigin\" : \"tcmb847hv0gai10rclf78o5zrr937o6nyq9w52gpscz6g06np0\",\n      \"topRegionOrigin\" : \"pkwemq85cw1mfhjz0j5fbik2ako82pkmrfc\",\n      \"firstName\" : \"Drema\",\n      \"score\" : 43.792780003402484,\n      \"subRegionOrigin\" : \"0yxi8r5c64jabc7g4o089tugs9gm5ms1p2nohflvbbaudcrqtxzj55sgjifbdflwkfcxe87gufa1g71oymrfjln8jz898srygld8vonlsi2nn8rmjuaf3p5qflkhhjttd4yy39l1gnuq09ks6aazhl0hg7jaemhnoo2jw8xn63cva08itc\",\n      \"probabilityAltCalibrated\" : -0.8969258734804071,\n      \"countriesOriginTop\" : [ \"bfhitwn6z2gbn114ujle02crawbc0uupxyw0tzazo\", \"3yfgixpjj4ekh1bdxf01pgnkytyrafdchwkx9tkv1293byh8pm0l9hbn\", \"3txnulkmf1sr561ahoqol6t1wejq151i0dcptr3n6qr42yfwliqzvvaud9\", \"nql3wp8yyxsb3o5anqg9emrhpfrol0g3cwlvwkwwq7xe05sp45ltp84kzyiankvr1lev7r8wzxgm4iknappmw0gxk02om7qr1lu7fh04koqvrkqy57cvvi2eixziip77stndyos29vz65r08axoay6ea3zcvriobj8himylxr2e2qm8j4pjjcr80rcy7kh4ztu\", \"2shseuy7b1awxeonsueglj7098cl8a4opg51zz7y5zpw\", \"4ougjp8jovyjegmvvp52rxryvjxhdbeo8qabkjhpzj39ba9r3zz6a3drvd967rnxph7e4ykm89ykr4baj1o4cfrw88tjbhszpuqwv4l4ldkbno4k3\" ],\n      \"countryOrigin\" : \"mttg30gwygevrm82uunoyhe8lb8sdqni2uqddtsh1f6poq6m1nvc9g28cbm1qh0t4hiw6s65agv1u945u0w8xk31g7jbmq3ar5137peopo1ep7t8vc3hkfc7skri66bd3ywfgsde7rbu\",\n      \"id\" : \"mh2z\",\n      \"countryOriginAlt\" : \"hs87ugwqflgb3qyu7j0za58\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Loren\",\n      \"lastName\" : \"Mertz\",\n      \"score\" : 8.836719768608647,\n      \"probabilityCalibrated\" : -0.3504882132989524,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : 0.27596392325331376,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"6nk5nnd2ki8xu93hgf1lvelqh6h8uj1812g25f6pjep4xl1whmy0g68c7mjgkpzoebf1is5riit1ourncu0mfh0gs6ivh76z76wwb2nwph4vjdk6k6tvj7yoi56tcp2crc\",\n      \"id\" : \"2eic\",\n      \"ethnicitiesTop\" : [ \"77sn949e7jkqat8hziq1q6jn7slkcvbp6k3cvj1fpcmxq1yf7g8ubd1m92htxlyidkhw7pr20cl8hdk5liccvy8qhewuzxbpj7o5euf878sx3ht2dqu9skbqob1cuy9w9omjyt6nbndww1mty1yvefabat1bfmhx7ro8h0nh4um3\", \"jsbgvfe4gskfn3fltsdzlie9ngbs969i12m1el6dol21boqi438taani80ahojqht62kqz5f6sf2lxdcth45zfhpksabjepy9ndks0aoyxbqq0gita396hvyd8adech\", \"z3k7t2169j5wbabtz2jd0k91ipzin2s3nd4ka1z8mzl1ir481m2e4tklk8kzsug9nxq366cwme0s5sht2f7aikylisapvgrkin0e2ma1f4hexs6mavkql7hp8d8\", \"w0gp0mtz7z0blyk3mayb6n7g3qsj633bk5q4bxpdulwr9ofbyu32ypyj98yqm1ix92y0ydebjgwn2c35q1bqtfyp7xwclfdj0wc31usx3oyv45\" ],\n      \"script\" : \"tw29kxsfl50o7m2bz4wsry13mnj7k1qaircnnrq42c51dkrbbs1r55ce6hbvxbw2e65kawnh7su2y5ztrudu4wrgxz4g0trekwvv3vicnpxx\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Williams\",\n      \"genderScale\" : -0.9518150330619717,\n      \"lastName\" : \"Cruickshank\",\n      \"score\" : 73.00272045255372,\n      \"probabilityCalibrated\" : 0.553207435852836,\n      \"likelyGender\" : \"male\",\n      \"id\" : \"5f5l\",\n      \"script\" : \"9zhhwijd2ewp0c5lnldhylfhljp5ink2criesyj0pg2zovyd8iz7td5kckkrnh5bhduzgb239ur6e8vx3f1smfx48vtly63niythvojtgq3r3jz83pkrslt9rzyyfcn0qu5ji7\"\n    },\n    \"id\" : \"ig7u\",\n    \"script\" : \"p4tbzkatx9x8ehqyl0t6wpqcfas26mgcdc9o9y8v30ebunnte306wxer6mkbn9ejwm7tmh20sejrmkocoa79wkev3fucn3una3suvdycujrpaihzzhf72yf1ix5kd2sqjy3wvt5ov\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Zieme\",\n      \"probabilityCalibrated\" : -0.5770436949171938,\n      \"script\" : \"yjvr222zpr18ry1\",\n      \"regionOrigin\" : \"glmwhrt96ntcukk2ya8o1skcpzo0ryfz8avdg8cmj5ie719wl9r9lg9ldq8dvtv7us57ah4zk2hry7sjh8tu8b1v86\",\n      \"topRegionOrigin\" : \"hwww75e8hvfp1j707gjafz0lq06k027pazw8flnahh4xavaaakx9u\",\n      \"firstName\" : \"JJJJc\",\n      \"score\" : 48.53052484662997,\n      \"subRegionOrigin\" : \"r8qvrdx7g36ylkim5jdtzg3ze659ulfpae0bhlowryfatce45ev4t2haj0ab6xng8numre0bbg4ytc3fu4avw7n4i7mycsfd119mwvk5b4ohu2vwd7x1dx08oeqhl2nee40ji02ozzlm8y061xejoqk34a52xzjbyufrnh9wfd3b7moiyip6w870i3k3v4\",\n      \"probabilityAltCalibrated\" : 0.252933006028224,\n      \"countriesOriginTop\" : [ \"5tk7ipdvlxnc6fsr4lkd1tzj14mi0zr8wi0s2icswj3e0nl8frlx0f66yodxdzs1u5ls9fl6wvnrawzbdknl94tbxpdq5yhmf1zhdwj8n2uj1fgvv015w3njjjnaghnz8z58s\", \"73bp0tzqemb9yvqwtiwtfvxlyn4ac6eb8b3mov2xzzyidkmq3wfepwxuoc6xy47lk5pvrncwvelht3ltqblp7gyrwbe0d515zxpdm8p2rl6likon2awagm86mg2y0n27igkrlhpackzzz7jm32kjtsemux04swgv\", \"ijldqf22cp8xf5chwl8yaona5uzwo93qhvhrwrfv7zn05txrh4m8idaom3qvbkxhuv6ezyjeayop56h86tep\", \"i54sfgqh1sdygyofg5kbxllumgc9z3i7uirompdqnar35c85jzmponv4awz17fqzda5ildxdxsc7zb6krmwod3fij5j7u9y1i4lntx6r2b5jsi1\", \"i5xwpd8umccjs0iuhkq4adgd5ne7nv2s8aqggwyv00p8y4p421xz7v006rw05f5w7g\", \"994np0udmwrb2fee4i15opgdrs7k904gwip525647cof4qvqk9ip5i0mb6tiyjwjlzm0wrp0aketkqjt79wt54aqzbf1qpuegkf8mw21pyp5tfnumj47uej1lmpf9rtipc4pw214yc17wpi69f78etiszodakbi778tzrco46nus\" ],\n      \"countryOrigin\" : \"hn75lxofgqizk2pr6j7d3b4cqqpzt90pjm7tbwy8eao2vnregxw29t5nljhdo4irpkiza1oh6ejf7\",\n      \"id\" : \"cb34\",\n      \"countryOriginAlt\" : \"64etlr3v95gdr91o41rye9sul3v5e0ooaxoao786zthmsfts0h12gyu9179e48nww5mjbjk2aly1hyo905og05c3d0yz\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Wanita\",\n      \"lastName\" : \"Hessel\",\n      \"score\" : 82.46210312608977,\n      \"probabilityCalibrated\" : -0.3654367265199552,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.7210178512711285,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"bze2wjv9oerkzuqa0n1haz0cnddro7rn79tnhjxxt1a2d2ux5zpp51zicdkl3hmnz4b3ooq1b498uw1xzpyi8eadzph8z46zhnpmk6wpogl7qs31n5pcep4ukbkfrh3p\",\n      \"id\" : \"6vdo\",\n      \"ethnicitiesTop\" : [ \"w0grvlqvi2q434efvjxivkjn6zdn4d5hb2i5boec5i9gdgiy81dzl5jbcor7pqmngg5tlxsljduqaf561zviwfj1nz8wvfb26x9e10yenpd668dmijhxyjmt2o943cktu0p3zb2i2w9cd78kib2jtronhfmtnuhmn2nmzlz6gnzlb9h66o9c72huxv\", \"k8x3fnlfnzxxy4yj5u7rxts3a58ha62417ct863yij6cjmxmgcx6oen\", \"v15ne5\", \"uksm7fat3xrmn8onkv5zc7gwgfewf42umnx7cts96y9cwt9wqk73xf6ze0pjh6gswi8gid0c4jn272ygwad06kmbw3y6\", \"jmgk3q7ywjiua836ipuqhofsmndmxpoucdxs017sbp0cqkqjqp9kp6zcz90ijwgkkbbg8ura451iu4e3gkce6gi1894zewxx1u33u2pceo1dd23wcbz27ubkfldvqypspeu1zk3h0qo77krq\", \"5xcxzxikjnuefsl2pufojkqnj2ou5h4ku6kjg2fek6rj00ypbyxxkqus7bj56cgx2zppequrje1m73e871etj8tq105kfdlc6xkockzs9vxi6zgbpp6kdf0d9nsiyr6862jbbddf5ebbftd688mphjqahuaomrnfifzv9lgp5pzuegxxh\", \"t94tpmzqtjw3ni6fj7cfcuumb6o469tcg76hginwwoptj17fz8bhkp1cw4pbo1ib38b7u1e3nel90owt0uqom8846m4f0jnl41pv3inexonhk6k1qb5bks7fd2n4qm7vzjxub2yumj8kh7vmoi72vhzhu6jeu7z0xwrqb8rjfgkj1861eeyprdbt\", \"1ubq2ewm572dqbt2tydt7ulwx7wylw13uemqja4z076wq2f6smha6ggau3029dt3ti5wpv8xb0bljedccfktco5bftwip2ep2io28oaq11ltygnxrexfovpfu7uyg6ynpl8\" ],\n      \"script\" : \"4jecqlzq3yyvl8yoj738uhqu7opsclqvchyapgx6xd8992m0vwddm5qswmlas8yd6rgtc1kvm0hnunc8vg7llfx46cpmn3vu55b672b0y6mvop4umqhexl2zsyyehyu6p0p4a5jm0ohfn2dttnr9c2143f\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Christoper\",\n      \"genderScale\" : -0.19715733630742105,\n      \"lastName\" : \"Kshlerin\",\n      \"score\" : 12.718061588002849,\n      \"probabilityCalibrated\" : 0.16684595658742118,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"j73p\",\n      \"script\" : \"zjdxhqnkii5607kuu7hbxou2hkc70mmff9lw5coet0nj45h8onfq8msftyak6g3coqm8g1s77lcm1kzltckoo48w1oa2q07iewkqvl1tuaj8mhhgqxpq3yyl5bdsdh1w2g8omr9mw54bwj96tqhvr9ip\"\n    },\n    \"id\" : \"t256\",\n    \"script\" : \"03wgi7k1f833swagfqfquygd0pw8cf7b7aha3x3szjxsua7g7xvw3mpeiohbg5br5otxzrybfcmmh\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Kerluke\",\n      \"probabilityCalibrated\" : 0.17157479919067953,\n      \"script\" : \"rz1zfma5w4anggpwje6y3y3k1ebvzxafxdg5840raj98v0ymwylye3afvayotbs0okl8xl44ko5yss5w4hop21787xlkeiucx33rq9xc\",\n      \"regionOrigin\" : \"0zt90e7ypu9khni8utitc4dd1dnst6hfwpzm0ho0k7283hfhkt4iqxe1najnhf2288j1lsxw5psc3zjufc\",\n      \"topRegionOrigin\" : \"8xczgvrqqowaxp9cq0b91ocpftbik71o59igsbten95fq3p7shceew2e0821194odlev640w1ef8fzwy4ldnbrnjgum4r\",\n      \"firstName\" : \"Abe\",\n      \"score\" : 51.95524637147617,\n      \"subRegionOrigin\" : \"f5v23yvdxn5nveuhmb1s8wlap87tl8g9lmnf8gxet5ghvr6kju3t7hh7o3lyjni521wuatjggrizoivjh9jj847u1rip460ludt2fr7xs383xqew9wy8vptwhgnoggagijqtchfs8xs6gb8r2yf\",\n      \"probabilityAltCalibrated\" : 0.6032980922869104,\n      \"countriesOriginTop\" : [ \"7pfzfyxgdzj53v9aqeq3ehbhicw4euhvdhdbub7xfxxsb26z2bdnyn0giebzcxtdv\", \"6fl817yl4nixh0ahcga4gjran8ikd0in9pekogip39wtjhims6wsjj8b6yjhafaizkh59zdky14lcv4n1jcsm2vg6cv0smm2s7dlb\", \"hnll8lo2bu4jt74sy0cbdyd84m89z2n3mvh46lhine3mc9br3ve6xxn16izgexe3k\", \"111mu9gf4rdmzatp6d8e6mv7yckky2eve78jfjqet83dzn2rlh71btrxko1umw7pcvl6qgc984gwwachdyr61o1xwtzrfbcxdl5pkijjnv47\", \"27cswmxh86nhf05sj4r517g42gw6277eigph2r7sws8z0uw1thu09ce6preeoaqfvm6mx58k90jx5ecgpxf4h5mgchax4xn4zqvj89r06mi5xlzwbg2rndql28unmg25wuhs92t2dqsi9fqqcqwghtns3294dsu1dffmo1zwq0u5s6hmq0sb7c2\", \"v7z3usylcfm0nkrgzj6nxdre0z382c3p8sstbj2thk7b3inl1lqfbinmnhv9qkl4f0t9s17uvn74s4k927267a1higzj01avnys5o1jxvemopa98yh5l9blhpssdi4tb4lgj0owi606pffc2tzsn8tjcgsi01ccrb\", \"rncqilz8omoc9fs3g8cbzdp6ok0iy1vij62lvuppngrnxwcm82cucw30io1wnaja700p9g3qr\", \"xcypn213x88mmpiprc2onorbeb3h7byrxwu5h95kmlbreij0pwpnpgq8l5oyap38ve1kg7jszdasgfqn\" ],\n      \"countryOrigin\" : \"9tcay2d9q55hzvhc2jq1xah4jdzua6nkichlv74n2lores0iyo6uehldvpmd14hf72u960qci8njzzxohisdrprzizrukwl0h9ytiatfd6nsx36lz\",\n      \"id\" : \"u1x9\",\n      \"countryOriginAlt\" : \"8xqrxexnxmj527n0si\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c94b1aef-7362-481a-b016-792f5cd65012",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.564748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch",
          "schema" : {
            "properties" : {
              "corridorFromTo" : {
                "description" : "Classified corridors",
                "items" : {
                  "$ref" : "#/components/schemas/CorridorOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchCorridorOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "02875eac-68bb-4afe-944d-0bdaaec22665",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridor/u8xmjg0ze6yt95wli78yxwrcs6ggshs1aamcdkjccz0i5dazzw70lvzaflxki62y6flgj21cagl1l/8zsqwdt44tkm9dnesmbvj6z/vfao65izzqdwm7ocba0a4j2jnteiina4px58gxxpubq4sxltpt6b8lqg700cc3vp7b136mjietq45wefheildhn63myzvd942v6tja9ujbzdvcztl01bfiuyrqgt9ry1qcshj69e26as15/jym8jxo23767o4f88clkagvo0wkf5ghmyif8jaa2jinqwbtph8gz2mzrahrdpftxev1soumpkyqup6ie4eqh84vb71rdgob9hkk9lo3f1bb0bh5rkjfpxz7ofomt7ytfv5glqo6gwxprf8v4npfswn6ypnlc52n7qe9bvcuk34ez46b/2orqcc284l4ygcks7hirlvlnr60bbxgavu1q3b8ls1mp4x39c00adbug6699f6ps8btcy5is7nm3kxv07ruojjx52cq7hq1vr6e7wxv01ltj99v76unxq4qmaz32ajse72gzp89m4m6tncp4wyshf2le1jop/g8h5u1hyjebi",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "02875eac-68bb-4afe-944d-0bdaaec22665",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.56081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "15925c40-ffe1-406d-98eb-a138fa9b9680",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridor/u1rdgawe2zs4f97r2ha8n3g6gd49dcmj0pc19b7w9azhymfw3ar0qj0wgpyt9cq51llqv42jsq87wb9ruin2txzt3gga5neymkp7j4afo5cb8h742iz7ndshlu7ef1gj6bmk9wdo0h38osfizcem2m7wpp7huay16hdy9c9a1eo/ah8bpukxneb8sl27bgd4twxz9idml5shh457kfjzo14mrdo64le7bxf6rtsf9d4965be6h5trdmrieio0gezusnzzmb5co68frqfrizhbk2stgxz7t1fqcg5o5u6cm3gscxcrvx1xd4wkntjhj61gvb4cgkcfv6bzsajv9ts0mo5wfov/t8jowp2wddgq6aufz1crv2nzcp6ywcc1sxrldicxr4ni6oog1z4ltqy5awhhq43xeywm/gjyzgs94e2jn0bnxhkqaohfx8pjf8nphy5zwla3tt3yctvwefj5oq52y99rigttphylc6xpd21rul802gw23y3bfeuej6bkj5fbj93ysgc/4ud0o32ojlu67pigagr3uv0tqqu8dku4khgnkn7uak4ah9p/tu2",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "15925c40-ffe1-406d-98eb-a138fa9b9680",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.560732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "bb819b92-2c20-429f-bb5e-213cfd56f487",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridor/83uvmj1fukc1b0aric8lo3ei2nxduai0ssaw1oyvg9zzxc3omzs6i0uhp8b2obffiyfqbt26xnnk3zu27hy6kig66oh3f2fsq/a8ukk3qucs74ncypam3hegfo1980glafazm44xwgyyym5grw39iahv84fp5bzi4h8l16a6x8p/7sgqs4qthniu9qdf8riqlfs5g2tc0z4298ru45shkuiq9otz0c6czzw7fu550lpwcnuuodv6c5jumvn8nqgnm40n6b7er2dlkh7i0hszbnbwoin3hhe13r3m57vi04ji5q0uj7b1r9w36hqfqlm05ju7v0/e2em09wplmiamejwua72b7c3e2xjhkka1wogf9ad3yxw3nwzm2mmoshljn9ckp524z1y7nzbic3d5la1sdi2ribb9fvzqlxvi216uy3umombc7jeb2e44hvhnsn4vi6dvzzy237ruu7os5q5o3cbfi0evg07kjqv4oxxdw6hq5laakskeeq7806ftcrhbhcqx/gey8rx67auero0tyzh8dp4xg4p5r4nul7psrnkk740sr1h22phwznppmzuqs0k1a2mvlh05lcp8z5nt56qob9qqw55bggxezpyoiztvj5qvjuwwf1zvf11fd6iodfa85l9q2uko80bkjxb1iaoi0ovwi3on0y/l2c5oj6fm6vdvtni267a0focr2j9g7au7kg4pkbb07fkrask0m5rz07y65g9",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"FirstLastNameDiasporaedOut\" : {\n    \"firstName\" : \"Theron\",\n    \"lastName\" : \"Schamberger\",\n    \"score\" : 68.63159044686108,\n    \"probabilityCalibrated\" : -0.46445929809468245,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : -0.24582570183124597,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"95fl1bqk5gqm5cz6z7sxn4enviqh80hr8fm1dz2yob5xgti8im3kse6nylwxc7xpnx3jxd048vpabujb6gpx3tyofnnnsv59yssctqv58pvw4zfd8wncdhel3xm1rdiapayy12301r0nqbe742z6du1giipjpl0ibdixmk62zj2b5ob1iqbu7jnb81486ei8dgjvmp1\",\n    \"id\" : \"s04k\",\n    \"ethnicitiesTop\" : [ \"scy407f7qdm0ch5j04lvapnjo1bbdj95rqsxe7kxeicrp21dbl26s7sfcumhxq7ml7snhwqcjkg418ytl3ukyqwmntlme8wuyfu974kkx2n2gbkf3rio301goahe84orb794izudvk\", \"3prt1kxx7oup1wypxxauk6ng7mvjgvpui60z41eu4z3ddqh1zzqrb512csb0omac1h8sjdpt233he00nvrn1wfsr8lc8bwsn7oj\", \"n3hrvtwrom4xz70zl7yufjgmt2x9ymu0bitf1pl\", \"yjm3fjisnkyi56mxh7hbq6wgw8vtrk8gckiq6th226h6801ndffi7im5wjr67k4ynsujmr74veity8jrdtrlv0wu0g1rupqe55n87avc\", \"3rtmj2oml2ets2qams8tepz1bhjo802f0zmthpsxuug0jttpyxgroyp\", \"k35i4rw9q9ky0w5ys7tztlzulz5zyb6uaeiya9d5yrm8020hfxczvf2hjcvgd5o20wsowxgcg3zgowacp5qi62dps7c7s861unj927oaiwqdmqubffrs0ycigyla25htjqnrp517cm3btrl64ovvoi60jorh0v98g5sy4l\" ],\n    \"script\" : \"60vb7pqhqxrktrsgn046a48jh3jyv7gzvn6j2t4c0u35i2938fszzi0txs1mywqmgr3gj2b9c86tbjk6r8ohlnrnh1irr90\"\n  },\n  \"FirstLastNameGenderedOut\" : {\n    \"firstName\" : \"Rosario\",\n    \"genderScale\" : -0.0667273162562203,\n    \"lastName\" : \"Paucek\",\n    \"score\" : 46.52698927723089,\n    \"probabilityCalibrated\" : -0.8629791293736624,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"9bau\",\n    \"script\" : \"6l2b26sgae33hb0459n6t9jbrwqpej19o0wpbgmoy149b0g9jokfhhtb5ico26gm3jqujjthjscxxibr4fvary3ivb49k03vj8m8j0mmazltwc4rwj3kad8j0xadpvcfocq6jd04z92uo6gd2kkbf51q21yl8hwny31bqtcirn\"\n  },\n  \"id\" : \"6906\",\n  \"script\" : \"hhsdh9m6hovqq1vxhfkat5slbu4a295l566x617ws8hk5f3oi5h3dagpicc\",\n  \"FirstLastNameOriginedOut\" : {\n    \"lastName\" : \"Wiegand\",\n    \"probabilityCalibrated\" : -0.927745907702779,\n    \"script\" : \"88twhqt76lcdoy1gkc75irtjidt739ema10dyiixyfkzemrz0gvtjgkd3mw4ciw1wg6exhggrgv0ca3j577bptp5ukcwfxaia1556129toiqh08b\",\n    \"regionOrigin\" : \"w4p8hokdji2c5fqg9cpcs5y5vxvkv03hqhvrgde0rkpjifh9p8uucvwmnpl8qbfz64xwxkpokqoubymd2cq4g8dfhffcyy66oj8h6h9e8hx6gfok8eb0yldoszoph21xmoe12n1ez4nrmvgdihnaqq2ohpn96bf6uhcxafusnne\",\n    \"topRegionOrigin\" : \"hszo30qpqydycd43ieeahliudwjafgsxuah6tn40bs9zs190j\",\n    \"firstName\" : \"Nadine\",\n    \"score\" : 91.84000762880589,\n    \"subRegionOrigin\" : \"j28oki6kvvfxmsbxsllqhbyzpwbwqupntzd146wdkl6vquael1uczs55r6hor649avmqu5ihszeqts5zu2xowth1i19fsr1jg5susqqacgoy5ehdzqmlgc3839m80ysr2py2jjafzdwq0wcs93r8fr6s1vm8dj1i50ld7ytf5\",\n    \"probabilityAltCalibrated\" : -0.29725783519974813,\n    \"countriesOriginTop\" : [ \"vphc80p7e6w68og35yhapdonr3cna3lu6suazg2351bsm88rlniqjoq5ll5kqjhg73nixg64nmkddx4lodlqcqduwd6hhae36\", \"hhbgsd3ad41z4xo9015eno0bbqkjife93be25ow5x6qulg7tgxldeb40kl6h1dsacirb3a9dxurxz3m4071xbpqo0sfuoe5rlq40wz5jlkfoiy1ybx6mur5cqutpdd429vvjqg0vuc4f225u6qolz7dkbtkitix159ga\", \"lkiranr6tgi4aw4dy8mrz1ysxi3wmiynhqrdpp5ctq7wf38ew3a63mr6i25g2axp57zxj3wvax4egwayn0fckfo8txdh8mz4a5xb7ac1l68q0njcub0uheg2w4zuk16cvnji7a5stosd0g9m3hynw800vemwtsegca2alnz6r7gv9q6rqpls7k2j5v\", \"3hpj63d1atri4400ynsyooe1qxgwpbld3pkvti25o4k5rdmalosznqgtp7s1q3eb15pzsv4p0x3kwg6xrwjnjuz7ko8kufultykbvciycwil9mke5fjk69t3wlanym296vtfm3pv60by79vo3k2wr4lulldk02dxpxk3yyw9yaocrq\" ],\n    \"countryOrigin\" : \"d5xaf0jps5cs8rtgdilpvafxt5s8oe93kru0xmrjjwrplzga06itnb735ok4bf9\",\n    \"id\" : \"25x1\",\n    \"countryOriginAlt\" : \"frj9z05miwjk2u4hgruyhq6j2n1xkhqo5q6dbsk76pyqafhn72rcwc85zcwhfic3aeguasnw61jcud00zp02hz9dwhb52qp9udf2aov934ogbo9xkgjc4dlsyuhajtfrm87kpccf8xk7d\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb819b92-2c20-429f-bb5e-213cfd56f487",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.560638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor",
          "schema" : {
            "description" : "Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)",
            "properties" : {
              "FirstLastNameDiasporaedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
              },
              "FirstLastNameGenderedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
              },
              "FirstLastNameOriginedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
              },
              "id" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "CorridorOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "84878791-95fe-4b4d-b069-2a313d31cbfa",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "84878791-95fe-4b4d-b069-2a313d31cbfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.5596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "bcd8d491-eae6-468d-9f46-18c3e082f0e4",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bcd8d491-eae6-468d-9f46-18c3e082f0e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.559564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "b89039c6-7af8-43ad-ad71-56aa50241382",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b89039c6-7af8-43ad-ad71-56aa50241382",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.559548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "ca6d66c8-74ca-45b0-a3e4-5cd751563ce2",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 3.7226959479179604E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"52om\",\n    \"script\" : \"c3b5gsapxk19yhxvkis0byz27eiwbtxz1atmy8\"\n  }, {\n    \"score\" : 4.727536491320204E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"ya08\",\n    \"script\" : \"3c1xo5o5rxfcuvm1qrzufhw91dye2a74x4k9sfr4mtly3gx14azqbtbt8oqj8zek37rrp737y6b8mf9m3mt6mm0s20f1d2kjx2pmr1iymk63e6dl90kq4qm93wvcy9hizbmrxg158q9a0njk5fwx4uezzp6raxc72tbace7t38jv439t7zq0iu4w\"\n  }, {\n    \"score\" : 4.0388080504933766E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"mcs6\",\n    \"script\" : \"5feye0xijkkr26qddhgtaj86d4\"\n  }, {\n    \"score\" : 8.491315744575754E306,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"3ojf\",\n    \"script\" : \"8gj4w2mhvmtce3arl65552omkm0de9lfe0gdfd7dxj2213eow2vgjib6xb9m6qr4xol7gqwxzaw17qxo60sxhd646glxjw0u7yat0\"\n  }, {\n    \"score\" : 1.3634429136602946E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"qc92\",\n    \"script\" : \"k8api1tj610uup2qfuqykph3wxs2gq347mok8d6vehiwksvroom4e6tzivxq6833fczu3clv3vxrjz35rw5p\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca6d66c8-74ca-45b0-a3e4-5cd751563ce2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.559521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "576d2267-1dbb-4a6f-8706-386ce47c053d",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/0v5x0uxdvct6k2fqy6c5u/e3mk0xecjn55k29nyiq2j8n8fjpss1wgfpcizfhvfzh5qgcnr927v7j3zj41byw217un0chgthg0fhx57/Dillon+Walsh+II",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "576d2267-1dbb-4a6f-8706-386ce47c053d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.558953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "c20d5307-e91c-4c25-a905-f68627b6d4fb",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/e4v2z1wvwhe1wku0jlh7uhqjmdr3pk955u19hgzaj6ddvjx7b5cj44xw7t2cy71l6imr4c/c8wjxqq6dlg2srfqhwnz3neik97n1gnxb1k2xv2n6jv02d5ut57n8zfg9c4y5llm1rtj3a56n4zhe14ua4jighpabbd62uqxu1z9qyf4kmatxoc1wbhxzr/Ms.+Bea+Kilback",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c20d5307-e91c-4c25-a905-f68627b6d4fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.558874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "65ab00c0-5dab-4843-8a0a-46d8b5bd6703",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/fjdg1kwudb2tndji4saj2nowteixx4/mxyh6setl6d24q3lle36qts51zgpwdhm7z0lpog686r2zbwf7o9hn0daksfekr12bpfvk6w0qqo9271ie7jzsj2yh5m0aendxn5wp77qbfjnh3had5t7ba80wcf7jfywepgiivodw15s8ec54ga/Viola+Frami",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.3405504714226455E308,\n  \"matchStatus\" : \"Match\",\n  \"id\" : \"5bi0\",\n  \"script\" : \"gk490lu5l97oy3fsrz5r96llzprv8toqs5g1epjny2qx3adkwqa0p7ti323k80aiojvsfzrf5hc6qmkbb7cm6t2mx45iuqi8fi5etqa586q31uikggmudsoilh07vexqehlb7bhgv140hn18isiq3xse5jdq4gxh120k90vl7elyvwhnemygaz5hikofntco\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65ab00c0-5dab-4843-8a0a-46d8b5bd6703",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.558777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "252ad9e8-463b-424a-9ebb-72d6ff61d914",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/bbsjdtsapmlob5o4n2xgco72rsp0vjo99l59eozk692uyqnkn58nwlg1p7gipw1k7ifjvwzcrsohdconf910epccp4q3/7p42lb2xxi7q6f1oydp31ozakt225yhx5eo1mg6no7nb4heuhqqwzqfp5c06u6n5kou4ecp0tot764o82nu3b9g8fsnqijlh9phlaq5m4kll5tatj/Non-binary",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "252ad9e8-463b-424a-9ebb-72d6ff61d914",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.558501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "4ecefe62-39ed-430e-90f0-32d84d8c755e",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/dyi9ag1pqo7le6kmz11tivc23egw50raauccn9lgjiyodke0ovms64n850j5f3lm/psfl0/Bigender",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4ecefe62-39ed-430e-90f0-32d84d8c755e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.55843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "af1ef52c-be23-4bc6-8658-b593cf1accb3",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/i22vp2ff40iiukpcctrczf7rih9c974s6uglrp6c1l7ck5ufxfmvh6pm7c6alpawj72/eq9dd2us0k8q/Non-binary",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Francene\",\n  \"lastName\" : \"Glover\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 4.750191690183377E307,\n    \"candidateName\" : \"2022-06-20T08:01:14.557939Z\",\n    \"probability\" : 9.169991024268845E307,\n    \"predScoreFamilyName\" : 1.7283775297260757E308\n  }, {\n    \"predScoreGivenName\" : 1.1854002860679763E308,\n    \"candidateName\" : \"2023-02-27T07:36:14.55798Z\",\n    \"probability\" : 1.315176502159322E308,\n    \"predScoreFamilyName\" : 1.6684034422613997E308\n  }, {\n    \"predScoreGivenName\" : 6.422262788367093E307,\n    \"candidateName\" : \"2022-05-09T07:55:14.558021Z\",\n    \"probability\" : 1.5066121467235784E308,\n    \"predScoreFamilyName\" : 1.783787985419377E308\n  }, {\n    \"predScoreGivenName\" : 5.81080549414496E307,\n    \"candidateName\" : \"2022-09-30T06:39:14.558064Z\",\n    \"probability\" : 3.613827364575286E305,\n    \"predScoreFamilyName\" : 9.539241637967207E307\n  }, {\n    \"predScoreGivenName\" : 3.2975079436296296E307,\n    \"candidateName\" : \"2023-02-18T07:40:14.558105Z\",\n    \"probability\" : 2.8163635783970766E307,\n    \"predScoreFamilyName\" : 1.5282109136884818E308\n  } ],\n  \"orderOption\" : \"46b8hbiorxk3f5webb54e8sel84aptcna0fc10nrpkcm00syolj9qndmvhobe19znljqhmr68vvfmiqwrzidki\",\n  \"id\" : \"mf59\",\n  \"script\" : \"g6dk9bah2cgc09wh9t6wcrmecyg10lefzqsjwpdk2h9sb9fxn0qnwfblsnquvfqo0pivbwns9rwqzt6n4osxn2abay66a00xz0lwqkru29gedrwgdn46oq9hcx6j4oguz2keu3q5yd14ou6srjru8m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af1ef52c-be23-4bc6-8658-b593cf1accb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.558361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "4cf0a302-1daa-4090-b9df-30b18f574813",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4cf0a302-1daa-4090-b9df-30b18f574813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.557848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "68e88c03-6149-459e-b960-2bb080e826be",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "68e88c03-6149-459e-b960-2bb080e826be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.557833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "b52dbba4-86a7-4fb0-b083-fad16e8e8a52",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b52dbba4-86a7-4fb0-b083-fad16e8e8a52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.557816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "24f9a05f-3be8-4a55-8397-f3ef2e32855c",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Chante\",\n    \"lastName\" : \"Fritsch\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.976452139730104E306,\n      \"candidateName\" : \"2023-02-08T09:12:14.557111Z\",\n      \"probability\" : 8.48123105656923E307,\n      \"predScoreFamilyName\" : 1.1089051138286448E308\n    }, {\n      \"predScoreGivenName\" : 1.4124869099414161E308,\n      \"candidateName\" : \"2022-06-04T08:01:14.557154Z\",\n      \"probability\" : 6.810145180046726E307,\n      \"predScoreFamilyName\" : 1.8493511161911695E307\n    }, {\n      \"predScoreGivenName\" : 1.6815369281601242E308,\n      \"candidateName\" : \"2022-04-23T08:02:14.5572Z\",\n      \"probability\" : 7.622675464945283E307,\n      \"predScoreFamilyName\" : 1.7471526698081904E308\n    } ],\n    \"orderOption\" : \"unn\",\n    \"id\" : \"j2l4\",\n    \"script\" : \"a59zzhy6c8s759l4f1h3k22xd0z\"\n  }, {\n    \"firstName\" : \"Daphine\",\n    \"lastName\" : \"Stamm\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 3.2446118950845177E307,\n      \"candidateName\" : \"2023-02-05T08:38:14.557393Z\",\n      \"probability\" : 1.3971447938102601E307,\n      \"predScoreFamilyName\" : 1.5311421409427868E308\n    }, {\n      \"predScoreGivenName\" : 1.4514292520438069E308,\n      \"candidateName\" : \"2022-09-05T07:42:14.557436Z\",\n      \"probability\" : 8.629090375939294E307,\n      \"predScoreFamilyName\" : 1.036284428624538E307\n    }, {\n      \"predScoreGivenName\" : 4.898125312094695E307,\n      \"candidateName\" : \"2022-12-29T05:48:14.557477Z\",\n      \"probability\" : 1.5541185466004086E308,\n      \"predScoreFamilyName\" : 1.12384245877281E308\n    }, {\n      \"predScoreGivenName\" : 6.962672116970321E307,\n      \"candidateName\" : \"2023-02-03T08:42:14.557519Z\",\n      \"probability\" : 1.6479054270609496E308,\n      \"predScoreFamilyName\" : 1.307871966502092E308\n    }, {\n      \"predScoreGivenName\" : 1.7930981494087643E308,\n      \"candidateName\" : \"2022-04-27T07:08:14.557562Z\",\n      \"probability\" : 1.199555902751669E307,\n      \"predScoreFamilyName\" : 1.0302735596993951E308\n    }, {\n      \"predScoreGivenName\" : 1.7170191667475952E308,\n      \"candidateName\" : \"2023-03-16T07:41:14.557606Z\",\n      \"probability\" : 6.965628596577116E307,\n      \"predScoreFamilyName\" : 3.340820079300483E307\n    } ],\n    \"orderOption\" : \"yips9w3yh4sq9hys6ilk0vlnp30y55xhii8ih50d1yrong2oonbrsmwdn45ph8shi3xyls16ka652qunodshha46cd21\",\n    \"id\" : \"4to4\",\n    \"script\" : \"wtnrjkd0i\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24f9a05f-3be8-4a55-8397-f3ef2e32855c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.557789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "d4297c12-7001-43e8-bd3e-89bd8d2b84d4",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d4297c12-7001-43e8-bd3e-89bd8d2b84d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.557011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "922dbc35-4c80-48ae-b3ed-9348915aeebc",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "922dbc35-4c80-48ae-b3ed-9348915aeebc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.556995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "b29dbd16-9fe3-4c11-a370-cf80455ff670",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b29dbd16-9fe3-4c11-a370-cf80455ff670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.556978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "6e091fa0-99bb-4025-a499-b947d3230814",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Donny\",\n    \"lastName\" : \"Bernier\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.122278085972702E308,\n      \"candidateName\" : \"2023-01-13T08:31:14.55646Z\",\n      \"probability\" : 1.2042856199248465E308,\n      \"predScoreFamilyName\" : 1.6680022616302344E308\n    }, {\n      \"predScoreGivenName\" : 1.1889241589383461E308,\n      \"candidateName\" : \"2022-05-12T06:35:14.556548Z\",\n      \"probability\" : 9.114840859535846E307,\n      \"predScoreFamilyName\" : 8.036732371603121E307\n    }, {\n      \"predScoreGivenName\" : 8.014434670179747E305,\n      \"candidateName\" : \"2023-01-03T08:41:14.556592Z\",\n      \"probability\" : 1.4195396168133322E308,\n      \"predScoreFamilyName\" : 1.7363056046610356E307\n    }, {\n      \"predScoreGivenName\" : 6.707282985477603E307,\n      \"candidateName\" : \"2023-01-19T06:37:14.556636Z\",\n      \"probability\" : 8.37327587358051E307,\n      \"predScoreFamilyName\" : 6.316324442838558E307\n    }, {\n      \"predScoreGivenName\" : 8.89550378861043E307,\n      \"candidateName\" : \"2022-08-24T07:35:14.556677Z\",\n      \"probability\" : 1.7958229122332286E308,\n      \"predScoreFamilyName\" : 1.1225682406717547E308\n    }, {\n      \"predScoreGivenName\" : 1.3900379737150038E308,\n      \"candidateName\" : \"2022-08-31T06:42:14.556718Z\",\n      \"probability\" : 1.3409666693943482E308,\n      \"predScoreFamilyName\" : 9.735429871906649E307\n    }, {\n      \"predScoreGivenName\" : 4.662885237338677E307,\n      \"candidateName\" : \"2023-02-14T07:32:14.556759Z\",\n      \"probability\" : 3.001169840450994E307,\n      \"predScoreFamilyName\" : 1.0431306129039567E308\n    } ],\n    \"orderOption\" : \"h8vpemxg45oql9y20vih9g6w9ytxukd0c2alfjrnwadyn9qinoolajdn3zfiays0jng5ogiqlc2ki9xjgusm43vklew21eknsjhd5c45pdf7qp39txwys\",\n    \"id\" : \"9134\",\n    \"script\" : \"pbh498dblujtpwdjc5qv9f9cs2zp9ue9qp266wrtac5att425zvdcxjxqnitf73ytky6sobiadbu47bduw137drob4ztev1qsl76wkq\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e091fa0-99bb-4025-a499-b947d3230814",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.556951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "322c6b61-52a3-4584-9565-4f828b1af08f",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/70uebfl4zzpbi1o7k9p792h92mq01mhhb9sjt96dhagnzyg0g5fiiio9i94m3hzp0ypa2f8kgpi884jsjorpc/1laceet9vt4wqrygevyzd7xtl4xbdkqrd9hqrhx5et5hpbhay0xj1uwgj",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "322c6b61-52a3-4584-9565-4f828b1af08f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.556354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "099ededf-58f7-4059-9c72-90905cc55dd6",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/1bnzo9ay28ojkvbganus90ltlftx12nt3w27hnouagi0zu0ohs413lj456a2lbeez6badpc4oj3apnhfs880it12vx/ifl4ra0icukj82nqowoojrerwx6n36lz03v6335glcc0guqwwio0q23or",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "099ededf-58f7-4059-9c72-90905cc55dd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.556314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "d7a70ce6-fd35-4978-a855-f516ff84efa3",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/mkib8m0pvh0gmi4z5httcn1lxoc5u7ad1ji8u3fpra00wir4a0v2ix6473az0ica5yjypzr30wia7xdkhs0dygr74p4tpbm6z95wvud5m8613plw1fkvcjbfj3m6x11gapo2avhl0h7h/az8x81njlkbec919irutyamdvw512rlmdafhz9ps5whq3rhgl87qh637yybhqyf6li782y2cvlsweg9738hjee0j1d0ftu9gajttx2xrg9oaaofl4b5p0iq7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Karisa\",\n  \"lastName\" : \"Wolf\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 4.762285445002867E307,\n    \"candidateName\" : \"2023-03-01T07:44:14.556003Z\",\n    \"probability\" : 1.6147721573329383E308,\n    \"predScoreFamilyName\" : 7.159134223937055E307\n  } ],\n  \"orderOption\" : \"2yg96zgnuigbip5qh9x00jxtiy0d4vf2lvjn7nluk2de5s0k1epgj6txttmd98waqg5z4ul3pniws2131ocdrxpjqex7ghjq1x050zag2a1isoaxdtghwt9w4q1pxsvi3ulhj22lrl\",\n  \"id\" : \"3nn6\",\n  \"script\" : \"8holzkfz26716du995wmg6ndn65pemc3yf9dfe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7a70ce6-fd35-4978-a855-f516ff84efa3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.55626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "0f49da98-da8c-49f1-a60e-391cfca61464",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0f49da98-da8c-49f1-a60e-391cfca61464",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.555889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "a5e701a4-82e8-4d36-8311-76b4804f87bc",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a5e701a4-82e8-4d36-8311-76b4804f87bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.555872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "ac7abf00-bfee-4cbe-8d4c-d91458e97dbd",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 400",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ac7abf00-bfee-4cbe-8d4c-d91458e97dbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.555855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "2d18caee-e29a-4f00-88d5-d1f51141f121",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"castegroup\" : \"qnuflb1bxaotgj6igg9v9ccyozjx189r5zw0gk042cpn5g38y704dhpm86mi1v4z01yibpsp3500oeifq961w7phrtdorekz1lwyhalu9ww871nkfc21wc0iw1wygnrlvvf40czomjeu7mm6hdsehb2pbmyqw4nbv6b0q92a439owkr9pr229wfbd4\",\n    \"castegroupTop\" : [ \"9ixlmraomo5818izy8sluvt05yobs26u9r3t4lb4eehzkkwz9axq5y1prd3gnfyfpjtd1iwi8odzfvjtsp2322vdaqbhgx55fc5naul14h2\", \"faocmzab1u90u46bxno13aoklmqhnf9o4zgjoy98oykhzhxtids9g8ycluhgclsnq40ogkfo67kbwytbcumnpnal6umc6pmlwuwt\", \"ku99f3krvffev2dd4spqhxt7d0hxipogjoa12m\", \"l0o945xwidrlu7uzy5z8y2jp62ennnygto1wu1n4g9i0owktjl3abx9k065e3z6bkxfyxfdsx7eczkrl0xlq8ssaaoorikh05xeg0k\", \"gv6m3h5etc4qtty2xjmjj7xbza9get9cccdg4ouj0p0\", \"vqgetzv82uo2x3okcfd6xgy7ap11xetrho49lknqjrq1m6wh5fq1f8k9zz4j4vgvffkeih1hp7x24qiv3uyg7z15ipfpigq5\", \"w8dfyaa9lltv3mhjj01i2nk3awzeg1cvozfzzgcoh0gudjlv6o2gby4rb0r004s8r1owl9em46f8oxz6tdfrvyy7e6178lkeft7koid7u0ll1jfx8f5mq\" ],\n    \"score\" : 82.12288750696136,\n    \"probabilityCalibrated\" : 0.30255494109275016,\n    \"name\" : \"Ms. Marnie Strosin\",\n    \"probabilityAltCalibrated\" : -0.9420912912761166,\n    \"id\" : \"mc94\",\n    \"castegroupAlt\" : \"3ptcoqopay8m0\",\n    \"script\" : \"kvxqkurg6jenocfe1dc9kltoctnt\"\n  }, {\n    \"castegroup\" : \"di76jn6gvm9c4vx5ny6d8owh5b9uqwgposnihwmu0ub4mm7c4af8tbsj1ghyksep4k2slzrsbfrqs93zt7md2mfitk1fi55sanjbs7ym9z0n81dfpu1yjwmnl51ouecmxx9r4cuftvv1wwyvopinwa4aa9tde8cue2v0rvnww7xea9dcrhfmxjduwq4q4q79oiyeznh9\",\n    \"castegroupTop\" : [ \"5dh2otzkj5qu59xkx1v8wd6swj67x6pvyj0sl7clbzwvmjkqhfbo41xfetrv0z1pbp6nl9r7wumow8pk4j8ctzcyryft9jdkk0nsfpzoe2orqmtdh1qjn96d8eo6sw4vyr32td8r6shknyyow9ka1dr0c6e8d8cogaxyiierseic0oqne0rk5srkjx\" ],\n    \"score\" : 60.99197847443216,\n    \"probabilityCalibrated\" : 0.7915409165129355,\n    \"name\" : \"Royal Jones\",\n    \"probabilityAltCalibrated\" : -0.9973557060460443,\n    \"id\" : \"urm2\",\n    \"castegroupAlt\" : \"7ka0dk7x75gw5kd4d9acg9rpsou0iqtw9z4i11qf7ft4287gbgti2vyd\",\n    \"script\" : \"rzcykgpnd1kdt0zvpi12jbuzze7ebb0bezv1mcxeerolbe34v7fuxvm0n8ytp81kgasfzmbejtyxyzamuecj7w7o2hamt60lcm7grfk685s3c0ladn10m6pnq4603\"\n  }, {\n    \"castegroup\" : \"5aa3gbdph5e9te7gdtm7mwd0s307plq9ad1kfyhd0gn70r75ey9k4v\",\n    \"castegroupTop\" : [ \"0pws4knjfefbs50bhe95o85dtaxqww8lci2wnbqyh87e09mqqjn1fplpuxfmj3myazh2n05d29psf49h43n66yz6w068mia4oipa59za73dhop07\", \"j6ewpr65doc07amvc295uzb5bv81d9ps8ez1nx1nqnptun4p2rq\", \"7pt3v4lw7japmzjk45o\", \"wipbwry0shjaw6tq3gudv9379pjikulxianwftrx3qalj3nl4ly9w33ul4j8wgmnnn6wo4f8e840h7f7ymppdkdaor3wx21n70yxekvqdgjq2pb215f5p00nwlf9ylnoayrxdpnyku520ub7pnh9ko9kvjcab4zf8lei28e5vmhi1g9w6sphbvcdfhch5vfntsu20gx\", \"2gnei8patjzhmpjn727oidssrhyz7hrn2qfzki6pyii417t0sfnma0g30n0qtqdfo3bgvyzyt6lj3xrcc1v622i4xy0v35otbnhcwwn2erjcbitg7p8k6l9crpisatyooktp7wdgi4xauavneq9o5s1lh2lkaqmom0cx0zbd3umk8tp9oyvq4bqb0exqz9nedr\" ],\n    \"score\" : 31.620451307889,\n    \"probabilityCalibrated\" : -0.7389495580235199,\n    \"name\" : \"Hae Graham\",\n    \"probabilityAltCalibrated\" : -0.5329903698669822,\n    \"id\" : \"0838\",\n    \"castegroupAlt\" : \"vlybyy1avrb5giq2uzit9m3p0piysbbibpx0w5usa59ee3jj9vib76oxzwsrth6qf5uu7n90oar1z2xvdym6ci9xdwrsug2r8snhfr41dyuith2lihv5pmx9colxrjevl86\",\n    \"script\" : \"ink9slx1q7932fe86w8moty3t15x876mzr28o902a6cd\"\n  }, {\n    \"castegroup\" : \"us3e2us03464cvqpalin40m6ohblvpx\",\n    \"castegroupTop\" : [ \"bpqsu7nlqvzzao92thd1zso\" ],\n    \"score\" : 33.085910090875394,\n    \"probabilityCalibrated\" : -0.4272802022139397,\n    \"name\" : \"Cami Zboncak\",\n    \"probabilityAltCalibrated\" : 0.5678495106051211,\n    \"id\" : \"29k2\",\n    \"castegroupAlt\" : \"f48ta7slgypyltw4dy00jsqhn4ugjr3fdvv9ngx5cbwcnqle63kpp78klkhngacxjnqzsdxgthghysaoiuzq9wvp39g8xsvwyxqhc3tb5krzcao61\",\n    \"script\" : \"4tuupex5rizq0xsgsaqu3wzs9eqm9c5gl7di1j752twwnb940od6wobnxdsyiumvphggnwj4dldakewj2f6sovgf4398kztdkrjeu65w0h60ou3ckdjvrwoml8kcrow2f1d33o0f4r07nocu3\"\n  }, {\n    \"castegroup\" : \"k4q07lnp83quevl9wu70qzdfpt6s9v2t2cnvnt0lgajhxw5lpu2rtjh5694rvhgbj5gb3jdnvnxu7wvrixxdn0h4hdvr5\",\n    \"castegroupTop\" : [ \"aj5zzv4cuqfor76o0ilvpbkqaokxbi1yyjsovmevkegipg32morh0tw326knwto5ri3xpf5rs0ywqqxarysxavmzv8ci613cpyzc47ok6vh69b1p7xrozeb\" ],\n    \"score\" : 87.28794730601253,\n    \"probabilityCalibrated\" : -0.17561013150071525,\n    \"name\" : \"Dr. Edra Roberts\",\n    \"probabilityAltCalibrated\" : 0.7224799954872978,\n    \"id\" : \"ua03\",\n    \"castegroupAlt\" : \"ds7ev88lz920ux6dp0qijyw2oprbtk0opmpn1qoc5vngv73800zada7y82av1h6a46fg55r7crlezjgdtvbds1rxnzpb3pq782hps9prs9sk3xc0sutxw08fhrn6uzck4jkemrej9dt1uql0arhxtad060og3ws14\",\n    \"script\" : \"h0y2skipqlw6dnjp185gk5z2pcyymcq5m368ebarsvd4mq3wdck1ekjwe1uae8b66z4ag2dr2suy4czhzyv\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d18caee-e29a-4f00-88d5-d1f51141f121",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.555822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Caste group-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameCastegroupOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameCastegroupOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "4bc1b65e-ca95-4a9a-be66-c424fb047072",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/ph80kcf09qe87ypua9m2g2nzagh7yiktlsmey2qpmqlgbarhjvlx78r99hda3lzn52uyth3sjgf8ttdyruqpn53lv7i7ngotenn6plvcnbnnlxhdt5klz5rukrya3v97jmhluuo1vtpbackvqx43e1it1kgnzec5gkxe30n8lf2all3wk6ptbfmwkvauqab0tp7n98hw/hs0yc9jcaxppsjxm6wkq91124sl1i6zu22wvsz7eystnztnk1bdg5ho7linly6cgw8avsbysltb5y6zi8thsjxt7f3rvqfwggriswb6eaoxkr402ii6ebv91iwjw08bda33k9pbxz05shof8c5e65",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4bc1b65e-ca95-4a9a-be66-c424fb047072",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.554747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "857dc7b2-8966-4030-999b-782d3892141a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/nvmqqhxfeb9880is46r4a3keju8wnfk166g4p4mlc19ce2wd5xvh3734als0g3s334v61stowx2i99ikyhu2izjx1mrhu2phizixp8i9ztwa2i4y7nvhs0grlqhdvlw3elpd6gzjy6w0j3dedflj9k9vitay3rcvtzdunoe7rzw8nu6/exqw9mw0i9f56fxeu8mpz85ihfpnlexm60yc091o77hs36wg62ip8lkocuacfey209xhzx1b0on098090oe8fprqciwddqtx",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "857dc7b2-8966-4030-999b-782d3892141a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.554701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "a5cd7c9b-1574-461f-9f00-4f0fa97b4dd4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/26a3uf4i4t4hr13ww2ct8fhhnwimvuvjg/fge4keelwet48p15fx2sicno2v4w6sz2ams6qkzj2h5tez3vu9grgkfh0rwxhb3da26bae1glmxbbmrg7aocxpoe6z6t5ovmmw09mx7j23n1j7kqjutwh6c5nogchpepi7mbnzelced9sdyi56414gmf7n",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"castegroup\" : \"q9zvh2ij7xr\",\n  \"castegroupTop\" : [ \"0utatfme5xtpr313fdxig39h8vl5869kkzbi7h2howgc4crw0eh4ig9z04b4\", \"quzmh4nyav85djxi\", \"nw7hf6pxi558sx0r4p00tyzn1iimzf58vwyoiiqsylsax5882lmki6dfidzmtt9vcjxmd478igs14ts2k0rytox61pg8q0r5t4kktmafdy6wdls5v0bto3xf9ncpr1be7bldfu92vk\" ],\n  \"score\" : 10.95468786731988,\n  \"probabilityCalibrated\" : -0.43762196304768985,\n  \"name\" : \"Lemuel Bernhard\",\n  \"probabilityAltCalibrated\" : -0.8273203188572982,\n  \"id\" : \"ov0k\",\n  \"castegroupAlt\" : \"w42yel0u8ldqo0dgxq89syxorxlcdj0nje5rh4mdxoookg80qrc11y5o3x1wljed4a1j9m2ieulzgiaqgj6uacin4hd3yrp1r8f6ltwdhmpawoj817ot9gqfjelwdl1as2mxarzz\",\n  \"script\" : \"fxas9iq1ip86fh6au8w7vfz5vb0geyn02fcceqza1cosz8apqo5ezv375f4t7myr52syjivfamznhn916f6cfg0juv00k1idpu66i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5cd7c9b-1574-461f-9f00-4f0fa97b4dd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.554634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull",
          "schema" : {
            "description" : "Caste group-coded names",
            "properties" : {
              "castegroup" : {
                "description" : "Most likely caste group",
                "type" : "string"
              },
              "castegroupAlt" : {
                "description" : "Second best alternative : caste group ",
                "type" : "string"
              },
              "castegroupTop" : {
                "description" : "List caste group (top 10)",
                "items" : {
                  "description" : "List caste group (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameCastegroupOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "0f9c6a44-babd-41b1-8dbc-7a54d4af9058",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0f9c6a44-babd-41b1-8dbc-7a54d4af9058",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.554119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate"
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "9949bef7-a91a-428a-9054-6ac720116285",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rowHeaders\" : [ \"umlb5k25cim5mlygrnlwx78nd5e3gzz6uvdn0tjgjxjvhhf0vezd8htxq2n27tgafo26xp7200x997kdquk25hlcrlso8azw18gza6uba8ivcpqp8zstnrq4rq9n33sogsfvm3pkek\", \"3xfnhm37qdugz4509r6n22znz2hrw75x47ajw67fjppkliwplmz2g61lot8maeywxlf4gkmibseb5308q0wgo2mxgzouplqp84tkaf4vr71wvqhg4dwu01s15lk7o5g4ascuyre7vdmh0jun3d7sksr197g1f5x0flgyek\", \"v63jw3ci6cytmz5nh03lcn2djl7kixhvmr\", \"ivw8b96818zcsjhofprzl4jwa4njo1d1xftq9zp8qnkkcqwqqf8vzyivyhmprcb2tr6xpxem5ar7mrvjtjjmsiupuod4sgzs4b0i0olp3nfncyu3448pbwjbnbj35ihi0ypr4nki40ztld85j7zmh5g04scu9gspaafd8mdhnehxe2u9h88\", \"xq2iqs55nt8h2glw9swocm0qi5uv7zp089\" ],\n  \"data\" : [ [ 1666548018, 554911887, 684413915 ], [ 1412379006, 2120359073, 1012453682, 1240751730, 1532996353, 660016967, 502452940, 1184786170 ], [ 913197137, 137710635, 509273890, 1224204112, 1816218195, 1263044767 ], [ 1281262186, 404544297, 893584734 ] ],\n  \"historyTruncated\" : false,\n  \"colHeaders\" : [ \"awkehsdp2oih1062xgcozivcrtyzw51apoe2axirgkplhflf08zwo38rymemgsgjlok8rhgiwgsdawh6lt09krupzid7z8949vpg6mdk4s7rtoyhkbagu7b9rwe4vpqngmxh86imx4fz17r25bd8mmhfislplz5\", \"bop7jwbkcslmpk3jt3dk9pks24fsla105wv7vzjhn9ofen094i83edq5a8ukunfmyiszpxf64x2j3qvj5w7771ivsl5uwko27dntp1cr5c0o7rgznais4tt79qxyz3194fg2wbibbxwdbdmeosiv52j8p9nswch6p27ilntfulwtut2mqmpi7jfv8kyk6px\", \"byjsmafba1fyp68jcab1r6wufauz7s3se4fogir4nygkn5n7r8jn7yfcrs5n8l8tasf6q4783ern93j2l7edknkmnvxfomwqfu150t3dtdll39zrn9wa3tsw7v1gip346ulh18mwhzddyj1rbwy28j59v828nuw3lke2qquhycvfm8sybi3pqlgm4yv53wtfq0c\", \"oq32oycowwjd0q8hrzhikv7lgyxpeet6vjeqbj82qauc4hu8yac95vx2q1re1slt4mf5cck2uwq6rphx96tgrr0hhyujl5rsvv4qbm4m89uopgvb9lmwp9dz1836b9z4vmkdw133qxa5bknk7hd4v13kxznnuujv642bskppuoi6sav2\", \"82e7vja5hqgoe4sz8p26ndv8zsnoer0od3g19rk6b53geue79f05txxsotfuoian772sgcoukl2hb6fl67b8i3nsetuctfli7z93412bs6vhqqdeaxpe1wbvdwpe64pqpv3koiv5704aqw25jgliefb11\", \"c1vkqyiazrycekkp0652q\", \"xa0hyzdkvim6r6xmq1g3r7zwt9zcxaeqqqofgz7wr6jckmcv2g4abc6kibp45mjdrrdz4zw02cq8skbdifb0rbp\" ],\n  \"totalUsage\" : 4219255005850046842,\n  \"periodStart\" : 3987206985569350986,\n  \"periodEnd\" : 2095809167216614351,\n  \"timeUnit\" : \"2022-10-21T05:51:14.553948Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9949bef7-a91a-428a-9054-6ac720116285",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.554089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate",
          "schema" : {
            "properties" : {
              "colHeaders" : {
                "description" : "apiServices as column headers ",
                "items" : {
                  "description" : "apiServices as column headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "data" : {
                "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                "items" : {
                  "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                  "items" : {
                    "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "historyTruncated" : {
                "description" : "If the history was truncaded due to data limit",
                "type" : "boolean"
              },
              "periodEnd" : {
                "description" : "End datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "periodStart" : {
                "description" : "Start datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "rowHeaders" : {
                "description" : "dates as row headers ",
                "items" : {
                  "description" : "dates as row headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timeUnit" : {
                "description" : "Time unit is DAY, WEEK or MONTH depending on prior usage",
                "type" : "string"
              },
              "totalUsage" : {
                "description" : "Total usage in the current period",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageAggregatedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "dfaf4dae-2c4a-486e-a849-5f1eb2be7844",
    "name" : "Print historical API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dfaf4dae-2c4a-486e-a849-5f1eb2be7844",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.553701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory"
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "a7d7252f-fd88-47f2-86ee-9df863a2203b",
    "name" : "Print historical API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"detailedUsage\" : [ {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"dxrnfy2g1t12kblcev5vbh3x8q9osog5gyr6x8yndpnl3kql8xtc297mkifnp7iq2jstzw4a26y1blajrhdvsyj8j9ga57opognhqqfg88fzwaglpwf9wraipwmco1jn2pe5k4vpibmjm2d\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : true,\n      \"disabled\" : false,\n      \"userId\" : \"633d\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"3yjhtkfl1rxm9dsxxfwps140n9bi2pdhksjci7nxty4r7ml5xsg5n4ptw7dsob6nfwh2so3t8p4vbz66l\",\n    \"createdDateTime\" : 7283288032432006362,\n    \"lastFlushedDateTime\" : 8346206477505698175,\n    \"totalUsage\" : 1880446735361428896,\n    \"hostAddress\" : \"eihmxad34y9mkswys7ud6xintq19z51zqmq66xxe\",\n    \"lastUsedDateTime\" : 5044058350644019574\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"aueu2nipzxah4431zqsncxf0f0x\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : true,\n      \"disabled\" : false,\n      \"userId\" : \"1831\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"df9jtfngm59a42cjv3ul14qskie80f7bz3ljyjzl0e39zf0uimkmb8tftb8myza8o2qfii7bm4byx6y3j2u21fz2dab7t5\",\n    \"createdDateTime\" : 660102037647474189,\n    \"lastFlushedDateTime\" : 3580690949529297990,\n    \"totalUsage\" : 7663273206154032042,\n    \"hostAddress\" : \"opvj0b4vuruy1k8r1k3t5sjspvtvinpk25p5yricvz9ahy7cyme2iuatdpw166ew3uhm6rp2666qd90cz0s57p6idib1arxlllqkpfmjhjtfkp0v0htts2q7f4nspjooq5d0m3dqzzep6yzdx9\",\n    \"lastUsedDateTime\" : 2099327252739634414\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"aq2rp2vatjuf2dx6amc4j52eqjcs4vh2aum2140pb203mx362n7fjajhtaaq8x400mxtd1e48fj1e1zbjjrgbsmxdxbppc1dcbvqvdf7lhqphp7\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : true,\n      \"disabled\" : true,\n      \"userId\" : \"k75s\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"ndmfheyqpud0yo98f4nwfodxhm89j0o0zl11dhvy4lmljlzn47idw5s5mzfie3516x6a4vqfb1i4o20ja1audg8wgb6sibw2rldtl6b16mtepvlt0gl80yk9kalshore7hqqax7j8orsqfhxy9cdsdwpi465qzsmqs8tit\",\n    \"createdDateTime\" : 4981391654489956785,\n    \"lastFlushedDateTime\" : 3750066814633226814,\n    \"totalUsage\" : 2850077988224857636,\n    \"hostAddress\" : \"1f78eqfn8c164qayirpvg1a40nrh5g7fufj2dq7x4q9grtpaqf1f0fjcxu5vse926kvac04izb\",\n    \"lastUsedDateTime\" : 8644906967940683664\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"390uflc1hifrnxs7a6u22182ikh\",\n      \"partner\" : true,\n      \"corporate\" : false,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"zn1m\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"5b34pcljd0oawbznhm9x95c3r3nf58nbwqzod7m5jruxx3ukhqt43k67sp9ycfw2i83fv3ayqi0azm1nbnaf431qf6de6zjxxy630lefvmnhewuqnis10m3rl13ew456wj1tze5lkaa4bxn7aqosioav3rofxy33uznw1k9vemlxit1pm\",\n    \"createdDateTime\" : 8068574480994526571,\n    \"lastFlushedDateTime\" : 236382176443902703,\n    \"totalUsage\" : 6820483003092296696,\n    \"hostAddress\" : \"ci3mr0d7awdg09nqlqv5o1864zho7hbe46qtpplttpwuxt5a6m4evx4qkbj2qmurn7a3upbxctu56p603ygb2n1bqjy6yzqx7erpd5u7pnnw6m2i0pnjujlw4shpwaf4m2t3fhw32oxfas\",\n    \"lastUsedDateTime\" : 4699705319618608894\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"4wlwofatlat4yy8djt1mq\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : true,\n      \"disabled\" : true,\n      \"userId\" : \"24vu\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"4aosncoaw08ewi5p8wzr77zhf6izkh40251e1hyyg5z6agod6p2c9n2dii1udezh1ymb8yi4mhj83irombq0z9wmzg71zyz7f67hiqss0hw9f0lmvmtd94berrgdmfceh4r5eg9ir9udfu2c6\",\n    \"createdDateTime\" : 8423225318379665312,\n    \"lastFlushedDateTime\" : 4408652068634450989,\n    \"totalUsage\" : 2919603609134832758,\n    \"hostAddress\" : \"tl8rakge57xow78z3fcjuei92c96uhzmwqn83trjsn5qmdhkwx2ht3i2r\",\n    \"lastUsedDateTime\" : 111357863073736571\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"hslwt1b9y4pwnnx1zm6thidanzufz4paz99hfgqkdue49sa23p7wmshl7n693jwj2jm2l\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"v4u6\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"5bwlftwsrt4sdn1mgipudljrdldvk3jtwy\",\n    \"createdDateTime\" : 64333074066225453,\n    \"lastFlushedDateTime\" : 7311856865414640933,\n    \"totalUsage\" : 31499290622324299,\n    \"hostAddress\" : \"mn2478gs6pb7apk0k64mbkmmj1jil4jwt6bb84cwqvogne2y6mxx6r4l1u8bwnrym6p4mjuazjulqyxaunotdru7fi8hofe9wumw6x89zx9iwz3p635efk2gme755takyrc6ctf10c2u0fhlpt0nhhdg4xmnal5j2c2zvdjyos\",\n    \"lastUsedDateTime\" : 4758211162048563\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7d7252f-fd88-47f2-86ee-9df863a2203b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.553674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory",
          "schema" : {
            "properties" : {
              "detailedUsage" : {
                "description" : "Detailed usage as reported by the deduplicating API counter.",
                "items" : {
                  "$ref" : "#/components/schemas/APICounterV2Out"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageHistoryOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "3baefe9f-63d6-4ba2-9803-10e9a2132ac8",
    "name" : "Print current API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3baefe9f-63d6-4ba2-9803-10e9a2132ac8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.552603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage"
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "b6e197b4-864e-4f33-b319-3441b3b24eeb",
    "name" : "Print current API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"overageInclTax\" : 5.746555213705419E307,\n  \"overageQuantity\" : 4750358204002679142,\n  \"billingPeriod\" : {\n    \"apiKey\" : \"y9d233f5ou4v078hme32lg0xfa6ca4zhijtr483ej1kc9vzwhk72w4xl6q4dorxggthal7pe87d1jbtoeskulveuu6pvgjg9z9d8uw9pr3bqv9lv8szbb3ec6u8ar0on7icxjj735xlyn9d2087wva77rzek1ltwhh3csz4o5xkxfxpmoqim2hg77ov\",\n    \"periodStarted\" : 5571397261062523001,\n    \"stripeCurrentPeriodEnd\" : 4953434200033028497,\n    \"usage\" : 2675369731317242568,\n    \"hardLimit\" : 2547941118902996902,\n    \"periodEnded\" : 6515492698614493498,\n    \"subscriptionStarted\" : 554211051915843876,\n    \"billingStatus\" : \"fo2my7pafpgtwo3bpm8hnlr484hj2d33ubxododa5dyllfh7jrvd31jy78wzipa2gb5vsgep\",\n    \"softLimit\" : 6203964754799462192,\n    \"stripeCurrentPeriodStart\" : 5278470115009612188\n  },\n  \"overageCurrency\" : \"UZS\",\n  \"subscription\" : {\n    \"stripeStatus\" : \"myn4dpsllfyti4s7zxhpao7bp7xv8j8jwqxnnnpyhuakvrebql5m0s4sco1p09z3kc4clwmsk17\",\n    \"planBaseFeesKey\" : \"wv087dutuyw3qxgk4myoya107k3v5etn5gwc8c42gpngrynay8qn2o7ov4q6ds4mshko12zmizzv8n0cjh0xw\",\n    \"planQuota\" : 2535080259324601270,\n    \"apiKey\" : \"99s348v2du6r89drwwlg5n0uc13f2ng15oh9k1i8qcui3it0rhrpso50bk6x2twbhbxw37oag256x0u3sndt3rb1cyyovl2c4pe2bonuu1jcuzwvv\",\n    \"priceOverageUSD\" : 1.5219273375388365E308,\n    \"priceUSD\" : 9.602061857262448E307,\n    \"planStarted\" : 2375105789740828456,\n    \"planName\" : \"Mr. Andy Kozey\",\n    \"planStatus\" : \"vdwf8\",\n    \"priceOverage\" : 6.204628062621778E307,\n    \"userId\" : \"o8u4\",\n    \"planEnded\" : 3686713753454789111,\n    \"taxRate\" : 8.513126323561148E307,\n    \"price\" : 1.0522693889404209E308,\n    \"currency\" : \"TTD\",\n    \"currencyFactor\" : 1.7143173612243178E308,\n    \"stripeSubscription\" : \"ta0yzmej2jze56prf65nvsyz8zdvbdi45wroud2b8710i4xso1ufwb6ufjfmq6g8lhws9i4n2nfswxl0c5dk7mloisn5ggcnh2xa5obr6gm8cxew1rtgh59fbtt5ijnx9q61ecqb7tw1xcwlx2j89g6psspu\",\n    \"stripeCustomerId\" : \"spkr\",\n    \"priorPlanStarted\" : 283017580261452712\n  },\n  \"overageExclTax\" : 2.928039627893071E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6e197b4-864e-4f33-b319-3441b3b24eeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.552574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage",
          "schema" : {
            "properties" : {
              "billingPeriod" : {
                "$ref" : "#/components/schemas/APIBillingPeriodUsageOut"
              },
              "overageCurrency" : {
                "description" : "Currency of the overage amount.",
                "type" : "string"
              },
              "overageExclTax" : {
                "description" : "Overage amount including any tax.",
                "format" : "double",
                "type" : "number"
              },
              "overageInclTax" : {
                "description" : "Overage amount including tax (if applicable).",
                "format" : "double",
                "type" : "number"
              },
              "overageQuantity" : {
                "description" : "Quantity above monthly quota of the current subscritpion, in units.",
                "format" : "int64",
                "type" : "integer"
              },
              "subscription" : {
                "$ref" : "#/components/schemas/APIPlanSubscriptionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APICurrentUsageOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "ab62d8f8-9f91-425b-aced-708c6a6352ae",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ab62d8f8-9f91-425b-aced-708c6a6352ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.551889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus"
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "e337919a-d340-4551-96b2-21f23c57a8ae",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"classifiers\" : [ {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Dr. Altagracia Breitenberg\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Bryant Sanford\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Forrest Goyette DDS\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Donnell Waters Sr.\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Ms. Xavier West\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Salina O'Keefe\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Mrs. Marcellus Collier\",\n    \"serving\" : true\n  } ],\n  \"softwareVersion\" : {\n    \"softwareNameAndVersion\" : \"ebhqe8r9rdz5pgfljh9inbswzpfy4qan7ekx2ltrxhs6izlwcr8urrq0ln9bkupuh4a6a8o10px64moomup9peeh\",\n    \"softwareVersion\" : [ 1652807876, 1236144733, 1416323345, 354381765, 1184882961 ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e337919a-d340-4551-96b2-21f23c57a8ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.551863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus",
          "schema" : {
            "properties" : {
              "classifiers" : {
                "description" : "The list of classifiers and versions.",
                "items" : {
                  "$ref" : "#/components/schemas/APIClassifierOut"
                },
                "type" : "array"
              },
              "softwareVersion" : {
                "$ref" : "#/components/schemas/SoftwareVersionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifiersStatusOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "7b4cb210-c78d-4b0c-b796-313d5d80a22a",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7b4cb210-c78d-4b0c-b796-313d5d80a22a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.55133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices"
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "7e455c1e-ff23-4f25-b0f9-43cefcdcdbe2",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiServices\" : [ {\n    \"costInUnits\" : 1020920886,\n    \"serviceGroup\" : \"or7ht8n2ons3sws00b3eqzmo6vj3k4cvriafmc12129s36kd4wv0mnfcq55lhjxxlesbyit8xkg1k7btcsckg0bm3oldx3vebbqa6hrmj5vupvkee748f0gwwrgblcasv18oab4ifz3mnutvl6lgdod01aqe7tm85dtgyymmegv9a7qsmgg1cnede1ingkbjouuv27j\",\n    \"serviceName\" : \"Olga Williamson\"\n  }, {\n    \"costInUnits\" : 11230676,\n    \"serviceGroup\" : \"4yqx4z1ynikbztre4rqjlfkn5luuir5biid38rn5jthte9lkuxl0krby65e8bzzm819on74hq358shxgwjrw38golf2izdtplnuirni3eu355iqnxe52qf\",\n    \"serviceName\" : \"Rudolf Lockman II\"\n  }, {\n    \"costInUnits\" : 290797772,\n    \"serviceGroup\" : \"qfkd4s7gihpln9dpda7hac5k5se1we367uod40lwtv3cv0vy3q29k4zt8r55sj45rdru310m9xtefiwnv1adq3ci266ya6hxlohmy6gvityyfpm2iq29h8crg8pn1eu1yntijd9116chbyzxjxjslo7sxpd4qezf03wlzoki\",\n    \"serviceName\" : \"Abraham Bogisich\"\n  }, {\n    \"costInUnits\" : 1147966533,\n    \"serviceGroup\" : \"kzb0h9mwvmw48crfkbve10gcm5y0g3hmow\",\n    \"serviceName\" : \"Stacey Macejkovic MD\"\n  }, {\n    \"costInUnits\" : 559258215,\n    \"serviceGroup\" : \"duf8tktec7bqu8tx36u8k3lhonjbbcda6c4edet9xjirdxv6o2q4u3old5cjmhlnlfjdat\",\n    \"serviceName\" : \"Felicitas Buckridge\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e455c1e-ff23-4f25-b0f9-43cefcdcdbe2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.551303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices",
          "schema" : {
            "properties" : {
              "apiServices" : {
                "description" : "List of API Services",
                "items" : {
                  "$ref" : "#/components/schemas/APIServiceOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIServicesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "9f0ff1f9-6b45-4ae3-b206-9531d7046f98",
    "name" : "Read API Key info. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9f0ff1f9-6b45-4ae3-b206-9531d7046f98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.550865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo"
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "234d5a24-5b20-4a76-a122-f91a24c102f4",
    "name" : "Read API Key info. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"0lxren71hzxyfsl666ms4r7ina0ixet1kcv0vqmuxa9y0rmhzbdex\",\n  \"partner\" : true,\n  \"corporate\" : false,\n  \"anonymized\" : false,\n  \"learnable\" : false,\n  \"admin\" : false,\n  \"disabled\" : true,\n  \"userId\" : \"e5r9\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "234d5a24-5b20-4a76-a122-f91a24c102f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.550833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "11595cdb-f449-4e3e-9494-11e2a35e7f2c",
    "name" : "Activate/deactivate anonymization for a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/anonymize/4myj9xg0yj8kcsgkota03tv2cvg1lale6dlca62ccdd48ef1gvxg6oe2fmz40ry61o08shejlhrjkz1tb/false/nrt4wg2esxoyfouiiq7zhk7gutdbfh6fak10e997ianimd80mkjarh5fl6eertrx785kd0m9jfd474tcxm51l6msdwao01dz9yrmv4gm6nsc0hos0af67eyyx4a3lta2hchpu5z684aawpd9anbjtehq1axu8h8xy51l4o8bxk9rfs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "11595cdb-f449-4e3e-9494-11e2a35e7f2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.550603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize"
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "7aeffe00-0a89-4248-ba41-b7e99b014a93",
    "name" : "Activate/deactivate anonymization for a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/anonymize/iw08hqb688n7nunjlxp2/false/zdogovi5ig5gizk56lhpub8ejigcksmvc7m2l7knuz0hbkhje4rf9i3vdbqxe5jyxl9lnbt13a1griv0bd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : false,\n  \"apiKey\" : \"coi04pg0t5fly\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : false,\n  \"admin\" : true,\n  \"disabled\" : false,\n  \"userId\" : \"34j7\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7aeffe00-0a89-4248-ba41-b7e99b014a93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:14.550522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 275
  } ]
}