{
  "mappings" : [ {
    "id" : "8c9121da-a74a-4590-b499-2073c4e682b5",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v2/mcbke5zusyls1et2yeu6f3symvakngyjng:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"kwl3ipijou0m8uh7gkztgv383jwuwu63cnx6y4ojcwyx17plsntp4580l1k78vzxraw403l7sbtpcejz8k6jtq5dpqj6glcpu9aawjkipbwx2n02a3v5dm307aogtiqg3pwutz82tog1bhwmtfu1kc45r9vcr2deg\", \"xry3vzjmgzsll5ab61xpital7uk4grj61xei98msgeo0p2w7bxh07dhpk9dx3hp073aieo2onba44rv44n2m4mij6g4q3eacsm676z5k6lg6uc7odjtfb44y6z2fuoenvaptkqsbwpu2lpoemr57mnxyf5\", \"n7sp6g2h4w8oryiuq039hz79l3n4pmy3b80xx09jbawkh4ika8q1lpspxmq341vk17ymelsxdv66fhhpwotru6pi7i9de72fqhv3cflec7g6ubhbew800i7gwg2vv23l79m9gex6fv1z5no5l1s48le32fs\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c9121da-a74a-4590-b499-2073c4e682b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:18.016584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.instances.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "0c90c7cf-02b0-4b8e-95e6-c7e04cfcac1c",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v2/6tobqkf07tv8zolq8hioavbxyodlfnuwb5j718o4uqutz2i4xqf602euek2pgi69is2bgmq6dvudc7hx88a1wc0j8vawu1xjta2aiuom0wwnq69lf4bm1bwf48lpbdnm2c1dnorwaty9nd34j42fjkv4y7v8zqh9m0hnn33okf5bx:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"zhfoaazs1nnpoonoyy6y8ib6vu1oc7230up1cdml3nfa7yorultz9tcw0fqvlpuicpdekvuggtms8e82ucbxef8xenjhcy3qe42rrh0xshb3ean4zmc94qlzh81xpytjqykzpz7lv8qqv3pxfvsr6kpxh2no7dw1gkw350hy597ezpl\",\n      \"description\" : \"Illum sapiente dolor vero. Esse porro beatae ut veritatis et. Nihil sed quod dolor aut.\",\n      \"location\" : \"oc47jncla62p27nv104fn4zg2aph13juvqze2h3i668to74e7g28e00we7zuz7reipa2542u7xrn8hzwt8qjcjmdhpkamw6wen\",\n      \"title\" : \"Est quos provident et et.\"\n    },\n    \"role\" : \"g5wfb5s32vg4fo0d66fikr66drsh2s9uhdvnmg5yq5rqvpwzconfpnhzyxwy8\",\n    \"members\" : [ \"28u3ql2ar1e76ofe7wudwn383hxeoaqoj608vyaowdifql19rr2ie9bga51m70y\", \"8tqc89sp28resg311e3yvo77x8ydx6imnn8psmd257sf4ejohi7pnsjxr4tva25c2aw3qqdb6tvfz12o010nrdsmowqez5euey7npucsdwlt0x51evlhyhp854b0tb8nvvv\", \"1a4nzbla2ygijnv3y8h6rs0gv7cey6pivux5uwonoclvibeaa8dr6xldb4oxg0ei57gbdbg4805dqe3hfev2bvijnsk3jlw0jbwh5xu4gpi1vcjzuepk6imup205gfvch08bkdtqmfetir1mzg2dwhi\", \"88nfhtzhfgk8dk6fc8n\", \"bdhgljbjws30y9dwa9ndra1xxkqkj8jap5\", \"efjg8br2y0dkmd7wg0c8d0q9w5yeu4knzctk5vjy0708b038ny1c9p8kf\", \"tmrljy404s19skim17yf73f80nwkiw7swpsrqdnz9yeswo32x9pizciaxo6ekaiivv8k4omw61m9mhis78tjcv6rwcw24i0stwtvkbl\" ]\n  } ],\n  \"etag\" : \"totam\",\n  \"version\" : 1202051424\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c90c7cf-02b0-4b8e-95e6-c7e04cfcac1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:18.016475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.instances.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "21858562-1372-4514-8b76-82483c534307",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v2/f7az6ch8ixbxu6saupfcfe286n9kllwhre4v7kdchcerh9ddkgfv1fk4xeobchekh9634g3tygyktsmn3gduauvk2jyavtfx58xpiokgrcf2bp7b9y13xk37zrkt5w5e7bb3z4:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"0rjpjs1sklkyj094uooumoxpn8z84dwpemxprjxrurkr9v7dycq2krjbvnayn0aniwkqsi5ahgbl6epxk68ti7zgm4t2jp7c2q8jzxm2w6kpe2tm38lawh1d609rcpnel2bhxfbs7gw79jmp44ih9pm45duiukmoo6z7k1wenvjm2hkqqxm3jy4mrq0m4u0hme5al3p5\",\n      \"description\" : \"Suscipit adipisci excepturi est praesentium eos saepe. Et voluptas sunt ut veritatis. Tempora impedit illo sequi. Accusamus dolore nemo aut voluptates adipisci quo consectetur. Aut dolorem et.\",\n      \"location\" : \"6fhvitl5pi4b1qojq6tbjo0djvyyk5povxnei6uywv0rb54msr6xjhpe53wmsmjza10hmekldv005cq2o8hygsymad\",\n      \"title\" : \"Est voluptas doloremque blanditiis inventore.\"\n    },\n    \"role\" : \"eaq7881ve4ini7x2mbnhqc1gbckrbwlp1fn00hk5cssbhnm6lzylcmv2yoi76inefblqlua4lxoddgb6n5bp4zeb2jkc0ffwys3x6zy4d\",\n    \"members\" : [ \"uuyse4xakymh4a35g70a6yzaxzxjy6hwm4mpitk7rcv1loauwrb498krkm3brzvqjzia2rs049d6f74bzf09wqf4zibag40nl49f893i254xw7a84in4maoumzyd19dhjclxe7r0iwg8rxyocu392844s50yi1dol1oiqi0o4yd1bgnkbyususm3mb4bz48y5kyc\", \"od6jzur9aczkngxf93udg51e0v96vgk7vx02vgzpk8fas8l6f9tkm\", \"d6kewek8g9ofubjjl4qx96kljgf7qcpvrtb1ywc4wd3m1zi5r8vdqylnwc8id9m4fg6v3fbrgy79dtymb2mv5egsje0zj6jaalmh8t8jjmw1aetq79ua522xgqbarfz5kaxi0jwq6zedidcdwkd6edvybwtwlevthqs\", \"70xvup6tz4ud7d4gn4kt4arjlvblenfn43q1tza3y9ncsplj808dj44ybyabwrnpv5vbh9kybf9xa221mufrdc9muzx0veokk3o2x4mawdo1dkumrt0hhy4g18ayslgzb9lf6zmwos12m0hxdyahjvq3ybeshqhfsiy4ry\", \"aity3ji2opxtmco9dhk0svwp0i23ktxp6709zlfwlvg22pirwtjl72jzrp1vdo6n1rx9zrqtubgmputt1j8ewkz49e2b\", \"jleqa2ic0gb30kovwmavxf19kh8sb6dtsliag5iwlkt9atoo302l97nxnl2m4uiz98zowzndql05ya7h3uofc37j87q5hftxyr2r0ffedu34shgcay2xagk3tjd55eg6rx9gsc\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"447h4ztp9viq0z4pv0p3styudxb2i8pkm9mvdftfr\",\n      \"description\" : \"Ratione quia natus. Quaerat quis et sit magnam velit. Autem dicta iste vel.\",\n      \"location\" : \"b4thyb876eleg6zvsqmeqknbvu3lgzj6t8xcvbu10pg5oorxaj9a3iidguambzuv4fzx7bn7go4k4q3fahmyjhbgwitw1esjfplumfokyg36oekqetu0jvsw4jk8kjohzf0hwro8x5bd8ilpge1q02454kjqe479wtkn6774yip7s\",\n      \"title\" : \"Omnis mollitia sed.\"\n    },\n    \"role\" : \"pnxiwg\",\n    \"members\" : [ \"g43s5fn7bq9xvna6bc5atne3gmsk9jrzfms4r2whi6ls4y5bj7kozst0c6drajozwn689rp00fdjyvx37ba7xpemiotju700sf0811jxjse2hb2yg4tsxip4m\", \"lqle5rifdqy6knsx4s78ufexjxikf2w7zvhkew37i4hay\", \"k0aswywebub9uf4sy9t5zzi8nni9l6pg0gj6myovah88xajte11bu7c1nm2ypcfx6a0lmza67ku4rkczqaswcn9cvqfvimx5c8idox0efvinlkgudpidj6ulchvh81jf58524lsxhesj5i5psgnchw6sl5b6voptvf1h27poqtrqs7p1igj\", \"d3qfypabvza1du2b23gpienmgl0lrdirg1vovedcsz3xv5\", \"9k5qcoh7bmxkz4eimus4ghl0104lrhp6shguvxtbcmnl7gaudjscqa7vaijw2sab47ij4xlrbksd20lij4fr6\", \"w5svnypcqts39a7yf1bffkq5tehenj64tosbdj2mf6zy\", \"xuq9m892ywmhmhyqqpc96kwb4yp8dudytqqzupmgtf72p3lcgs6rcuxyr5a5cb1036qifhip6s519k88zpxcpiaxkjiza3gzypaacyxn2t863tbjlob4gxz7t8dwon3rwl6vmzu6an0hmct431aot590zkwmladf4wmeck63g92\", \"02x77v2a1iee1szkjo2go\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"r6yki9gvarjr6zm6xasmefoglh9im37uxssac6svamky4qh2ao9rirjxlbtwt6fgsavmw7bmfhrh5zcmoz684qj75k90y52cczee8saoewgbfdcr6nymfb5vgbsaub0jgo7kzh8a7drepw806h4t\",\n      \"description\" : \"Sit voluptatem est. Corrupti unde aliquid suscipit unde. Ratione sit quas rerum dolorum. At est eveniet qui.\",\n      \"location\" : \"7fi1mg74ky5c6kbu9h96k8jl18rz50qbcyzzrhwf9y71rse7nc8uegj72qv07q95k215jqy5d0b3jtzr522rhmcep5g8bz9gtjhf9nqordde6zz277wekzw05t9bfz21x5x4mwbmxc61eh2ddw97f1omhlmo\",\n      \"title\" : \"Officia sint quia.\"\n    },\n    \"role\" : \"1lavkcnizoz0a1rzgjy9fig3alkc075qglvnm49um8bp3wc2rpdmis4y4f02g0qc41ayjhccndsww\",\n    \"members\" : [ \"q66d3xhukhqjyiu4g0cohpjrg640oli2n9pu7yy6dh5wmcx27f9esuy45v8f1sl55ic2mxvsngauht1uk60qzbp7dc6po4u4rswrji3qa1st1hcccw91s8u9s1kvhcd2tfsoff91mzfq8b88d1x9pcjmm7qkflm03qgx\", \"fmm0w52mrjejamdz8wpgobfvkqmcjfrubt3ytw72rvc44yvhxeoo0vvw0ho9cewrd32k0uk91ljxl21nkiwlr7te6ycsevo2bqja967vyr43tcekzootag7cfepiwo1zr33czg9bpmxe4qk5lb529cyyw1r\", \"aabtd9lrfkj8vf9l2a05f3ude7bj1vm4vl6uxekvz0cwo9wmuage9yr9wk2zftlq37gzb2ggfwehs7jxgw0xc0ekjgun1liz3dep223esgwomjkym7f7q73mq6em1h3hamfc8tv1wp0g8vepnzyrs1m8yq\", \"oq865hvqdfdck8g30jz3zj1hy8xf0hch64uruuyl33sediq8sn1zmyzwjp5e4mhm23dg03c\", \"j8hh3iph20b3yt6wmwiwga1yb8jpay48mavgg3ilfh5916zl0c0uh1x4pwrbpanfs5qmfmtek5s5wu5vw3wano1lbpmdxyceepd1dm8j3n05i02w69rlarzdohdmfzz59qs0x4xq3j2nx1o2ui81d1x3cun6ixcogl8ks3a5gehiawdqli4l5v5szj0h0ney3od\", \"3o4l4al66gpz4os12sx2wpcstldi39bh4fc244axeh7l9kejvel59pgyugoaujdhnxdxj3mk64bfn8gupi9hbxkk1v3zzdco\", \"31bydjwev4md21riuwbmdh8377pb7z1w0m65ash\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"7knbmenolf3znc84jij44lpimpmim1rs4hkvwpze6lgprouh5c\",\n      \"description\" : \"Sit ut suscipit. Qui quam ut repellendus. Libero minima error. Quae odit sunt dolore deserunt. Illo itaque et.\",\n      \"location\" : \"etq5p114ibuye5uslpt9zicd80zmilmimtdv8r8dvqhuduok5dsr018taq3cw1tsnzqmrohhvbm0zoucotsgze0bkgjjqpy8ged38x1d82mouyvil0rt6g4f\",\n      \"title\" : \"Suscipit error ut eius itaque in.\"\n    },\n    \"role\" : \"pazgzmsu5roqu7armjc4o3lfjmzjoo3wnr7xaaiy6i\",\n    \"members\" : [ \"8yqxo2opsqw66uihw8rat25pmgwavbyjod9e9ltuli5tgky74f7nqg5h3m7s9ibx9c\", \"6pqzcuvtibcj5kwyik19jnrao8kfywwqjlhsc7ef34ypvx0te4qdftvb7t1qaejgj24xsuzbno0\", \"xqijne6jc8z3oc8isuyqnryrsqe1mavt1rpj5lntys7b37be8jtnvx7rit71n6qla32nkrqj9cm4n5ru2vo3xc4jv4wxzbaumwbryj6jlayugfqnqy51xntd3ydvmj26a0y0lewqex023hcbsaiu32pj9j6m1w2o2pudwv\", \"bu7brh7cn0b33h6ibh1uf9v3fhcvbdh1kka8rsw821y0luryu1rmags28o8vbzg47f7opx1mqkjt2leaqg86kbapijbh7hyl2qltwyijl4isurc9zucuxoasv2nvvf377bkgsl6q0y\", \"tqalfs1mxy0cfg62swhosh0hldc2lio1atnpyv142uj75gz9xb2swm1xqzkgh2ntgdjahublcbg4k5wcs9cjcgagbts6dcng2issegtmhmx8u75cru\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"r3jk30oye106a9syyawyn2dea1mk71cmh4cglx43mg\",\n      \"description\" : \"Blanditiis officiis est nobis rerum. Fuga eos veniam. Aut commodi ex. Eveniet ut itaque et nihil eius.\",\n      \"location\" : \"e7m95txny7tc7m0xeerm1jqooseca05lv463bgkppihyn1fop3v65bbxhjpqgl3ics6miifqx9tmcro9tywqfvt0lrv1ekvr53h0ppacxs91z4djw7qmcettrek1bkfb2tsv9es67senf3smpdetbmf9lv2hwc1m0g9rlpr\",\n      \"title\" : \"Debitis sed rerum tenetur commodi id.\"\n    },\n    \"role\" : \"hjwmsyf3m42ik3xfxmpe5lidf7\",\n    \"members\" : [ \"qzqfamehu82z57g18wm6sw2qvaffw5lsoikvcasj5mtq8pekwkkzdevkn6k4o5mwntz7eb2pv6nd35ulv7eadfv83unfr5ung00q4xg\", \"fzx5i1c56iy7shlizl6ayc8mp7gu3ugbigvhxqy2mdl64f6bqtfmmz3j306rhwe\", \"7vmwmlycyaqx60ol1xbsylqv332n7swasyr1hsep9nn4fw58f1s4puvrsu9o5kg4joscxm947hlxp9xeszi23nkqjsfm84a7sahjl5ed03o0g0x7iun07dmp3owg9yabjsywqoafrz1617l23vmwpqp7rvda2o3i85kdnfxa6ful31x89i3ba5k1xxs0f\", \"frk0wd6swizsogjqj6rh7mcstfoeby8kdk32yyr916yiswwewtkafwtj7dwrs630umsa9xkfuwrj3aqnujpe6tzzw3bam3tq20ywem0pjz6jwm5udrtr59nne0bxkkt51koocftpk07bog8axuwckpgweaj9ihw9r\", \"ng3lsy2cuojtayzzn0o9xzzcwg2mrwnu4vfjd73cq4ci726d57zcncom5ia8tmjp4ryhlopxey0srfvp799m9utw097kcbrg1wtbk58tgz33u9zkli2xky9nctgu5j80hua4cx\", \"q5uk14m86puq3go1o1qnxbt6jx08irttrbkbkvc3l4jf26ltvbct7yqnmwckytknldj5y3iex0inthq\", \"htrbnuitghme9jiy1vufb2usauqf11tdorw\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"invgtiivwlice7u7t7jxl7luq8plhuslak276ntlobdulguppmmk9p5ocxtzqder4nwqtjyk9d0gtm4z\",\n      \"description\" : \"Quos a distinctio aperiam. Sed molestias qui cupiditate ab adipisci inventore. Corrupti ut vel recusandae. Deserunt consequatur natus est ratione voluptatem libero.\",\n      \"location\" : \"kcowklyfk1fyj77nmi0ya0mdxy1d0xvov1ektd0wcmhyt1eakcnd29o69k\",\n      \"title\" : \"Fugit repellat veritatis minima nostrum aliquid.\"\n    },\n    \"role\" : \"i755s8dbjdcd825wi516tn5ymgtirsjpvqc737g8kgha9g9525mh328pyndewxt2i8cc57lydgezqt5z2zywi5fywlv7e38qlve762s0511y0ew6nfbjihvi4ypyb7cy12q4qoh3l2fl9errsxf3vhvx9tze6tqdhgj7p3oz1xnb7m5m75rj1x72w07zr\",\n    \"members\" : [ \"367dtj3ce9jizqd8gsyf11iog9sxa8ovotmks9t0dhkcvm4jt3z4dfpmuamiixkwqled73apb3ku9spjhhc3hbyahl1ni2zgytl376wejq7ts9bpx18xquuholt61i5gfmhgfreb6yth47jr\", \"5160nkyatr3ugc8wz0lksmsiyqqny48tr844mz4sn0irlvj4tn5hmf9y547i\", \"iod54e65lox\", \"bxnlf7ezp70jmd2lqnrc8r2te1t4ainyotogrmx739n9u4ggmtx6770iesdx1p00g2b2tci2oph9pgdeeymim9lz4rpcyeerxka8am5yo00xh8xzi69v6cqw76\", \"4q4fxp7aear30g55kb1k41ibnxzci96zbp7ilqfjahe1r9gc2l4428blvj0sd398436c2e1lh\", \"5g9g032eaepkubk8mmg9zateeczwnq3vt5f3ycnelwxlhws0wqhz99bzw66vxqe7dyez12bdfwvqfkobe526jrnhclwq07h6v4tmitrql1zx3uut1\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"bxyqigoj4tfw01u1rdc474b199hzo8mjz7dlizt2827jxvvj7\",\n      \"description\" : \"Voluptatibus exercitationem eos amet. Beatae id saepe nobis quam qui saepe. Est rerum qui qui et et sint non.\",\n      \"location\" : \"byz1ex0p8mg37ipv0xsqu5wvvgpuv605y6vxdrjg1sovkc5jkckkyj1qgdg1k15llc0cfu66jg3z5xinvf80vpwe0ygbe5x6sg49kkyc23ujplq37tosc0ifjgmmlnkzz6a2a9zeitj30tfpmc06tf76lrggup0uu2earj0jjqkvv4hy6ehh7aymi203cd\",\n      \"title\" : \"Nemo fugiat quae est.\"\n    },\n    \"role\" : \"21a58fr6ktnkkbaq841zscfhr2gjizu2q1wcldn5gktnqcw2hovm52s6n925db3ykjr8bwgsq4dpfcxblasob\",\n    \"members\" : [ \"u1joo7abz8wsr5lj2ff034t8km6c18peka1z9q2bvdzri1twmyx1h86j4morip9ufw141\", \"6g83rb8czo48q26bm4fd2hi0peo8bdh2ft9hxrf9v4jbbmg\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kss0f5xvfq97zudnq7couk35lg900nj0p5okwblvebg3jgez26z7bwefiv\",\n      \"description\" : \"Et similique et nesciunt at. Aliquam et ea ipsum voluptatum. Officia beatae quisquam ab tempore et dicta aut. Sint molestiae sed itaque.\",\n      \"location\" : \"t2w5oqu9lc44nuiejx4yyk96tlu6sut8242bbq7ls51b8d6xnnuwr1nys408ftjlk4e635714k1hy036rld1okqf33nau6ipywbqlcumal412s7vxhr28cp7efvspqg1le\",\n      \"title\" : \"Ad nulla possimus perspiciatis quo.\"\n    },\n    \"role\" : \"wn6ixpf0bker11o9c8ozh0ogrlxy8k8qm634d0dzezp7v5qocuscimiy2rii7zdx5l01qt0qz75bqcfs43e6a7cu2q1z4rjyqys8ykyviqx7uigo7sdwvobq6a7e0sn99406msyj0fq67ebvmh2fnttbfdszrtg2\",\n    \"members\" : [ \"847fdo0uze4nx4gj8f7lpw07vvir338yplm2ods09n2lo8581o5pjw8qocu70rjhm0jfxphh9zg2kcv2ktj2x8m6f7bs6w9mr4n05n6h1xuoazaoct1bsdgglui0myzykel8071xu2iewpoey2bqbx4bqqpdvtpk52k6ol3xsupdu\", \"gmruhsbkxcd82qmmknny88wxjr3eh\", \"5p1mgy8vs12wl9jsihhmg6mq762r9mgmr8eeta5hxknovcnzl93m1t1hulk6s3nk7ugqfzvrlzau4utznqbx7gv69hx8khh6x3rowpy04eifkhxbds1r4b8ssbibhokycr6wfxip1p5xn3\", \"b0sc8zbzluryvpwobj1sgshjogxunc3wt7v0qv6bsw0t8zsudwccahzw0hm3xtuyoufalqjemtjmn07mnlm8whcnpjchb39kxfwxy9mlai8tevd247fjuxlfic5yr49kcouwmy1gpr2vbp47d7qdwo8dj3iwc76qwr5und2iu4vqk\" ]\n  } ],\n  \"etag\" : \"ducimus\",\n  \"version\" : 749899048\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21858562-1372-4514-8b76-82483c534307",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:18.016201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.instances.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "4fe1e611-be70-49bd-9c10-16330f5941c4",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2/Mrs.+Eugene+Leffler:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fe1e611-be70-49bd-9c10-16330f5941c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:18.014907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "38962ef2-2037-478d-b589-2ef201a4a753",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v2/Mohammad+Cassin+PhD/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Shanita Von\",\n    \"error\" : {\n      \"code\" : 2098787549,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Illum aut officia sapiente ea eos quia. Sunt delectus nesciunt dolores voluptas dolorem. Fugit est repudiandae ex et eveniet. Est sit enim pariatur harum quia. Nihil aut distinctio neque consequatur.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dreama Davis V\",\n    \"error\" : {\n      \"code\" : 1700494567,\n      \"details\" : [ { } ],\n      \"message\" : \"Nesciunt sequi eos et architecto repellendus. Vel placeat nesciunt error sint exercitationem at eum. Eius distinctio libero nesciunt quos laudantium quibusdam minima.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Darcey Hand PhD\",\n    \"error\" : {\n      \"code\" : 1492937658,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ea sequi vel ex est dolorem. Dicta voluptatem animi quisquam consequuntur. Reprehenderit alias provident iusto aliquid labore id sunt. Et deserunt sunt quaerat iusto est voluptas.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"4wegcepqt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38962ef2-2037-478d-b589-2ef201a4a753",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:18.014796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "836b4008-fd24-4656-8978-82b75243ab86",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2/Kenny+Shanahan/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"2bfqcs3sqw9tw38c7rkq1gaivgfkjqign4goeut2azhbcs8hd4szt65imv0hzb1b\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Moses Dietrich\",\n    \"locationId\" : \"5558\",\n    \"name\" : \"Bobby Glover Sr.\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Eddie Jast\",\n    \"locationId\" : \"ysvi\",\n    \"name\" : \"Madie Ward PhD\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ernesto Hessel\",\n    \"locationId\" : \"lw35\",\n    \"name\" : \"Jeanett Legros\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "836b4008-fd24-4656-8978-82b75243ab86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:18.014165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "7cd9b3be-d146-4248-8e44-db040becbdf0",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2/Mr.+Fletcher+Boyer",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Donald Ullrich\",\n  \"error\" : {\n    \"code\" : 753867453,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Nesciunt tenetur quo recusandae eveniet quos. Non modi porro. Id consequuntur nesciunt saepe. Cupiditate ut itaque illum fugiat hic animi.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cd9b3be-d146-4248-8e44-db040becbdf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:18.013396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "32489d9f-b517-4b69-98f2-e256828245b5",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v2/Gonzalo+Schinner+IV",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32489d9f-b517-4b69-98f2-e256828245b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:18.013018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  } ]
}