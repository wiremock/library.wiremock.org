{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "VisageCloud",
    "description" : "Face search, recognition & classification API. Just make a call to our REST API each time your app needs to access face recognition and classification capabilities.",
    "termsOfService" : "https://visagecloud.com/terms-of-use",
    "contact" : {
      "name" : "VisageCloud",
      "url" : "https://visagecloud.com",
      "email" : "office@visagecloud.com"
    },
    "license" : {
      "name" : "As per Developer Terms of Use",
      "url" : "https://visagecloud.com/developer-terms-of-use"
    },
    "version" : "1.1"
  },
  "servers" : [ {
    "url" : "https://visagecloud.com/"
  } ],
  "tags" : [ {
    "name" : "Analytics for presence and audience",
    "description" : "Retrieve analytics for presence and audience"
  }, {
    "name" : "Stream",
    "description" : "Manages Streams"
  }, {
    "name" : "Analysis",
    "description" : "Performs image-recognition related operations"
  }, {
    "name" : "Classifier",
    "description" : "Create classifiers on existing faces"
  }, {
    "name" : "Collection",
    "description" : "Manages collections"
  }, {
    "name" : "Profile",
    "description" : "Manages profiles associated with collections"
  }, {
    "name" : "account-controller",
    "description" : "Account Controller"
  } ],
  "paths" : {
    "/rest/v1.1/account/account" : {
      "get" : {
        "tags" : [ "account-controller" ],
        "summary" : "Get account information by accessKey and secretKey",
        "operationId" : "getAccountByAccessKeyUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "accessKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "secretKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/account/billing" : {
      "get" : {
        "tags" : [ "account-controller" ],
        "summary" : "Get billing information by accessKey and secretKey",
        "operationId" : "getBillingPerAccountUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "accessKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "secretKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDateTime",
          "in" : "query",
          "description" : "startDateTime",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDateTime",
          "in" : "query",
          "description" : "endDateTime",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dateTemplate",
          "in" : "query",
          "description" : "dateTemplate",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/account/changePassword" : {
      "post" : {
        "tags" : [ "account-controller" ],
        "summary" : "Change password for an account using old password",
        "operationId" : "changePasswordUsingPOST",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "email",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oldPassword",
          "in" : "query",
          "description" : "oldPassword",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "newPassword",
          "in" : "query",
          "description" : "newPassword",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/account/login" : {
      "post" : {
        "tags" : [ "account-controller" ],
        "summary" : "Get account information including accessKey and secretKey by email and password",
        "operationId" : "loginWithEmailUsingPOST",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "email",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "password",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/analysis/compare" : {
      "get" : {
        "tags" : [ "Analysis" ],
        "summary" : "Compare several faces identified by faceHash, without depending on mapping faces to profiles",
        "operationId" : "compareFacesUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "faceHashes",
          "in" : "query",
          "description" : "The IDs of the faces which you want compared, comma-separated",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "showDetails",
          "in" : "query",
          "description" : "Show details",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/analysis/detection" : {
      "post" : {
        "tags" : [ "Analysis" ],
        "summary" : "Perform detection on a given picture or picture URL",
        "operationId" : "performAnalysisUsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeAnalysisPicture",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the picture of the analysis to be stored for later retrieval",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "storeFacePictures",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the faces inside the picture to be stored for later retrieval",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "storeResult",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the result of the analysis to be stored",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "retentionTime",
          "in" : "query",
          "description" : "How many seconds the results should be retained in stoarage?",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pictureURL",
          "in" : "query",
          "description" : "The URL of the picture, assuming it is served by a third party server. Server should be accesible from the Internet or through another netwoek by VisageCloud infrastructure",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "algorithmVersion",
          "in" : "query",
          "description" : "Algorithm version (V2 is more performant but not backward compatible)",
          "schema" : {
            "type" : "string",
            "default" : "V2",
            "enum" : [ "V1", "V2" ]
          }
        }, {
          "name" : "autoRotate",
          "in" : "query",
          "description" : "Auto-rotate to find flipped or rotate faces",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "skipEXIF",
          "in" : "query",
          "description" : "Skip EXIF rotation procesing",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "waitForPictureUpload",
          "in" : "query",
          "description" : "Waits until the picture is successfully uploaded, before returning the response back the the client",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "[For advanced users only] Change feature filters for robustness of feature extraction. Tweaking this parameter may affect per",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "[For advanced users only] Options for preprocessing of image.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "picture" : {
                    "type" : "string",
                    "description" : "The multipart/form-data version of the image, in case a direct upload is used. At least one of picture or pictureURL must be present"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/analysis/listLatest" : {
      "get" : {
        "tags" : [ "Analysis" ],
        "summary" : "Retrieve the last *count* operations per current account",
        "operationId" : "retriveLatestUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "How many records to retrieve at a time",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/analysis/recognition" : {
      "post" : {
        "tags" : [ "Analysis" ],
        "summary" : "Perform labeled recognition on a given picture or picture URL",
        "operationId" : "performRecognitionUsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeAnalysisPicture",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the picture of the analysis to be stored for later retrieval",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "storeFacePictures",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the faces inside the picture to be stored for later retrieval",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "storeResult",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the result of the analysis to be stored",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "retentionTime",
          "in" : "query",
          "description" : "How many seconds the results should be retained in stoarage?",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "Uniquely identified collection that can store multiple profiles",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labels",
          "in" : "query",
          "description" : "Labels associated with the given picture or picture URL",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "attributeFilters",
          "in" : "query",
          "description" : "Filters that will be applied on the recognition operation",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "NO_FILTER", "GENDER_FILTER", "AGE_GROUP_FILTER" ]
            },
            "enum" : [ "NO_FILTER", "GENDER_FILTER", "AGE_GROUP_FILTER" ]
          }
        }, {
          "name" : "pictureURL",
          "in" : "query",
          "description" : "The URL of the picture",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "algorithmVersion",
          "in" : "query",
          "description" : "Algorithm version (V2 is more performant but not backward compatible)",
          "schema" : {
            "type" : "string",
            "default" : "V2",
            "enum" : [ "V1", "V2" ]
          }
        }, {
          "name" : "autoRotate",
          "in" : "query",
          "description" : "Auto-rotate to find flipped or rotate faces",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "skipEXIF rotation processing",
          "in" : "query",
          "description" : "Skip EXIF rotation procesing",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "waitForPictureUpload",
          "in" : "query",
          "description" : "Waits until the picture is successfully uploaded, before returning the response back the the client",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "[For advanced users only] Change feature filters for robustness of feature extraction. Tweaking this parameter may affect per",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "[For advanced users only] Options for preprocessing of image.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "picture" : {
                    "type" : "string",
                    "description" : "The picture itself"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/analysis/retrieve" : {
      "get" : {
        "tags" : [ "Analysis" ],
        "summary" : "Retrieve a complete analysis object including both detection and recognition information",
        "operationId" : "retrieveAnalysisUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "analysisId",
          "in" : "query",
          "description" : "The ID of the analysis for which the data will be retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/analytics/counting" : {
      "post" : {
        "tags" : [ "Analytics for presence and audience" ],
        "summary" : "Count individuals in streams or collections",
        "operationId" : "counterUsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionIds",
          "in" : "query",
          "description" : "Collection ids",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "streamIds",
          "in" : "query",
          "description" : "Stream Ids",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "startDateTime",
          "in" : "query",
          "description" : "startDateTime",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDateTime",
          "in" : "query",
          "description" : "endDateTime",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "visitDuration",
          "in" : "query",
          "description" : "visitDuration",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "default" : 3600000
          }
        }, {
          "name" : "maxIterations",
          "in" : "query",
          "description" : "maxIterations",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "maxBatchIterations",
          "in" : "query",
          "description" : "maxBatchIterations",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "minNeighborsMergedPerIteration",
          "in" : "query",
          "description" : "minNeighborsMergedPerIteration",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          }
        }, {
          "name" : "mergingStep",
          "in" : "query",
          "description" : "mergingStep",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 1.0
          }
        }, {
          "name" : "shuffling",
          "in" : "query",
          "description" : "shuffling",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/analytics/presence/timeseries" : {
      "post" : {
        "tags" : [ "Analytics for presence and audience" ],
        "summary" : "Show audience (based on number of occurrences of each person) breakdown per declared attribute (age, gender).",
        "operationId" : "presenceTimeseriesUsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamIds",
          "in" : "query",
          "description" : "Stream Ids",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "startDateTime",
          "in" : "query",
          "description" : "startDateTime",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDateTime",
          "in" : "query",
          "description" : "endDateTime",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "step",
          "in" : "query",
          "description" : "step",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "default" : 3600
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "attributes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/analytics/presence/total" : {
      "post" : {
        "tags" : [ "Analytics for presence and audience" ],
        "summary" : "Show presence (based on number of occurences of each face) breakdown per declared attribute (age, gender)",
        "operationId" : "presenceTotalUsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamIds",
          "in" : "query",
          "description" : "Stream Ids",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "startDateTime",
          "in" : "query",
          "description" : "startDateTime",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDateTime",
          "in" : "query",
          "description" : "endDateTime",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "attributes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/classifier/svm" : {
      "get" : {
        "tags" : [ "Classifier" ],
        "summary" : "Get classifier full",
        "operationId" : "getClassiferFullUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "The id of the classifier that you want the status for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "post" : {
        "tags" : [ "Classifier" ],
        "summary" : "Create new SVM classifier with given name",
        "operationId" : "addSVMClassifierUsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name of the SVM classifier that will be created",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionIds",
          "in" : "query",
          "description" : "Collection ids",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "preprocessor",
          "in" : "query",
          "description" : "Preprocessor",
          "schema" : {
            "type" : "string",
            "default" : "FeaturePreprocessor"
          }
        }, {
          "name" : "classificationAttributeName",
          "in" : "query",
          "description" : "Classification attribute name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "considerViewPoints",
          "in" : "query",
          "description" : "Consider view point",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "seed",
          "in" : "query",
          "description" : "Seed for divididing training and evaluation sets",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 179425537
          }
        }, {
          "name" : "trainingRatio",
          "in" : "query",
          "description" : "Training ratio",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.8
          }
        }, {
          "name" : "probabilityParameter",
          "in" : "query",
          "description" : "Probability parameter",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "gammaParameter",
          "in" : "query",
          "description" : "Gamma parameter",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.5
          }
        }, {
          "name" : "nuParameter",
          "in" : "query",
          "description" : "Nu parameter",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.25
          }
        }, {
          "name" : "cParameter",
          "in" : "query",
          "description" : "c parameter",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 1.0
          }
        }, {
          "name" : "svmTypeParameter",
          "in" : "query",
          "description" : "SVM type parameter",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "kernelTypeParameter",
          "in" : "query",
          "description" : "Kernel type parameter",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "cacheSizeParameter",
          "in" : "query",
          "description" : "Cache size parameter",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 500.0
          }
        }, {
          "name" : "epsParameter",
          "in" : "query",
          "description" : "Eps parameter",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.001
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Classifier" ],
        "summary" : "Delete existing classifier",
        "operationId" : "removeClassiferUsingDELETE",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "The id of the classifier that will be removed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/rest/v1.1/classifier/svm/status" : {
      "get" : {
        "tags" : [ "Classifier" ],
        "summary" : "Get classifer status",
        "operationId" : "getClassiferStatusUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "The id of the classifier that you want the status for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/collection/" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Retrieve all collections",
        "operationId" : "getAllCollectionsUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "post" : {
        "tags" : [ "Collection" ],
        "summary" : "Create new empty collection with given name",
        "operationId" : "addCollectionUsingPOST",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "accessKey", "name", "secretKey" ],
                "type" : "object",
                "properties" : {
                  "accessKey" : {
                    "type" : "string",
                    "description" : "The accessKey provided by VisageCloud"
                  },
                  "secretKey" : {
                    "type" : "string",
                    "description" : "The secretKey provided by VisageCloud"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "The name of the collection that will be created"
                  },
                  "preload" : {
                    "type" : "boolean",
                    "description" : "Defined whether to preload collection",
                    "default" : false
                  },
                  "evictable" : {
                    "type" : "boolean",
                    "description" : "Defined whether the collection can be evicted",
                    "default" : true
                  },
                  "purposes" : {
                    "type" : "array",
                    "description" : "The newly declared purposes of the collection",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
                    },
                    "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/collection/all" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Retrieve all collections",
        "operationId" : "getAllCollections2UsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : true
      }
    },
    "/rest/v1.1/collection/collection" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Retrieve existing collection content",
        "operationId" : "getCollection2UsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The id of the collection for which the data will be retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Collection" ],
        "summary" : "Create new empty collection with given name",
        "operationId" : "addCollection2UsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionName",
          "in" : "query",
          "description" : "The name of the collection that will be created",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preload",
          "in" : "query",
          "description" : "Defined whether to preload collection",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "evictable",
          "in" : "query",
          "description" : "Defined whether the collection can be evicted",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "purposes",
          "in" : "query",
          "description" : "The newly declared purposes of the collection",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
            },
            "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Collection" ],
        "summary" : "Delete existing collection with associated profiles and faces.",
        "operationId" : "deleteCollection2UsingDELETE",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The id of the collection that will be removed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : true
      }
    },
    "/rest/v1.1/collection/export/csv" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Retrieve collection content for data analysis.",
        "operationId" : "exportCSVUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The id of the collection for which the data will be retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/collection/purpose" : {
      "put" : {
        "tags" : [ "Collection" ],
        "summary" : "Change purpose of existing collection",
        "operationId" : "repurposeCollectionUsingPUT",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The id of the collection for which the data will be retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "purposes",
          "in" : "query",
          "description" : "The newly declared purposes of the collection",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
            },
            "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : true
      }
    },
    "/rest/v1.1/collection/{id}" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Retrieve existing collection content",
        "operationId" : "getCollectionUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the collection for which the data will be retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "post" : {
        "tags" : [ "Collection" ],
        "summary" : "Update an existing collection with a given id",
        "operationId" : "updateCollection2UsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name of the collection that will be updated",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "purposes",
          "in" : "query",
          "description" : "The newly declared purposes of the collection",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
            },
            "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the collection that will be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Collection" ],
        "summary" : "Delete existing collection with associated profiles and faces.",
        "operationId" : "deleteCollectionUsingDELETE",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the collection that will be removed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      },
      "patch" : {
        "tags" : [ "Collection" ],
        "summary" : "Update an existing collection with a given id",
        "operationId" : "updateCollectionUsingPATCH",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name of the collection that will be updated",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "purposes",
          "in" : "query",
          "description" : "The newly declared purposes of the collection",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
            },
            "enum" : [ "FEATURES", "LANDMARKS", "ATTRIBUTES" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the collection that will be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/rest/v1.1/collection/{id}/profile" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Gets all the profiles associated to a collection",
        "operationId" : "getAllCollectionProfilesUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The collection that contains the profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/profile/classificationAttributes" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Gets classification attributes from a profile",
        "operationId" : "getClassificationAttributesFromProfileUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "The profile associated with the classification attributes",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The collection that contains the profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Profile" ],
        "summary" : "Maps classification attributes to a profile",
        "operationId" : "mapClassificationAttributesToProfileUsingPUT",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "The profile associated with the classification attributes",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The collection that contains the profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classificationAttributes",
          "in" : "query",
          "description" : "Comma separated key:value classification attributes",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Profile" ],
        "summary" : "Removes classification attributes from a profile",
        "operationId" : "removeClassificationAttributesFromProfileUsingDELETE",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "The profile associated with the classification attributes",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The collection that contains the profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : true
      }
    },
    "/rest/v1.1/profile/enrollmentStatus" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Gets the enrollment status of a profile: information on whether it is suitable for authentication.",
        "operationId" : "getProfileEnrollmentStatusUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "The profile that contains the faces",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The collection that contains the profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/profile/map" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Gets all the faceHashes associated to a profile",
        "operationId" : "getFacesFromProfileUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "The profile that contains the faces",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The collection that contains the profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Adds (maps) a list of faces, identified by faceHashes, to a profile, identified by profileId",
        "operationId" : "mapFacesToProfileUsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "faceHashes",
          "in" : "query",
          "description" : "Comma separated face hashes, that will be associated to a profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "The profile that will store the face",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The collection that contains the profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile" ],
        "summary" : "Removes (unmaps) a list of faces, identified by faceHashes, from a profile, identified by profileId",
        "operationId" : "removeFacesFromProfileUsingDELETE",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "faceHashes",
          "in" : "query",
          "description" : "Comma separated face hashes, that will be removed from a profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "The profile that contains the face",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The collection that contains the profile",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/rest/v1.1/profile/profile" : {
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Creates a new profile with no faces associated to it (empty profile)",
        "operationId" : "addProfileUsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "Uniquely identified collection that can store multiple profiles",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalId",
          "in" : "query",
          "description" : "External reference to additional information you don’t want to share with VisageCloud",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "screenName",
          "in" : "query",
          "description" : "Human-readable label for the profile",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labels",
          "in" : "query",
          "description" : "Allows you to do finer filtering in face recognition",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "classificationAttributes",
          "in" : "query",
          "description" : "Comma separated key:value classification attributes",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "Comma separated key:value details of profile",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile" ],
        "summary" : "Deletes a profile and unmaps all its faces",
        "operationId" : "deleteProfile2UsingDELETE",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "Uniquely identified collection that can store multiple profiles",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "The profile id (provide this if you don't have the externalId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : true
      }
    },
    "/rest/v1.1/profile/{id}" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Retrieves a profile",
        "operationId" : "getProfileUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "Uniquely identified collection that can store multiple profiles",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "withFaces",
          "in" : "query",
          "description" : "Retrieves the profile with all its associated faces",
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The profile id (provide this if you don't have the externalId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile" ],
        "summary" : "Deletes a profile and unmaps all its faces",
        "operationId" : "deleteProfileUsingDELETE",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "Uniquely identified collection that can store multiple profiles",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The profile id (provide this if you don't have the externalId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      },
      "patch" : {
        "tags" : [ "Profile" ],
        "summary" : "Update an existing profile with a given id",
        "operationId" : "updateProfileUsingPATCH",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the profile that will be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "Uniquely identified collection that can store multiple profiles",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalId",
          "in" : "query",
          "description" : "External reference to additional information you don’t want to share with VisageCloud",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "screenName",
          "in" : "query",
          "description" : "Human-readable label for the profile",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labels",
          "in" : "query",
          "description" : "Allows you to do finer filtering in face recognition",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "classificationAttributes",
          "in" : "query",
          "description" : "Comma separated key:value classification attributes",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "Comma separated key:value details of profile",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/rest/v1.1/stream/all" : {
      "get" : {
        "tags" : [ "Stream" ],
        "summary" : "Show status of all streams from account",
        "operationId" : "streamsByAccountUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/stream/attendance" : {
      "get" : {
        "tags" : [ "Stream" ],
        "summary" : "Get last N recognized individuals from stream",
        "operationId" : "getLastNAttedanceUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamIds",
          "in" : "query",
          "description" : "The id of the stream for which the frames will be retrieved",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "How many frames to retrieve at a time",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/stream/cleanup" : {
      "patch" : {
        "tags" : [ "Stream" ],
        "summary" : "Cleanup frames older than specified timeframe",
        "operationId" : "cleanupStreamUsingPATCH",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamId",
          "in" : "query",
          "description" : "The id of the stream that will be stopped",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Frames older than interval (seconds) will be cleaned up",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/rest/v1.1/stream/frameImage" : {
      "get" : {
        "tags" : [ "Stream" ],
        "summary" : "Get individual frame image",
        "operationId" : "getFrameImageUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamId",
          "in" : "query",
          "description" : "The id of the stream for which the frames will be retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timestamp",
          "in" : "query",
          "description" : "Timestamp of frame to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "image/jpeg" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                    "type" : "string",
                    "format" : "byte"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/stream/frames" : {
      "get" : {
        "tags" : [ "Stream" ],
        "summary" : "Get last processed N frames from stream",
        "operationId" : "getLastNFramesUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey or readOnlyKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamId",
          "in" : "query",
          "description" : "The id of the stream for which the frames will be retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "How many frames to retrieve at a time",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "collectionId",
          "in" : "query",
          "description" : "The collection id you want to run recognition against",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labels",
          "in" : "query",
          "description" : "Labels associated with the given picture or picture URL",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "attributeFilters",
          "in" : "query",
          "description" : "Filters that will be applied on the recognition operation",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "NO_FILTER", "GENDER_FILTER", "AGE_GROUP_FILTER" ]
            },
            "enum" : [ "NO_FILTER", "GENDER_FILTER", "AGE_GROUP_FILTER" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/stream/start" : {
      "patch" : {
        "tags" : [ "Stream" ],
        "summary" : "Start existing stream",
        "operationId" : "startStreamUsingPATCH",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamId",
          "in" : "query",
          "description" : "The id of the stream that will be started",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/rest/v1.1/stream/stop" : {
      "patch" : {
        "tags" : [ "Stream" ],
        "summary" : "Stop existing stream",
        "operationId" : "stopStreamUsingPATCH",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamId",
          "in" : "query",
          "description" : "The id of the stream that will be stopped",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/rest/v1.1/stream/stream" : {
      "post" : {
        "tags" : [ "Stream" ],
        "summary" : "Create new stream with given name",
        "operationId" : "addStreamUsingPOST",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name of the stream that will be created",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url",
          "in" : "query",
          "description" : "The url of the stream",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "method",
          "in" : "query",
          "description" : "Streaming method",
          "schema" : {
            "type" : "string",
            "default" : "WEBRTC_PUSH",
            "enum" : [ "WEBRTC_PULL", "WEBRTC_PUSH", "INGESTION_ENDPOINT" ]
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "Username",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "Password",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipFramesWithNoFaces",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the original picture to be stored for later retrieval",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "retentionTime",
          "in" : "query",
          "description" : "Number of seconds for frames to be kept. Default is 605000s (7 days)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 605000
          }
        }, {
          "name" : "storeOriginalFrames",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the original picture to be stored for later retrieval",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "storeAttendanceFaces",
          "in" : "query",
          "description" : "Boolean value indicating whether you want to store permanently store faces clippings of the recognized faces",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "storeAttendanceFrames",
          "in" : "query",
          "description" : "Boolean value indicating whether you want to store permanently store frames with a recognized face in them",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "description" : "Boolean value indicating whether the stream is currently active or not",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "associatedCollections",
          "in" : "query",
          "description" : "List of collection ids which will be used to measure attendance",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "Attributes of the stream",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/rest/v1.1/stream/{id}" : {
      "delete" : {
        "tags" : [ "Stream" ],
        "summary" : "Delete existing stream",
        "operationId" : "removeStreamUsingDELETE",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the stream that will be removed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/rest/v1.1/stream/{streamId}" : {
      "get" : {
        "tags" : [ "Stream" ],
        "summary" : "Get an existing stream with a given ID",
        "operationId" : "getStreamUsingGET",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamId",
          "in" : "path",
          "description" : "The id of the stream for which the data will be retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "patch" : {
        "tags" : [ "Stream" ],
        "summary" : "Update an existing stream with a given ID",
        "operationId" : "updateStreamUsingPATCH",
        "parameters" : [ {
          "name" : "accessKey",
          "in" : "query",
          "description" : "The accessKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretKey",
          "in" : "query",
          "description" : "The secretKey provided by VisageCloud",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamId",
          "in" : "path",
          "description" : "The id of the stream that will be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name of the stream that will be updated",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url",
          "in" : "query",
          "description" : "The url of the stream",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "method",
          "in" : "query",
          "description" : "Streaming method",
          "schema" : {
            "type" : "string",
            "enum" : [ "WEBRTC_PULL", "WEBRTC_PUSH", "INGESTION_ENDPOINT" ]
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "Username",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "Password",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipFramesWithNoFaces",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the original picture to be stored for later retrieval",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "retentionTime",
          "in" : "query",
          "description" : "Number of seconds for frames to be kept",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeOriginalFrames",
          "in" : "query",
          "description" : "Boolean value indicating whether you want the original picture to be stored for later retrieval",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "storeAttendanceFaces",
          "in" : "query",
          "description" : "Boolean value indicating whether you want to store permanently store faces clippings of the recognized faces",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "storeAttendanceFrames",
          "in" : "query",
          "description" : "Boolean value indicating whether you want to store permanently store frames with a recognized face in them",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "description" : "Boolean value indicating whether the stream is currently active or not",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "associatedCollections",
          "in" : "query",
          "description" : "List of collection ids which will be used to measure attendance",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "Attributes of the stream",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "RestResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "payload" : {
            "type" : "object"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "StreamingResponseBody" : {
        "type" : "object"
      }
    }
  }
}