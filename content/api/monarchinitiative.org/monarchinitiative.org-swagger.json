{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "/api"
  } ],
  "info" : {
    "description" : "API integration layer for linked biological objects.\n\n __Source:__ https://github.com/biolink/biolink-api/",
    "license" : {
      "name" : "BSD3"
    },
    "title" : "BioLink API",
    "version" : "1.1.14",
    "x-apisguru-categories" : [ "open_data" ],
    "x-origin" : [ {
      "format" : "openapi",
      "url" : "https://api.monarchinitiative.org/api/swagger.json",
      "version" : "3.0"
    } ],
    "x-providerName" : "monarchinitiative.org",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_apis.guru_assets_images_no-logo.svg"
    }
  },
  "tags" : [ {
    "description" : "Retrieval of domain entities plus associations",
    "name" : "bioentity"
  }, {
    "description" : "Retrieve associations between entities or entity and descriptors",
    "name" : "association"
  }, {
    "description" : "Operations on GO Causal Activity Models (GO-CAMs)",
    "name" : "cam"
  }, {
    "description" : "Operations over sets of entities",
    "name" : "bioentityset"
  }, {
    "description" : "Map gene IDs to their homologs",
    "name" : "bioentityset/homologs"
  }, {
    "description" : "maps a set of entities to a slim",
    "name" : "bioentityset/slimmer"
  }, {
    "description" : "Operations on evidence graphs",
    "name" : "evidence/graph"
  }, {
    "description" : "Operations to retrieve sequence features",
    "name" : "genome/features"
  }, {
    "description" : "Operations over data graphs",
    "name" : "graph"
  }, {
    "description" : "mapping and resolution of identifiers",
    "name" : "identifier/mapper"
  }, {
    "description" : "identifier prefixes",
    "name" : "identifier/prefixes"
  }, {
    "description" : "Perform bulk operations",
    "name" : "mart"
  }, {
    "description" : "annotate text using named entities",
    "name" : "nlp/annotate"
  }, {
    "description" : "extract a subgraph from an ontology",
    "name" : "ontol"
  }, {
    "description" : "Assign labels to IDs",
    "name" : "ontol/labeler"
  }, {
    "description" : "Retrieve IDs for labels",
    "name" : "ontol/identifier"
  }, {
    "description" : "Operations on Ontology Terms and Subsets",
    "name" : "ontology"
  }, {
    "description" : "OWL-level operations on an ontology",
    "name" : "owl/ontology"
  }, {
    "description" : "pairwise similarity between two entities",
    "name" : "pair/sim"
  }, {
    "description" : "Individual humans (including patients), or organisms",
    "name" : "individual"
  }, {
    "description" : "Usage of different relationship types",
    "name" : "relation/usage"
  }, {
    "description" : "Search for entities",
    "name" : "search"
  }, {
    "description" : "Operations related to sets of variants",
    "name" : "variation/set"
  }, {
    "description" : "Perform semantic similarity, ranking, and sufficiency scoring",
    "name" : "sim"
  }, {
    "description" : "Match patients with similar diseases and non-human genes based on their phenotypes",
    "name" : "mme"
  }, {
    "description" : "Get metadata",
    "name" : "metadata"
  } ],
  "paths" : {
    "/association/between/{subject}/{object}" : {
      "parameters" : [ {
        "description" : "Return associations pointing to this node, e.g. MP:0013765. Can also be a biological entity such as a gene",
        "in" : "path",
        "name" : "object",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "Return associations emanating from this node, e.g. MGI:1342287 (If ID is from an ontology then results would include inferred associations, by default)",
        "in" : "path",
        "name" : "subject",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Given two entities (e.g. a particular gene and a particular disease), if these two entities\nare connected (directly or indirectly), then return the association objects describing\nthe connection.",
        "operationId" : "get_associations_between",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns associations connecting two entities",
        "tags" : [ "association" ]
      }
    },
    "/association/find/{subject_category}" : {
      "parameters" : [ {
        "description" : "Category of entity at link Subject (source), e.g. gene, disease, phenotype",
        "in" : "path",
        "name" : "subject_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_association_by_subject_category_search",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Subject taxon ID, e.g. NCBITaxon:9606 (Includes inferred associations, by default)",
          "in" : "query",
          "name" : "subject_taxon",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)",
          "in" : "query",
          "name" : "object_taxon",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc.",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matching associations for a given subject category",
        "tags" : [ "association" ]
      }
    },
    "/association/find/{subject_category}/{object_category}" : {
      "parameters" : [ {
        "description" : "Category of entity at link Object (target), e.g. gene, disease, phenotype",
        "in" : "path",
        "name" : "object_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "Category of entity at link Subject (source), e.g. gene, disease, phenotype",
        "in" : "path",
        "name" : "subject_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_association_by_subject_and_object_category_search",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Subject CURIE",
          "in" : "query",
          "name" : "subject",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Object CURIE",
          "in" : "query",
          "name" : "object",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Subject taxon ID, e.g. NCBITaxon:9606 (Includes inferred associations, by default)",
          "in" : "query",
          "name" : "subject_taxon",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)",
          "in" : "query",
          "name" : "object_taxon",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc.",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matching associations between a given subject and object category",
        "tags" : [ "association" ]
      }
    },
    "/association/from/{subject}" : {
      "parameters" : [ {
        "description" : "Return associations emanating from this node, e.g. NCBIGene:84570, ZFIN:ZDB-GENE-050417-357 (If ID is from an ontology then results would include inferred associations, by default)",
        "in" : "path",
        "name" : "subject",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_associations_from",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)",
          "in" : "query",
          "name" : "object_taxon",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc.",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matching associations starting from a given subject (source)",
        "tags" : [ "association" ]
      }
    },
    "/association/to/{object}" : {
      "parameters" : [ {
        "description" : "Return associations pointing to this node, e.g. specifying MP:0013765 will return all genes, variants, strains, etc. annotated with this term. Can also be a biological entity such as a gene",
        "in" : "path",
        "name" : "object",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_associations_to",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matching associations pointing to a given object (target)",
        "tags" : [ "association" ]
      }
    },
    "/association/type/{association_type}" : {
      "parameters" : [ {
        "description" : "Association type, eg gene_phenotype",
        "in" : "path",
        "name" : "association_type",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_association_by_subject_and_assoc_type",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Subject CURIE",
          "in" : "query",
          "name" : "subject",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Object CURIE",
          "in" : "query",
          "name" : "object",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matching associations of a given type",
        "tags" : [ "association" ]
      }
    },
    "/association/{id}" : {
      "parameters" : [ {
        "description" : "identifier for an association, e.g. f5ba436c-f851-41b3-9d9d-bb2b5fc879d4",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "An association connects, at a minimum, two things, designated subject and object,\nvia some relationship. Associations also include evidence, provenance etc.",
        "operationId" : "get_association_object",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns the association with a given identifier",
        "tags" : [ "association" ]
      }
    },
    "/bioentity/anatomy/{id}/genes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of anatomical entity, e.g. GO:0005634 (nucleus), UBERON:0002037 (cerebellum), CL:0000540 (neuron). Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_anatomy_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genes associated with a given anatomy",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/anatomy/{id}/genes/{taxid}" : {
      "parameters" : [ {
        "description" : "Species or high level taxon grouping, e.g  NCBITaxon:10090 (Mus musculus)",
        "in" : "path",
        "name" : "taxid",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "CURIE identifier of anatomical entity, e.g. GO:0005634 (nucleus), UBERON:0002037 (cerebellum), CL:0000540 (neuron). Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "deprecated" : true,
        "description" : "For example, + NCBITaxon:10090 (mouse)",
        "operationId" : "get_anatomy_gene_by_taxon_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns gene IDs for all genes associated with a given anatomy, filtered by taxon",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/case/{id}/diseases" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a case",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_case_disease_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns diseases associated with a case",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/case/{id}/genotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a case",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_case_genotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genotypes associated with a case",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/case/{id}/models" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a case",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_case_model_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns models associated with a case",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/case/{id}/phenotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a case",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_case_phenotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns phenotypes associated with a case",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/case/{id}/variants" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a case",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_case_variant_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns variants associated with a case",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/cases" : {
      "parameters" : [ {
        "description" : "CURIE identifier of disease, e.g. MONDO:0007103, MONDO:0010918. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_disease_case_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns cases associated with a disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/genes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_disease_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Additional filters: causal, non_causal, both",
          "explode" : true,
          "in" : "query",
          "name" : "association_type",
          "schema" : {
            "default" : "both",
            "enum" : [ "causal", "non_causal", "both" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genes associated with a disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/genotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of disease, e.g. Orphanet:399158, DOID:0080008. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_disease_genotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genotypes associated with a disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/models" : {
      "parameters" : [ {
        "description" : "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "In the association object returned, the subject will be the disease, and the object will be the model.\nThe model may be a gene or genetic element.\n\nIf the query disease is a general class, the association subject may be to a specific disease.\n\nIn some cases the association will be *direct*, for example if a paper asserts a genotype is a model of a disease.\n\nIn other cases, the association will be *indirect*, for\nexample, chaining over orthology. In these cases the chain\nwill be reflected in the *evidence graph*\n\n* TODO: provide hook into owlsim for dynamic computation of models by similarity",
        "operationId" : "get_disease_model_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns associations to models of the disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/models/{taxon}" : {
      "parameters" : [ {
        "description" : "CURIE of organism taxonomy class to constrain models, e.g NCBITaxon:10090 (M. musculus).\n\n Higher level taxa may be used",
        "in" : "path",
        "name" : "taxon",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "deprecated" : true,
        "description" : "See /disease/<id>/models route for full details",
        "operationId" : "get_disease_model_taxon_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns associations to models of the disease constrained by taxon",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/pathways" : {
      "parameters" : [ {
        "description" : "CURIE identifier of disease, e.g. DOID:4450. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_disease_pathway_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns pathways associated with a disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/phenotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of disease, e.g. OMIM:605543, Orphanet:1934, DOID:678. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_disease_phenotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/D2PAssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns phenotypes associated with disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/publications" : {
      "parameters" : [ {
        "description" : "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_disease_publication_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns publications associated with a disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/treatment" : {
      "parameters" : [ {
        "description" : "CURIE identifier of disease, e.g. DOID:2841 (asthma). Equivalent IDs not yet supported",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "e.g. drugs or small molecules used to treat",
        "operationId" : "get_disease_substance_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns substances associated with a disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/disease/{id}/variants" : {
      "parameters" : [ {
        "description" : "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_disease_variant_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns variants associated with a disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/function/{id}" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a function term (e.g. GO:0044598)",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_function_associations",
        "parameters" : [ {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "default" : 0,
            "type" : "integer"
          }
        }, {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "explode" : true,
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns annotations associated to a function term",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/function/{id}/genes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a GO term, e.g. GO:0044598",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_function_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "relationship type ('involved_in', 'involved_in_regulation_of' or 'acts_upstream_of_or_within')",
          "explode" : true,
          "in" : "query",
          "name" : "relationship_type",
          "schema" : {
            "default" : "involved_in",
            "enum" : [ "involved_in", "involved_in_regulation_of", "acts_upstream_of_or_within" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genes associated to a GO term",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/function/{id}/publications" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a GO term, e.g. GO:0044598",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_function_publication_associations",
        "parameters" : [ {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "default" : 0,
            "type" : "integer"
          }
        }, {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "explode" : true,
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns publications associated to a GO term",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/function/{id}/taxons" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a GO term, e.g. GO:0044598",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_function_taxon_associations",
        "parameters" : [ {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "default" : 0,
            "type" : "integer"
          }
        }, {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "explode" : true,
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns taxons associated to a GO term",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/anatomy" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. NCBIGene:13434",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_anatomy_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns anatomical entities associated with a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/cases" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. HGNC:613, HGNC:11025",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_case_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns cases associated with a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/diseases" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. NCBIGene:4750. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_disease_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Additional filters: causal, non_causal, both",
          "explode" : true,
          "in" : "query",
          "name" : "association_type",
          "schema" : {
            "default" : "both",
            "enum" : [ "causal", "non_causal", "both" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns diseases associated with gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/expression/anatomy" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. NCBIGene:4750. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_expression_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns expression events for a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/function" : {
      "parameters" : [ {
        "description" : "id, e.g. NCBIGene:6469. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "IMPLEMENTATION DETAILS\n----------------------\n\nNote: currently this is implemented as a query to the GO/AmiGO solr instance.\nThis directly supports IDs such as:\n\n - ZFIN e.g. ZFIN:ZDB-GENE-050417-357\n\nNote that the AmiGO GOlr natively stores MGI annotations to MGI:MGI:nn. However,\nthe standard for biolink is MGI:nnnn, so you should use this (will be transparently\nmapped to legacy ID)\n\nAdditionally, for some species such as Human, GO has the annotation attached to the UniProt ID.\nAgain, this should be transparently handled; e.g. you can use NCBIGene:6469, and this will be\nmapped behind the scenes for querying.",
        "operationId" : "get_gene_function_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns function associations for a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/genotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. ZFIN:ZDB-GENE-980526-166",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_genotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genotypes associated with a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/homologs" : {
      "parameters" : [ {
        "description" : "id, e.g. NCBIGene:3630. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_homolog_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Taxon CURIE of homolog, e.g. NCBITaxon:9606 (Can be an ancestral node in the ontology; includes inferred associations by default)",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "P (paralog), O (Ortholog) or LDO (least-diverged ortholog)",
          "explode" : true,
          "in" : "query",
          "name" : "homology_type",
          "schema" : {
            "enum" : [ "P", "O", "LDO" ],
            "type" : "string"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns homologs for a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/interactions" : {
      "parameters" : [ {
        "description" : "id, e.g. NCBIGene:3630. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_interactions",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns interactions for a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/models" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. NCBIGene:17988",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_model_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns models associated with a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/ortholog/diseases" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. NCBIGene:4750",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_ortholog_disease_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Return diseases associated with orthologs of a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/ortholog/phenotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. NCBIGene:4750",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_ortholog_phenotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Return phenotypes associated with orthologs for a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/pathways" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. NCBIGene:50846. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_pathway_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns pathways associated with gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/phenotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. NCBIGene:4750. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_phenotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns phenotypes associated with gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/publications" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. NCBIGene:4750",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_publication_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns publications associated with a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/gene/{id}/variants" : {
      "parameters" : [ {
        "description" : "CURIE identifier of gene, e.g. HGNC:10896",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_gene_variant_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns variants associated with a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/genotype/{id}/cases" : {
      "parameters" : [ {
        "description" : "CURIE identifier of genotype, e.g. dbSNPIndividual:10440, dbSNPIndividual:22633",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_genotype_case_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns cases associated with a genotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/genotype/{id}/diseases" : {
      "parameters" : [ {
        "description" : "CURIE identifier of genotype, e.g. dbSNPIndividual:11441 (if non-human will return models)",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_genotype_disease_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns diseases associated with a genotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/genotype/{id}/genes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-6607",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_genotype_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genes associated with a genotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/genotype/{id}/genotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-6607",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Genotypes may be related to one another according to the GENO model",
        "operationId" : "get_genotype_genotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genotypes-genotype associations",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/genotype/{id}/models" : {
      "parameters" : [ {
        "description" : "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-6607",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_genotype_model_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns models associated with a genotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/genotype/{id}/phenotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-4286",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_genotype_phenotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns phenotypes associated with a genotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/genotype/{id}/publications" : {
      "parameters" : [ {
        "description" : "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-6607",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_genotype_publication_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns publications associated with a genotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/genotype/{id}/variants" : {
      "parameters" : [ {
        "description" : "CURIE identifier of genotype, e.g. MONARCH:FBgeno422705",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_genotype_variant_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genotypes-variant associations",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/goterm/{id}/genes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a GO term, e.g. GO:0044598",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "deprecated" : true,
        "operationId" : "get_goterm_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "relationship type ('involved_in', 'involved_in_regulation_of' or 'acts_upstream_of_or_within')",
          "explode" : true,
          "in" : "query",
          "name" : "relationship_type",
          "schema" : {
            "default" : "involved_in",
            "enum" : [ "involved_in", "involved_in_regulation_of", "acts_upstream_of_or_within" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns associations to GO terms for a gene",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/model/{id}/cases" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a model, e.g. Coriell:GM22295, Coriell:HG02187",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_model_case_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns cases associated with a model",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/model/{id}/diseases" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a model, e.g. MGI:5573196",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_model_disease_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns diseases associated with a model",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/model/{id}/genes" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a model, e.g. MMRRC:042787",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_model_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genes associated with a model",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/model/{id}/genotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a model, e.g. Coriell:NA16660",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_model_genotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genotypes associated with a model",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/model/{id}/phenotypes" : {
      "parameters" : [ {
        "description" : "id",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_model_phenotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns phenotypes associated with a model",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/model/{id}/publications" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a model, e.g. MGI:5644542",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_model_publication_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns publications associated with a model",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/model/{id}/variants" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a model, e.g. MMRRC:042787",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_model_variant_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns variants associated with a model",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/pathway/{id}/diseases" : {
      "parameters" : [ {
        "description" : "CURIE any pathway element. E.g. REACT:R-HSA-5387390",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_pathway_disease_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns diseases associated with a pathway",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/pathway/{id}/genes" : {
      "parameters" : [ {
        "description" : "CURIE any pathway element. E.g. REACT:R-HSA-5387390",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_pathway_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genes associated with a pathway",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/pathway/{id}/phenotypes" : {
      "parameters" : [ {
        "description" : "CURIE any pathway element. E.g. REACT:R-HSA-5387390",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_pathway_phenotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns phenotypes associated with a pathway",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/phenotype/{id}/anatomy" : {
      "parameters" : [ {
        "description" : "CURIE identifier of phenotype, e.g. MP:0008521. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Example IDs:\n\n * MP:0008521 abnormal Bowman membrane",
        "operationId" : "get_phenotype_anatomy_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NamedObject"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns anatomical entities associated with a phenotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/phenotype/{id}/cases" : {
      "parameters" : [ {
        "description" : "Pheno class CURIE identifier, e.g  HP:0011951 (Aspiration pneumonia), HP:0002450 (Abnormal motor neuron morphology)",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_phenotype_case_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns cases associated with a phenotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/phenotype/{id}/diseases" : {
      "parameters" : [ {
        "description" : "CURIE identifier of phenotype, e.g. HP:0007359. Equivalent IDs can be used with same results",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_phenotype_disease_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/D2PAssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns diseases associated with a phenotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/phenotype/{id}/gene/{taxid}/ids" : {
      "parameters" : [ {
        "description" : "Species or high level taxon grouping, e.g  NCBITaxon:10090 (Mus musculus)",
        "in" : "path",
        "name" : "taxid",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "Pheno class CURIE identifier, e.g  MP:0001569 (abnormal circulating bilirubin level)",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "deprecated" : true,
        "description" : "For example, MP:0001569 + NCBITaxon:10090 (mouse)",
        "operationId" : "get_phenotype_gene_by_taxon_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns gene IDs for all genes associated with a given phenotype, filtered by taxon",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/phenotype/{id}/genes" : {
      "parameters" : [ {
        "description" : "Pheno class CURIE identifier, e.g  WBPhenotype:0000180 (axon morphology variant), MP:0001569 (abnormal circulating bilirubin level), ",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_phenotype_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genes associated with a phenotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/phenotype/{id}/genotypes" : {
      "parameters" : [ {
        "description" : "Pheno class CURIE identifier, e.g  WBPhenotype:0000180 (axon morphology variant), MP:0001569 (abnormal circulating bilirubin level)",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_phenotype_genotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genotypes associated with a phenotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/phenotype/{id}/pathways" : {
      "parameters" : [ {
        "description" : "Pheno class CURIE identifier, e.g  MP:0001569 (abnormal circulating bilirubin level)",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_phenotype_pathway_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns pathways associated with a phenotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/phenotype/{id}/publications" : {
      "parameters" : [ {
        "description" : "Pheno class CURIE identifier, e.g  WBPhenotype:0000180 (axon morphology variant), MP:0001569 (abnormal circulating bilirubin level)",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_phenotype_publication_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns publications associated with a phenotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/phenotype/{id}/variants" : {
      "parameters" : [ {
        "description" : "Pheno class CURIE identifier, e.g  WBPhenotype:0000180 (axon morphology variant), MP:0001569 (abnormal circulating bilirubin level)",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_phenotype_variant_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns variants associated with a phenotype",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/publication/{id}/diseases" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a publication, e.g. PMID:11751940",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_publication_disease_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns diseases associated with a publication",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/publication/{id}/genes" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a publication, e.g. PMID:11751940",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_publication_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genes associated with a publication",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/publication/{id}/genotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a publication, e.g. PMID:11751940",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_publication_genotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genotypes associated with a publication",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/publication/{id}/models" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a publication, e.g. PMID:11751940",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_publication_model_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns models associated with a publication",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/publication/{id}/phenotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a publication, e.g. PMID:11751940",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_publication_phenotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns phenotypes associated with a publication",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/publication/{id}/variants" : {
      "parameters" : [ {
        "description" : "CURIE identifier for a publication, e.g. PMID:11751940",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_publication_variant_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns variants associated with a publication",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/substance/{id}/participant_in" : {
      "parameters" : [ {
        "description" : "CURIE identifier of substance, e.g. CHEBI:40036",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Examples relationships:\n\n * substance is a metabolite of a process\n * substance is synthesized by a process\n * substance is modified by an activity\n * substance elicits a response program/pathway\n * substance is transported by activity or pathway\n\nFor example, CHEBI:40036 (amitrole)",
        "operationId" : "get_substance_participant_in_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns associations between an activity and process and the specified substance",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/substance/{id}/roles" : {
      "parameters" : [ {
        "description" : "CURIE identifier of substance, e.g. CHEBI:40036",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Roles may be human-oriented (e.g. pesticide) or molecular (e.g. enzyme inhibitor)",
        "operationId" : "get_substance_role_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns associations between given drug and roles",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/substance/{id}/treats" : {
      "parameters" : [ {
        "description" : "CURIE identifier of substance, e.g. CHEBI:40036",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "e.g. drugs or small molecules used to treat",
        "operationId" : "get_substance_treats_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns substances associated with a disease",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/variant/{id}/cases" : {
      "parameters" : [ {
        "description" : "CURIE identifier of variant, e.g. OMIM:309550.0004, dbSNP:rs5030868",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_variant_case_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns cases associated with a variant",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/variant/{id}/diseases" : {
      "parameters" : [ {
        "description" : "CURIE identifier of variant, e.g. ClinVarVariant:14925",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_variant_disease_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns diseases associated with a variant",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/variant/{id}/genes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of variant, e.g. ZFIN:ZDB-ALT-010427-8, ClinVarVariant:39783",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_variant_gene_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genes associated with a variant",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/variant/{id}/genotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of variant, e.g. ZFIN:ZDB-ALT-010427-8",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_variant_genotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns genotypes associated with a variant",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/variant/{id}/models" : {
      "parameters" : [ {
        "description" : "CURIE identifier of variant, e.g. OMIM:607623.0012, dbSNP:rs5030868",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_variant_model_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns models associated with a variant",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/variant/{id}/phenotypes" : {
      "parameters" : [ {
        "description" : "CURIE identifier of variant, e.g. ZFIN:ZDB-ALT-010427-8, ClinVarVariant:39783",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_variant_phenotype_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns phenotypes associated with a variant",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/variant/{id}/publications" : {
      "parameters" : [ {
        "description" : "CURIE identifier of variant, e.g. ZFIN:ZDB-ALT-010427-8, ClinVarVariant:39783",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_variant_publication_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns publications associated with a variant",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/{id}" : {
      "parameters" : [ {
        "description" : "id, e.g. NCBIGene:84570",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_generic_object",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BioObject"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns basic info on object of any type",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/{id}/associations" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_generic_associations",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Set true to exclude inferred taxa",
          "in" : "query",
          "name" : "direct_taxon",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "A relation CURIE to filter associations",
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Sorting responses <field> <desc,asc>",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Query string to filter documents",
          "in" : "query",
          "name" : "q",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociationResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns associations for an entity regardless of the type",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentity/{type}/{id}" : {
      "parameters" : [ {
        "description" : "bioentity type",
        "in" : "path",
        "name" : "type",
        "required" : true,
        "schema" : {
          "enum" : [ "gene", "variant", "genotype", "phenotype", "disease", "goterm", "pathway", "anatomy", "substance", "individual", "publication", "model", "case" ],
          "type" : "string"
        }
      }, {
        "description" : "id, e.g. NCBIGene:84570",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_generic_object_by_type",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Enable faceting",
          "in" : "query",
          "name" : "facet",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Fields to facet on",
          "explode" : true,
          "in" : "query",
          "name" : "facet_fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If true, excludes evidence objects in response",
          "in" : "query",
          "name" : "unselect_evidence",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
          "in" : "query",
          "name" : "fetch_objects",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "If true, returns results in compact associations format",
          "in" : "query",
          "name" : "use_compact_associations",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
          "in" : "query",
          "name" : "direct",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Get association counts",
          "in" : "query",
          "name" : "get_association_counts",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Get distinct counts for associations (to be used in conjunction with 'get_association_counts' parameter)",
          "in" : "query",
          "name" : "distinct_counts",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Return basic info on an object for a given type",
        "tags" : [ "bioentity" ]
      }
    },
    "/bioentityset/associations" : {
      "get" : {
        "operationId" : "get_entity_set_associations",
        "parameters" : [ {
          "description" : "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests",
          "explode" : true,
          "in" : "query",
          "name" : "background",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "E.g. phenotype, function",
          "in" : "query",
          "name" : "object_category",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED",
          "in" : "query",
          "name" : "object_slim",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns compact associations for a given input set",
        "tags" : [ "bioentityset" ]
      }
    },
    "/bioentityset/descriptor/counts" : {
      "get" : {
        "operationId" : "get_entity_set_summary",
        "parameters" : [ {
          "description" : "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests",
          "explode" : true,
          "in" : "query",
          "name" : "background",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "E.g. phenotype, function",
          "in" : "query",
          "name" : "object_category",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED",
          "in" : "query",
          "name" : "object_slim",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Summary statistics for objects associated",
        "tags" : [ "bioentityset" ]
      }
    },
    "/bioentityset/graph" : {
      "get" : {
        "operationId" : "get_entity_set_graph_resource",
        "parameters" : [ {
          "description" : "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests",
          "explode" : true,
          "in" : "query",
          "name" : "background",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "E.g. phenotype, function",
          "in" : "query",
          "name" : "object_category",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED",
          "in" : "query",
          "name" : "object_slim",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "TODO Graph object spanning all entities",
        "tags" : [ "bioentityset" ]
      }
    },
    "/bioentityset/homologs/" : {
      "get" : {
        "operationId" : "get_entity_set_homologs",
        "parameters" : [ {
          "description" : "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns homology associations for a given input set of genes",
        "tags" : [ "bioentityset/homologs" ]
      }
    },
    "/bioentityset/overrepresentation" : {
      "get" : {
        "operationId" : "get_over_representation",
        "parameters" : [ {
          "description" : "E.g. phenotype, function",
          "in" : "query",
          "name" : "object_category",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests",
          "explode" : true,
          "in" : "query",
          "name" : "background",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Default: gene. Other types may be used e.g. disease but statistics may not make sense",
          "in" : "query",
          "name" : "subject_category",
          "schema" : {
            "default" : "gene",
            "type" : "string"
          }
        }, {
          "description" : "Exclude results with p-value greater than this",
          "in" : "query",
          "name" : "max_p_value",
          "schema" : {
            "default" : "0.05",
            "type" : "string"
          }
        }, {
          "description" : "ontology id. Must be obo id. Examples: go, mp, hp, uberon (optional: will be inferred if left blank)",
          "in" : "query",
          "name" : "ontology",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "must be NCBITaxon CURIE. Example: NCBITaxon:9606",
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Summary statistics for objects associated",
        "tags" : [ "bioentityset" ]
      }
    },
    "/bioentityset/slimmer/anatomy" : {
      "get" : {
        "operationId" : "get_entity_set_anatomy_slimmer",
        "parameters" : [ {
          "description" : "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID (IMPLEMENTED) or subset ID (TODO)",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If set, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "For a given gene(s), summarize its annotations over a defined set of slim",
        "tags" : [ "bioentityset/slimmer" ]
      }
    },
    "/bioentityset/slimmer/function" : {
      "get" : {
        "operationId" : "get_entity_set_function_slimmer",
        "parameters" : [ {
          "description" : "relationship type ('involved_in' or 'acts_upstream_of_or_within')",
          "explode" : true,
          "in" : "query",
          "name" : "relationship_type",
          "schema" : {
            "default" : "acts_upstream_of_or_within",
            "enum" : [ "involved_in", "acts_upstream_of_or_within" ],
            "type" : "string"
          }
        }, {
          "description" : "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID (IMPLEMENTED) or subset ID (TODO)",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If set, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "For a given gene(s), summarize its annotations over a defined set of slim",
        "tags" : [ "bioentityset/slimmer" ]
      }
    },
    "/bioentityset/slimmer/phenotype" : {
      "get" : {
        "operationId" : "get_entity_set_phenotype_slimmer",
        "parameters" : [ {
          "description" : "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID (IMPLEMENTED) or subset ID (TODO)",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "If set, excludes associations that involve IEAs (ECO:0000501)",
          "in" : "query",
          "name" : "exclude_automatic_assertions",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "beginning row",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "For a given gene(s), summarize its annotations over a defined set of slim",
        "tags" : [ "bioentityset/slimmer" ]
      }
    },
    "/cam/activity" : {
      "get" : {
        "operationId" : "get_activity_collection",
        "parameters" : [ {
          "description" : "string to search for in title of model",
          "in" : "query",
          "name" : "title",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "string to search for in contributor of model",
          "in" : "query",
          "name" : "contributor",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns list of models",
        "tags" : [ "cam" ]
      }
    },
    "/cam/instance/{id}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_instance_object",
        "parameters" : [ {
          "description" : "string to search for in title of model",
          "in" : "query",
          "name" : "title",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "string to search for in contributor of model",
          "in" : "query",
          "name" : "contributor",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matches",
        "tags" : [ "cam" ]
      }
    },
    "/cam/instances" : {
      "get" : {
        "operationId" : "get_model_instances",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns list of all instances",
        "tags" : [ "cam" ]
      }
    },
    "/cam/model" : {
      "get" : {
        "operationId" : "get_model_collection",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns list of ALL models",
        "tags" : [ "cam" ]
      }
    },
    "/cam/model/contributors" : {
      "get" : {
        "operationId" : "get_model_contributors",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns list of all contributors across all models",
        "tags" : [ "cam" ]
      }
    },
    "/cam/model/properties" : {
      "get" : {
        "operationId" : "get_model_properties",
        "parameters" : [ {
          "description" : "string to search for in title of model",
          "in" : "query",
          "name" : "title",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "string to search for in contributor of model",
          "in" : "query",
          "name" : "contributor",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns list of all properties used across all models",
        "tags" : [ "cam" ]
      }
    },
    "/cam/model/property_values" : {
      "get" : {
        "operationId" : "get_model_property_values",
        "parameters" : [ {
          "description" : "string to search for in title of model",
          "in" : "query",
          "name" : "title",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "string to search for in contributor of model",
          "in" : "query",
          "name" : "contributor",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns list property-values for all models",
        "tags" : [ "cam" ]
      }
    },
    "/cam/model/query" : {
      "get" : {
        "operationId" : "get_model_query",
        "parameters" : [ {
          "description" : "string to search for in title of model",
          "in" : "query",
          "name" : "title",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "string to search for in contributor of model",
          "in" : "query",
          "name" : "contributor",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns list of models matching query",
        "tags" : [ "cam" ]
      }
    },
    "/cam/model/{id}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_model_object",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns a complete model",
        "tags" : [ "cam" ]
      }
    },
    "/cam/physical_interaction" : {
      "get" : {
        "operationId" : "get_physical_interaction",
        "parameters" : [ {
          "description" : "string to search for in title of model",
          "in" : "query",
          "name" : "title",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "string to search for in contributor of model",
          "in" : "query",
          "name" : "contributor",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns list of models",
        "tags" : [ "cam" ]
      }
    },
    "/evidence/graph/{id}" : {
      "parameters" : [ {
        "description" : "association id, e.g. 68e686f6-d05b-46b8-ab1f-1da2fff97ada",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Note that every association is assumed to have a unique ID",
        "operationId" : "get_evidence_graph_object",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Graph"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns evidence graph object for a given association",
        "tags" : [ "evidence/graph" ]
      }
    },
    "/evidence/graph/{id}/table" : {
      "parameters" : [ {
        "description" : "association id, e.g. 68e686f6-d05b-46b8-ab1f-1da2fff97ada",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Note that every association is assumed to have a unique ID",
        "operationId" : "get_evidence_graph_table",
        "parameters" : [ {
          "description" : "If true, considers dc:source as edge",
          "in" : "query",
          "name" : "is_publication",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns evidence as a association_results object given an association",
        "tags" : [ "evidence/graph" ]
      }
    },
    "/genome/features/within/{build}/{reference}/{begin}/{end}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "build",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "in" : "path",
        "name" : "reference",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "in" : "path",
        "name" : "begin",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "in" : "path",
        "name" : "end",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_features_within_resource",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SequenceFeature"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matches",
        "tags" : [ "genome/features" ]
      }
    },
    "/graph/edges/from/{id}" : {
      "parameters" : [ {
        "description" : "CURIE e.g. HP:0000465",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_edge_resource",
        "parameters" : [ {
          "description" : "How far to traverse for neighbors",
          "in" : "query",
          "name" : "depth",
          "schema" : {
            "default" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Which direction to traverse (used only if relationship_type is defined)",
          "explode" : true,
          "in" : "query",
          "name" : "direction",
          "schema" : {
            "default" : "BOTH",
            "enum" : [ "INCOMING", "OUTGOING", "BOTH" ],
            "type" : "string"
          }
        }, {
          "description" : "Relationship type to traverse",
          "explode" : true,
          "in" : "query",
          "name" : "relationship_type",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Include sub-properties and equivalent properties",
          "in" : "query",
          "name" : "entail",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Which monarch graph to query",
          "explode" : true,
          "in" : "query",
          "name" : "graph",
          "schema" : {
            "default" : "data",
            "enum" : [ "data", "ontology" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Graph"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns edges emanating from a given node",
        "tags" : [ "graph" ]
      }
    },
    "/graph/node/{id}" : {
      "parameters" : [ {
        "description" : "CURIE e.g. HP:0000465",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "A node is an abstract representation of some kind of entity. The entity may be a physical thing such as a patient,\na molecular entity such as a gene or protein, or a conceptual entity such as a class from an ontology.",
        "operationId" : "get_node_resource",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/BioObject"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns a graph node",
        "tags" : [ "graph" ]
      }
    },
    "/identifier/mapper/{source}/{target}/" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "source",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "in" : "path",
        "name" : "target",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_identifier_mapper",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "TODO maps a list of identifiers from a source to a target",
        "tags" : [ "identifier/mapper" ]
      }
    },
    "/identifier/prefixes/" : {
      "get" : {
        "operationId" : "get_prefix_collection",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns list of prefixes",
        "tags" : [ "identifier/prefixes" ]
      }
    },
    "/identifier/prefixes/contract/{uri}" : {
      "parameters" : [ {
        "description" : "URI of entity to be contracted to identifier/CURIE, e.g \"http://www.informatics.jax.org/accession/MGI:1\"",
        "in" : "path",
        "name" : "uri",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_prefix_contract",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns contracted URI",
        "tags" : [ "identifier/prefixes" ]
      }
    },
    "/identifier/prefixes/expand/{id}" : {
      "parameters" : [ {
        "description" : "ID of entity to be contracted to URI, e.g \"MGI:1\"",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_prefix_expand",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns expanded URI",
        "tags" : [ "identifier/prefixes" ]
      }
    },
    "/individual/pedigree/{id}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_pedigree",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matches",
        "tags" : [ "individual" ]
      }
    },
    "/individual/{id}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_individual",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matches",
        "tags" : [ "individual" ]
      }
    },
    "/mart/case/{object_category}/{taxon}" : {
      "parameters" : [ {
        "description" : "taxon of case, must be of form NCBITaxon:9606",
        "in" : "path",
        "name" : "taxon",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "Category of entity at link Subject (target), e.g. phenotype, disease",
        "in" : "path",
        "name" : "object_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "NOTE: this route has a limiter on it, you may be restricted in the number of downloads per hour. Use carefully.",
        "operationId" : "get_mart_case_associations_resource",
        "parameters" : [ {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Bulk download of case associations",
        "tags" : [ "mart" ]
      }
    },
    "/mart/disease/{object_category}/{taxon}" : {
      "parameters" : [ {
        "description" : "taxon of disease, must be of form NCBITaxon:9606",
        "in" : "path",
        "name" : "taxon",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "Category of entity at link Object (target), e.g. phenotype, disease",
        "in" : "path",
        "name" : "object_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "NOTE: this route has a limiter on it, you may be restricted in the number of downloads per hour. Use carefully.",
        "operationId" : "get_mart_disease_associations_resource",
        "parameters" : [ {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Bulk download of disease associations",
        "tags" : [ "mart" ]
      }
    },
    "/mart/gene/{object_category}/{taxon}" : {
      "parameters" : [ {
        "description" : "taxon of gene, must be of form NCBITaxon:9606",
        "in" : "path",
        "name" : "taxon",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "Category of entity at link Object (target), e.g. phenotype, disease",
        "in" : "path",
        "name" : "object_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "NOTE: this route has a limiter on it, you may be restricted in the number of downloads per hour. Use carefully.",
        "operationId" : "get_mart_gene_associations_resource",
        "parameters" : [ {
          "description" : "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
          "explode" : true,
          "in" : "query",
          "name" : "slim",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Bulk download of gene associations",
        "tags" : [ "mart" ]
      }
    },
    "/mart/ortholog/{taxon1}/{taxon2}" : {
      "parameters" : [ {
        "description" : "object taxon, e.g. NCBITaxon:10090",
        "in" : "path",
        "name" : "taxon2",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "subject taxon, e.g. NCBITaxon:9606",
        "in" : "path",
        "name" : "taxon1",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_mart_ortholog_associations_resource",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Bulk download of orthologs",
        "tags" : [ "mart" ]
      }
    },
    "/mart/paralog/{taxon1}/{taxon2}" : {
      "parameters" : [ {
        "description" : "object taxon, e.g. NCBITaxon:9606",
        "in" : "path",
        "name" : "taxon2",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "subject taxon, e.g. NCBITaxon:9606",
        "in" : "path",
        "name" : "taxon1",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_mart_paralog_associations_resource",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Bulk download of paralogs",
        "tags" : [ "mart" ]
      }
    },
    "/metadata/datasets" : {
      "get" : {
        "operationId" : "get_metadata_for_datasets",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Get metadata for all datasets from SciGraph",
        "tags" : [ "metadata" ]
      }
    },
    "/mme/disease" : {
      "post" : {
        "operationId" : "post_disease_mme",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/mme"
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Match a patient to diseases based on their phenotypes",
        "tags" : [ "mme" ]
      }
    },
    "/mme/fly" : {
      "post" : {
        "operationId" : "post_fly_mme",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/mme"
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Match a patient to fruit fly genes based on similar phenotypes",
        "tags" : [ "mme" ]
      }
    },
    "/mme/mouse" : {
      "post" : {
        "operationId" : "post_mouse_mme",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/mme"
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Match a patient to mouse genes based on similar phenotypes",
        "tags" : [ "mme" ]
      }
    },
    "/mme/nematode" : {
      "post" : {
        "operationId" : "post_nematode_mme",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/mme"
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Match a patient to nematode genes based on similar phenotypes",
        "tags" : [ "mme" ]
      }
    },
    "/mme/zebrafish" : {
      "post" : {
        "operationId" : "post_zebrafish_mme",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/mme"
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Match a patient to zebrafish genes based on similar phenotypes",
        "tags" : [ "mme" ]
      }
    },
    "/nlp/annotate/" : {
      "get" : {
        "operationId" : "get_annotate",
        "parameters" : [ {
          "description" : "The text content to annotate",
          "in" : "query",
          "name" : "content",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Categories to include for annotation",
          "explode" : true,
          "in" : "query",
          "name" : "include_category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Categories to exclude for annotation",
          "explode" : true,
          "in" : "query",
          "name" : "exclude_category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "The minimum number of characters in the annotated entity",
          "in" : "query",
          "name" : "min_length",
          "schema" : {
            "default" : 4,
            "type" : "string"
          }
        }, {
          "description" : "Should only the longest entity be returned for an overlapping group",
          "in" : "query",
          "name" : "longest_only",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should abbreviations be included",
          "in" : "query",
          "name" : "include_abbreviation",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should acronyms be included",
          "in" : "query",
          "name" : "include_acronym",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should numbers be included",
          "in" : "query",
          "name" : "include_numbers",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Annotate a given text using SciGraph annotator",
        "tags" : [ "nlp/annotate" ]
      },
      "post" : {
        "operationId" : "post_annotate",
        "parameters" : [ {
          "description" : "The text content to annotate",
          "in" : "query",
          "name" : "content",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Categories to include for annotation",
          "explode" : true,
          "in" : "query",
          "name" : "include_category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Categories to exclude for annotation",
          "explode" : true,
          "in" : "query",
          "name" : "exclude_category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "The minimum number of characters in the annotated entity",
          "in" : "query",
          "name" : "min_length",
          "schema" : {
            "default" : 4,
            "type" : "string"
          }
        }, {
          "description" : "Should only the longest entity be returned for an overlapping group",
          "in" : "query",
          "name" : "longest_only",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should abbreviations be included",
          "in" : "query",
          "name" : "include_abbreviation",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should acronyms be included",
          "in" : "query",
          "name" : "include_acronym",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should numbers be included",
          "in" : "query",
          "name" : "include_numbers",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Annotate a given text using SciGraph annotator",
        "tags" : [ "nlp/annotate" ]
      }
    },
    "/nlp/annotate/entities" : {
      "get" : {
        "operationId" : "get_annotate_entities",
        "parameters" : [ {
          "description" : "The text content to annotate",
          "in" : "query",
          "name" : "content",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Categories to include for annotation",
          "explode" : true,
          "in" : "query",
          "name" : "include_category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Categories to exclude for annotation",
          "explode" : true,
          "in" : "query",
          "name" : "exclude_category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "The minimum number of characters in the annotated entity",
          "in" : "query",
          "name" : "min_length",
          "schema" : {
            "default" : 4,
            "type" : "string"
          }
        }, {
          "description" : "Should only the longest entity be returned for an overlapping group",
          "in" : "query",
          "name" : "longest_only",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should abbreviations be included",
          "in" : "query",
          "name" : "include_abbreviation",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should acronyms be included",
          "in" : "query",
          "name" : "include_acronym",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should numbers be included",
          "in" : "query",
          "name" : "include_numbers",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityAnnotationResult"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Annotate a given content using SciGraph annotator and get all entities from content",
        "tags" : [ "nlp/annotate" ]
      },
      "post" : {
        "operationId" : "post_annotate_entities",
        "parameters" : [ {
          "description" : "The text content to annotate",
          "in" : "query",
          "name" : "content",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Categories to include for annotation",
          "explode" : true,
          "in" : "query",
          "name" : "include_category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Categories to exclude for annotation",
          "explode" : true,
          "in" : "query",
          "name" : "exclude_category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "The minimum number of characters in the annotated entity",
          "in" : "query",
          "name" : "min_length",
          "schema" : {
            "default" : 4,
            "type" : "string"
          }
        }, {
          "description" : "Should only the longest entity be returned for an overlapping group",
          "in" : "query",
          "name" : "longest_only",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should abbreviations be included",
          "in" : "query",
          "name" : "include_abbreviation",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should acronyms be included",
          "in" : "query",
          "name" : "include_acronym",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Should numbers be included",
          "in" : "query",
          "name" : "include_numbers",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityAnnotationResult"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Annotate a given content using SciGraph annotator and get all entities from content",
        "tags" : [ "nlp/annotate" ]
      }
    },
    "/ontol/identifier/" : {
      "get" : {
        "operationId" : "get_ontol_identifier_resource",
        "parameters" : [ {
          "description" : "List of labels",
          "explode" : true,
          "in" : "query",
          "name" : "label",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Fetches a map from CURIEs/IDs to labels",
        "tags" : [ "ontol/identifier" ]
      },
      "post" : {
        "description" : "Takes 'label' list argument either as a querystring argument or as a key\nin the POST body when content-type is application/json.",
        "operationId" : "post_ontol_identifier_resource",
        "parameters" : [ {
          "description" : "List of labels",
          "explode" : true,
          "in" : "query",
          "name" : "label",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Fetches a map from CURIEs/IDs to labels",
        "tags" : [ "ontol/identifier" ]
      }
    },
    "/ontol/information_content/{subject_category}/{object_category}/{subject_taxon}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "subject_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "in" : "path",
        "name" : "object_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "in" : "path",
        "name" : "subject_taxon",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "```\nIC = -log2( freq(t) / popSize )\n```\n\nHere the frequency and population is calculated for a particular dataset:\ne.g. all human disease-phenotype associations",
        "operationId" : "get_information_content_resource",
        "parameters" : [ {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns information content (IC) for a set of relevant ontology classes",
        "tags" : [ "ontol" ]
      }
    },
    "/ontol/labeler/" : {
      "get" : {
        "operationId" : "get_ontol_labeler_resource",
        "parameters" : [ {
          "description" : "List of ids",
          "explode" : true,
          "in" : "query",
          "name" : "id",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Fetches a map from CURIEs/IDs to labels",
        "tags" : [ "ontol/labeler" ]
      }
    },
    "/ontol/subgraph/{ontology}/{node}" : {
      "parameters" : [ {
        "description" : "class ID, e.g. HP:0001288",
        "in" : "path",
        "name" : "node",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "ontology ID, e.g. go, uberon, mp, hp",
        "in" : "path",
        "name" : "ontology",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_extract_ontology_subgraph_resource",
        "parameters" : [ {
          "description" : "Additional classes",
          "explode" : true,
          "in" : "query",
          "name" : "cnode",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Include Ancestors",
          "in" : "query",
          "name" : "include_ancestors",
          "schema" : {
            "default" : true,
            "type" : "boolean"
          }
        }, {
          "description" : "Include Descendants",
          "in" : "query",
          "name" : "include_descendants",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "Additional classes",
          "explode" : true,
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "default" : [ "subClassOf", "BFO:0000050" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Include metadata in response",
          "in" : "query",
          "name" : "include_meta",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Extract a subgraph from an ontology",
        "tags" : [ "ontol" ]
      },
      "post" : {
        "operationId" : "post_extract_ontology_subgraph_resource",
        "parameters" : [ {
          "description" : "Additional classes",
          "explode" : true,
          "in" : "query",
          "name" : "cnode",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Include Ancestors",
          "in" : "query",
          "name" : "include_ancestors",
          "schema" : {
            "default" : true,
            "type" : "boolean"
          }
        }, {
          "description" : "Include Descendants",
          "in" : "query",
          "name" : "include_descendants",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "Additional classes",
          "explode" : true,
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "default" : [ "subClassOf", "BFO:0000050" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Include metadata in response",
          "in" : "query",
          "name" : "include_meta",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Extract a subgraph from an ontology",
        "tags" : [ "ontol" ]
      }
    },
    "/ontology/shared/{subject}/{object}" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a GO term, e.g. GO:0006259",
        "in" : "path",
        "name" : "subject",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "CURIE identifier of a GO term, e.g. GO:0046483",
        "in" : "path",
        "name" : "object",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_ontology_terms_shared_ancestor",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns the ancestor ontology terms shared by two ontology terms",
        "tags" : [ "ontology" ]
      }
    },
    "/ontology/subset/{id}" : {
      "parameters" : [ {
        "description" : "name of a slim subset, e.g. goslim_agr, goslim_generic",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_ontology_subset",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns meta data of an ontology subset (slim)",
        "tags" : [ "ontology" ]
      }
    },
    "/ontology/term/{id}" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a GO term, e.g. GO:0003677",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_ontology_term",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns meta data of an ontology term",
        "tags" : [ "ontology" ]
      }
    },
    "/ontology/term/{id}/graph" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a GO term, e.g. GO:0000981",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_ontology_term_graph",
        "parameters" : [ {
          "description" : "graph type ('topology_graph', 'regulates_transitivity_graph' or 'neighborhood_graph')",
          "explode" : true,
          "in" : "query",
          "name" : "graph_type",
          "schema" : {
            "default" : "topology_graph",
            "enum" : [ "topology_graph", "regulates_transitivity_graph", "neighborhood_graph", "neighborhood_limited_graph" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns graph of an ontology term",
        "tags" : [ "ontology" ]
      }
    },
    "/ontology/term/{id}/subgraph" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a GO term, e.g. GO:0007275",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_ontology_term_subgraph",
        "parameters" : [ {
          "description" : "Additional classes",
          "explode" : true,
          "in" : "query",
          "name" : "cnode",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Include Ancestors",
          "in" : "query",
          "name" : "include_ancestors",
          "schema" : {
            "default" : true,
            "type" : "boolean"
          }
        }, {
          "description" : "Include Descendants",
          "in" : "query",
          "name" : "include_descendants",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "Additional classes",
          "explode" : true,
          "in" : "query",
          "name" : "relation",
          "schema" : {
            "default" : [ "subClassOf", "BFO:0000050" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Include metadata in response",
          "in" : "query",
          "name" : "include_meta",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Extract a subgraph from an ontology term",
        "tags" : [ "ontology" ]
      }
    },
    "/ontology/term/{id}/subsets" : {
      "parameters" : [ {
        "description" : "CURIE identifier of a GO term, e.g. GO:0006259",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_ontology_term_subsets",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Returns subsets (slims) associated to an ontology term",
        "tags" : [ "ontology" ]
      }
    },
    "/owl/ontology/dlquery/{query}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "query",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_dl_query",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Placeholder - use OWLery for now",
        "tags" : [ "owl/ontology" ]
      }
    },
    "/owl/ontology/sparql/{query}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "query",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_sparql_query",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Placeholder - use direct SPARQL endpoint for now",
        "tags" : [ "owl/ontology" ]
      }
    },
    "/pair/sim/jaccard/{id1}/{id2}" : {
      "parameters" : [ {
        "description" : "id, e.g. NCBIGene:1200; ZFIN:ZDB-GENE-980528-2059; UniProtKB:P12644",
        "in" : "path",
        "name" : "id2",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "id, e.g. NCBIGene:10891; ZFIN:ZDB-GENE-980526-166; UniProtKB:Q15465",
        "in" : "path",
        "name" : "id1",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_pair_sim_jaccard_resource",
        "parameters" : [ {
          "description" : "e.g. disease, phenotype, gene. Two subjects will be compared based on overlap between associations to objects in this category",
          "in" : "query",
          "name" : "object_category",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Get pairwise similarity",
        "tags" : [ "pair/sim" ]
      }
    },
    "/relation/usage/" : {
      "get" : {
        "operationId" : "get_relation_usage_resource",
        "parameters" : [ {
          "description" : "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default",
          "in" : "query",
          "name" : "subject_taxon",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "All relations used plus count of associations",
        "tags" : [ "relation/usage" ]
      }
    },
    "/relation/usage/between/{subject_category}/{object_category}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "subject_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "in" : "path",
        "name" : "object_category",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_relation_usage_between_resource",
        "parameters" : [ {
          "description" : "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default",
          "in" : "query",
          "name" : "subject_taxon",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "All relations used plus count of associations",
        "tags" : [ "relation/usage" ]
      }
    },
    "/relation/usage/pivot" : {
      "get" : {
        "operationId" : "get_relation_usage_pivot_resource",
        "parameters" : [ {
          "description" : "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default",
          "in" : "query",
          "name" : "subject_taxon",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Relation usage count for all subj x obj category combinations",
        "tags" : [ "relation/usage" ]
      }
    },
    "/relation/usage/pivot/label" : {
      "get" : {
        "operationId" : "get_relation_usage_pivot_label_resource",
        "parameters" : [ {
          "description" : "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default",
          "in" : "query",
          "name" : "subject_taxon",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
          "in" : "query",
          "name" : "evidence",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AssociationResults"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Relation usage count for all subj x obj category combinations, showing label",
        "tags" : [ "relation/usage" ]
      }
    },
    "/search/entity/autocomplete/{term}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "term",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_autocomplete",
        "parameters" : [ {
          "description" : "fq string passed directly to solr, note that multiple filters will be combined with an AND operator. Combining fq_string with other parameters may result in unexpected behavior.",
          "explode" : true,
          "in" : "query",
          "name" : "fq",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "e.g. gene, disease",
          "explode" : true,
          "in" : "query",
          "name" : "category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "ontology prefix: HP, -MONDO",
          "explode" : true,
          "in" : "query",
          "name" : "prefix",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Include equivalent ids in prefix filter",
          "in" : "query",
          "name" : "include_eqs",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "boost function e.g. pow(edges,0.334)",
          "explode" : true,
          "in" : "query",
          "name" : "boost_fx",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "boost query e.g. category:genotype^-10",
          "explode" : true,
          "in" : "query",
          "name" : "boost_q",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "taxon filter, eg NCBITaxon:9606, includes inferred taxa",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 20,
            "type" : "integer"
          }
        }, {
          "description" : "row number to start from",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "default" : "0",
            "type" : "string"
          }
        }, {
          "description" : "highlight class",
          "in" : "query",
          "name" : "highlight_class",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "minimum should match parameter, see solr docs for details",
          "in" : "query",
          "name" : "min_match",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Exclude grouping classes (classes with subclasses)",
          "in" : "query",
          "name" : "exclude_groups",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "set to true to use the minimal tokenizer, good for variants and genotypes",
          "in" : "query",
          "name" : "minimal_tokenizer",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutocompleteResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matching concepts or entities using lexical search",
        "tags" : [ "search" ]
      }
    },
    "/search/entity/hpo-pl/{term}" : {
      "parameters" : [ {
        "description" : "search string, e.g. muscle atrophy, frequent infections",
        "in" : "path",
        "name" : "term",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_search_hpo_entities",
        "parameters" : [ {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 10,
            "type" : "integer"
          }
        }, {
          "description" : "row number to start from",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "default" : "0",
            "type" : "string"
          }
        }, {
          "description" : "phenotype group id",
          "in" : "query",
          "name" : "phenotype_group",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "phenotype group label",
          "in" : "query",
          "name" : "phenotype_group_label",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "anatomical system id",
          "in" : "query",
          "name" : "anatomical_system",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "anatomical system label",
          "in" : "query",
          "name" : "anatomical_system_label",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "highlight class",
          "in" : "query",
          "name" : "highlight_class",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LayResults"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matching concepts or entities using lexical search",
        "tags" : [ "search" ]
      }
    },
    "/search/entity/{term}" : {
      "parameters" : [ {
        "description" : "search string, e.g. shh, parkinson, femur",
        "in" : "path",
        "name" : "term",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_search_entities",
        "parameters" : [ {
          "description" : "fq string passed directly to solr, note that multiple filters will be combined with an AND operator. Combining fq_string with other parameters may result in unexpected behavior.",
          "explode" : true,
          "in" : "query",
          "name" : "fq",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "e.g. gene, disease",
          "explode" : true,
          "in" : "query",
          "name" : "category",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "ontology prefix: HP, -MONDO",
          "explode" : true,
          "in" : "query",
          "name" : "prefix",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Include equivalent ids in prefix filter",
          "in" : "query",
          "name" : "include_eqs",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "boost function e.g. pow(edges,0.334)",
          "explode" : true,
          "in" : "query",
          "name" : "boost_fx",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "boost query e.g. category:genotype^-10",
          "explode" : true,
          "in" : "query",
          "name" : "boost_q",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "taxon filter, eg NCBITaxon:9606, includes inferred taxa",
          "explode" : true,
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "number of rows",
          "in" : "query",
          "name" : "rows",
          "schema" : {
            "default" : 20,
            "type" : "integer"
          }
        }, {
          "description" : "row number to start from",
          "in" : "query",
          "name" : "start",
          "schema" : {
            "default" : "0",
            "type" : "string"
          }
        }, {
          "description" : "highlight class",
          "in" : "query",
          "name" : "highlight_class",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "minimum should match parameter, see solr docs for details",
          "in" : "query",
          "name" : "min_match",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Exclude grouping classes (classes with subclasses)",
          "in" : "query",
          "name" : "exclude_groups",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "set to true to use the minimal tokenizer, good for variants and genotypes",
          "in" : "query",
          "name" : "minimal_tokenizer",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResult"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matching concepts or entities using lexical search",
        "tags" : [ "search" ]
      }
    },
    "/sim/compare" : {
      "get" : {
        "operationId" : "get_sim_compare",
        "parameters" : [ {
          "description" : "set to true if *all* input ids are phenotypic features, else set to false",
          "in" : "query",
          "name" : "is_feature_set",
          "schema" : {
            "default" : true,
            "type" : "boolean"
          }
        }, {
          "description" : "Metric for computing similarity",
          "explode" : true,
          "in" : "query",
          "name" : "metric",
          "schema" : {
            "default" : "phenodigm",
            "enum" : [ "phenodigm", "jaccard", "simGIC", "resnik", "symmetric_resnik" ],
            "type" : "string"
          }
        }, {
          "description" : "A phenotype or identifier that is composed of phenotypes (eg disease, gene)",
          "explode" : true,
          "in" : "query",
          "name" : "ref_id",
          "schema" : {
            "default" : [ ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "A phenotype or identifier that is composed of phenotypes (eg disease, gene)",
          "explode" : true,
          "in" : "query",
          "name" : "query_id",
          "schema" : {
            "default" : [ ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimResult"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Compare a reference profile vs one profiles",
        "tags" : [ "sim" ]
      },
      "post" : {
        "operationId" : "post_sim_compare",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompareInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimResult"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Compare a reference profile vs one or more profiles",
        "tags" : [ "sim" ]
      }
    },
    "/sim/score" : {
      "get" : {
        "operationId" : "get_annotation_score",
        "parameters" : [ {
          "description" : "Phenotype identifier (eg HP:0004935)",
          "explode" : true,
          "in" : "query",
          "name" : "id",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "absent phenotype (eg HP:0002828)",
          "explode" : true,
          "in" : "query",
          "name" : "absent_id",
          "schema" : {
            "default" : [ ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SufficiencyOutput"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Get annotation score",
        "tags" : [ "sim" ]
      },
      "post" : {
        "operationId" : "post_annotation_score",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SufficiencyPostInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SufficiencyOutput"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Get annotation score",
        "tags" : [ "sim" ]
      }
    },
    "/sim/search" : {
      "get" : {
        "operationId" : "get_sim_search",
        "parameters" : [ {
          "description" : "set to true if *all* input ids are phenotypic features, else set to false",
          "in" : "query",
          "name" : "is_feature_set",
          "schema" : {
            "default" : true,
            "type" : "boolean"
          }
        }, {
          "description" : "Metric for computing similarity",
          "explode" : true,
          "in" : "query",
          "name" : "metric",
          "schema" : {
            "default" : "phenodigm",
            "enum" : [ "phenodigm", "jaccard", "simGIC", "resnik", "symmetric_resnik" ],
            "type" : "string"
          }
        }, {
          "description" : "A phenotype or identifier that is composed of phenotypes (eg disease, gene)",
          "explode" : true,
          "in" : "query",
          "name" : "id",
          "schema" : {
            "default" : [ ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "number of rows, max 500",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 20,
            "type" : "integer"
          }
        }, {
          "description" : "ncbi taxon id",
          "in" : "query",
          "name" : "taxon",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimResult"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Search for phenotypically similar diseases or model genes",
        "tags" : [ "sim" ]
      }
    },
    "/variation/set/" : {
      "get" : {
        "operationId" : "get_variant_sets_collection",
        "parameters" : [ {
          "description" : "Page number",
          "in" : "query",
          "name" : "page",
          "schema" : {
            "default" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Results per page {error_msg}",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "schema" : {
            "default" : 10,
            "enum" : [ 2, 10, 20, 30, 40, 50 ],
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page_of_variant_sets"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of variant sets",
        "tags" : [ "variation/set" ]
      },
      "post" : {
        "operationId" : "post_variant_sets_collection",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/variant_set"
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "summary" : "Creates a new variant set",
        "tags" : [ "variation/set" ]
      }
    },
    "/variation/set/analyze/{id}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "operationId" : "get_variant_analyze",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of matches",
        "tags" : [ "variation/set" ]
      }
    },
    "/variation/set/archive/{year}/{month}/{day}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "year",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      }, {
        "in" : "path",
        "name" : "month",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      }, {
        "in" : "path",
        "name" : "day",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "get" : {
        "operationId" : "get_variant_sets_archive_collection",
        "parameters" : [ {
          "description" : "Page number",
          "in" : "query",
          "name" : "page",
          "schema" : {
            "default" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Results per page {error_msg}",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "schema" : {
            "default" : 10,
            "enum" : [ 2, 10, 20, 30, 40, 50 ],
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page_of_variant_sets"
                }
              }
            },
            "description" : "Success"
          }
        },
        "summary" : "Returns list of variant sets from a specified time period",
        "tags" : [ "variation/set" ]
      }
    },
    "/variation/set/{id}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "delete" : {
        "operationId" : "delete_variant_set_item",
        "responses" : {
          "204" : {
            "description" : "VariantSet successfully deleted."
          },
          "404" : {
            "description" : "VariantSet not found."
          }
        },
        "summary" : "Deletes variant set",
        "tags" : [ "variation/set" ]
      },
      "get" : {
        "operationId" : "get_variant_set_item",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/variant_set"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "VariantSet not found."
          }
        },
        "summary" : "Returns a variant set",
        "tags" : [ "variation/set" ]
      },
      "put" : {
        "operationId" : "put_variant_set_item",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/variant_set"
        },
        "responses" : {
          "204" : {
            "description" : "VariantSet successfully updated."
          },
          "404" : {
            "description" : "VariantSet not found."
          }
        },
        "summary" : "Updates a variant set",
        "tags" : [ "variation/set" ]
      }
    }
  },
  "components" : {
    "requestBodies" : {
      "mme" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/mme"
            }
          }
        },
        "required" : true
      },
      "variant_set" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/variant_set"
            }
          }
        },
        "required" : true
      }
    },
    "responses" : {
      "AmbiguousPrefix" : {
        "description" : "Error handler to handle AmbiguousPrefix"
      },
      "InvalidSyntax" : {
        "description" : "Error handler to handle InvalidSyntax"
      },
      "MaskError" : {
        "description" : "When any error occurs on mask"
      },
      "NoContraction" : {
        "description" : "Error handler to handle NoContraction"
      },
      "NoExpansion" : {
        "description" : "Error handler to handle NoExpansion"
      },
      "NoPrefix" : {
        "description" : "Error handler to handle NoPrefix"
      },
      "NoResultFound" : {
        "description" : ""
      },
      "NoResultFoundException" : {
        "description" : "Error handler to handle NoResultFoundException"
      },
      "ParseError" : {
        "description" : "When a mask can't be parsed"
      },
      "RouteNotImplementedException" : {
        "description" : "Error handler to handle RouteNotImplementedException"
      },
      "UnhandledException" : {
        "description" : "Error handler to handle UnhandledException"
      },
      "UnrecognizedBioentityTypeException" : {
        "description" : "Error handler to handle UnrecognizedBioentityTypeException"
      }
    },
    "schemas" : {
      "A_page_of_results" : {
        "properties" : {
          "page" : {
            "description" : "Number of this page of results",
            "type" : "integer"
          },
          "pages" : {
            "description" : "Total number of pages of results",
            "type" : "integer"
          },
          "per_page" : {
            "description" : "Number of items per page of results",
            "type" : "integer"
          },
          "total" : {
            "description" : "Total number of results",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "AbstractPropertyValue" : {
        "properties" : {
          "pred" : {
            "description" : "predicate (attribute) part",
            "type" : "string"
          },
          "val" : {
            "description" : "value part",
            "type" : "string"
          },
          "xrefs" : {
            "description" : "Xrefs provenance for property-value",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "AnnotationExtension" : {
        "properties" : {
          "filler" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NamedObject"
            } ],
            "description" : "Extension interpreted as OWL expression (r1 some r2 some .. some filler)."
          },
          "relation_chain" : {
            "description" : "Relationship type. If more than one value, interpreted as chain",
            "items" : {
              "$ref" : "#/components/schemas/Relation"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Association" : {
        "properties" : {
          "evidence_graph" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Graph"
            } ],
            "description" : "An indirect association is a join between two or more direct assocations, e.g. gene to disease via ortholog. We record the full set of associations as a graph object"
          },
          "evidence_types" : {
            "description" : "Evidence types (ECO classes)",
            "items" : {
              "$ref" : "#/components/schemas/EntityReference"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "Association/annotation unique ID",
            "type" : "string"
          },
          "negated" : {
            "description" : "True if association is negated",
            "type" : "boolean"
          },
          "object" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BioObjectCore"
            } ],
            "description" : "Object (sensu RDF), aka target, e.g. HP:0000448, MP:0002109, DOID:14330"
          },
          "object_eq" : {
            "description" : "Equivalent identifiers to object node",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "object_extensions" : {
            "items" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/AnnotationExtension"
              } ],
              "description" : "Additional properties of the object in the context of this association. See http://www.biomedcentral.com/1471-2105/15/155"
            },
            "type" : "array"
          },
          "provided_by" : {
            "description" : "Provider of association, e.g. Orphanet, ClinVar",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "publications" : {
            "description" : "Publications supporting association, extracted from evidence graph",
            "items" : {
              "$ref" : "#/components/schemas/EntityReference"
            },
            "type" : "array"
          },
          "qualifiers" : {
            "description" : "Qualifier on the association",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "relation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RelationRef"
            } ],
            "description" : "Relationship type connecting subject and object"
          },
          "slim" : {
            "description" : "Objects mapped to a slim",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "subject" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BioObjectCore"
            } ],
            "description" : "Subject of association (what it is about), e.g. ClinVar:nnn, MGI:1201606"
          },
          "subject_eq" : {
            "description" : "Equivalent identifiers to subject node",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "subject_extensions" : {
            "items" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/AnnotationExtension"
              } ],
              "description" : "Additional properties of the subject in the context of this association."
            },
            "type" : "array"
          },
          "type" : {
            "description" : "Type of association, e.g. gene-phenotype",
            "type" : "string"
          }
        },
        "required" : [ "id", "object", "relation", "subject" ],
        "type" : "object"
      },
      "AssociationResults" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResult"
        }, {
          "properties" : {
            "associations" : {
              "description" : "Complete representation of full association object, plus evidence",
              "items" : {
                "$ref" : "#/components/schemas/Association"
              },
              "type" : "array"
            },
            "compact_associations" : {
              "description" : "Compact representation in which objects (e.g. phenotypes) are collected for subject-predicate pairs",
              "items" : {
                "$ref" : "#/components/schemas/CompactAssociationSet"
              },
              "type" : "array"
            },
            "objects" : {
              "description" : "List of distinct objects used",
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ]
      },
      "AutocompleteResult" : {
        "properties" : {
          "category" : {
            "description" : "node categories",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "equivalent_ids" : {
            "description" : "Equivalent IDs",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "has_highlight" : {
            "description" : "True if highlight can be interpreted as html, else False",
            "type" : "boolean"
          },
          "highlight" : {
            "description" : "solr highlight",
            "type" : "string"
          },
          "id" : {
            "description" : "curie formatted id",
            "type" : "string"
          },
          "label" : {
            "description" : "primary label (rdfs:label)",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "match" : {
            "description" : "matched part of document (may be primary label, synonym, id, etc)",
            "type" : "string"
          },
          "taxon" : {
            "description" : "taxon as NCBITaxon curie",
            "type" : "string"
          },
          "taxon_label" : {
            "description" : "taxon label",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AutocompleteResults" : {
        "properties" : {
          "docs" : {
            "description" : "list of AutocompleteResult docs",
            "items" : {
              "$ref" : "#/components/schemas/AutocompleteResult"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "BioObject" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/NamedObject"
        }, {
          "properties" : {
            "association_counts" : {
              "description" : "association counts",
              "type" : "object"
            },
            "taxon" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/Taxon"
              } ],
              "description" : "Taxon to which the object belongs"
            },
            "xrefs" : {
              "description" : "Database cross-references. These are usually CURIEs, but may also be URLs. E.g. ENSEMBL:ENSG00000099940 ",
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ]
      },
      "BioObjectCore" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/NamedObjectCore"
        }, {
          "properties" : {
            "taxon" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/Taxon"
              } ],
              "description" : "Taxon to which the object belongs"
            }
          },
          "type" : "object"
        } ]
      },
      "CompactAssociationSet" : {
        "properties" : {
          "objects" : {
            "description" : "List of O, for a given (S,R) pair, yielding (S,R,O) triples. E.g. list of MPs for (MGI:nnn, has_phenotype)",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "relation" : {
            "description" : "Relationship type connecting subject and object list",
            "type" : "string"
          },
          "subject" : {
            "description" : "Subject of association (what it is about), e.g. MGI:1201606",
            "type" : "string"
          }
        },
        "required" : [ "objects", "relation", "subject" ],
        "type" : "object"
      },
      "CompareInput" : {
        "properties" : {
          "query_ids" : {
            "description" : "list of query profiles",
            "items" : {
              "description" : "list of ids",
              "items" : {
                "description" : "curie formatted id",
                "type" : "string"
              },
              "type" : "array"
            },
            "type" : "array"
          },
          "reference_ids" : {
            "description" : "list of ids",
            "items" : {
              "description" : "curie formatted id",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "D2PAssociation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Association"
        }, {
          "properties" : {
            "frequency" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/EntityReference"
              } ],
              "description" : "Frequency of phenotype in patients with disease"
            },
            "onset" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/EntityReference"
              } ],
              "description" : "Onset of phenotype in disease process"
            }
          },
          "type" : "object"
        } ]
      },
      "D2PAssociationResults" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResult"
        }, {
          "properties" : {
            "associations" : {
              "description" : "Complete representation of full disease to phenotype association, plus evidence",
              "items" : {
                "$ref" : "#/components/schemas/D2PAssociation"
              },
              "type" : "array"
            },
            "compact_associations" : {
              "description" : "Compact representation in which objects (e.g. phenotypes) are collected for subject-predicate pairs",
              "items" : {
                "$ref" : "#/components/schemas/CompactAssociationSet"
              },
              "type" : "array"
            },
            "objects" : {
              "description" : "List of distinct objects used",
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ]
      },
      "Edge" : {
        "properties" : {
          "meta" : {
            "description" : "metadata about the Edge",
            "type" : "object"
          },
          "obj" : {
            "description" : "Object (target) Node ID",
            "type" : "string"
          },
          "pred" : {
            "description" : "Predicate (relation) ID",
            "type" : "string"
          },
          "sub" : {
            "description" : "Subject (source) Node ID",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntityAnnotationResult" : {
        "properties" : {
          "content" : {
            "default" : "The content from which the entities are extracted from",
            "type" : "string"
          },
          "spans" : {
            "description" : "A marked-up span of text",
            "items" : {
              "$ref" : "#/components/schemas/Span"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "EntityReference" : {
        "properties" : {
          "id" : {
            "description" : "ID or CURIE e.g. MGI:1201606",
            "type" : "string"
          },
          "label" : {
            "description" : "RDFS Label",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Feature" : {
        "properties" : {
          "id" : {
            "description" : "curie formatted id",
            "type" : "string"
          },
          "isPresent" : {
            "description" : "is the feature present",
            "type" : "boolean"
          },
          "label" : {
            "description" : "curie formatted id",
            "type" : "string"
          },
          "type" : {
            "description" : "feature type (only phenotype supported)",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Graph" : {
        "properties" : {
          "edges" : {
            "description" : "All edges in graph",
            "items" : {
              "$ref" : "#/components/schemas/Edge"
            },
            "type" : "array"
          },
          "nodes" : {
            "description" : "All nodes in graph",
            "items" : {
              "$ref" : "#/components/schemas/Node"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "IcNode" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Node"
        }, {
          "properties" : {
            "IC" : {
              "description" : "Information content",
              "type" : "number"
            }
          },
          "type" : "object"
        } ]
      },
      "LayAutocomplete" : {
        "properties" : {
          "highlight" : {
            "description" : "solr highlight",
            "type" : "string"
          },
          "id" : {
            "description" : "curie formatted id",
            "type" : "string"
          },
          "label" : {
            "description" : "primary label (rdfs:label)",
            "type" : "string"
          },
          "matched_synonym" : {
            "description" : "matched synonym",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LayResults" : {
        "properties" : {
          "results" : {
            "description" : "list of AutocompleteResult docs",
            "items" : {
              "$ref" : "#/components/schemas/LayAutocomplete"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "NamedObject" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/NamedObjectCore"
        }, {
          "properties" : {
            "consider" : {
              "items" : {
                "description" : "Potential replacement object (if named object is obsoleted)",
                "type" : "string"
              },
              "type" : "array"
            },
            "deprecated" : {
              "description" : "True if the node is deprecated/obsoleted.",
              "type" : "boolean"
            },
            "description" : {
              "description" : "Descriptive text for the entity. For ontology classes, this will be a definition.",
              "type" : "string"
            },
            "replaced_by" : {
              "items" : {
                "description" : "Direct 1:1 replacement (if named object is obsoleted)",
                "type" : "string"
              },
              "type" : "array"
            },
            "synonyms" : {
              "description" : "list of synonyms or alternate labels",
              "items" : {
                "$ref" : "#/components/schemas/SynonymPropertyValue"
              },
              "type" : "array"
            },
            "types" : {
              "items" : {
                "description" : "Type of object (direct)",
                "type" : "string"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ]
      },
      "NamedObjectCore" : {
        "properties" : {
          "category" : {
            "items" : {
              "description" : "Type of object",
              "type" : "string"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "ID or CURIE e.g. MGI:1201606",
            "type" : "string"
          },
          "iri" : {
            "description" : "IRI",
            "type" : "string"
          },
          "label" : {
            "description" : "RDFS Label",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "Node" : {
        "properties" : {
          "id" : {
            "description" : "ID or CURIE e.g. MGI:1201606",
            "type" : "string"
          },
          "label" : {
            "description" : "RDFS Label",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "Page_of_variant_sets" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/A_page_of_results"
        }, {
          "properties" : {
            "items" : {
              "items" : {
                "$ref" : "#/components/schemas/variant_set"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ]
      },
      "PairwiseMatch" : {
        "properties" : {
          "lcs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IcNode"
            } ],
            "description" : "lowest common subsumer"
          },
          "match" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IcNode"
            } ],
            "description" : "match id"
          },
          "reference" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IcNode"
            } ],
            "description" : "reference id"
          }
        },
        "type" : "object"
      },
      "Relation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/NamedObject"
        }, {
          "type" : "object"
        } ]
      },
      "RelationRef" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/NamedObjectCore"
        }, {
          "properties" : {
            "inverse" : {
              "default" : false,
              "description" : "is relation inverted",
              "type" : "boolean"
            }
          },
          "type" : "object"
        } ]
      },
      "SearchResult" : {
        "properties" : {
          "docs" : {
            "description" : "solr docs",
            "items" : {
              "type" : "object"
            },
            "type" : "array"
          },
          "facet_counts" : {
            "description" : "Mapping between field names and association counts",
            "type" : "object"
          },
          "highlighting" : {
            "description" : "Mapping between id and solr highlight",
            "type" : "object"
          },
          "numFound" : {
            "description" : "total number of associations matching query",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Seq" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BioObject"
        }, {
          "properties" : {
            "alphabet" : {
              "description" : "one of: DNA, RNA or AA",
              "type" : "string"
            },
            "md5checksum" : {
              "description" : "checksum",
              "type" : "string"
            },
            "residues" : {
              "description" : "string representing sequence of residues",
              "type" : "string"
            },
            "seqlen" : {
              "description" : "length of sequence",
              "type" : "string"
            }
          },
          "type" : "object"
        } ]
      },
      "SequenceFeature" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BioObject"
        }, {
          "properties" : {
            "homology_associations" : {
              "items" : {
                "$ref" : "#/components/schemas/Association"
              },
              "type" : "array"
            },
            "locations" : {
              "items" : {
                "$ref" : "#/components/schemas/SequenceLocation"
              },
              "type" : "array"
            },
            "seq" : {
              "$ref" : "#/components/schemas/Seq"
            }
          },
          "type" : "object"
        } ]
      },
      "SequenceLocation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BioObject"
        }, {
          "properties" : {
            "end" : {
              "$ref" : "#/components/schemas/SequencePosition"
            },
            "phase" : {
              "type" : "integer"
            },
            "score" : {
              "type" : "integer"
            },
            "start" : {
              "$ref" : "#/components/schemas/SequencePosition"
            },
            "strand" : {
              "description" : "Strand direction: 1=='+', -1=='-', 0 or null infers unknown.",
              "type" : "integer"
            }
          },
          "type" : "object"
        } ]
      },
      "SequencePosition" : {
        "properties" : {
          "position" : {
            "type" : "integer"
          },
          "reference" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SimMatch" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TypedNode"
        }, {
          "properties" : {
            "pairwise_match" : {
              "items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PairwiseMatch"
                } ],
                "description" : "list of pairwise matches"
              },
              "type" : "array"
            },
            "rank" : {
              "description" : "rank",
              "type" : "string"
            },
            "score" : {
              "description" : "sim score",
              "type" : "number"
            },
            "significance" : {
              "description" : "p-value",
              "type" : "string"
            }
          },
          "type" : "object"
        } ]
      },
      "SimMetadata" : {
        "properties" : {
          "max_max_ic" : {
            "description" : "max IC",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "SimQuery" : {
        "properties" : {
          "ids" : {
            "items" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/Node"
              } ],
              "description" : "list of ids"
            },
            "type" : "array"
          },
          "negated_ids" : {
            "items" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/Node"
              } ],
              "description" : "list of ids"
            },
            "type" : "array"
          },
          "reference" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TypedNode"
            } ],
            "description" : "reference individual or class (eg gene, disease)"
          },
          "target_ids" : {
            "items" : {
              "items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Node"
                } ],
                "description" : "query ids"
              },
              "type" : "array"
            },
            "type" : "array"
          },
          "unresolved_ids" : {
            "description" : "list of unresolved ids",
            "items" : {
              "description" : "curie formatted id",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SimResult" : {
        "properties" : {
          "matches" : {
            "items" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/SimMatch"
              } ],
              "description" : "list of matches"
            },
            "type" : "array"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/SimMetadata"
          },
          "query" : {
            "$ref" : "#/components/schemas/SimQuery"
          }
        },
        "type" : "object"
      },
      "Span" : {
        "properties" : {
          "end" : {
            "description" : "end of span text relative to content",
            "type" : "integer"
          },
          "start" : {
            "description" : "start of span text relative to content",
            "type" : "integer"
          },
          "text" : {
            "description" : "span text",
            "type" : "string"
          },
          "token" : {
            "description" : "A token or entity extracted from the span text",
            "items" : {
              "$ref" : "#/components/schemas/Token"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SufficiencyOutput" : {
        "properties" : {
          "categorical_score" : {
            "description" : "categorical score",
            "type" : "number"
          },
          "scaled_score" : {
            "description" : "scaled score",
            "type" : "number"
          },
          "simple_score" : {
            "description" : "simple score",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "SufficiencyPostInput" : {
        "properties" : {
          "features" : {
            "description" : "list of features",
            "items" : {
              "$ref" : "#/components/schemas/Feature"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "curie formatted id",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SynonymPropertyValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractPropertyValue"
        }, {
          "type" : "object"
        } ]
      },
      "Taxon" : {
        "properties" : {
          "id" : {
            "description" : "CURIE ID, e.g. NCBITaxon:9606",
            "type" : "string"
          },
          "label" : {
            "description" : "RDFS Label",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Token" : {
        "properties" : {
          "categories" : {
            "description" : "entity categories",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "The CURIE for the entity or token",
            "type" : "string"
          },
          "terms" : {
            "description" : "terms",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TypedNode" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Node"
        }, {
          "properties" : {
            "taxon" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/Node"
              } ],
              "description" : "taxon"
            },
            "type" : {
              "description" : "node type (eg phenotype, disease)",
              "type" : "string"
            }
          },
          "type" : "object"
        } ]
      },
      "mme" : {
        "type" : "object"
      },
      "variant_set" : {
        "properties" : {
          "body" : {
            "description" : "Article content",
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "category_id" : {
            "type" : "integer"
          },
          "id" : {
            "description" : "The unique identifier of a variant set",
            "type" : "integer"
          },
          "pub_date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "title" : {
            "description" : "Article title",
            "type" : "string"
          }
        },
        "required" : [ "body", "title" ],
        "type" : "object"
      }
    }
  }
}