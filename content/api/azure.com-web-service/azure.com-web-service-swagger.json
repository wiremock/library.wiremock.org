{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "WebSite Management Client",
    "description" : "Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.",
    "version" : "2015-08-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.Web/publishingUsers/web" : {
      "get" : {
        "tags" : [ "Provider" ],
        "summary" : "Gets publishing user",
        "operationId" : "Provider_GetPublishingUser",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Provider" ],
        "summary" : "Updates publishing user",
        "operationId" : "Provider_UpdatePublishingUser",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of publishing user",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/providers/Microsoft.Web/sourcecontrols" : {
      "get" : {
        "tags" : [ "Provider" ],
        "summary" : "Gets the source controls available for Azure websites",
        "operationId" : "Provider_GetSourceControls",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControlCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControlCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/providers/Microsoft.Web/sourcecontrols/{sourceControlType}" : {
      "get" : {
        "tags" : [ "Provider" ],
        "summary" : "Gets source control token",
        "operationId" : "Provider_GetSourceControl",
        "parameters" : [ {
          "name" : "sourceControlType",
          "in" : "path",
          "description" : "Type of source control",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControl"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Provider" ],
        "summary" : "Updates source control token",
        "operationId" : "Provider_UpdateSourceControl",
        "parameters" : [ {
          "name" : "sourceControlType",
          "in" : "path",
          "description" : "Type of source control",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Source control token information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SourceControl"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SourceControl"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SourceControl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourceControl"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/certificateOrders" : {
      "get" : {
        "tags" : [ "GlobalCertificateOrder" ],
        "summary" : "Lists all domains in a subscription",
        "operationId" : "GlobalCertificateOrder_GetAllCertificateOrders",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/validateCertificateRegistrationInformation" : {
      "post" : {
        "tags" : [ "GlobalCertificateOrder" ],
        "summary" : "Validate certificate purchase information",
        "operationId" : "GlobalCertificateOrder_ValidateCertificatePurchaseInformation",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Certificate order",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/checkDomainAvailability" : {
      "post" : {
        "tags" : [ "GlobalDomainRegistration" ],
        "summary" : "Checks if a domain is available for registration",
        "operationId" : "GlobalDomainRegistration_CheckDomainAvailability",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Name of the domain",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameIdentifier"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameIdentifier"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameIdentifier"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameIdentifier"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameIdentifier"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainAvailablilityCheckResult"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainAvailablilityCheckResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainAvailablilityCheckResult"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainAvailablilityCheckResult"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/domains" : {
      "get" : {
        "tags" : [ "GlobalDomainRegistration" ],
        "summary" : "Lists all domains in a subscription",
        "operationId" : "GlobalDomainRegistration_GetAllDomains",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/generateSsoRequest" : {
      "post" : {
        "tags" : [ "GlobalDomainRegistration" ],
        "summary" : "Generates a single sign on request for domain management portal",
        "operationId" : "GlobalDomainRegistration_GetDomainControlCenterSsoRequest",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainControlCenterSsoRequest"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainControlCenterSsoRequest"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainControlCenterSsoRequest"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainControlCenterSsoRequest"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/listDomainRecommendations" : {
      "post" : {
        "tags" : [ "GlobalDomainRegistration" ],
        "summary" : "Lists domain recommendations based on keywords",
        "operationId" : "GlobalDomainRegistration_ListDomainRecommendations",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Domain recommendation search parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRecommendationSearchParameters"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRecommendationSearchParameters"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRecommendationSearchParameters"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRecommendationSearchParameters"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRecommendationSearchParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameIdentifierCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameIdentifierCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains" : {
      "get" : {
        "tags" : [ "TopLevelDomains" ],
        "summary" : "Lists all top level domains supported for registration",
        "operationId" : "TopLevelDomains_GetGetTopLevelDomains",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopLevelDomainCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopLevelDomainCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}" : {
      "get" : {
        "tags" : [ "TopLevelDomains" ],
        "summary" : "Gets details of a top level domain",
        "operationId" : "TopLevelDomains_GetTopLevelDomain",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the top level domain",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopLevelDomain"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopLevelDomain"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopLevelDomain"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopLevelDomain"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}/listAgreements" : {
      "post" : {
        "tags" : [ "TopLevelDomains" ],
        "summary" : "Lists legal agreements that user needs to accept before purchasing domain",
        "operationId" : "TopLevelDomains_ListTopLevelDomainAgreements",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the top level domain",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Domain agreement options",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopLevelDomainAgreementOption"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopLevelDomainAgreementOption"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopLevelDomainAgreementOption"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopLevelDomainAgreementOption"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopLevelDomainAgreementOption"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TldLegalAgreementCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TldLegalAgreementCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/validateDomainRegistrationInformation" : {
      "post" : {
        "tags" : [ "GlobalDomainRegistration" ],
        "summary" : "Validates domain registration information",
        "operationId" : "GlobalDomainRegistration_ValidateDomainPurchaseInformation",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Domain registration information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRegistrationInput"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRegistrationInput"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRegistrationInput"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRegistrationInput"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainRegistrationInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/certificates" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Get all certificates for a subscription",
        "operationId" : "Global_GetAllCertificates",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/checknameavailability" : {
      "post" : {
        "tags" : [ "Global" ],
        "summary" : "Check if resource name is available",
        "operationId" : "Global_CheckNameAvailability",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Name availability request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceNameAvailabilityRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceNameAvailabilityRequest"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceNameAvailabilityRequest"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceNameAvailabilityRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceNameAvailabilityRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNameAvailability"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNameAvailability"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNameAvailability"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNameAvailability"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/classicMobileServices" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Gets all mobile services for a subscription",
        "operationId" : "Global_GetAllClassicMobileServices",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClassicMobileServiceCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClassicMobileServiceCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/geoRegions" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Gets list of available geo regions",
        "operationId" : "Global_GetSubscriptionGeoRegions",
        "parameters" : [ {
          "name" : "sku",
          "in" : "query",
          "description" : "Filter only to regions that support this sku",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linuxWorkersEnabled",
          "in" : "query",
          "description" : "Filter only to regions that support linux workers",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeoRegionCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeoRegionCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Gets all hostingEnvironments (App Service Environment) for a subscription",
        "operationId" : "Global_GetAllHostingEnvironments",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/ishostingenvironmentnameavailable" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Whether hosting environment name is available",
        "operationId" : "Global_IsHostingEnvironmentNameAvailable",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Hosting environment name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/ishostingenvironmentnameavailable/{name}" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Whether hosting environment name is available",
        "operationId" : "Global_IsHostingEnvironmentWithLegacyNameAvailable",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Hosting environment name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/managedHostingEnvironments" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Gets all managed hosting environments for a subscription",
        "operationId" : "Global_GetAllManagedHostingEnvironments",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedHostingEnvironmentCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedHostingEnvironmentCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/premieraddonoffers" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "List premier add on offers",
        "operationId" : "Global_ListPremierAddOnOffers",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/publishingCredentials" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Gets publishing credentials for the subscription owner",
        "operationId" : "Global_GetSubscriptionPublishingCredentials",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Global" ],
        "summary" : "Updates publishing credentials for the subscription owner",
        "operationId" : "Global_UpdateSubscriptionPublishingCredentials",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "requestMessage with new publishing credentials",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations" : {
      "get" : {
        "tags" : [ "Recommendations" ],
        "summary" : "Gets a list of recommendations associated with the specified subscription.",
        "operationId" : "Recommendations_GetRecommendationBySubscription",
        "parameters" : [ {
          "name" : "featured",
          "in" : "query",
          "description" : "If set, this API returns only the most critical recommendation among the others. Otherwise this API returns all recommendations available",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only channels specified in the filter. Filter is specified by using OData syntax. Example: $filter=channels eq 'Api' or channel eq 'Notification'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/serverfarms" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Gets all App Service Plans for a subscription",
        "operationId" : "Global_GetAllServerFarms",
        "parameters" : [ {
          "name" : "detailed",
          "in" : "query",
          "description" : "False to return a subset of App Service Plan properties, true to return all of the properties.\r\n            Retrieval of all properties may increase the API latency.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites" : {
      "get" : {
        "tags" : [ "Global" ],
        "summary" : "Gets all Web Apps for a subscription",
        "operationId" : "Global_GetAllSites",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources" : {
      "post" : {
        "tags" : [ "GlobalResourceGroups" ],
        "operationId" : "GlobalResourceGroups_MoveResources",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmMoveResourceEnvelope"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmMoveResourceEnvelope"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmMoveResourceEnvelope"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmMoveResourceEnvelope"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmMoveResourceEnvelope"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders" : {
      "get" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Get certificate orders in a resource group",
        "operationId" : "CertificateOrders_GetCertificateOrders",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates" : {
      "get" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "List all certificates associated with a certificate order (only one certificate can be associated with an order at a time)",
        "operationId" : "CertificateOrders_GetCertificates",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateOrderName",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificateCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificateCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}" : {
      "get" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Get certificate associated with the certificate order",
        "operationId" : "CertificateOrders_GetCertificate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateOrderName",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Associates a Key Vault secret to a certificate store that will be used for storing the certificate once it's ready",
        "operationId" : "CertificateOrders_CreateOrUpdateCertificate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateOrderName",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Key Vault secret csm Id",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrderCertificate"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrderCertificate"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrderCertificate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Deletes the certificate associated with the certificate order",
        "operationId" : "CertificateOrders_DeleteCertificate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateOrderName",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Associates a Key Vault secret to a certificate store that will be used for storing the certificate once it's ready",
        "operationId" : "CertificateOrders_UpdateCertificate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateOrderName",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Key Vault secret csm Id",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrderCertificate"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrderCertificate"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrderCertificate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}" : {
      "get" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Get a certificate order",
        "operationId" : "CertificateOrders_GetCertificateOrder",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Create or update a certificate purchase order",
        "operationId" : "CertificateOrders_CreateOrUpdateCertificateOrder",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Distinguished name to be used for purchasing certificate",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Delete an existing certificate order",
        "operationId" : "CertificateOrders_DeleteCertificateOrder",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Create or update a certificate purchase order",
        "operationId" : "CertificateOrders_UpdateCertificateOrder",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Distinguished name to be used for purchasing certificate",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateOrder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateOrder"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/reissue" : {
      "post" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Reissue an existing certificate order",
        "operationId" : "CertificateOrders_ReissueCertificateOrder",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Reissue parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReissueCertificateOrderRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReissueCertificateOrderRequest"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReissueCertificateOrderRequest"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReissueCertificateOrderRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReissueCertificateOrderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/renew" : {
      "post" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Renew an existing certificate order",
        "operationId" : "CertificateOrders_RenewCertificateOrder",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Renew parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RenewCertificateOrderRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RenewCertificateOrderRequest"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RenewCertificateOrderRequest"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RenewCertificateOrderRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RenewCertificateOrderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/resendEmail" : {
      "post" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Resend certificate email",
        "operationId" : "CertificateOrders_ResendCertificateEmail",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate order name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveCertificateActions" : {
      "post" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Retrieve the list of certificate actions",
        "operationId" : "CertificateOrders_RetrieveCertificateActions",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate order name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CertificateOrderAction"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CertificateOrderAction"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CertificateOrderAction"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CertificateOrderAction"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveEmailHistory" : {
      "post" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Retrieve email history",
        "operationId" : "CertificateOrders_RetrieveCertificateEmailHistory",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate order name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CertificateEmail"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CertificateEmail"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CertificateEmail"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CertificateEmail"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/verifyDomainOwnership" : {
      "post" : {
        "tags" : [ "CertificateOrders" ],
        "summary" : "Verify domain ownership for this certificate order",
        "operationId" : "CertificateOrders_VerifyDomainOwnership",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Certificate order name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains" : {
      "get" : {
        "tags" : [ "Domains" ],
        "summary" : "Lists domains under a resource group",
        "operationId" : "Domains_GetDomains",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}" : {
      "get" : {
        "tags" : [ "Domains" ],
        "summary" : "Gets details of a domain",
        "operationId" : "Domains_GetDomain",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainName",
          "in" : "path",
          "description" : "Name of the domain",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Domains" ],
        "summary" : "Creates a domain",
        "operationId" : "Domains_CreateOrUpdateDomain",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "&gt;Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainName",
          "in" : "path",
          "description" : "Name of the domain",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Domain registration information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Domain"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Domain"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Domain"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Domain purchase was successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              }
            }
          },
          "202" : {
            "description" : "Domain purchase is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Domains" ],
        "summary" : "Deletes a domain",
        "operationId" : "Domains_DeleteDomain",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainName",
          "in" : "path",
          "description" : "Name of the domain",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forceHardDeleteDomain",
          "in" : "query",
          "description" : "If true then the domain will be deleted immediately instead of after 24 hours",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Domain does not exist in Azure database probably because it has already been deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Domains" ],
        "summary" : "Creates a domain",
        "operationId" : "Domains_UpdateDomain",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "&gt;Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainName",
          "in" : "path",
          "description" : "Name of the domain",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Domain registration information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Domain"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Domain"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Domain"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Domain purchase was successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              }
            }
          },
          "202" : {
            "description" : "Domain purchase is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/operationresults/{operationId}" : {
      "get" : {
        "tags" : [ "Domains" ],
        "summary" : "Retrieves the latest status of a domain purchase operation",
        "operationId" : "Domains_GetDomainOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainName",
          "in" : "path",
          "description" : "Name of the domain",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Domain purchase operation Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Domain purchase was successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              }
            }
          },
          "202" : {
            "description" : "Domain purchase is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domain"
                }
              }
            }
          },
          "500" : {
            "description" : "Domain purchase request failed"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web.Admin/environments/{environmentName}/usage" : {
      "get" : {
        "tags" : [ "Usage" ],
        "summary" : "Returns usage records for specified subscription and resource groups",
        "operationId" : "Usage_GetUsage",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "environmentName",
          "in" : "path",
          "description" : "Environment name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastId",
          "in" : "query",
          "description" : "Last marker that was returned from the batch",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "batchSize",
          "in" : "query",
          "description" : "size of the batch to be returned.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "summary" : "Get certificates for a subscription in the specified resource group.",
        "operationId" : "Certificates_GetCertificates",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "summary" : "Get a certificate by certificate name for a subscription in the specified resource group.",
        "operationId" : "Certificates_GetCertificate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the certificate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Certificates" ],
        "summary" : "Creates or modifies an existing certificate.",
        "operationId" : "Certificates_CreateOrUpdateCertificate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the certificate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of certificate if it exists already.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Certificates" ],
        "summary" : "Delete a certificate by name in a specified subscription and resourcegroup.",
        "operationId" : "Certificates_DeleteCertificate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the certificate to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Certificates" ],
        "summary" : "Creates or modifies an existing certificate.",
        "operationId" : "Certificates_UpdateCertificate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the certificate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of certificate if it exists already.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/classicMobileServices" : {
      "get" : {
        "tags" : [ "ClassicMobileServices" ],
        "summary" : "Get all mobile services in a resource group.",
        "operationId" : "ClassicMobileServices_GetClassicMobileServices",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClassicMobileServiceCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClassicMobileServiceCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/classicMobileServices/{name}" : {
      "get" : {
        "tags" : [ "ClassicMobileServices" ],
        "summary" : "Get a mobile service.",
        "operationId" : "ClassicMobileServices_GetClassicMobileService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of mobile service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClassicMobileService"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClassicMobileService"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClassicMobileService"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClassicMobileService"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "ClassicMobileServices" ],
        "summary" : "Delete a mobile service.",
        "operationId" : "ClassicMobileServices_DeleteClassicMobileService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of mobile service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/csrs" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "summary" : "Gets the certificate signing requests for a subscription in the specified resource group",
        "operationId" : "Certificates_GetCsrs",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Csr"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Csr"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Csr"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Csr"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/csrs/{name}" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "summary" : "Gets a certificate signing request by certificate name for a subscription in the specified resource group",
        "operationId" : "Certificates_GetCsr",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the certificate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Certificates" ],
        "summary" : "Creates or modifies an existing certificate signing request.",
        "operationId" : "Certificates_CreateOrUpdateCsr",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the certificate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of certificate signing request if it exists already.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Csr"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Csr"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Csr"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Certificates" ],
        "summary" : "Delete the certificate signing request.",
        "operationId" : "Certificates_DeleteCsr",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the certificate signing request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Certificates" ],
        "summary" : "Creates or modifies an existing certificate signing request.",
        "operationId" : "Certificates_UpdateCsr",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the certificate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of certificate signing request if it exists already.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Csr"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Csr"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Csr"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Csr"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/deletedSites" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets deleted web apps in subscription",
        "operationId" : "Sites_GetDeletedSites",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertiesToInclude",
          "in" : "query",
          "description" : "Additional web app properties included in the response",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeSiteTypes",
          "in" : "query",
          "description" : "Types of apps included in the response",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeletedSiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeletedSiteCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get all hostingEnvironments (App Service Environments) in a resource group.",
        "operationId" : "HostingEnvironments_GetHostingEnvironments",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get properties of hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Create or update a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_CreateOrUpdateHostingEnvironment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Properties of hostingEnvironment (App Service Environment)",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostingEnvironment"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostingEnvironment"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostingEnvironment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Not found"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Delete a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_DeleteHostingEnvironment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forceDelete",
          "in" : "query",
          "description" : "Delete even if the hostingEnvironment (App Service Environment) contains resources",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Not found"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/compute" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get used, available, and total worker capacity for hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentCapacities",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StampCapacityCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StampCapacityCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/virtualip" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get IP addresses assigned to the hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentVips",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get diagnostic information for hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentDiagnostics",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostingEnvironmentDiagnostics"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostingEnvironmentDiagnostics"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostingEnvironmentDiagnostics"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostingEnvironmentDiagnostics"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics/{diagnosticsName}" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get diagnostic information for hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentDiagnosticsItem",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "diagnosticsName",
          "in" : "path",
          "description" : "Name of the diagnostics",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentDiagnostics"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentDiagnostics"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentDiagnostics"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentDiagnostics"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/metricdefinitions" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get global metric definitions of hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentMetricDefinitions",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinition"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinition"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinition"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/metrics" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get global metrics of hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentMetrics",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "Include instance details",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get all multi role pools",
        "operationId" : "HostingEnvironments_GetMultiRolePools",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPoolCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPoolCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get properties of a multiRole pool.",
        "operationId" : "HostingEnvironments_GetMultiRolePool",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Create or update a multiRole pool.",
        "operationId" : "HostingEnvironments_CreateOrUpdateMultiRolePool",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Properties of multiRole pool",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkerPool"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkerPool"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkerPool"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Not found"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metricdefinitions" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get metric definitions for a specific instance of a multiRole pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetMultiRolePoolInstanceMetricDefinitions",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instance",
          "in" : "path",
          "description" : "Name of instance in the multiRole pool&gt;",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metrics" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get metrics for a specific instance of a multiRole pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetMultiRolePoolInstanceMetrics",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instance",
          "in" : "path",
          "description" : "Name of instance in the multiRole pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "Include instance details",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metricdefinitions" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get metric definitions for a multiRole pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentMultiRoleMetricDefinitions",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metrics" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get metrics for a multiRole pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentMultiRoleMetrics",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "Beginning time of metrics query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "End time of metrics query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeGrain",
          "in" : "query",
          "description" : "Time granularity of metrics query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "Include instance details",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/skus" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get available skus for scaling a multiRole pool.",
        "operationId" : "HostingEnvironments_GetMultiRolePoolSkus",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SkuInfoCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SkuInfoCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/usages" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get usages for a multiRole pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentMultiRoleUsages",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsageCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsageCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "List all currently running operations on the hostingEnvironment (App Service Environment)",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentOperations",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get status of an operation on a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "operation identifier GUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operation completed successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous operation in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Operation failed"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/reboot" : {
      "post" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Reboots all machines in a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_RebootHostingEnvironment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Asynchronous operation in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Not found"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/resume" : {
      "post" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Resumes the hostingEnvironment.",
        "operationId" : "HostingEnvironments_ResumeHostingEnvironment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/serverfarms" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get all serverfarms (App Service Plans) on the hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentServerFarms",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/sites" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get all sites on the hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentSites",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertiesToInclude",
          "in" : "query",
          "description" : "Comma separated list of site properties to include",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/suspend" : {
      "post" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Suspends the hostingEnvironment.",
        "operationId" : "HostingEnvironments_SuspendHostingEnvironment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/usages" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get global usages of hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentUsages",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsmUsageQuotaCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsmUsageQuotaCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/webhostingplans" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get all serverfarms (App Service Plans) on the hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentWebHostingPlans",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get all worker pools",
        "operationId" : "HostingEnvironments_GetWorkerPools",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPoolCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPoolCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get properties of a worker pool.",
        "operationId" : "HostingEnvironments_GetWorkerPool",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workerPoolName",
          "in" : "path",
          "description" : "Name of worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Create or update a worker pool.",
        "operationId" : "HostingEnvironments_CreateOrUpdateWorkerPool",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workerPoolName",
          "in" : "path",
          "description" : "Name of worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Properties of worker pool",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkerPool"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkerPool"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkerPool"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Not found"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metricdefinitions" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get metric definitions for a specific instance of a worker pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetWorkerPoolInstanceMetricDefinitions",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workerPoolName",
          "in" : "path",
          "description" : "Name of worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instance",
          "in" : "path",
          "description" : "Name of instance in the worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metrics" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get metrics for a specific instance of a worker pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetWorkerPoolInstanceMetrics",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workerPoolName",
          "in" : "path",
          "description" : "Name of worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instance",
          "in" : "path",
          "description" : "Name of instance in the worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "Include instance details",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metricdefinitions" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get metric definitions for a worker pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentWebWorkerMetricDefinitions",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workerPoolName",
          "in" : "path",
          "description" : "Name of worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metrics" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get metrics for a worker pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentWebWorkerMetrics",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workerPoolName",
          "in" : "path",
          "description" : "Name of worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "Include instance details",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/skus" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get available skus for scaling a worker pool.",
        "operationId" : "HostingEnvironments_GetWorkerPoolSkus",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workerPoolName",
          "in" : "path",
          "description" : "Name of worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SkuInfoCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SkuInfoCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/usages" : {
      "get" : {
        "tags" : [ "HostingEnvironments" ],
        "summary" : "Get usages for a worker pool of a hostingEnvironment (App Service Environment).",
        "operationId" : "HostingEnvironments_GetHostingEnvironmentWebWorkerUsages",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of hostingEnvironment (App Service Environment)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workerPoolName",
          "in" : "path",
          "description" : "Name of worker pool",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsageCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsageCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments" : {
      "get" : {
        "tags" : [ "ManagedHostingEnvironments" ],
        "summary" : "Get all managed hosting environments in a resource group.",
        "operationId" : "ManagedHostingEnvironments_GetManagedHostingEnvironments",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironmentCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}" : {
      "get" : {
        "tags" : [ "ManagedHostingEnvironments" ],
        "summary" : "Get properties of a managed hosting environment.",
        "operationId" : "ManagedHostingEnvironments_GetManagedHostingEnvironment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of managed hosting environment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedHostingEnvironment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedHostingEnvironment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedHostingEnvironment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedHostingEnvironment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "ManagedHostingEnvironments" ],
        "summary" : "Create or update a managed hosting environment.",
        "operationId" : "ManagedHostingEnvironments_CreateOrUpdateManagedHostingEnvironment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of managed hosting environment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Properties of managed hosting environment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostingEnvironment"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostingEnvironment"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostingEnvironment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Asynchronous operation in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostingEnvironment"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Not found"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "ManagedHostingEnvironments" ],
        "summary" : "Delete a managed hosting environment.",
        "operationId" : "ManagedHostingEnvironments_DeleteManagedHostingEnvironment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of managed hosting environment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forceDelete",
          "in" : "query",
          "description" : "Delete even if the managed hosting environment contains resources",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Asynchronous operation in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Not found"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/capacities/virtualip" : {
      "get" : {
        "tags" : [ "ManagedHostingEnvironments" ],
        "summary" : "Get list of ip addresses assigned to a managed hosting environment",
        "operationId" : "ManagedHostingEnvironments_GetManagedHostingEnvironmentVips",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of managed hosting environment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "ManagedHostingEnvironments" ],
        "summary" : "Get status of an operation on a managed hosting environment.",
        "operationId" : "ManagedHostingEnvironments_GetManagedHostingEnvironmentOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of managed hosting environment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "operation identifier GUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operation completed successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous operation in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Operation failed"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/serverfarms" : {
      "get" : {
        "tags" : [ "ManagedHostingEnvironments" ],
        "summary" : "Get all serverfarms (App Service Plans) on the managed hosting environment.",
        "operationId" : "ManagedHostingEnvironments_GetManagedHostingEnvironmentServerFarms",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of managed hosting environment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/sites" : {
      "get" : {
        "tags" : [ "ManagedHostingEnvironments" ],
        "summary" : "Get all sites on the managed hosting environment.",
        "operationId" : "ManagedHostingEnvironments_GetManagedHostingEnvironmentSites",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of managed hosting environment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertiesToInclude",
          "in" : "query",
          "description" : "Comma separated list of site properties to include",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/webhostingplans" : {
      "get" : {
        "tags" : [ "ManagedHostingEnvironments" ],
        "summary" : "Get all serverfarms (App Service Plans) on the managed hosting environment.",
        "operationId" : "ManagedHostingEnvironments_GetManagedHostingEnvironmentWebHostingPlans",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of managed hosting environment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Gets collection of App Service Plans in a resource group for a given subscription.",
        "operationId" : "ServerFarms_GetServerFarms",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Gets specified App Service Plan in a resource group",
        "operationId" : "ServerFarms_GetServerFarm",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Creates or updates an App Service Plan",
        "operationId" : "ServerFarms_CreateOrUpdateServerFarm",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allowPendingState",
          "in" : "query",
          "description" : "OBSOLETE: If true, allow pending state for App Service Plan",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of App Service Plan",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerFarmWithRichSku"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerFarmWithRichSku"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerFarmWithRichSku"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Deletes a App Service Plan",
        "operationId" : "ServerFarms_DeleteServerFarm",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/metricdefinitions" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "List of metrics that can be queried for an App Service Plan",
        "operationId" : "ServerFarms_GetServerFarmMetricDefintions",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/metrics" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Queries for App Service Plan metrics",
        "operationId" : "ServerFarms_GetServerFarmMetrics",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "If true, metrics are broken down per App Service Plan instance",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/operationresults/{operationId}" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Gets a server farm operation",
        "operationId" : "ServerFarms_GetServerFarmOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of server farm",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Id of Server farm operation\"&gt;",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerFarmWithRichSku"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/restartSites" : {
      "post" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Restarts web apps in a specified App Service Plan",
        "operationId" : "ServerFarms_RestartSitesForServerFarm",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "softRestart",
          "in" : "query",
          "description" : "Soft restart applies the configuration settings and restarts the apps if necessary. Hard restart always restarts and reprovisions the apps",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/sites" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Gets list of Apps associated with an App Service Plan",
        "operationId" : "ServerFarms_GetServerFarmSites",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "Skip to of web apps in a list. If specified, the resulting list will contain web apps starting from (including) the skipToken. Else, the resulting list contains web apps from the start of the list",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Supported filter: $filter=state eq running. Returns only web apps that are currently running",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "List page size. If specified, results are paged.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Gets list of VNets associated with App Service Plan",
        "operationId" : "ServerFarms_GetVnetsForServerFarm",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Gets a vnet associated with an App Service Plan",
        "operationId" : "ServerFarms_GetVnetFromServerFarm",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "Name of virtual network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Virtual network could not be found"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Gets the vnet gateway.",
        "operationId" : "ServerFarms_GetServerFarmVnetGateway",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "Name of the virtual network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "Name of the gateway. Only the 'primary' gateway is supported.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Updates the vnet gateway",
        "operationId" : "ServerFarms_UpdateServerFarmVnetGateway",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the virtual network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The name of the gateway. Only 'primary' is supported.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The gateway entity.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Gets a list of all routes associated with a vnet, in an app service plan",
        "operationId" : "ServerFarms_GetRoutesForVnet",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "Name of virtual network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetRoute"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetRoute"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetRoute"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetRoute"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}" : {
      "get" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Gets a specific route associated with a vnet, in an app service plan",
        "operationId" : "ServerFarms_GetRouteForVnet",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "Name of virtual network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeName",
          "in" : "path",
          "description" : "Name of the virtual network route",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetRoute"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetRoute"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetRoute"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetRoute"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Specified route does not exist"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Creates a new route or updates an existing route for a vnet in an app service plan.",
        "operationId" : "ServerFarms_CreateOrUpdateVnetRoute",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "Name of virtual network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeName",
          "in" : "path",
          "description" : "Name of the virtual network route",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The route object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetRoute"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetRoute"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetRoute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetRoute"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetRoute"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetRoute"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetRoute"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request. Ensure that required parameters are given, and that addresses and address spaces are valid"
          },
          "404" : {
            "description" : "Route not found. This will only occur when using the PATCH verb."
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Deletes an existing route for a vnet in an app service plan.",
        "operationId" : "ServerFarms_DeleteVnetRoute",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "Name of virtual network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeName",
          "in" : "path",
          "description" : "Name of the virtual network route",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified route does not exist."
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Creates a new route or updates an existing route for a vnet in an app service plan.",
        "operationId" : "ServerFarms_UpdateVnetRoute",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of App Service Plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "Name of virtual network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routeName",
          "in" : "path",
          "description" : "Name of the virtual network route",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The route object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetRoute"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetRoute"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetRoute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetRoute"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetRoute"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetRoute"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetRoute"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request. Ensure that required parameters are given, and that addresses and address spaces are valid"
          },
          "404" : {
            "description" : "Route not found. This will only occur when using the PATCH verb."
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/workers/{workerName}/reboot" : {
      "post" : {
        "tags" : [ "ServerFarms" ],
        "summary" : "Submit a reboot request for a worker machine in the specified server farm",
        "operationId" : "ServerFarms_RebootWorkerForServerFarm",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of server farm",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workerName",
          "in" : "path",
          "description" : "Name of worker machine, typically starts with RD",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the web apps for a subscription in the specified resource group",
        "operationId" : "Sites_GetSites",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertiesToInclude",
          "in" : "query",
          "description" : "Additional web app properties included in the response",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeSiteTypes",
          "in" : "query",
          "description" : "Types of apps included in the response",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeSlots",
          "in" : "query",
          "description" : "Whether or not to include deployments slots in results",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get details of a web app",
        "operationId" : "Sites_GetSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertiesToInclude",
          "in" : "query",
          "description" : "Additional web app properties included in the response",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a new web app or modifies an existing web app.",
        "operationId" : "Sites_CreateOrUpdateSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipDnsRegistration",
          "in" : "query",
          "description" : "If true web app hostname is not registered with DNS on creation. This parameter is\r\n            only used for app creation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipCustomDomainVerification",
          "in" : "query",
          "description" : "If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forceDnsRegistration",
          "in" : "query",
          "description" : "If true, web app hostname is force registered with DNS",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ttlInSeconds",
          "in" : "query",
          "description" : "Time to live in seconds for web app's default domain name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of web app if it exists already",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous operation in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Deletes a web app",
        "operationId" : "Sites_DeleteSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteMetrics",
          "in" : "query",
          "description" : "If true, web app metrics are also deleted",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteEmptyServerFarm",
          "in" : "query",
          "description" : "If true and App Service Plan is empty after web app deletion, App Service Plan is also deleted",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipDnsRegistration",
          "in" : "query",
          "description" : "If true, DNS registration is skipped",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteAllSlots",
          "in" : "query",
          "description" : "If true, all slots associated with web app are also deleted",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/applySlotConfig" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Applies the configuration settings from the target slot onto the current slot",
        "operationId" : "Sites_ApplySlotConfigToProduction",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the target slot name. Settings from that slot will be applied on the source slot",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backup" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates web app backup",
        "operationId" : "Sites_BackupSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on backup request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Lists all available backups for web app",
        "operationId" : "Sites_ListSiteBackups",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItemCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItemCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/discover" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Discovers existing web app backups that can be restored",
        "operationId" : "Sites_DiscoverSiteRestore",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on restore request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreRequest"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreRequest"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreRequest"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreRequest"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets status of a web app backup that may be in progress.",
        "operationId" : "Sites_GetSiteBackupStatus",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupId",
          "in" : "path",
          "description" : "Id of backup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Deletes a backup from Azure Storage",
        "operationId" : "Sites_DeleteBackup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupId",
          "in" : "path",
          "description" : "Id of backup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId" : "Sites_GetSiteBackupStatusSecrets",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupId",
          "in" : "path",
          "description" : "Id of backup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on backup request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/restore" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Restores a web app",
        "operationId" : "Sites_RestoreSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupId",
          "in" : "path",
          "description" : "Id of backup to restore",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on restore request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreResponse"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreResponse"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the application settings of web app",
        "operationId" : "Sites_UpdateSiteAppSettings",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Application settings of web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the application settings of web app",
        "operationId" : "Sites_ListSiteAppSettings",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the Authentication / Authorization settings associated with web app",
        "operationId" : "Sites_UpdateSiteAuthSettings",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Auth settings associated with web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteAuthSettings"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteAuthSettings"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteAuthSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the Authentication / Authorization settings associated with web app",
        "operationId" : "Sites_ListSiteAuthSettings",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates backup configuration of web app",
        "operationId" : "Sites_UpdateSiteBackupConfiguration",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on backup request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the backup configuration for a web app",
        "operationId" : "Sites_GetSiteBackupConfiguration",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the connection strings associated with web app",
        "operationId" : "Sites_UpdateSiteConnectionStrings",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Connection strings associated with web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectionStringDictionary"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectionStringDictionary"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectionStringDictionary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the connection strings associated with web app",
        "operationId" : "Sites_ListSiteConnectionStrings",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the web app logs configuration",
        "operationId" : "Sites_GetSiteLogsConfig",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the meta data for web app",
        "operationId" : "Sites_UpdateSiteLogsConfig",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Site logs configuration",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteLogsConfig"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteLogsConfig"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteLogsConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the meta data for web app",
        "operationId" : "Sites_UpdateSiteMetadata",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Meta data of web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the web app meta data.",
        "operationId" : "Sites_ListSiteMetadata",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/publishingcredentials/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the web app publishing credentials",
        "operationId" : "Sites_ListSitePublishingCredentials",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the names of application settings and connection string that remain with the slot during swap operation",
        "operationId" : "Sites_GetSlotConfigNames",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotConfigNamesResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotConfigNamesResource"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotConfigNamesResource"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotConfigNamesResource"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the names of application settings and connection string that remain with the slot during swap operation",
        "operationId" : "Sites_UpdateSlotConfigNames",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body containing the names of application settings and connection strings",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SlotConfigNamesResource"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SlotConfigNamesResource"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SlotConfigNamesResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotConfigNamesResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotConfigNamesResource"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotConfigNamesResource"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotConfigNamesResource"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the configuration of the web app",
        "operationId" : "Sites_GetSiteConfig",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Update the configuration of web app",
        "operationId" : "Sites_CreateOrUpdateSiteConfig",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the configuration setting for the web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Update the configuration of web app",
        "operationId" : "Sites_UpdateSiteConfig",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the configuration setting for the web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "List deployments",
        "operationId" : "Sites_GetDeployments",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get the deployment",
        "operationId" : "Sites_GetDeployment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Create a deployment",
        "operationId" : "Sites_CreateDeployment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of deployment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Delete the deployment",
        "operationId" : "Sites_DeleteDeployment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get web app hostname bindings",
        "operationId" : "Sites_GetSiteHostNameBindings",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBindingCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBindingCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get web app binding for a hostname",
        "operationId" : "Sites_GetSiteHostNameBinding",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostName",
          "in" : "path",
          "description" : "Name of host",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a web app hostname binding",
        "operationId" : "Sites_CreateOrUpdateSiteHostNameBinding",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostName",
          "in" : "path",
          "description" : "Name of host",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Host name binding information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostNameBinding"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostNameBinding"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostNameBinding"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Deletes a host name binding",
        "operationId" : "Sites_DeleteSiteHostNameBinding",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostName",
          "in" : "path",
          "description" : "Name of host",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves all BizTalk Hybrid Connections associated with this web app.",
        "operationId" : "Sites_ListSiteRelayServiceConnections",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a BizTalk Hybrid Connection identified by its entity name.",
        "operationId" : "Sites_GetSiteRelayServiceConnection",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityName",
          "in" : "path",
          "description" : "The name by which the Hybrid Connection is identified",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a new association to a BizTalk Hybrid Connection, or updates an existing one.",
        "operationId" : "Sites_CreateOrUpdateSiteRelayServiceConnection",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityName",
          "in" : "path",
          "description" : "The name by which the Hybrid Connection is identified",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The details of the Hybrid Connection",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Removes the association to a BizTalk Hybrid Connection, identified by its entity name.",
        "operationId" : "Sites_DeleteSiteRelayServiceConnection",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityName",
          "in" : "path",
          "description" : "The name by which the Hybrid Connection is identified",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a new association to a BizTalk Hybrid Connection, or updates an existing one.",
        "operationId" : "Sites_UpdateSiteRelayServiceConnection",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityName",
          "in" : "path",
          "description" : "The name by which the Hybrid Connection is identified",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The details of the Hybrid Connection",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets all instance of a web app",
        "operationId" : "Sites_GetSiteInstanceIdentifiers",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteInstanceCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteInstanceCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "List deployments",
        "operationId" : "Sites_GetInstanceDeployments",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "description" : "Id of web app instance",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get the deployment",
        "operationId" : "Sites_GetInstanceDeployment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "description" : "Id of web app instance",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Create a deployment",
        "operationId" : "Sites_CreateInstanceDeployment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "description" : "Id of web app instance",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of deployment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Delete the deployment",
        "operationId" : "Sites_DeleteInstanceDeployment",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "description" : "Id of web app instance",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/iscloneable" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a new web app or modifies an existing web app.",
        "operationId" : "Sites_IsSiteCloneable",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCloneability"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCloneability"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCloneability"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCloneability"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metricdefinitions" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets metric definitions for web app",
        "operationId" : "Sites_GetSiteMetricDefinitions",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metrics" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets metrics for web app",
        "operationId" : "Sites_GetSiteMetrics",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "If true, metric details are included in response",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkFeatures/{view}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a view of all network features in use on this web app.",
        "operationId" : "Sites_GetSiteNetworkFeatures",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "view",
          "in" : "path",
          "description" : "The type of view. This can either be \"summary\" or \"detailed\".",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkFeatures"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkFeatures"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkFeatures"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkFeatures"
                }
              }
            }
          },
          "404" : {
            "description" : "The requested view does not exist."
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/newpassword" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Generates new random app publishing password",
        "operationId" : "Sites_GenerateNewSitePublishingPassword",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/operationresults/{operationId}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the operation for a web app",
        "operationId" : "Sites_GetSiteOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Id of an operation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons" : {
      "get" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_ListSitePremierAddOns",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_GetSitePremierAddOn",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "premierAddOnName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_AddSitePremierAddOn",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "premierAddOnName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PremierAddOnRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PremierAddOnRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PremierAddOnRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_DeleteSitePremierAddOn",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "premierAddOnName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publishxml" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the publishing profile for web app",
        "operationId" : "Sites_ListSitePublishingProfileXml",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Specifies options for publishing profile. Pass CsmPublishingProfileOptions.Format=FileZilla3 for FileZilla FTP format.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/recover" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Recovers a deleted web app",
        "operationId" : "Sites_RecoverSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Asynchronous operation in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            }
          },
          "404" : {
            "description" : "Web app not found"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resetSlotConfig" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Resets the configuration settings of the current slot if they were previously modified by calling ApplySlotConfig API",
        "operationId" : "Sites_ResetProductionSlotConfig",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restart" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Restarts web app",
        "operationId" : "Sites_RestartSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "softRestart",
          "in" : "query",
          "description" : "Soft restart applies the configuration settings and restarts the app if necessary. Hard restart always restarts and reprovisions the app",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "synchronous",
          "in" : "query",
          "description" : "If true then the API will block until the app has been restarted",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets all the slots for a web apps",
        "operationId" : "Sites_GetSiteSlots",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertiesToInclude",
          "in" : "query",
          "description" : "List of app properties to include in the response",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get details of a web app",
        "operationId" : "Sites_GetSiteSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertiesToInclude",
          "in" : "query",
          "description" : "Additional web app properties included in the response",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a new web app or modifies an existing web app.",
        "operationId" : "Sites_CreateOrUpdateSiteSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipDnsRegistration",
          "in" : "query",
          "description" : "If true web app hostname is not registered with DNS on creation. This parameter is\r\n            only used for app creation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipCustomDomainVerification",
          "in" : "query",
          "description" : "If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forceDnsRegistration",
          "in" : "query",
          "description" : "If true, web app hostname is force registered with DNS",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ttlInSeconds",
          "in" : "query",
          "description" : "Time to live in seconds for web app's default domain name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of web app if it exists already",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous operation in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Deletes a web app",
        "operationId" : "Sites_DeleteSiteSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteMetrics",
          "in" : "query",
          "description" : "If true, web app metrics are also deleted",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteEmptyServerFarm",
          "in" : "query",
          "description" : "If true and App Service Plan is empty after web app deletion, App Service Plan is also deleted",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipDnsRegistration",
          "in" : "query",
          "description" : "If true, DNS registration is skipped",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteAllSlots",
          "in" : "query",
          "description" : "If true, all slots associated with web app are also deleted",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/applySlotConfig" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Applies the configuration settings from the target slot onto the current slot",
        "operationId" : "Sites_ApplySlotConfigSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of the source slot. Settings from the target slot will be applied onto this slot",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the target slot name. Settings from that slot will be applied on the source slot",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backup" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates web app backup",
        "operationId" : "Sites_BackupSiteSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on backup request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Lists all available backups for web app",
        "operationId" : "Sites_ListSiteBackupsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItemCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItemCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/discover" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Discovers existing web app backups that can be restored",
        "operationId" : "Sites_DiscoverSiteRestoreSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on restore request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreRequest"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreRequest"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreRequest"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreRequest"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets status of a web app backup that may be in progress.",
        "operationId" : "Sites_GetSiteBackupStatusSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupId",
          "in" : "path",
          "description" : "Id of backup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Deletes a backup from Azure Storage",
        "operationId" : "Sites_DeleteBackupSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupId",
          "in" : "path",
          "description" : "Id of backup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId" : "Sites_GetSiteBackupStatusSecretsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupId",
          "in" : "path",
          "description" : "Id of backup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on backup request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupItem"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/restore" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Restores a web app",
        "operationId" : "Sites_RestoreSiteSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupId",
          "in" : "path",
          "description" : "Id of backup to restore",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on restore request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreResponse"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestoreResponse"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the application settings of web app",
        "operationId" : "Sites_UpdateSiteAppSettingsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Application settings of web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the application settings of web app",
        "operationId" : "Sites_ListSiteAppSettingsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the Authentication / Authorization settings associated with web app",
        "operationId" : "Sites_UpdateSiteAuthSettingsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Auth settings associated with web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteAuthSettings"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteAuthSettings"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteAuthSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the Authentication / Authorization settings associated with web app",
        "operationId" : "Sites_ListSiteAuthSettingsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteAuthSettings"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates backup configuration of web app",
        "operationId" : "Sites_UpdateSiteBackupConfigurationSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information on backup request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the backup configuration for a web app",
        "operationId" : "Sites_GetSiteBackupConfigurationSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupRequest"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the connection strings associated with web app",
        "operationId" : "Sites_UpdateSiteConnectionStringsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Connection strings associated with web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectionStringDictionary"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectionStringDictionary"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectionStringDictionary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the connection strings associated with web app",
        "operationId" : "Sites_ListSiteConnectionStringsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionStringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the web app logs configuration",
        "operationId" : "Sites_GetSiteLogsConfigSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the meta data for web app",
        "operationId" : "Sites_UpdateSiteLogsConfigSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Site logs configuration",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteLogsConfig"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteLogsConfig"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteLogsConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLogsConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the meta data for web app",
        "operationId" : "Sites_UpdateSiteMetadataSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Meta data of web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/StringDictionary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the web app meta data.",
        "operationId" : "Sites_ListSiteMetadataSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringDictionary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/publishingcredentials/list" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the web app publishing credentials",
        "operationId" : "Sites_ListSitePublishingCredentialsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the configuration of the web app",
        "operationId" : "Sites_GetSiteConfigSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Update the configuration of web app",
        "operationId" : "Sites_CreateOrUpdateSiteConfigSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the configuration setting for the web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Update the configuration of web app",
        "operationId" : "Sites_UpdateSiteConfigSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the configuration setting for the web app",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "List deployments",
        "operationId" : "Sites_GetDeploymentsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get the deployment",
        "operationId" : "Sites_GetDeploymentSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Create a deployment",
        "operationId" : "Sites_CreateDeploymentSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of deployment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Delete the deployment",
        "operationId" : "Sites_DeleteDeploymentSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get web app hostname bindings",
        "operationId" : "Sites_GetSiteHostNameBindingsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBindingCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBindingCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get web app binding for a hostname",
        "operationId" : "Sites_GetSiteHostNameBindingSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostName",
          "in" : "path",
          "description" : "Name of host",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a web app hostname binding",
        "operationId" : "Sites_CreateOrUpdateSiteHostNameBindingSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostName",
          "in" : "path",
          "description" : "Name of host",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Host name binding information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostNameBinding"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostNameBinding"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostNameBinding"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNameBinding"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Deletes a host name binding",
        "operationId" : "Sites_DeleteSiteHostNameBindingSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostName",
          "in" : "path",
          "description" : "Name of host",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves all BizTalk Hybrid Connections associated with this web app.",
        "operationId" : "Sites_ListSiteRelayServiceConnectionsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for the web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a BizTalk Hybrid Connection identified by its entity name.",
        "operationId" : "Sites_GetSiteRelayServiceConnectionSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityName",
          "in" : "path",
          "description" : "The name by which the Hybrid Connection is identified",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for the web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a new association to a BizTalk Hybrid Connection, or updates an existing one.",
        "operationId" : "Sites_CreateOrUpdateSiteRelayServiceConnectionSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityName",
          "in" : "path",
          "description" : "The name by which the Hybrid Connection is identified",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for the web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The details of the Hybrid Connection",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Removes the association to a BizTalk Hybrid Connection, identified by its entity name.",
        "operationId" : "Sites_DeleteSiteRelayServiceConnectionSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityName",
          "in" : "path",
          "description" : "The name by which the Hybrid Connection is identified",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for the web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a new association to a BizTalk Hybrid Connection, or updates an existing one.",
        "operationId" : "Sites_UpdateSiteRelayServiceConnectionSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityName",
          "in" : "path",
          "description" : "The name by which the Hybrid Connection is identified",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for the web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The details of the Hybrid Connection",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets all instance of a web app",
        "operationId" : "Sites_GetSiteInstanceIdentifiersSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteInstanceCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteInstanceCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "List deployments",
        "operationId" : "Sites_GetInstanceDeploymentsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "description" : "Id of web app instance",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get the deployment",
        "operationId" : "Sites_GetInstanceDeploymentSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "description" : "Id of web app instance",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Create a deployment",
        "operationId" : "Sites_CreateInstanceDeploymentSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "description" : "Id of web app instance",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Details of deployment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deployment"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Delete the deployment",
        "operationId" : "Sites_DeleteInstanceDeploymentSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the deployment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "description" : "Id of web app instance",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/iscloneable" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Creates a new web app or modifies an existing web app.",
        "operationId" : "Sites_IsSiteCloneableSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCloneability"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCloneability"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCloneability"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteCloneability"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metricdefinitions" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets metric definitions for web app",
        "operationId" : "Sites_GetSiteMetricDefinitionsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metrics" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets metrics for web app",
        "operationId" : "Sites_GetSiteMetricsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "If true, metric details are included in response",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetricCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkFeatures/{view}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a view of all network features in use on this web app.",
        "operationId" : "Sites_GetSiteNetworkFeaturesSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "view",
          "in" : "path",
          "description" : "The type of view. This can either be \"summary\" or \"detailed\".",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for this web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkFeatures"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkFeatures"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkFeatures"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkFeatures"
                }
              }
            }
          },
          "404" : {
            "description" : "The requested view does not exist."
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/newpassword" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Generates new random app publishing password",
        "operationId" : "Sites_GenerateNewSitePublishingPasswordSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/operationresults/{operationId}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the operation for a web app",
        "operationId" : "Sites_GetSiteOperationSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Id of an operation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons" : {
      "get" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_ListSitePremierAddOnsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_GetSitePremierAddOnSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "premierAddOnName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_AddSitePremierAddOnSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "premierAddOnName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PremierAddOnRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PremierAddOnRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PremierAddOnRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_DeleteSitePremierAddOnSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "premierAddOnName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publishxml" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the publishing profile for web app",
        "operationId" : "Sites_ListSitePublishingProfileXmlSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Specifies options for publishing profile. Pass CsmPublishingProfileOptions.Format=FileZilla3 for FileZilla FTP format.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmPublishingProfileOptions"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/recover" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Recovers a deleted web app",
        "operationId" : "Sites_RecoverSiteSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSiteRecoveryEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Asynchronous operation in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            }
          },
          "404" : {
            "description" : "Web app not found"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resetSlotConfig" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Resets the configuration settings of the current slot if they were previously modified by calling ApplySlotConfig API",
        "operationId" : "Sites_ResetSlotConfigSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restart" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Restarts web app",
        "operationId" : "Sites_RestartSiteSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "softRestart",
          "in" : "query",
          "description" : "Soft restart applies the configuration settings and restarts the app if necessary. Hard restart always restarts and reprovisions the app",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "synchronous",
          "in" : "query",
          "description" : "If true then the API will block until the app has been restarted",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsdiffs" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Get the difference in configuration settings between two web app slots",
        "operationId" : "Sites_GetSlotsDifferencesSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of the source slot",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the target slot name",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotDifferenceCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotDifferenceCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsswap" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Swaps web app slots",
        "operationId" : "Sites_SwapSlotsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of source slot for the swap",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the target slot name",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshots" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Returns all Snapshots to the user.",
        "operationId" : "Sites_GetSiteSnapshotsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Webspace",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Website Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Website Slot",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get the source control configuration of web app",
        "operationId" : "Sites_GetSiteSourceControlSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Update the source control configuration of web app",
        "operationId" : "Sites_CreateOrUpdateSiteSourceControlSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the source control parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Delete source control configuration of web app",
        "operationId" : "Sites_DeleteSiteSourceControlSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Update the source control configuration of web app",
        "operationId" : "Sites_UpdateSiteSourceControlSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the source control parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/start" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Starts web app",
        "operationId" : "Sites_StartSiteSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/stop" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Stops web app",
        "operationId" : "Sites_StopSiteSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sync" : {
      "post" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_SyncSiteRepositorySlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/usages" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the quota usage numbers for web app",
        "operationId" : "Sites_GetSiteUsagesSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "Name of web app slot. If not specified then will default to production slot.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages specified in the filter. Filter is specified by using OData syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsmUsageQuotaCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsmUsageQuotaCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a list of all Virtual Network Connections associated with this web app.",
        "operationId" : "Sites_GetSiteVNETConnectionsSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for this web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a specific Virtual Network Connection associated with this web app.",
        "operationId" : "Sites_GetSiteVNETConnectionSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for this web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Adds a Virtual Network Connection or updates it's properties.",
        "operationId" : "Sites_CreateOrUpdateSiteVNETConnectionSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for this web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The properties of this Virtual Network Connection",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Removes the specified Virtual Network Connection association from this web app.",
        "operationId" : "Sites_DeleteSiteVNETConnectionSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for this web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Adds a Virtual Network Connection or updates it's properties.",
        "operationId" : "Sites_UpdateSiteVNETConnectionSlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for this web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The properties of this Virtual Network Connection",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a Virtual Network connection gateway associated with this web app and virtual network.",
        "operationId" : "Sites_GetSiteVnetGatewaySlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The name of the gateway. The only gateway that exists presently is \"primary\"",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for this web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "404" : {
            "description" : "Gateway does not exist. Only the \"primary\" gateway exists presently."
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the Virtual Network Gateway.",
        "operationId" : "Sites_CreateOrUpdateSiteVNETConnectionGatewaySlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The name of the gateway. The only gateway that exists presently is \"primary\"",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for this web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The properties to update this gateway with.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the Virtual Network Gateway.",
        "operationId" : "Sites_UpdateSiteVNETConnectionGatewaySlot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The name of the gateway. The only gateway that exists presently is \"primary\"",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slot",
          "in" : "path",
          "description" : "The name of the slot for this web app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The properties to update this gateway with.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsdiffs" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Get the difference in configuration settings between two web app slots",
        "operationId" : "Sites_GetSlotsDifferencesFromProduction",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the target slot name",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotDifferenceCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SlotDifferenceCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsswap" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Swaps web app slots",
        "operationId" : "Sites_SwapSlotWithProduction",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the target slot name",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is in progress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshots" : {
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Returns all Snapshots to the user.",
        "operationId" : "Sites_GetSiteSnapshots",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Webspace",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Website Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Get the source control configuration of web app",
        "operationId" : "Sites_GetSiteSourceControl",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Update the source control configuration of web app",
        "operationId" : "Sites_CreateOrUpdateSiteSourceControl",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the source control parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Delete source control configuration of web app",
        "operationId" : "Sites_DeleteSiteSourceControl",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Update the source control configuration of web app",
        "operationId" : "Sites_UpdateSiteSourceControl",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body that contains the source control parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteSourceControl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteSourceControl"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/start" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Starts web app",
        "operationId" : "Sites_StartSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/stop" : {
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Stops web app",
        "operationId" : "Sites_StopSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sync" : {
      "post" : {
        "tags" : [ "Sites" ],
        "operationId" : "Sites_SyncSiteRepository",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/usages" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Gets the quota usage numbers for web app",
        "operationId" : "Sites_GetSiteUsages",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Return only usages specified in the filter. Filter is specified by using OData syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsmUsageQuotaCollection"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsmUsageQuotaCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a list of all Virtual Network Connections associated with this web app.",
        "operationId" : "Sites_GetSiteVNETConnections",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VnetInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a specific Virtual Network Connection associated with this web app.",
        "operationId" : "Sites_GetSiteVNETConnection",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Adds a Virtual Network Connection or updates it's properties.",
        "operationId" : "Sites_CreateOrUpdateSiteVNETConnection",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The properties of this Virtual Network Connection",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Sites" ],
        "summary" : "Removes the specified Virtual Network Connection association from this web app.",
        "operationId" : "Sites_DeleteSiteVNETConnection",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Adds a Virtual Network Connection or updates it's properties.",
        "operationId" : "Sites_UpdateSiteVNETConnection",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The properties of this Virtual Network Connection",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetInfo"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Retrieves a Virtual Network connection gateway associated with this web app and virtual network.",
        "operationId" : "Sites_GetSiteVnetGateway",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The name of the gateway. The only gateway that exists presently is \"primary\"",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Object"
                }
              }
            }
          },
          "404" : {
            "description" : "Gateway does not exist. Only the \"primary\" gateway exists presently."
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the Virtual Network Gateway.",
        "operationId" : "Sites_CreateOrUpdateSiteVNETConnectionGateway",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The name of the gateway. The only gateway that exists presently is \"primary\"",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The properties to update this gateway with.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Updates the Virtual Network Gateway.",
        "operationId" : "Sites_UpdateSiteVNETConnectionGateway",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the web app",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vnetName",
          "in" : "path",
          "description" : "The name of the Virtual Network",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The name of the gateway. The only gateway that exists presently is \"primary\"",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The properties to update this gateway with.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/VnetGateway"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VnetGateway"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendationHistory" : {
      "get" : {
        "tags" : [ "Recommendations" ],
        "summary" : "Gets the list of past recommendations optionally specified by the time range.",
        "operationId" : "Recommendations_GetRecommendationHistoryForSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "siteName",
          "in" : "path",
          "description" : "Site name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "The start time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and endTime eq '2015-01-02T00:00:00Z'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "The end time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and endTime eq '2015-01-02T00:00:00Z'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations" : {
      "get" : {
        "tags" : [ "Recommendations" ],
        "summary" : "Gets a list of recommendations associated with the specified web site.",
        "operationId" : "Recommendations_GetRecommendedRulesForSite",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "siteName",
          "in" : "path",
          "description" : "Site name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "featured",
          "in" : "query",
          "description" : "If set, this API returns only the most critical recommendation among the others. Otherwise this API returns all recommendations available",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "siteSku",
          "in" : "query",
          "description" : "The name of site SKU.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "numSlots",
          "in" : "query",
          "description" : "The number of site slots associated to the site",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recommendation"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}" : {
      "get" : {
        "tags" : [ "Recommendations" ],
        "summary" : "Gets the detailed properties of the recommendation object for the specified web site.",
        "operationId" : "Recommendations_GetRuleDetailsBySiteName",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "siteName",
          "in" : "path",
          "description" : "Site name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Recommendation rule name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecommendationRule"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecommendationRule"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecommendationRule"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecommendationRule"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "schemas" : {
      "Address" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "description" : "Address 1"
          },
          "address2" : {
            "type" : "string",
            "description" : "Address 2"
          },
          "city" : {
            "type" : "string",
            "description" : "City"
          },
          "country" : {
            "type" : "string",
            "description" : "Country"
          },
          "postalCode" : {
            "type" : "string",
            "description" : "Postal code"
          },
          "state" : {
            "type" : "string",
            "description" : "State"
          }
        },
        "description" : "Address information for domain registration"
      },
      "AddressResponse" : {
        "type" : "object",
        "properties" : {
          "internalIpAddress" : {
            "type" : "string",
            "description" : "VNET internal ip address of the hostingEnvironment (App Service Environment) if it is in internal load-balancing mode"
          },
          "outboundIpAddresses" : {
            "type" : "array",
            "description" : "IP addresses appearing on outbound connections",
            "items" : {
              "type" : "string"
            }
          },
          "serviceIpAddress" : {
            "type" : "string",
            "description" : "Main public vip"
          },
          "vipMappings" : {
            "type" : "array",
            "description" : "Additional vips",
            "items" : {
              "$ref" : "#/components/schemas/VirtualIPMapping"
            }
          }
        },
        "description" : "Describes main public ip address and any extra vips"
      },
      "ApiDefinitionInfo" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "description" : "The URL of the API definition."
          }
        },
        "description" : "Information about the formal API definition for the web app."
      },
      "ApplicationLogsConfig" : {
        "type" : "object",
        "properties" : {
          "azureBlobStorage" : {
            "$ref" : "#/components/schemas/AzureBlobStorageApplicationLogsConfig"
          },
          "azureTableStorage" : {
            "$ref" : "#/components/schemas/AzureTableStorageApplicationLogsConfig"
          },
          "fileSystem" : {
            "$ref" : "#/components/schemas/FileSystemApplicationLogsConfig"
          }
        },
        "description" : "Application logs configuration"
      },
      "ArmPlan" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name"
          },
          "product" : {
            "type" : "string",
            "description" : "The product"
          },
          "promotionCode" : {
            "type" : "string",
            "description" : "The promotion code"
          },
          "publisher" : {
            "type" : "string",
            "description" : "The publisher"
          },
          "version" : {
            "type" : "string",
            "description" : "Version of product"
          }
        },
        "description" : "The plan object in an ARM, represents a marketplace plan"
      },
      "AutoHealActions" : {
        "required" : [ "actionType" ],
        "type" : "object",
        "properties" : {
          "actionType" : {
            "type" : "string",
            "description" : "ActionType - predefined action to be taken",
            "enum" : [ "Recycle", "LogEvent", "CustomAction" ]
          },
          "customAction" : {
            "$ref" : "#/components/schemas/AutoHealCustomAction"
          },
          "minProcessExecutionTime" : {
            "type" : "string",
            "description" : "MinProcessExecutionTime - minimum time the process must execute\r\n            before taking the action"
          }
        },
        "description" : "AutoHealActions - Describes the actions which can be\r\n            taken by the auto-heal module when a rule is triggered."
      },
      "AutoHealCustomAction" : {
        "type" : "object",
        "properties" : {
          "exe" : {
            "type" : "string",
            "description" : "Executable to be run"
          },
          "parameters" : {
            "type" : "string",
            "description" : "Parameters for the executable"
          }
        },
        "description" : "AutoHealCustomAction - Describes the custom action to be executed\r\n            when an auto heal rule is triggered."
      },
      "AutoHealRules" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/AutoHealActions"
          },
          "triggers" : {
            "$ref" : "#/components/schemas/AutoHealTriggers"
          }
        },
        "description" : "AutoHealRules - describes the rules which can be defined for auto-heal"
      },
      "AutoHealTriggers" : {
        "type" : "object",
        "properties" : {
          "privateBytesInKB" : {
            "type" : "integer",
            "description" : "PrivateBytesInKB - Defines a rule based on private bytes",
            "format" : "int32"
          },
          "requests" : {
            "$ref" : "#/components/schemas/RequestsBasedTrigger"
          },
          "slowRequests" : {
            "$ref" : "#/components/schemas/SlowRequestsBasedTrigger"
          },
          "statusCodes" : {
            "type" : "array",
            "description" : "StatusCodes - Defines a rule based on status codes",
            "items" : {
              "$ref" : "#/components/schemas/StatusCodesBasedTrigger"
            }
          }
        },
        "description" : "AutoHealTriggers - describes the triggers for auto-heal."
      },
      "AzureBlobStorageApplicationLogsConfig" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "string",
            "description" : "Log level",
            "enum" : [ "Off", "Verbose", "Information", "Warning", "Error" ]
          },
          "retentionInDays" : {
            "type" : "integer",
            "description" : "Retention in days.\r\n            Remove blobs older than X days.\r\n            0 or lower means no retention.",
            "format" : "int32"
          },
          "sasUrl" : {
            "type" : "string",
            "description" : "SAS url to a azure blob container with read/write/list/delete permissions"
          }
        },
        "description" : "Application logs azure blob storage configuration"
      },
      "AzureBlobStorageHttpLogsConfig" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Enabled"
          },
          "retentionInDays" : {
            "type" : "integer",
            "description" : "Retention in days.\r\n            Remove blobs older than X days.\r\n            0 or lower means no retention.",
            "format" : "int32"
          },
          "sasUrl" : {
            "type" : "string",
            "description" : "SAS url to a azure blob container with read/write/list/delete permissions"
          }
        },
        "description" : "Http logs to azure blob storage configuration"
      },
      "AzureTableStorageApplicationLogsConfig" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "string",
            "description" : "Log level",
            "enum" : [ "Off", "Verbose", "Information", "Warning", "Error" ]
          },
          "sasUrl" : {
            "type" : "string",
            "description" : "SAS url to an azure table with add/query/delete permissions"
          }
        },
        "description" : "Application logs to azure table storage configuration"
      },
      "BackupItem" : {
        "properties" : {
          "properties" : {
            "required" : [ "status" ],
            "type" : "object",
            "properties" : {
              "blobName" : {
                "type" : "string",
                "description" : "Name of the blob which contains data for this backup"
              },
              "correlationId" : {
                "type" : "string",
                "description" : "Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support."
              },
              "created" : {
                "type" : "string",
                "description" : "Timestamp of the backup creation",
                "format" : "date-time"
              },
              "databases" : {
                "type" : "array",
                "description" : "List of databases included in the backup",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseBackupSetting"
                }
              },
              "finishedTimeStamp" : {
                "type" : "string",
                "description" : "Timestamp when this backup finished.",
                "format" : "date-time"
              },
              "id" : {
                "type" : "integer",
                "description" : "Id of the backup.",
                "format" : "int32"
              },
              "lastRestoreTimeStamp" : {
                "type" : "string",
                "description" : "Timestamp of a last restore operation which used this backup.",
                "format" : "date-time"
              },
              "log" : {
                "type" : "string",
                "description" : "Details regarding this backup. Might contain an error message."
              },
              "name" : {
                "type" : "string",
                "description" : "Name of this backup"
              },
              "scheduled" : {
                "type" : "boolean",
                "description" : "True if this backup has been created due to a schedule being triggered."
              },
              "sizeInBytes" : {
                "type" : "integer",
                "description" : "Size of the backup in bytes",
                "format" : "int64"
              },
              "status" : {
                "type" : "string",
                "description" : "Backup status",
                "enum" : [ "InProgress", "Failed", "Succeeded", "TimedOut", "Created", "Skipped", "PartiallySucceeded", "DeleteInProgress", "DeleteFailed", "Deleted" ]
              },
              "storageAccountUrl" : {
                "type" : "string",
                "description" : "SAS URL for the storage account container which contains this backup"
              },
              "websiteSizeInBytes" : {
                "type" : "integer",
                "description" : "Size of the original web app which has been backed up",
                "format" : "int64"
              }
            }
          }
        },
        "description" : "Backup description",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "BackupItemCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/BackupItem"
            }
          }
        },
        "description" : "Collection of Backup Items"
      },
      "BackupRequest" : {
        "properties" : {
          "properties" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "backupSchedule" : {
                "$ref" : "#/components/schemas/BackupSchedule"
              },
              "databases" : {
                "type" : "array",
                "description" : "Databases included in the backup",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseBackupSetting"
                }
              },
              "enabled" : {
                "type" : "boolean",
                "description" : "True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled"
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the backup"
              },
              "storageAccountUrl" : {
                "type" : "string",
                "description" : "SAS URL to the container"
              },
              "type" : {
                "type" : "string",
                "description" : "Type of the backup",
                "enum" : [ "Default", "Clone", "Relocation" ]
              }
            }
          }
        },
        "description" : "Description of a backup which will be performed",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "BackupSchedule" : {
        "required" : [ "frequencyUnit" ],
        "type" : "object",
        "properties" : {
          "frequencyInterval" : {
            "type" : "integer",
            "description" : "How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)",
            "format" : "int32"
          },
          "frequencyUnit" : {
            "type" : "string",
            "description" : "How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)",
            "enum" : [ "Day", "Hour" ]
          },
          "keepAtLeastOneBackup" : {
            "type" : "boolean",
            "description" : "True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise."
          },
          "lastExecutionTime" : {
            "type" : "string",
            "description" : "The last time when this schedule was triggered",
            "format" : "date-time"
          },
          "retentionPeriodInDays" : {
            "type" : "integer",
            "description" : "After how many days backups should be deleted",
            "format" : "int32"
          },
          "startTime" : {
            "type" : "string",
            "description" : "When the schedule should start working",
            "format" : "date-time"
          }
        },
        "description" : "Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy."
      },
      "Certificate" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "cerBlob" : {
                "type" : "string",
                "description" : "Raw bytes of .cer file"
              },
              "expirationDate" : {
                "type" : "string",
                "description" : "Certificate expiration date",
                "format" : "date-time"
              },
              "friendlyName" : {
                "type" : "string",
                "description" : "Friendly name of the certificate"
              },
              "hostNames" : {
                "type" : "array",
                "description" : "Host names the certificate applies to",
                "items" : {
                  "type" : "string"
                }
              },
              "hostingEnvironmentProfile" : {
                "$ref" : "#/components/schemas/HostingEnvironmentProfile"
              },
              "issueDate" : {
                "type" : "string",
                "description" : "Certificate issue Date",
                "format" : "date-time"
              },
              "issuer" : {
                "type" : "string",
                "description" : "Certificate issuer"
              },
              "password" : {
                "type" : "string",
                "description" : "Certificate password"
              },
              "pfxBlob" : {
                "type" : "string",
                "description" : "Pfx blob"
              },
              "publicKeyHash" : {
                "type" : "string",
                "description" : "Public key hash"
              },
              "selfLink" : {
                "type" : "string",
                "description" : "Self link"
              },
              "siteName" : {
                "type" : "string",
                "description" : "App name"
              },
              "subjectName" : {
                "type" : "string",
                "description" : "Subject name of the certificate"
              },
              "thumbprint" : {
                "type" : "string",
                "description" : "Certificate thumbprint"
              },
              "valid" : {
                "type" : "boolean",
                "description" : "Is the certificate valid?"
              }
            }
          }
        },
        "description" : "App certificate",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "CertificateCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/Certificate"
            }
          }
        },
        "description" : "Collection of certificates"
      },
      "CertificateDetails" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "issuer" : {
                "type" : "string",
                "description" : "Issuer"
              },
              "notAfter" : {
                "type" : "string",
                "description" : "Valid to",
                "format" : "date-time"
              },
              "notBefore" : {
                "type" : "string",
                "description" : "Valid from",
                "format" : "date-time"
              },
              "rawData" : {
                "type" : "string",
                "description" : "Raw certificate data"
              },
              "serialNumber" : {
                "type" : "string",
                "description" : "Serial Number"
              },
              "signatureAlgorithm" : {
                "type" : "string",
                "description" : "Signature Algorithm"
              },
              "subject" : {
                "type" : "string",
                "description" : "Subject"
              },
              "thumbprint" : {
                "type" : "string",
                "description" : "Thumbprint"
              },
              "version" : {
                "type" : "integer",
                "description" : "Version",
                "format" : "int32"
              }
            }
          }
        },
        "description" : "Certificate Details",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "CertificateEmail" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "emailId" : {
                "type" : "string",
                "description" : "Email id"
              },
              "timeStamp" : {
                "type" : "string",
                "description" : "Time stamp",
                "format" : "date-time"
              }
            }
          }
        },
        "description" : "Certificate Email",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "CertificateOrder" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "autoRenew" : {
                "type" : "boolean",
                "description" : "Auto renew"
              },
              "certificates" : {
                "type" : "object",
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/CertificateOrderCertificate"
                },
                "description" : "State of the Key Vault secret"
              },
              "csr" : {
                "type" : "string",
                "description" : "Last CSR that was created for this order"
              },
              "distinguishedName" : {
                "type" : "string",
                "description" : "Certificate distinguished name"
              },
              "domainVerificationToken" : {
                "type" : "string",
                "description" : "Domain Verification Token"
              },
              "expirationTime" : {
                "type" : "string",
                "description" : "Certificate expiration time",
                "format" : "date-time"
              },
              "intermediate" : {
                "$ref" : "#/components/schemas/CertificateDetails"
              },
              "keySize" : {
                "type" : "integer",
                "description" : "Certificate Key Size",
                "format" : "int32"
              },
              "lastCertificateIssuanceTime" : {
                "type" : "string",
                "description" : "Certificate last issuance time",
                "format" : "date-time"
              },
              "productType" : {
                "type" : "string",
                "description" : "Certificate product type",
                "enum" : [ "StandardDomainValidatedSsl", "StandardDomainValidatedWildCardSsl" ]
              },
              "provisioningState" : {
                "type" : "string",
                "description" : "Status of certificate order",
                "enum" : [ "Succeeded", "Failed", "Canceled", "InProgress", "Deleting" ]
              },
              "root" : {
                "$ref" : "#/components/schemas/CertificateDetails"
              },
              "serialNumber" : {
                "type" : "string",
                "description" : "Current serial number of the certificate"
              },
              "signedCertificate" : {
                "$ref" : "#/components/schemas/CertificateDetails"
              },
              "status" : {
                "type" : "string",
                "description" : "Current order status",
                "enum" : [ "Pendingissuance", "Issued", "Revoked", "Canceled", "Denied", "Pendingrevocation", "PendingRekey", "Unused", "Expired", "NotSubmitted" ]
              },
              "validityInYears" : {
                "type" : "integer",
                "description" : "Duration in years (must be between 1 and 3)",
                "format" : "int32"
              }
            }
          }
        },
        "description" : "Certificate purchase order",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "CertificateOrderAction" : {
        "properties" : {
          "properties" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "createdAt" : {
                "type" : "string",
                "description" : "Time at which the certificate action was performed",
                "format" : "date-time"
              },
              "type" : {
                "type" : "string",
                "description" : "Type",
                "enum" : [ "CertificateIssued", "CertificateOrderCanceled", "CertificateOrderCreated", "CertificateRevoked", "DomainValidationComplete", "FraudDetected", "OrgNameChange", "OrgValidationComplete", "SanDrop" ]
              }
            }
          }
        },
        "description" : "Represents a certificate action",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "CertificateOrderCertificate" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "keyVaultId" : {
                "type" : "string",
                "description" : "Key Vault Csm resource Id"
              },
              "keyVaultSecretName" : {
                "type" : "string",
                "description" : "Key Vault secret name"
              },
              "provisioningState" : {
                "type" : "string",
                "description" : "Status of the Key Vault secret",
                "enum" : [ "Initialized", "WaitingOnCertificateOrder", "Succeeded", "CertificateOrderFailed", "OperationNotPermittedOnKeyVault", "AzureServiceUnauthorizedToAccessKeyVault", "KeyVaultDoesNotExist", "KeyVaultSecretDoesNotExist", "UnknownError", "Unknown" ]
              }
            }
          }
        },
        "description" : "Class representing the Key Vault container for certificate purchased through Azure",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "CertificateOrderCertificateCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/CertificateOrderCertificate"
            }
          }
        },
        "description" : "Collection of certificate order certificates"
      },
      "CertificateOrderCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/CertificateOrder"
            }
          }
        },
        "description" : "Collection of certificate orders"
      },
      "ClassicMobileService" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name of the mobile service"
              }
            }
          }
        },
        "description" : "A mobile service",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ClassicMobileServiceCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/ClassicMobileService"
            }
          }
        },
        "description" : "Collection of Classic Mobile Services"
      },
      "CloningInfo" : {
        "type" : "object",
        "properties" : {
          "appSettingsOverrides" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Application settings overrides for cloned web app. If specified these settings will override the settings cloned \r\n            from source web app. If not specified, application settings from source web app are retained."
          },
          "cloneCustomHostNames" : {
            "type" : "boolean",
            "description" : "If true, clone custom hostnames from source web app"
          },
          "cloneSourceControl" : {
            "type" : "boolean",
            "description" : "Clone source control from source web app"
          },
          "configureLoadBalancing" : {
            "type" : "boolean",
            "description" : "If specified configure load balancing for source and clone site"
          },
          "correlationId" : {
            "type" : "string",
            "description" : "Correlation Id of cloning operation. This id ties multiple cloning operations\r\n            together to use the same snapshot"
          },
          "hostingEnvironment" : {
            "type" : "string",
            "description" : "Hosting environment"
          },
          "overwrite" : {
            "type" : "boolean",
            "description" : "Overwrite destination web app"
          },
          "sourceWebAppId" : {
            "type" : "string",
            "description" : "ARM resource id of the source web app. Web app resource id is of the form \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots"
          },
          "trafficManagerProfileId" : {
            "type" : "string",
            "description" : "ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}"
          },
          "trafficManagerProfileName" : {
            "type" : "string",
            "description" : "Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist"
          }
        },
        "description" : "Represents information needed for cloning operation"
      },
      "ConnStringInfo" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "connectionString" : {
            "type" : "string",
            "description" : "Connection string value"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of connection string"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of database",
            "enum" : [ "MySql", "SQLServer", "SQLAzure", "Custom" ]
          }
        },
        "description" : "Represents database connection string information"
      },
      "ConnStringValueTypePair" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of database",
            "enum" : [ "MySql", "SQLServer", "SQLAzure", "Custom" ]
          },
          "value" : {
            "type" : "string",
            "description" : "Value of pair"
          }
        },
        "description" : "Database connection string value to type pair"
      },
      "ConnectionStringDictionary" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ConnStringValueTypePair"
            },
            "description" : "Connection strings"
          }
        },
        "description" : "String dictionary resource",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "addressMailing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "email" : {
            "type" : "string",
            "description" : "Email address"
          },
          "fax" : {
            "type" : "string",
            "description" : "Fax number"
          },
          "jobTitle" : {
            "type" : "string",
            "description" : "Job title"
          },
          "nameFirst" : {
            "type" : "string",
            "description" : "First name"
          },
          "nameLast" : {
            "type" : "string",
            "description" : "Last name"
          },
          "nameMiddle" : {
            "type" : "string",
            "description" : "Middle name"
          },
          "organization" : {
            "type" : "string",
            "description" : "Organization"
          },
          "phone" : {
            "type" : "string",
            "description" : "Phone number"
          }
        },
        "description" : "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information will be made publicly available through the Whois directories as per ICANN requirements."
      },
      "CorsSettings" : {
        "type" : "object",
        "properties" : {
          "allowedOrigins" : {
            "type" : "array",
            "description" : "Gets or sets the list of origins that should be allowed to make cross-origin\r\n            calls (for example: http://example.com:12345). Use \"*\" to allow all.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Cross-Origin Resource Sharing (CORS) settings for the web app."
      },
      "CsmMoveResourceEnvelope" : {
        "type" : "object",
        "properties" : {
          "resources" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "targetResourceGroup" : {
            "type" : "string"
          }
        },
        "description" : "Class containing a list of the resources that need to be moved and the resource group they should be moved to"
      },
      "CsmPublishingProfileOptions" : {
        "type" : "object",
        "properties" : {
          "format" : {
            "type" : "string",
            "description" : "Name of the format. Valid values are: \r\n            FileZilla3\r\n            WebDeploy -- default\r\n            Ftp"
          }
        },
        "description" : "Publishing options for requested profile"
      },
      "CsmSiteRecoveryEntity" : {
        "type" : "object",
        "properties" : {
          "recoverConfig" : {
            "type" : "boolean",
            "description" : "If true, then the website's configuration will be reverted to its state at SnapshotTime"
          },
          "siteName" : {
            "type" : "string",
            "description" : "[Optional] Destination web app name into which web app should be recovered. This is case when new web app should be created instead."
          },
          "slotName" : {
            "type" : "string",
            "description" : "[Optional] Destination web app slot name into which web app should be recovered"
          },
          "snapshotTime" : {
            "type" : "string",
            "description" : "Point in time in which the site recover should be attempted.",
            "format" : "date-time"
          }
        },
        "description" : "Class containing details about site recovery operation."
      },
      "CsmSlotEntity" : {
        "type" : "object",
        "properties" : {
          "preserveVnet" : {
            "type" : "boolean",
            "description" : "Get or set the flag indicating it should preserve VNet to the slot during swap"
          },
          "targetSlot" : {
            "type" : "string",
            "description" : "Set the destination deployment slot during swap operation"
          }
        },
        "description" : "Class containing deployment slot parameters"
      },
      "CsmUsageQuota" : {
        "type" : "object",
        "properties" : {
          "currentValue" : {
            "type" : "integer",
            "description" : "The current value of the resource counter",
            "format" : "int64"
          },
          "limit" : {
            "type" : "integer",
            "description" : "The resource limit",
            "format" : "int64"
          },
          "name" : {
            "$ref" : "#/components/schemas/LocalizableString"
          },
          "nextResetTime" : {
            "type" : "string",
            "description" : "Next reset time for the resource counter",
            "format" : "date-time"
          },
          "unit" : {
            "type" : "string",
            "description" : "Units of measurement for the quota resource"
          }
        },
        "description" : "Usage of the quota resource"
      },
      "CsmUsageQuotaCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/CsmUsageQuota"
            }
          }
        },
        "description" : "Collection of csm usage quotas"
      },
      "Csr" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "csrString" : {
                "type" : "string",
                "description" : "Actual CSR string created"
              },
              "distinguishedName" : {
                "type" : "string",
                "description" : "Distinguished name of certificate to be created"
              },
              "hostingEnvironment" : {
                "type" : "string",
                "description" : "Hosting environment"
              },
              "name" : {
                "type" : "string",
                "description" : "Name used to locate CSR object"
              },
              "password" : {
                "type" : "string",
                "description" : "PFX password"
              },
              "pfxBlob" : {
                "type" : "string",
                "description" : "PFX certificate of created certificate"
              },
              "publicKeyHash" : {
                "type" : "string",
                "description" : "Hash of the certificates public key"
              }
            }
          }
        },
        "description" : "Certificate signing request object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "DatabaseBackupSetting" : {
        "type" : "object",
        "properties" : {
          "connectionString" : {
            "type" : "string",
            "description" : "Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one."
          },
          "connectionStringName" : {
            "type" : "string",
            "description" : "Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.\r\n            This is used during restore with overwrite connection strings options."
          },
          "databaseType" : {
            "type" : "string",
            "description" : "SqlAzure / MySql"
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "Note: properties are serialized in JSON format and stored in DB. \r\n            if new properties are added they might not be in the previous data rows \r\n            so please handle nulls"
      },
      "DeletedSite" : {
        "properties" : {
          "properties" : {
            "required" : [ "availabilityState", "usageState" ],
            "type" : "object",
            "properties" : {
              "availabilityState" : {
                "type" : "string",
                "description" : "Management information availability state for the web app. Possible values are Normal or Limited. \r\n            Normal means that the site is running correctly and that management information for the site is available. \r\n            Limited means that only partial management information for the site is available and that detailed site information is unavailable.",
                "readOnly" : true,
                "enum" : [ "Normal", "Limited", "DisasterRecoveryMode" ]
              },
              "clientAffinityEnabled" : {
                "type" : "boolean",
                "description" : "Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app"
              },
              "clientCertEnabled" : {
                "type" : "boolean",
                "description" : "Specifies if the client certificate is enabled for the web app"
              },
              "cloningInfo" : {
                "$ref" : "#/components/schemas/CloningInfo"
              },
              "containerSize" : {
                "type" : "integer",
                "description" : "Size of a function container",
                "format" : "int32"
              },
              "defaultHostName" : {
                "type" : "string",
                "description" : "Default hostname of the web app",
                "readOnly" : true
              },
              "deletedTimestamp" : {
                "type" : "string",
                "description" : "Time when the site was deleted",
                "format" : "date-time"
              },
              "enabled" : {
                "type" : "boolean",
                "description" : "True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line)."
              },
              "enabledHostNames" : {
                "type" : "array",
                "description" : "Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled\r\n            the app is not served on those hostnames",
                "readOnly" : true,
                "items" : {
                  "type" : "string"
                }
              },
              "gatewaySiteName" : {
                "type" : "string",
                "description" : "Name of gateway app associated with web app"
              },
              "hostNameSslStates" : {
                "type" : "array",
                "description" : "Hostname SSL states are  used to manage the SSL bindings for site's hostnames.",
                "items" : {
                  "$ref" : "#/components/schemas/HostNameSslState"
                }
              },
              "hostNames" : {
                "type" : "array",
                "description" : "Hostnames associated with web app",
                "readOnly" : true,
                "items" : {
                  "type" : "string"
                }
              },
              "hostNamesDisabled" : {
                "type" : "boolean",
                "description" : "Specifies if the public hostnames are disabled the web app.\r\n            If set to true the app is only accessible via API Management process"
              },
              "hostingEnvironmentProfile" : {
                "$ref" : "#/components/schemas/HostingEnvironmentProfile"
              },
              "isDefaultContainer" : {
                "type" : "boolean",
                "description" : "Site is a default container",
                "readOnly" : true
              },
              "lastModifiedTimeUtc" : {
                "type" : "string",
                "description" : "Last time web app was modified in UTC",
                "format" : "date-time",
                "readOnly" : true
              },
              "maxNumberOfWorkers" : {
                "type" : "integer",
                "description" : "Maximum number of workers\r\n            This only applies to function container",
                "format" : "int32"
              },
              "microService" : {
                "type" : "string",
                "description" : ""
              },
              "name" : {
                "type" : "string",
                "description" : "Name of web app"
              },
              "outboundIpAddresses" : {
                "type" : "string",
                "description" : "List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.",
                "readOnly" : true
              },
              "premiumAppDeployed" : {
                "type" : "boolean",
                "description" : "If set indicates whether web app is deployed as a premium app",
                "readOnly" : true
              },
              "repositorySiteName" : {
                "type" : "string",
                "description" : "Name of repository site",
                "readOnly" : true
              },
              "resourceGroup" : {
                "type" : "string",
                "description" : "Resource group web app belongs to",
                "readOnly" : true
              },
              "scmSiteAlsoStopped" : {
                "type" : "boolean",
                "description" : "If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false."
              },
              "serverFarmId" : {
                "type" : "string"
              },
              "siteConfig" : {
                "$ref" : "#/components/schemas/SiteConfig"
              },
              "state" : {
                "type" : "string",
                "description" : "State of the web app",
                "readOnly" : true
              },
              "targetSwapSlot" : {
                "type" : "string",
                "description" : "Read-only property that specifies which slot this app will swap into",
                "readOnly" : true
              },
              "trafficManagerHostNames" : {
                "type" : "array",
                "description" : "Read-only list of Azure Traffic manager hostnames associated with web app",
                "readOnly" : true,
                "items" : {
                  "type" : "string"
                }
              },
              "usageState" : {
                "type" : "string",
                "description" : "State indicating whether web app has exceeded its quota usage",
                "readOnly" : true,
                "enum" : [ "Normal", "Exceeded" ]
              }
            }
          }
        },
        "description" : "Reports deleted site including the timestamp of operation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "DeletedSiteCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/DeletedSite"
            }
          }
        },
        "description" : "Collection of deleted sites"
      },
      "Deployment" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "active" : {
                "type" : "boolean",
                "description" : "Active"
              },
              "author" : {
                "type" : "string",
                "description" : "Author"
              },
              "author_email" : {
                "type" : "string",
                "description" : "AuthorEmail"
              },
              "deployer" : {
                "type" : "string",
                "description" : "Deployer"
              },
              "details" : {
                "type" : "string",
                "description" : "Detail"
              },
              "end_time" : {
                "type" : "string",
                "description" : "EndTime",
                "format" : "date-time"
              },
              "id" : {
                "type" : "string",
                "description" : "Id"
              },
              "message" : {
                "type" : "string",
                "description" : "Message"
              },
              "start_time" : {
                "type" : "string",
                "description" : "StartTime",
                "format" : "date-time"
              },
              "status" : {
                "type" : "integer",
                "description" : "Status",
                "format" : "int32"
              }
            }
          }
        },
        "description" : "Represents user credentials used for publishing activity",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "DeploymentCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/Deployment"
            }
          }
        },
        "description" : "Collection of app deployments"
      },
      "Domain" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "autoRenew" : {
                "type" : "boolean",
                "description" : "If true then domain will renewed automatically"
              },
              "consent" : {
                "$ref" : "#/components/schemas/DomainPurchaseConsent"
              },
              "contactAdmin" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "contactBilling" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "contactRegistrant" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "contactTech" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "createdTime" : {
                "type" : "string",
                "description" : "Domain creation timestamp",
                "format" : "date-time"
              },
              "domainNotRenewableReasons" : {
                "type" : "array",
                "description" : "Reasons why domain is not renewable",
                "items" : {
                  "type" : "string",
                  "enum" : [ "RegistrationStatusNotSupportedForRenewal", "ExpirationNotInRenewalTimeRange", "SubscriptionNotActive" ]
                }
              },
              "expirationTime" : {
                "type" : "string",
                "description" : "Domain expiration timestamp",
                "format" : "date-time"
              },
              "lastRenewedTime" : {
                "type" : "string",
                "description" : "Timestamp when the domain was renewed last time",
                "format" : "date-time"
              },
              "managedHostNames" : {
                "type" : "array",
                "description" : "All hostnames derived from the domain and assigned to Azure resources",
                "items" : {
                  "$ref" : "#/components/schemas/HostName"
                }
              },
              "nameServers" : {
                "type" : "array",
                "description" : "Name servers",
                "items" : {
                  "type" : "string"
                }
              },
              "privacy" : {
                "type" : "boolean",
                "description" : "If true then domain privacy is enabled for this domain"
              },
              "provisioningState" : {
                "type" : "string",
                "description" : "Domain provisioning state",
                "enum" : [ "Succeeded", "Failed", "Canceled", "InProgress", "Deleting" ]
              },
              "readyForDnsRecordManagement" : {
                "type" : "boolean",
                "description" : "If true then Azure can assign this domain to Web Apps. This value will be true if domain registration status is active and it is hosted on name servers Azure has programmatic access to"
              },
              "registrationStatus" : {
                "type" : "string",
                "description" : "Domain registration status",
                "enum" : [ "Active", "Awaiting", "Cancelled", "Confiscated", "Disabled", "Excluded", "Expired", "Failed", "Held", "Locked", "Parked", "Pending", "Reserved", "Reverted", "Suspended", "Transferred", "Unknown", "Unlocked", "Unparked", "Updated", "JsonConverterFailed" ]
              }
            }
          }
        },
        "description" : "Represents a domain",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "DomainAvailablilityCheckResult" : {
        "type" : "object",
        "properties" : {
          "available" : {
            "type" : "boolean",
            "description" : "If true then domain can be purchased using CreateDomain Api"
          },
          "domainType" : {
            "type" : "string",
            "description" : "Domain type",
            "enum" : [ "Regular", "SoftDeleted" ]
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the domain"
          }
        },
        "description" : "Domain availablility check result"
      },
      "DomainCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/Domain"
            }
          }
        },
        "description" : "Collection of domains"
      },
      "DomainControlCenterSsoRequest" : {
        "type" : "object",
        "properties" : {
          "postParameterKey" : {
            "type" : "string",
            "description" : "Post parameter key"
          },
          "postParameterValue" : {
            "type" : "string",
            "description" : "Post parameter value. Client should use 'application/x-www-form-urlencoded' encoding for this value."
          },
          "url" : {
            "type" : "string",
            "description" : "Url where the single sign on request is to be made"
          }
        },
        "description" : "Single sign on request information for domain management"
      },
      "DomainPurchaseConsent" : {
        "type" : "object",
        "properties" : {
          "agreedAt" : {
            "type" : "string",
            "description" : "Timestamp when the agreements were accepted",
            "format" : "date-time"
          },
          "agreedBy" : {
            "type" : "string",
            "description" : "Client IP address"
          },
          "agreementKeys" : {
            "type" : "array",
            "description" : "List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements Api under TopLevelDomain resource",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Domain purchase consent object representing acceptance of applicable legal agreements"
      },
      "DomainRecommendationSearchParameters" : {
        "type" : "object",
        "properties" : {
          "keywords" : {
            "type" : "string",
            "description" : "Keywords to be used for generating domain recommendations"
          },
          "maxDomainRecommendations" : {
            "type" : "integer",
            "description" : "Maximum number of recommendations",
            "format" : "int32"
          }
        },
        "description" : "Domain recommendation search parameters"
      },
      "DomainRegistrationInput" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "autoRenew" : {
                "type" : "boolean",
                "description" : "If true then domain will renewed automatically"
              },
              "consent" : {
                "$ref" : "#/components/schemas/DomainPurchaseConsent"
              },
              "contactAdmin" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "contactBilling" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "contactRegistrant" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "contactTech" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "createdTime" : {
                "type" : "string",
                "description" : "Domain creation timestamp",
                "format" : "date-time"
              },
              "domainNotRenewableReasons" : {
                "type" : "array",
                "description" : "Reasons why domain is not renewable",
                "items" : {
                  "type" : "string",
                  "enum" : [ "RegistrationStatusNotSupportedForRenewal", "ExpirationNotInRenewalTimeRange", "SubscriptionNotActive" ]
                }
              },
              "expirationTime" : {
                "type" : "string",
                "description" : "Domain expiration timestamp",
                "format" : "date-time"
              },
              "lastRenewedTime" : {
                "type" : "string",
                "description" : "Timestamp when the domain was renewed last time",
                "format" : "date-time"
              },
              "managedHostNames" : {
                "type" : "array",
                "description" : "All hostnames derived from the domain and assigned to Azure resources",
                "items" : {
                  "$ref" : "#/components/schemas/HostName"
                }
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the domain"
              },
              "nameServers" : {
                "type" : "array",
                "description" : "Name servers",
                "items" : {
                  "type" : "string"
                }
              },
              "privacy" : {
                "type" : "boolean",
                "description" : "If true then domain privacy is enabled for this domain"
              },
              "provisioningState" : {
                "type" : "string",
                "description" : "Domain provisioning state",
                "enum" : [ "Succeeded", "Failed", "Canceled", "InProgress", "Deleting" ]
              },
              "readyForDnsRecordManagement" : {
                "type" : "boolean",
                "description" : "If true then Azure can assign this domain to Web Apps. This value will be true if domain registration status is active and it is hosted on name servers Azure has programmatic access to"
              },
              "registrationStatus" : {
                "type" : "string",
                "description" : "Domain registration status",
                "enum" : [ "Active", "Awaiting", "Cancelled", "Confiscated", "Disabled", "Excluded", "Expired", "Failed", "Held", "Locked", "Parked", "Pending", "Reserved", "Reverted", "Suspended", "Transferred", "Unknown", "Unlocked", "Unparked", "Updated", "JsonConverterFailed" ]
              }
            }
          }
        },
        "description" : "Domain registration input for validation Api",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "EnabledConfig" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Enabled"
          }
        },
        "description" : "Enabled configuration"
      },
      "Experiments" : {
        "type" : "object",
        "properties" : {
          "rampUpRules" : {
            "type" : "array",
            "description" : "List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.",
            "items" : {
              "$ref" : "#/components/schemas/RampUpRule"
            }
          }
        },
        "description" : "Class containing Routing in production experiments"
      },
      "FileSystemApplicationLogsConfig" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "string",
            "description" : "Log level",
            "enum" : [ "Off", "Verbose", "Information", "Warning", "Error" ]
          }
        },
        "description" : "Application logs to file system configuration"
      },
      "FileSystemHttpLogsConfig" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Enabled"
          },
          "retentionInDays" : {
            "type" : "integer",
            "description" : "Retention in days.\r\n            Remove files older than X days.\r\n            0 or lower means no retention.",
            "format" : "int32"
          },
          "retentionInMb" : {
            "type" : "integer",
            "description" : "Maximum size in megabytes that http log files can use.\r\n            When reached old log files will be removed to make space for new ones.\r\n            Value can range between 25 and 100.",
            "format" : "int32"
          }
        },
        "description" : "Http logs to file system configuration"
      },
      "GeoRegion" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Region description"
              },
              "displayName" : {
                "type" : "string",
                "description" : "Display name for region"
              },
              "name" : {
                "type" : "string",
                "description" : "Region name"
              }
            }
          }
        },
        "description" : "Geographical region",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "GeoRegionCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/GeoRegion"
            }
          }
        },
        "description" : "Collection of geo regions"
      },
      "HandlerMapping" : {
        "type" : "object",
        "properties" : {
          "arguments" : {
            "type" : "string",
            "description" : "Command-line arguments to be passed to the script processor."
          },
          "extension" : {
            "type" : "string",
            "description" : "Requests with this extension will be handled using the specified FastCGI application."
          },
          "scriptProcessor" : {
            "type" : "string",
            "description" : "The absolute path to the FastCGI application."
          }
        },
        "description" : "The IIS handler mappings used to define which handler processes HTTP requests with certain extension. \r\n            For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension."
      },
      "HostName" : {
        "type" : "object",
        "properties" : {
          "azureResourceName" : {
            "type" : "string",
            "description" : "Name of the Azure resource the hostname is assigned to. If it is assigned to a traffic manager then it will be the traffic manager name otherwise it will be the website name"
          },
          "azureResourceType" : {
            "type" : "string",
            "description" : "Type of the Azure resource the hostname is assigned to",
            "enum" : [ "Website", "TrafficManager" ]
          },
          "customHostNameDnsRecordType" : {
            "type" : "string",
            "description" : "Type of the Dns record",
            "enum" : [ "CName", "A" ]
          },
          "hostNameType" : {
            "type" : "string",
            "description" : "Type of the hostname",
            "enum" : [ "Verified", "Managed" ]
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the hostname"
          },
          "siteNames" : {
            "type" : "array",
            "description" : "List of sites the hostname is assigned to. This list will have more than one site only if the hostname is pointing to a Traffic Manager",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Details of a hostname derived from a domain"
      },
      "HostNameBinding" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "azureResourceName" : {
                "type" : "string",
                "description" : "Azure resource name"
              },
              "azureResourceType" : {
                "type" : "string",
                "description" : "Azure resource type",
                "enum" : [ "Website", "TrafficManager" ]
              },
              "customHostNameDnsRecordType" : {
                "type" : "string",
                "description" : "Custom DNS record type",
                "enum" : [ "CName", "A" ]
              },
              "domainId" : {
                "type" : "string",
                "description" : "Fully qualified ARM domain resource URI"
              },
              "hostNameType" : {
                "type" : "string",
                "description" : "Host name type",
                "enum" : [ "Verified", "Managed" ]
              },
              "name" : {
                "type" : "string",
                "description" : "Hostname"
              },
              "siteName" : {
                "type" : "string",
                "description" : "Web app name"
              }
            }
          }
        },
        "description" : "A host name binding object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "HostNameBindingCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/HostNameBinding"
            }
          }
        },
        "description" : "Collection of host name bindings"
      },
      "HostNameSslState" : {
        "required" : [ "sslState" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Host name"
          },
          "sslState" : {
            "type" : "string",
            "description" : "SSL type",
            "enum" : [ "Disabled", "SniEnabled", "IpBasedEnabled" ]
          },
          "thumbprint" : {
            "type" : "string",
            "description" : "SSL cert thumbprint"
          },
          "toUpdate" : {
            "type" : "boolean",
            "description" : "Set this flag to update existing host name"
          },
          "virtualIP" : {
            "type" : "string",
            "description" : "Virtual IP address assigned to the host name if IP based SSL is enabled"
          }
        },
        "description" : "Object that represents a SSL-enabled host name."
      },
      "HostingEnvironment" : {
        "properties" : {
          "properties" : {
            "required" : [ "status" ],
            "type" : "object",
            "properties" : {
              "allowedMultiSizes" : {
                "type" : "string",
                "description" : "List of comma separated strings describing which VM sizes are allowed for front-ends"
              },
              "allowedWorkerSizes" : {
                "type" : "string",
                "description" : "List of comma separated strings describing which VM sizes are allowed for workers"
              },
              "apiManagementAccountId" : {
                "type" : "string",
                "description" : "Api Management Account associated with this Hosting Environment"
              },
              "clusterSettings" : {
                "type" : "array",
                "description" : "Custom settings for changing the behavior of the hosting environment",
                "items" : {
                  "$ref" : "#/components/schemas/NameValuePair"
                }
              },
              "databaseEdition" : {
                "type" : "string",
                "description" : "Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"Standard\""
              },
              "databaseServiceObjective" : {
                "type" : "string",
                "description" : "Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"S0\""
              },
              "dnsSuffix" : {
                "type" : "string",
                "description" : "DNS suffix of the hostingEnvironment (App Service Environment)"
              },
              "environmentCapacities" : {
                "type" : "array",
                "description" : "Current total, used, and available worker capacities",
                "items" : {
                  "$ref" : "#/components/schemas/StampCapacity"
                }
              },
              "environmentIsHealthy" : {
                "type" : "boolean",
                "description" : "True/false indicating whether the hostingEnvironment (App Service Environment) is healthy"
              },
              "environmentStatus" : {
                "type" : "string",
                "description" : "Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)"
              },
              "internalLoadBalancingMode" : {
                "type" : "string",
                "description" : "Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET",
                "enum" : [ "None", "Web", "Publishing" ]
              },
              "ipsslAddressCount" : {
                "type" : "integer",
                "description" : "Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)",
                "format" : "int32"
              },
              "lastAction" : {
                "type" : "string",
                "description" : "Last deployment action on this hostingEnvironment (App Service Environment)"
              },
              "lastActionResult" : {
                "type" : "string",
                "description" : "Result of the last deployment action on this hostingEnvironment (App Service Environment)"
              },
              "location" : {
                "type" : "string",
                "description" : "Location of the hostingEnvironment (App Service Environment), e.g. \"West US\""
              },
              "maximumNumberOfMachines" : {
                "type" : "integer",
                "description" : "Maximum number of VMs in this hostingEnvironment (App Service Environment)",
                "format" : "int32"
              },
              "multiRoleCount" : {
                "type" : "integer",
                "description" : "Number of front-end instances",
                "format" : "int32"
              },
              "multiSize" : {
                "type" : "string",
                "description" : "Front-end VM size, e.g. \"Medium\", \"Large\""
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the hostingEnvironment (App Service Environment)"
              },
              "networkAccessControlList" : {
                "type" : "array",
                "description" : "Access control list for controlling traffic to the hostingEnvironment (App Service Environment)",
                "items" : {
                  "$ref" : "#/components/schemas/NetworkAccessControlEntry"
                }
              },
              "provisioningState" : {
                "type" : "string",
                "description" : "Provisioning state of the hostingEnvironment (App Service Environment)",
                "enum" : [ "Succeeded", "Failed", "Canceled", "InProgress", "Deleting" ]
              },
              "resourceGroup" : {
                "type" : "string",
                "description" : "Resource group of the hostingEnvironment (App Service Environment)"
              },
              "status" : {
                "type" : "string",
                "description" : "Current status of the hostingEnvironment (App Service Environment)",
                "enum" : [ "Preparing", "Ready", "Scaling", "Deleting" ]
              },
              "subscriptionId" : {
                "type" : "string",
                "description" : "Subscription of the hostingEnvironment (App Service Environment)"
              },
              "suspended" : {
                "type" : "boolean",
                "description" : "True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\r\n            (most likely because NSG blocked the incoming traffic)"
              },
              "upgradeDomains" : {
                "type" : "integer",
                "description" : "Number of upgrade domains of this hostingEnvironment (App Service Environment)",
                "format" : "int32"
              },
              "vipMappings" : {
                "type" : "array",
                "description" : "Description of IP SSL mapping for this hostingEnvironment (App Service Environment)",
                "items" : {
                  "$ref" : "#/components/schemas/VirtualIPMapping"
                }
              },
              "virtualNetwork" : {
                "$ref" : "#/components/schemas/VirtualNetworkProfile"
              },
              "vnetName" : {
                "type" : "string",
                "description" : "Name of the hostingEnvironment's (App Service Environment) virtual network"
              },
              "vnetResourceGroupName" : {
                "type" : "string",
                "description" : "Resource group of the hostingEnvironment's (App Service Environment) virtual network"
              },
              "vnetSubnetName" : {
                "type" : "string",
                "description" : "Subnet of the hostingEnvironment's (App Service Environment) virtual network"
              },
              "workerPools" : {
                "type" : "array",
                "description" : "Description of worker pools with worker size ids, VM sizes, and number of workers in each pool",
                "items" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                }
              }
            }
          }
        },
        "description" : "Description of an hostingEnvironment (App Service Environment)",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "HostingEnvironmentCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/HostingEnvironment"
            }
          }
        },
        "description" : "Collection of hosting environments (App Service Environments)"
      },
      "HostingEnvironmentDiagnostics" : {
        "type" : "object",
        "properties" : {
          "diagnosicsOutput" : {
            "type" : "string",
            "description" : "Diagnostics output"
          },
          "name" : {
            "type" : "string",
            "description" : "Name/identifier of the diagnostics"
          }
        },
        "description" : "Diagnostics for a hosting environment (App Service Environment)"
      },
      "HostingEnvironmentProfile" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id of the hostingEnvironment (App Service Environment)"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the hostingEnvironment (App Service Environment) (read only)"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type of the hostingEnvironment (App Service Environment) (read only)"
          }
        },
        "description" : "Specification for a hostingEnvironment (App Service Environment) to use for this resource"
      },
      "HttpLogsConfig" : {
        "type" : "object",
        "properties" : {
          "azureBlobStorage" : {
            "$ref" : "#/components/schemas/AzureBlobStorageHttpLogsConfig"
          },
          "fileSystem" : {
            "$ref" : "#/components/schemas/FileSystemHttpLogsConfig"
          }
        },
        "description" : "Http logs configuration"
      },
      "IpSecurityRestriction" : {
        "type" : "object",
        "properties" : {
          "ipAddress" : {
            "type" : "string",
            "description" : "IP address the security restriction is valid for"
          },
          "subnetMask" : {
            "type" : "string",
            "description" : "Subnet mask for the range of IP addresses the restriction is valid for"
          }
        },
        "description" : "Represents an ip security restriction on a web app."
      },
      "LocalizableString" : {
        "type" : "object",
        "properties" : {
          "localizedValue" : {
            "type" : "string",
            "description" : "Localized name"
          },
          "value" : {
            "type" : "string",
            "description" : "Non localized name"
          }
        },
        "description" : "LocalizableString object containing the name and a localized value."
      },
      "ManagedHostingEnvironment" : {
        "properties" : {
          "properties" : {
            "required" : [ "status" ],
            "type" : "object",
            "properties" : {
              "apiManagementAccount" : {
                "type" : "string",
                "description" : "Resource id of the api management account associated with this managed hosting environment (read only)"
              },
              "dnsSuffix" : {
                "type" : "string",
                "description" : "DNS suffix of the managed hosting environment"
              },
              "environmentIsHealthy" : {
                "type" : "boolean",
                "description" : "True/false indicating whether the managed hosting environment is healthy"
              },
              "environmentStatus" : {
                "type" : "string",
                "description" : "Detailed message about with results of the last check of the managed hosting environment"
              },
              "ipsslAddressCount" : {
                "type" : "integer",
                "description" : "Number of ip ssl addresses reserved for the managed hosting environment",
                "format" : "int32"
              },
              "location" : {
                "type" : "string",
                "description" : "Location of the managed hosting environment e.g. \"West US\""
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the managed hosting environment"
              },
              "resourceGroup" : {
                "type" : "string",
                "description" : "Resource group of the managed hosting environment (read only)"
              },
              "status" : {
                "type" : "string",
                "description" : "Current status of the managed hosting environment",
                "enum" : [ "Preparing", "Ready", "Deleting" ]
              },
              "subscriptionId" : {
                "type" : "string",
                "description" : "Subscription of the managed hosting environment (read only)"
              },
              "suspended" : {
                "type" : "boolean",
                "description" : "True/false indicating whether the managed hosting environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\r\n            (most likely because NSG blocked the incoming traffic)"
              },
              "virtualNetwork" : {
                "$ref" : "#/components/schemas/VirtualNetworkProfile"
              }
            }
          }
        },
        "description" : "Description of a managed hosting environment",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ManagedHostingEnvironmentCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/ManagedHostingEnvironment"
            }
          }
        },
        "description" : "Collection of managed hosting environments"
      },
      "MetricAvailabilily" : {
        "type" : "object",
        "properties" : {
          "retention" : {
            "type" : "string",
            "description" : "Retention period for the current {Microsoft.Web.Hosting.Administration.MetricAvailabilily.TimeGrain}"
          },
          "timeGrain" : {
            "type" : "string",
            "description" : "Time grain"
          }
        },
        "description" : "Class representing metrics availability and retention"
      },
      "MetricDefinition" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Friendly name shown in the UI"
              },
              "metricAvailabilities" : {
                "type" : "array",
                "description" : "List of time grains supported for the metric together with retention period",
                "items" : {
                  "$ref" : "#/components/schemas/MetricAvailabilily"
                }
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the metric"
              },
              "primaryAggregationType" : {
                "type" : "string",
                "description" : "Primary aggregation type"
              },
              "unit" : {
                "type" : "string",
                "description" : "Unit of the metric"
              }
            }
          }
        },
        "description" : "Class representing metadata for the metrics",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "MetricDefinitionCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/MetricDefinition"
            }
          }
        },
        "description" : "Collection of metric definitions"
      },
      "NameIdentifier" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the object"
          }
        },
        "description" : "Identifies an object"
      },
      "NameIdentifierCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/NameIdentifier"
            }
          }
        },
        "description" : "Collection of domain name identifiers"
      },
      "NameValuePair" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Pair name"
          },
          "value" : {
            "type" : "string",
            "description" : "Pair value"
          }
        },
        "description" : "Name value pair"
      },
      "NetworkAccessControlEntry" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "Permit", "Deny" ]
          },
          "description" : {
            "type" : "string"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "remoteSubnet" : {
            "type" : "string"
          }
        }
      },
      "NetworkFeatures" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "hybridConnections" : {
                "type" : "array",
                "description" : "The Hybrid Connections Summary view",
                "items" : {
                  "$ref" : "#/components/schemas/RelayServiceConnectionEntity"
                }
              },
              "virtualNetworkConnection" : {
                "$ref" : "#/components/schemas/VnetInfo"
              },
              "virtualNetworkName" : {
                "type" : "string",
                "description" : "The Vnet Name"
              }
            }
          }
        },
        "description" : "This is an object used to store a full view of network features (presently VNET integration and Hybrid Connections)\r\n            for a web app.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "Object" : {
        "type" : "object"
      },
      "PremierAddOnRequest" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia"
          },
          "plan" : {
            "$ref" : "#/components/schemas/ArmPlan"
          },
          "properties" : {
            "$ref" : "#/components/schemas/Object"
          },
          "sku" : {
            "$ref" : "#/components/schemas/SkuDescription"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Tags associated with resource"
          }
        }
      },
      "RampUpRule" : {
        "type" : "object",
        "properties" : {
          "actionHostName" : {
            "type" : "string",
            "description" : "Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net"
          },
          "changeDecisionCallbackUrl" : {
            "type" : "string",
            "description" : "Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.\r\n            https://www.siteextensions.net/packages/TiPCallback/"
          },
          "changeIntervalInMinutes" : {
            "type" : "integer",
            "description" : "[Optional] Specifies interval in minutes to reevaluate ReroutePercentage",
            "format" : "int32"
          },
          "changeStep" : {
            "type" : "number",
            "description" : "[Optional] In auto ramp up scenario this is the step to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches \r\n            {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.\r\n            Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}",
            "format" : "double"
          },
          "maxReroutePercentage" : {
            "type" : "number",
            "description" : "[Optional] Specifies upper boundary below which ReroutePercentage will stay.",
            "format" : "double"
          },
          "minReroutePercentage" : {
            "type" : "number",
            "description" : "[Optional] Specifies lower boundary above which ReroutePercentage will stay.",
            "format" : "double"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment."
          },
          "reroutePercentage" : {
            "type" : "number",
            "description" : "Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}",
            "format" : "double"
          }
        },
        "description" : "Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance"
      },
      "Recommendation" : {
        "required" : [ "channels", "level" ],
        "type" : "object",
        "properties" : {
          "actionName" : {
            "type" : "string",
            "description" : "Name of action recommended by this object."
          },
          "channels" : {
            "type" : "string",
            "description" : "List of channels that this recommendation can apply.",
            "enum" : [ "Notification", "Api", "Email", "All" ]
          },
          "creationTime" : {
            "type" : "string",
            "description" : "Timestamp when this instance was created.",
            "format" : "date-time"
          },
          "displayName" : {
            "type" : "string",
            "description" : "UI friendly name of the rule (may not be unique)"
          },
          "enabled" : {
            "type" : "integer",
            "description" : "On/off flag indicating the rule is currently enabled or disabled.",
            "format" : "int32"
          },
          "endTime" : {
            "type" : "string",
            "description" : "The end time of a range that the recommendation refers to.",
            "format" : "date-time"
          },
          "level" : {
            "type" : "string",
            "description" : "Level indicating how critical this recommendation can impact.",
            "enum" : [ "Critical", "Warning", "Information", "NonUrgentSuggestion" ]
          },
          "message" : {
            "type" : "string",
            "description" : "Localized text of recommendation, good for UI."
          },
          "nextNotificationTime" : {
            "type" : "string",
            "description" : "When to notify this recommendation next. Null means that this will never be notified anymore.",
            "format" : "date-time"
          },
          "notificationExpirationTime" : {
            "type" : "string",
            "description" : "Date and time when this notification expires.",
            "format" : "date-time"
          },
          "notifiedTime" : {
            "type" : "string",
            "description" : "Last timestamp this instance was actually notified. Null means that this recommendation hasn't been notified yet.",
            "format" : "date-time"
          },
          "recommendationId" : {
            "type" : "string",
            "description" : "A GUID value that each recommendation object is associated with."
          },
          "resourceId" : {
            "type" : "string",
            "description" : "Full ARM resource ID string that this recommendation object is associated with."
          },
          "resourceScope" : {
            "type" : "string",
            "description" : "Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site."
          },
          "ruleName" : {
            "type" : "string",
            "description" : "Unique name of the rule"
          },
          "score" : {
            "type" : "number",
            "description" : "A metric value measured by the rule.",
            "format" : "double"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The beginning time of a range that the recommendation refers to.",
            "format" : "date-time"
          },
          "tags" : {
            "type" : "array",
            "description" : "The list of category tags that this recommendation belongs to.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Represents a recommendation result generated by the recommendation engine"
      },
      "RecommendationRule" : {
        "required" : [ "channels", "level" ],
        "type" : "object",
        "properties" : {
          "actionName" : {
            "type" : "string",
            "description" : "Name of action that is recommended by this rule in string"
          },
          "channels" : {
            "type" : "string",
            "description" : "List of available channels that this rule applies.",
            "enum" : [ "Notification", "Api", "Email", "All" ]
          },
          "description" : {
            "type" : "string",
            "description" : "Localized detailed description of the rule"
          },
          "displayName" : {
            "type" : "string",
            "description" : "UI friendly name of the rule"
          },
          "enabled" : {
            "type" : "integer",
            "description" : "On/off flag indicating the rule is currently enabled or disabled.",
            "format" : "int32"
          },
          "level" : {
            "type" : "string",
            "description" : "Level of impact indicating how critical this rule is.",
            "enum" : [ "Critical", "Warning", "Information", "NonUrgentSuggestion" ]
          },
          "message" : {
            "type" : "string",
            "description" : "Localized name of the rule (Good for UI)"
          },
          "name" : {
            "type" : "string",
            "description" : "Unique name of the rule"
          },
          "recommendationId" : {
            "type" : "string",
            "description" : "Recommendation ID of an associated recommendation object tied to the rule, if exists.\r\n            If such an object doesn't exist, it is set to null."
          },
          "tags" : {
            "type" : "array",
            "description" : "An array of category tags that the rule contains.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Represents a recommendation rule that the recommendation engine can perform"
      },
      "ReissueCertificateOrderRequest" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "delayExistingRevokeInHours" : {
                "type" : "integer",
                "description" : "Delay in hours to revoke existing certificate after the new certificate is issued",
                "format" : "int32"
              },
              "keySize" : {
                "type" : "integer",
                "description" : "Certificate Key Size",
                "format" : "int32"
              }
            }
          }
        },
        "description" : "Class representing certificate reissue request",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RelayServiceConnectionEntity" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "biztalkUri" : {
                "type" : "string"
              },
              "entityConnectionString" : {
                "type" : "string"
              },
              "entityName" : {
                "type" : "string"
              },
              "hostname" : {
                "type" : "string"
              },
              "port" : {
                "type" : "integer",
                "format" : "int32"
              },
              "resourceConnectionString" : {
                "type" : "string"
              },
              "resourceType" : {
                "type" : "string"
              }
            }
          }
        },
        "description" : "Class that represents a BizTalk Hybrid Connection",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RenewCertificateOrderRequest" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "keySize" : {
                "type" : "integer",
                "description" : "Certificate Key Size",
                "format" : "int32"
              }
            }
          }
        },
        "description" : "Class representing certificate renew request",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RequestsBasedTrigger" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "Count",
            "format" : "int32"
          },
          "timeInterval" : {
            "type" : "string",
            "description" : "TimeInterval"
          }
        },
        "description" : "RequestsBasedTrigger"
      },
      "Resource" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource Id"
          },
          "kind" : {
            "type" : "string",
            "description" : "Kind of resource"
          },
          "location" : {
            "type" : "string",
            "description" : "Resource Location"
          },
          "name" : {
            "type" : "string",
            "description" : "Resource Name"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type"
          }
        }
      },
      "ResourceMetric" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "Metric end time",
            "format" : "date-time"
          },
          "metricValues" : {
            "type" : "array",
            "description" : "Metric values",
            "items" : {
              "$ref" : "#/components/schemas/ResourceMetricValue"
            }
          },
          "name" : {
            "$ref" : "#/components/schemas/ResourceMetricName"
          },
          "properties" : {
            "type" : "array",
            "description" : "Properties",
            "items" : {
              "$ref" : "#/components/schemas/KeyValuePair[String,String]"
            }
          },
          "resourceId" : {
            "type" : "string",
            "description" : "Metric resource Id"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Metric start time",
            "format" : "date-time"
          },
          "timeGrain" : {
            "type" : "string",
            "description" : "Metric granularity. E.g PT1H, PT5M, P1D"
          },
          "unit" : {
            "type" : "string",
            "description" : "Metric unit"
          }
        },
        "description" : "Object representing a metric for any resource"
      },
      "ResourceMetricCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/ResourceMetric"
            }
          }
        },
        "description" : "Collection of metric responses"
      },
      "ResourceMetricName" : {
        "type" : "object",
        "properties" : {
          "localizedValue" : {
            "type" : "string",
            "description" : "Localized metric name value"
          },
          "value" : {
            "type" : "string",
            "description" : "metric name value"
          }
        },
        "description" : "Name of a metric for any resource"
      },
      "ResourceMetricValue" : {
        "type" : "object",
        "properties" : {
          "average" : {
            "type" : "number",
            "description" : "Value average",
            "format" : "float"
          },
          "count" : {
            "type" : "number",
            "description" : "Value count",
            "format" : "float"
          },
          "maximum" : {
            "type" : "number",
            "description" : "Value maximum",
            "format" : "float"
          },
          "minimum" : {
            "type" : "number",
            "description" : "Value minimum",
            "format" : "float"
          },
          "timeStamp" : {
            "type" : "string",
            "description" : "Value timestamp"
          },
          "total" : {
            "type" : "number",
            "description" : "Value total",
            "format" : "float"
          }
        },
        "description" : "Value of resource metric"
      },
      "ResourceNameAvailability" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "nameAvailable" : {
            "type" : "boolean",
            "description" : "True indicates name is valid and available.  False indicates the name is invalid, unavailable, or both."
          },
          "reason" : {
            "type" : "string",
            "description" : "Required if nameAvailable is false. 'Invalid' indicates the name provided does not match Azure WebApp service’s naming requirements. 'AlreadyExists' indicates that the name is already in use and is therefore unavailable."
          }
        },
        "description" : "Describes if a resource name is available"
      },
      "ResourceNameAvailabilityRequest" : {
        "type" : "object",
        "properties" : {
          "isFqdn" : {
            "type" : "boolean",
            "description" : "Is fully qualified domain name"
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name to verify"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type used for verification"
          }
        },
        "description" : "Resource name availability request content"
      },
      "RestoreRequest" : {
        "properties" : {
          "properties" : {
            "required" : [ "operationType" ],
            "type" : "object",
            "properties" : {
              "adjustConnectionStrings" : {
                "type" : "boolean",
                "description" : "Gets or sets a flag showing if SiteConfig.ConnectionStrings should be set in new site"
              },
              "blobName" : {
                "type" : "string",
                "description" : "Name of a blob which contains the backup"
              },
              "databases" : {
                "type" : "array",
                "description" : "Collection of databases which should be restored. This list has to match the list of databases included in the backup.",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseBackupSetting"
                }
              },
              "hostingEnvironment" : {
                "type" : "string",
                "description" : "App Service Environment name, if needed (only when restoring a site to an App Service Environment)"
              },
              "ignoreConflictingHostNames" : {
                "type" : "boolean",
                "description" : "Changes a logic when restoring a site with custom domains. If \"true\", custom domains are removed automatically. If \"false\", custom domains are added to \r\n            the site object when it is being restored, but that might fail due to conflicts during the operation."
              },
              "operationType" : {
                "type" : "string",
                "description" : "Operation type",
                "enum" : [ "Default", "Clone", "Relocation" ]
              },
              "overwrite" : {
                "type" : "boolean",
                "description" : "True if the restore operation can overwrite target site. \"True\" needed if trying to restore over an existing site."
              },
              "siteName" : {
                "type" : "string",
                "description" : "Name of a site (Web App)"
              },
              "storageAccountUrl" : {
                "type" : "string",
                "description" : "SAS URL to the container"
              }
            }
          }
        },
        "description" : "Description of a restore request",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RestoreResponse" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "operationId" : {
                "type" : "string",
                "description" : "When server starts the restore process, it will return an OperationId identifying that particular restore operation"
              }
            }
          }
        },
        "description" : "Response for a restore site request",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RoutingRule" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment."
          }
        },
        "description" : "Routing rules for TiP"
      },
      "ServerFarmCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/ServerFarmWithRichSku"
            }
          }
        },
        "description" : "Collection of serverfarms"
      },
      "ServerFarmWithRichSku" : {
        "properties" : {
          "properties" : {
            "required" : [ "status" ],
            "type" : "object",
            "properties" : {
              "adminSiteName" : {
                "type" : "string",
                "description" : "App Service Plan administration site"
              },
              "geoRegion" : {
                "type" : "string",
                "description" : "Geographical location for the App Service Plan",
                "readOnly" : true
              },
              "hostingEnvironmentProfile" : {
                "$ref" : "#/components/schemas/HostingEnvironmentProfile"
              },
              "maximumNumberOfWorkers" : {
                "type" : "integer",
                "description" : "Maximum number of instances that can be assigned to this App Service Plan",
                "format" : "int32"
              },
              "name" : {
                "type" : "string",
                "description" : "Name for the App Service Plan"
              },
              "numberOfSites" : {
                "type" : "integer",
                "description" : "Number of web apps assigned to this App Service Plan",
                "format" : "int32",
                "readOnly" : true
              },
              "perSiteScaling" : {
                "type" : "boolean",
                "description" : "If True apps assigned to this App Service Plan can be scaled independently\r\n            If False apps assigned to this App Service Plan will scale to all instances of the plan"
              },
              "reserved" : {
                "type" : "boolean",
                "description" : "Enables creation of a Linux App Service Plan"
              },
              "resourceGroup" : {
                "type" : "string",
                "description" : "Resource group of the server farm",
                "readOnly" : true
              },
              "status" : {
                "type" : "string",
                "description" : "App Service Plan Status",
                "readOnly" : true,
                "enum" : [ "Ready", "Pending" ]
              },
              "subscription" : {
                "type" : "string",
                "description" : "App Service Plan Subscription",
                "readOnly" : true
              },
              "workerTierName" : {
                "type" : "string",
                "description" : "Target worker tier assigned to the App Service Plan"
              }
            }
          },
          "sku" : {
            "$ref" : "#/components/schemas/SkuDescription"
          }
        },
        "description" : "App Service Plan Model",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "Site" : {
        "properties" : {
          "properties" : {
            "required" : [ "availabilityState", "usageState" ],
            "type" : "object",
            "properties" : {
              "availabilityState" : {
                "type" : "string",
                "description" : "Management information availability state for the web app. Possible values are Normal or Limited. \r\n            Normal means that the site is running correctly and that management information for the site is available. \r\n            Limited means that only partial management information for the site is available and that detailed site information is unavailable.",
                "readOnly" : true,
                "enum" : [ "Normal", "Limited", "DisasterRecoveryMode" ]
              },
              "clientAffinityEnabled" : {
                "type" : "boolean",
                "description" : "Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app"
              },
              "clientCertEnabled" : {
                "type" : "boolean",
                "description" : "Specifies if the client certificate is enabled for the web app"
              },
              "cloningInfo" : {
                "$ref" : "#/components/schemas/CloningInfo"
              },
              "containerSize" : {
                "type" : "integer",
                "description" : "Size of a function container",
                "format" : "int32"
              },
              "defaultHostName" : {
                "type" : "string",
                "description" : "Default hostname of the web app",
                "readOnly" : true
              },
              "enabled" : {
                "type" : "boolean",
                "description" : "True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line)."
              },
              "enabledHostNames" : {
                "type" : "array",
                "description" : "Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled\r\n            the app is not served on those hostnames",
                "readOnly" : true,
                "items" : {
                  "type" : "string"
                }
              },
              "gatewaySiteName" : {
                "type" : "string",
                "description" : "Name of gateway app associated with web app"
              },
              "hostNameSslStates" : {
                "type" : "array",
                "description" : "Hostname SSL states are  used to manage the SSL bindings for site's hostnames.",
                "items" : {
                  "$ref" : "#/components/schemas/HostNameSslState"
                }
              },
              "hostNames" : {
                "type" : "array",
                "description" : "Hostnames associated with web app",
                "readOnly" : true,
                "items" : {
                  "type" : "string"
                }
              },
              "hostNamesDisabled" : {
                "type" : "boolean",
                "description" : "Specifies if the public hostnames are disabled the web app.\r\n            If set to true the app is only accessible via API Management process"
              },
              "hostingEnvironmentProfile" : {
                "$ref" : "#/components/schemas/HostingEnvironmentProfile"
              },
              "isDefaultContainer" : {
                "type" : "boolean",
                "description" : "Site is a default container",
                "readOnly" : true
              },
              "lastModifiedTimeUtc" : {
                "type" : "string",
                "description" : "Last time web app was modified in UTC",
                "format" : "date-time",
                "readOnly" : true
              },
              "maxNumberOfWorkers" : {
                "type" : "integer",
                "description" : "Maximum number of workers\r\n            This only applies to function container",
                "format" : "int32"
              },
              "microService" : {
                "type" : "string",
                "description" : ""
              },
              "name" : {
                "type" : "string",
                "description" : "Name of web app"
              },
              "outboundIpAddresses" : {
                "type" : "string",
                "description" : "List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.",
                "readOnly" : true
              },
              "premiumAppDeployed" : {
                "type" : "boolean",
                "description" : "If set indicates whether web app is deployed as a premium app",
                "readOnly" : true
              },
              "repositorySiteName" : {
                "type" : "string",
                "description" : "Name of repository site",
                "readOnly" : true
              },
              "resourceGroup" : {
                "type" : "string",
                "description" : "Resource group web app belongs to",
                "readOnly" : true
              },
              "scmSiteAlsoStopped" : {
                "type" : "boolean",
                "description" : "If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false."
              },
              "serverFarmId" : {
                "type" : "string"
              },
              "siteConfig" : {
                "$ref" : "#/components/schemas/SiteConfig"
              },
              "state" : {
                "type" : "string",
                "description" : "State of the web app",
                "readOnly" : true
              },
              "targetSwapSlot" : {
                "type" : "string",
                "description" : "Read-only property that specifies which slot this app will swap into",
                "readOnly" : true
              },
              "trafficManagerHostNames" : {
                "type" : "array",
                "description" : "Read-only list of Azure Traffic manager hostnames associated with web app",
                "readOnly" : true,
                "items" : {
                  "type" : "string"
                }
              },
              "usageState" : {
                "type" : "string",
                "description" : "State indicating whether web app has exceeded its quota usage",
                "readOnly" : true,
                "enum" : [ "Normal", "Exceeded" ]
              }
            }
          }
        },
        "description" : "Represents a web app",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SiteAuthSettings" : {
        "type" : "object",
        "properties" : {
          "aadClientId" : {
            "type" : "string"
          },
          "additionalLoginParams" : {
            "type" : "array",
            "description" : "Gets or sets a list of login parameters to send to the OpenID Connect authorization endpoint when\r\n            a user logs in. Each parameter must be in the form \"key=value\".",
            "items" : {
              "type" : "string"
            }
          },
          "allowedAudiences" : {
            "type" : "array",
            "description" : "Gets or sets a list of allowed audience values to consider when validating JWTs issued by \r\n            Azure Active Directory. Note that the {Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is always considered an\r\n            allowed audience, regardless of this setting.",
            "items" : {
              "type" : "string"
            }
          },
          "allowedExternalRedirectUrls" : {
            "type" : "array",
            "description" : "Gets or sets a collection of external URLs that can be redirected to as part of logging in\r\n            or logging out of the web app. Note that the query string part of the URL is ignored.\r\n            This is an advanced setting typically only needed by Windows Store application backends.\r\n            Note that URLs within the current domain are always implicitly allowed.",
            "items" : {
              "type" : "string"
            }
          },
          "clientId" : {
            "type" : "string",
            "description" : "Gets or sets the Client ID of this relying party application, known as the client_id.\r\n            This setting is required for enabling OpenID Connection authentication with Azure Active Directory or \r\n            other 3rd party OpenID Connect providers.\r\n            More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html"
          },
          "clientSecret" : {
            "type" : "string",
            "description" : "Gets or sets the Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).\r\n            This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.\r\n            Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.\r\n            More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html"
          },
          "defaultProvider" : {
            "type" : "string",
            "description" : "Gets or sets the default authentication provider to use when multiple providers are configured.\r\n            This setting is only needed if multiple providers are configured and the unauthenticated client\r\n            action is set to \"RedirectToLoginPage\".",
            "enum" : [ "AzureActiveDirectory", "Facebook", "Google", "MicrosoftAccount", "Twitter" ]
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the Authentication / Authorization feature is enabled for the current app."
          },
          "facebookAppId" : {
            "type" : "string",
            "description" : "Gets or sets the App ID of the Facebook app used for login.\r\n            This setting is required for enabling Facebook Login.\r\n            Facebook Login documentation: https://developers.facebook.com/docs/facebook-login"
          },
          "facebookAppSecret" : {
            "type" : "string",
            "description" : "Gets or sets the App Secret of the Facebook app used for Facebook Login.\r\n            This setting is required for enabling Facebook Login.\r\n            Facebook Login documentation: https://developers.facebook.com/docs/facebook-login"
          },
          "facebookOAuthScopes" : {
            "type" : "array",
            "description" : "Gets or sets the OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.\r\n            This setting is optional.\r\n            Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
            "items" : {
              "type" : "string"
            }
          },
          "googleClientId" : {
            "type" : "string",
            "description" : "Gets or sets the OpenID Connect Client ID for the Google web application.\r\n            This setting is required for enabling Google Sign-In.\r\n            Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/"
          },
          "googleClientSecret" : {
            "type" : "string",
            "description" : "Gets or sets the client secret associated with the Google web application.\r\n            This setting is required for enabling Google Sign-In.\r\n            Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/"
          },
          "googleOAuthScopes" : {
            "type" : "array",
            "description" : "Gets or sets the OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.\r\n            This setting is optional. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.\r\n            Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
            "items" : {
              "type" : "string"
            }
          },
          "httpApiPrefixPath" : {
            "type" : "string",
            "description" : "Gets or sets the relative path prefix used by platform HTTP APIs.\r\n            Changing this value is not recommended except for compatibility reasons."
          },
          "issuer" : {
            "type" : "string",
            "description" : "Gets or sets the OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\r\n            When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\r\n            This URI is a case-sensitive identifier for the token issuer.\r\n            More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html"
          },
          "microsoftAccountClientId" : {
            "type" : "string",
            "description" : "Gets or sets the OAuth 2.0 client ID that was created for the app used for authentication.\r\n            This setting is required for enabling Microsoft Account authentication.\r\n            Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm"
          },
          "microsoftAccountClientSecret" : {
            "type" : "string",
            "description" : "Gets or sets the OAuth 2.0 client secret that was created for the app used for authentication.\r\n            This setting is required for enabling Microsoft Account authentication.\r\n            Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm"
          },
          "microsoftAccountOAuthScopes" : {
            "type" : "array",
            "description" : "Gets or sets the OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.\r\n            This setting is optional. If not specified, \"wl.basic\" is used as the default scope.\r\n            Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx",
            "items" : {
              "type" : "string"
            }
          },
          "openIdIssuer" : {
            "type" : "string"
          },
          "tokenRefreshExtensionHours" : {
            "type" : "number",
            "description" : "Gets or sets the number of hours after session token expiration that a session token can be used to\r\n            call the token refresh API. The default is 72 hours.",
            "format" : "double"
          },
          "tokenStoreEnabled" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to durably store platform-specific security tokens\r\n            obtained during login flows. This capability is disabled by default."
          },
          "twitterConsumerKey" : {
            "type" : "string",
            "description" : "Gets or sets the OAuth 1.0a consumer key of the Twitter application used for sign-in.\r\n            This setting is required for enabling Twitter Sign-In.\r\n            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in"
          },
          "twitterConsumerSecret" : {
            "type" : "string",
            "description" : "Gets or sets the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\r\n            This setting is required for enabling Twitter Sign-In.\r\n            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in"
          },
          "unauthenticatedClientAction" : {
            "type" : "string",
            "description" : "Gets or sets the action to take when an unauthenticated client attempts to access the app.",
            "enum" : [ "RedirectToLoginPage", "AllowAnonymous" ]
          }
        },
        "description" : "Configuration settings for the Azure App Service Authentication / Authorization feature."
      },
      "SiteCloneability" : {
        "required" : [ "result" ],
        "type" : "object",
        "properties" : {
          "blockingCharacteristics" : {
            "type" : "array",
            "description" : "List of blocking application characteristics",
            "items" : {
              "$ref" : "#/components/schemas/SiteCloneabilityCriterion"
            }
          },
          "blockingFeatures" : {
            "type" : "array",
            "description" : "List of features enabled on web app that prevent cloning",
            "items" : {
              "$ref" : "#/components/schemas/SiteCloneabilityCriterion"
            }
          },
          "result" : {
            "type" : "string",
            "description" : "Name of web app",
            "enum" : [ "Cloneable", "PartiallyCloneable", "NotCloneable" ]
          },
          "unsupportedFeatures" : {
            "type" : "array",
            "description" : "List of features enabled on web app that are non-blocking but cannot be cloned. The web app can still be cloned\r\n            but the features in this list will not be set up on cloned web app.",
            "items" : {
              "$ref" : "#/components/schemas/SiteCloneabilityCriterion"
            }
          }
        },
        "description" : "Represents whether or not a web app is cloneable"
      },
      "SiteCloneabilityCriterion" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of criterion"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of criterion"
          }
        },
        "description" : "Represents a site cloneability criterion"
      },
      "SiteCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/Site"
            }
          }
        },
        "description" : "Collection of sites"
      },
      "SiteConfig" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "alwaysOn" : {
                "type" : "boolean",
                "description" : "Always On"
              },
              "apiDefinition" : {
                "$ref" : "#/components/schemas/ApiDefinitionInfo"
              },
              "appCommandLine" : {
                "type" : "string",
                "description" : "App Command Line to launch"
              },
              "appSettings" : {
                "type" : "array",
                "description" : "Application Settings",
                "items" : {
                  "$ref" : "#/components/schemas/NameValuePair"
                }
              },
              "autoHealEnabled" : {
                "type" : "boolean",
                "description" : "Auto heal enabled"
              },
              "autoHealRules" : {
                "$ref" : "#/components/schemas/AutoHealRules"
              },
              "autoSwapSlotName" : {
                "type" : "string",
                "description" : "Auto swap slot name"
              },
              "connectionStrings" : {
                "type" : "array",
                "description" : "Connection strings",
                "items" : {
                  "$ref" : "#/components/schemas/ConnStringInfo"
                }
              },
              "cors" : {
                "$ref" : "#/components/schemas/CorsSettings"
              },
              "defaultDocuments" : {
                "type" : "array",
                "description" : "Default documents",
                "items" : {
                  "type" : "string"
                }
              },
              "detailedErrorLoggingEnabled" : {
                "type" : "boolean",
                "description" : "Detailed error logging enabled"
              },
              "documentRoot" : {
                "type" : "string",
                "description" : "Document root"
              },
              "experiments" : {
                "$ref" : "#/components/schemas/Experiments"
              },
              "handlerMappings" : {
                "type" : "array",
                "description" : "Handler mappings",
                "items" : {
                  "$ref" : "#/components/schemas/HandlerMapping"
                }
              },
              "httpLoggingEnabled" : {
                "type" : "boolean",
                "description" : "HTTP logging Enabled"
              },
              "ipSecurityRestrictions" : {
                "type" : "array",
                "description" : "Ip Security restrictions",
                "items" : {
                  "$ref" : "#/components/schemas/IpSecurityRestriction"
                }
              },
              "javaContainer" : {
                "type" : "string",
                "description" : "Java container"
              },
              "javaContainerVersion" : {
                "type" : "string",
                "description" : "Java container version"
              },
              "javaVersion" : {
                "type" : "string",
                "description" : "Java version"
              },
              "limits" : {
                "$ref" : "#/components/schemas/SiteLimits"
              },
              "loadBalancing" : {
                "type" : "string",
                "description" : "Site load balancing",
                "enum" : [ "WeightedRoundRobin", "LeastRequests", "LeastResponseTime", "WeightedTotalTraffic", "RequestHash" ]
              },
              "localMySqlEnabled" : {
                "type" : "boolean",
                "description" : "Local mysql enabled"
              },
              "logsDirectorySizeLimit" : {
                "type" : "integer",
                "description" : "HTTP Logs Directory size limit",
                "format" : "int32"
              },
              "managedPipelineMode" : {
                "type" : "string",
                "description" : "Managed pipeline mode",
                "enum" : [ "Integrated", "Classic" ]
              },
              "metadata" : {
                "type" : "array",
                "description" : "Site Metadata",
                "items" : {
                  "$ref" : "#/components/schemas/NameValuePair"
                }
              },
              "netFrameworkVersion" : {
                "type" : "string",
                "description" : "Net Framework Version"
              },
              "nodeVersion" : {
                "type" : "string",
                "description" : "Version of Node"
              },
              "numberOfWorkers" : {
                "type" : "integer",
                "description" : "Number of workers",
                "format" : "int32"
              },
              "phpVersion" : {
                "type" : "string",
                "description" : "Version of PHP"
              },
              "publishingPassword" : {
                "type" : "string",
                "description" : "Publishing password"
              },
              "publishingUsername" : {
                "type" : "string",
                "description" : "Publishing user name"
              },
              "pythonVersion" : {
                "type" : "string",
                "description" : "Version of Python"
              },
              "remoteDebuggingEnabled" : {
                "type" : "boolean",
                "description" : "Remote Debugging Enabled"
              },
              "remoteDebuggingVersion" : {
                "type" : "string",
                "description" : "Remote Debugging Version"
              },
              "requestTracingEnabled" : {
                "type" : "boolean",
                "description" : "Enable request tracing"
              },
              "requestTracingExpirationTime" : {
                "type" : "string",
                "description" : "Request tracing expiration time",
                "format" : "date-time"
              },
              "scmType" : {
                "type" : "string",
                "description" : "SCM type"
              },
              "tracingOptions" : {
                "type" : "string",
                "description" : "Tracing options"
              },
              "use32BitWorkerProcess" : {
                "type" : "boolean",
                "description" : "Use 32 bit worker process"
              },
              "virtualApplications" : {
                "type" : "array",
                "description" : "Virtual applications",
                "items" : {
                  "$ref" : "#/components/schemas/VirtualApplication"
                }
              },
              "vnetName" : {
                "type" : "string",
                "description" : "Vnet name"
              },
              "webSocketsEnabled" : {
                "type" : "boolean",
                "description" : "Web socket enabled."
              }
            }
          }
        },
        "description" : "Configuration of Azure web site",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SiteInstance" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name of instance"
              }
            }
          }
        },
        "description" : "Instance of a web app",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SiteInstanceCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/SiteInstance"
            }
          }
        },
        "description" : "Collection of site instances"
      },
      "SiteLimits" : {
        "type" : "object",
        "properties" : {
          "maxDiskSizeInMb" : {
            "type" : "integer",
            "description" : "Maximum allowed disk size usage in MB",
            "format" : "int64"
          },
          "maxMemoryInMb" : {
            "type" : "integer",
            "description" : "Maximum allowed memory usage in MB",
            "format" : "int64"
          },
          "maxPercentageCpu" : {
            "type" : "number",
            "description" : "Maximum allowed CPU usage percentage",
            "format" : "double"
          }
        },
        "description" : "Represents metric limits set on a web app."
      },
      "SiteLogsConfig" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "applicationLogs" : {
                "$ref" : "#/components/schemas/ApplicationLogsConfig"
              },
              "detailedErrorMessages" : {
                "$ref" : "#/components/schemas/EnabledConfig"
              },
              "failedRequestsTracing" : {
                "$ref" : "#/components/schemas/EnabledConfig"
              },
              "httpLogs" : {
                "$ref" : "#/components/schemas/HttpLogsConfig"
              }
            }
          }
        },
        "description" : "Configuration of Azure web site",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SiteProperties" : {
        "type" : "object",
        "properties" : {
          "appSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NameValuePair"
            }
          },
          "metadata" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NameValuePair"
            }
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NameValuePair"
            }
          }
        }
      },
      "SiteSourceControl" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "branch" : {
                "type" : "string",
                "description" : "Name of branch to use for deployment"
              },
              "deploymentRollbackEnabled" : {
                "type" : "boolean",
                "description" : "Whether to manual or continuous integration"
              },
              "isManualIntegration" : {
                "type" : "boolean",
                "description" : "Whether to manual or continuous integration"
              },
              "isMercurial" : {
                "type" : "boolean",
                "description" : "Mercurial or Git repository type"
              },
              "repoUrl" : {
                "type" : "string",
                "description" : "Repository or source control url"
              }
            }
          }
        },
        "description" : "Describes the source control configuration for web app",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SkuCapacity" : {
        "type" : "object",
        "properties" : {
          "default" : {
            "type" : "integer",
            "description" : "Default number of Workers for this App Service Plan SKU",
            "format" : "int32"
          },
          "maximum" : {
            "type" : "integer",
            "description" : "Maximum number of Workers for this App Service Plan SKU",
            "format" : "int32"
          },
          "minimum" : {
            "type" : "integer",
            "description" : "Minimum number of Workers for this App Service Plan SKU",
            "format" : "int32"
          },
          "scaleType" : {
            "type" : "string",
            "description" : "Available scale configurations for an App Service Plan"
          }
        },
        "description" : "Description of the App Service Plan scale options"
      },
      "SkuDescription" : {
        "type" : "object",
        "properties" : {
          "capacity" : {
            "type" : "integer",
            "description" : "Current number of instances assigned to the resource",
            "format" : "int32"
          },
          "family" : {
            "type" : "string",
            "description" : "Family code of the resource sku"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource sku"
          },
          "size" : {
            "type" : "string",
            "description" : "Size specifier of the resource sku"
          },
          "tier" : {
            "type" : "string",
            "description" : "Service Tier of the resource sku"
          }
        },
        "description" : "Describes a sku for a scalable resource"
      },
      "SkuInfo" : {
        "type" : "object",
        "properties" : {
          "capacity" : {
            "$ref" : "#/components/schemas/SkuCapacity"
          },
          "resourceType" : {
            "type" : "string",
            "description" : "Resource type that this sku applies to"
          },
          "sku" : {
            "$ref" : "#/components/schemas/SkuDescription"
          }
        },
        "description" : "Sku discovery information"
      },
      "SkuInfoCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/SkuInfo"
            }
          }
        },
        "description" : "Collection of SkuInfos"
      },
      "SlotConfigNames" : {
        "type" : "object",
        "properties" : {
          "appSettingNames" : {
            "type" : "array",
            "description" : "List of application settings names",
            "items" : {
              "type" : "string"
            }
          },
          "connectionStringNames" : {
            "type" : "array",
            "description" : "List of connection string names",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Class containing names for connection strings and application settings to be marked as sticky to the slot \r\n            and not moved during swap operation\r\n            This is valid for all deployment slots under the site"
      },
      "SlotConfigNamesResource" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "appSettingNames" : {
                "type" : "array",
                "description" : "List of application settings names",
                "items" : {
                  "type" : "string"
                }
              },
              "connectionStringNames" : {
                "type" : "array",
                "description" : "List of connection string names",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "description" : "Slot Config names azure resource",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SlotDifference" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Description of the difference"
              },
              "diffRule" : {
                "type" : "string",
                "description" : "Rule that describes how to process the difference in settings during web app slot swap."
              },
              "settingName" : {
                "type" : "string",
                "description" : "Name of the setting"
              },
              "settingType" : {
                "type" : "string",
                "description" : "The type of the settings: General, AppSetting or ConnectionString"
              },
              "type" : {
                "type" : "string",
                "description" : "Indicates the type of the difference: Information, Warning or Error."
              },
              "valueInCurrentSlot" : {
                "type" : "string",
                "description" : "Value of the setting in the current web app slot"
              },
              "valueInTargetSlot" : {
                "type" : "string",
                "description" : "Value of the setting in the target web app slot"
              }
            }
          }
        },
        "description" : "An object describing the difference in setting values between two web app slots",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SlotDifferenceCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/SlotDifference"
            }
          }
        },
        "description" : "Collection of Slot Differences"
      },
      "SlowRequestsBasedTrigger" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "Count",
            "format" : "int32"
          },
          "timeInterval" : {
            "type" : "string",
            "description" : "TimeInterval"
          },
          "timeTaken" : {
            "type" : "string",
            "description" : "TimeTaken"
          }
        },
        "description" : "SlowRequestsBasedTrigger"
      },
      "SourceControl" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "expirationTime" : {
                "type" : "string",
                "description" : "OAuth Token Expiration",
                "format" : "date-time"
              },
              "name" : {
                "type" : "string",
                "description" : "Name or Source Control Type"
              },
              "refreshToken" : {
                "type" : "string",
                "description" : "OAuth Refresh Token"
              },
              "token" : {
                "type" : "string",
                "description" : "OAuth Access Token"
              },
              "tokenSecret" : {
                "type" : "string",
                "description" : "OAuth Access Token Secret"
              }
            }
          }
        },
        "description" : "Describes the Source Control OAuth Token",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SourceControlCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/SourceControl"
            }
          }
        },
        "description" : "Collection of source controls"
      },
      "StampCapacity" : {
        "type" : "object",
        "properties" : {
          "availableCapacity" : {
            "type" : "integer",
            "description" : "Available capacity (# of machines, bytes of storage etc...)",
            "format" : "int64"
          },
          "computeMode" : {
            "type" : "string",
            "description" : "Shared/Dedicated workers",
            "enum" : [ "Shared", "Dedicated", "Dynamic" ]
          },
          "excludeFromCapacityAllocation" : {
            "type" : "boolean",
            "description" : "If true it includes basic sites\r\n            Basic sites are not used for capacity allocation."
          },
          "isApplicableForAllComputeModes" : {
            "type" : "boolean",
            "description" : "Is capacity applicable for all sites?"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the stamp"
          },
          "siteMode" : {
            "type" : "string",
            "description" : "Shared or Dedicated"
          },
          "totalCapacity" : {
            "type" : "integer",
            "description" : "Total capacity (# of machines, bytes of storage etc...)",
            "format" : "int64"
          },
          "unit" : {
            "type" : "string",
            "description" : "Name of the unit"
          },
          "workerSize" : {
            "type" : "string",
            "description" : "Size of the machines",
            "enum" : [ "Default", "Small", "Medium", "Large" ]
          },
          "workerSizeId" : {
            "type" : "integer",
            "description" : "Size Id of machines: \r\n            0 - Small\r\n            1 - Medium\r\n            2 - Large",
            "format" : "int32"
          }
        },
        "description" : "Class containing stamp capacity information"
      },
      "StampCapacityCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/StampCapacity"
            }
          }
        },
        "description" : "Collection of stamp capacities"
      },
      "StatusCodesBasedTrigger" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "Count",
            "format" : "int32"
          },
          "status" : {
            "type" : "integer",
            "description" : "HTTP status code",
            "format" : "int32"
          },
          "subStatus" : {
            "type" : "integer",
            "description" : "SubStatus",
            "format" : "int32"
          },
          "timeInterval" : {
            "type" : "string",
            "description" : "TimeInterval"
          },
          "win32Status" : {
            "type" : "integer",
            "description" : "Win32 error code",
            "format" : "int32"
          }
        },
        "description" : "StatusCodeBasedTrigger"
      },
      "StringDictionary" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Settings"
          }
        },
        "description" : "String dictionary resource",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "TldLegalAgreement" : {
        "type" : "object",
        "properties" : {
          "agreementKey" : {
            "type" : "string",
            "description" : "Unique identifier for the agreement"
          },
          "content" : {
            "type" : "string",
            "description" : "Agreement details"
          },
          "title" : {
            "type" : "string",
            "description" : "Agreement title"
          },
          "url" : {
            "type" : "string",
            "description" : "Url where a copy of the agreement details is hosted"
          }
        },
        "description" : "Represents a legal agreement for top level domain"
      },
      "TldLegalAgreementCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/TldLegalAgreement"
            }
          }
        },
        "description" : "Collection of Tld Legal Agreements"
      },
      "TopLevelDomain" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name of the top level domain"
              },
              "privacy" : {
                "type" : "boolean",
                "description" : "If true then the top level domain supports domain privacy"
              }
            }
          }
        },
        "description" : "A top level domain object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "TopLevelDomainAgreementOption" : {
        "type" : "object",
        "properties" : {
          "includePrivacy" : {
            "type" : "boolean",
            "description" : "If true then the list of agreements will include agreements for domain privacy as well."
          }
        },
        "description" : "Options for retrieving the list of top level domain legal agreements"
      },
      "TopLevelDomainCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/TopLevelDomain"
            }
          }
        },
        "description" : "Collection of Top Level Domains"
      },
      "Usage" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "computeMode" : {
                "type" : "string",
                "description" : "ComputeMode used for this usage",
                "enum" : [ "Shared", "Dedicated", "Dynamic" ]
              },
              "currentValue" : {
                "type" : "integer",
                "description" : "The current value of the resource counter",
                "format" : "int64"
              },
              "displayName" : {
                "type" : "string",
                "description" : "Friendly name shown in the UI"
              },
              "limit" : {
                "type" : "integer",
                "description" : "The resource limit",
                "format" : "int64"
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the quota"
              },
              "nextResetTime" : {
                "type" : "string",
                "description" : "Next reset time for the resource counter",
                "format" : "date-time"
              },
              "resourceName" : {
                "type" : "string",
                "description" : "Name of the quota resource"
              },
              "siteMode" : {
                "type" : "string",
                "description" : "SiteMode used for this usage"
              },
              "unit" : {
                "type" : "string",
                "description" : "Units of measurement for the quota resource"
              }
            }
          }
        },
        "description" : "Class that represents usage of the quota resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "UsageCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/Usage"
            }
          }
        },
        "description" : "Collection of usages"
      },
      "User" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Username (internal)"
              },
              "publishingPassword" : {
                "type" : "string",
                "description" : "Password used for publishing"
              },
              "publishingUserName" : {
                "type" : "string",
                "description" : "Username used for publishing"
              },
              "scmUri" : {
                "type" : "string",
                "description" : "Service Control Manager URI, including username and password"
              }
            }
          }
        },
        "description" : "Represents user credentials used for publishing activity",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VirtualApplication" : {
        "type" : "object",
        "properties" : {
          "physicalPath" : {
            "type" : "string"
          },
          "preloadEnabled" : {
            "type" : "boolean"
          },
          "virtualDirectories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VirtualDirectory"
            }
          },
          "virtualPath" : {
            "type" : "string"
          }
        }
      },
      "VirtualDirectory" : {
        "type" : "object",
        "properties" : {
          "physicalPath" : {
            "type" : "string"
          },
          "virtualPath" : {
            "type" : "string"
          }
        }
      },
      "VirtualIPMapping" : {
        "type" : "object",
        "properties" : {
          "inUse" : {
            "type" : "boolean",
            "description" : "Is VIP mapping in use"
          },
          "internalHttpPort" : {
            "type" : "integer",
            "description" : "Internal HTTP port",
            "format" : "int32"
          },
          "internalHttpsPort" : {
            "type" : "integer",
            "description" : "Internal HTTPS port",
            "format" : "int32"
          },
          "virtualIP" : {
            "type" : "string",
            "description" : "Virtual IP address"
          }
        },
        "description" : "Class that represents a VIP mapping"
      },
      "VirtualNetworkProfile" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id of the virtual network"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the virtual network (read-only)"
          },
          "subnet" : {
            "type" : "string",
            "description" : "Subnet within the virtual network"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type of the virtual network (read-only)"
          }
        },
        "description" : "Specification for using a virtual network"
      },
      "VnetGateway" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "vnetName" : {
                "type" : "string",
                "description" : "The VNET name."
              },
              "vpnPackageUri" : {
                "type" : "string",
                "description" : "The URI where the Vpn package can be downloaded"
              }
            }
          }
        },
        "description" : "The VnetGateway contract. This is used to give the vnet gateway access to the VPN package.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VnetInfo" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "certBlob" : {
                "type" : "string",
                "description" : "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \r\n            Point-To-Site VPN connection."
              },
              "certThumbprint" : {
                "type" : "string",
                "description" : "The client certificate thumbprint"
              },
              "dnsServers" : {
                "type" : "string",
                "description" : "Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses."
              },
              "resyncRequired" : {
                "type" : "boolean",
                "description" : "Flag to determine if a resync is required"
              },
              "routes" : {
                "type" : "array",
                "description" : "The routes that this virtual network connection uses.",
                "items" : {
                  "$ref" : "#/components/schemas/VnetRoute"
                }
              },
              "vnetResourceId" : {
                "type" : "string",
                "description" : "The vnet resource id"
              }
            }
          }
        },
        "description" : "VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VnetRoute" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "endAddress" : {
                "type" : "string",
                "description" : "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of this route. This is only returned by the server and does not need to be set by the client."
              },
              "routeType" : {
                "type" : "string",
                "description" : "The type of route this is:\r\n            DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918\r\n            INHERITED - Routes inherited from the real Virtual Network routes\r\n            STATIC - Static route set on the web app only\r\n            \r\n            These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them\r\n            with new INHERITED routes."
              },
              "startAddress" : {
                "type" : "string",
                "description" : "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified."
              }
            }
          }
        },
        "description" : "VnetRoute contract used to pass routing information for a vnet.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "WorkerPool" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "computeMode" : {
                "type" : "string",
                "description" : "Shared or dedicated web app hosting",
                "enum" : [ "Shared", "Dedicated", "Dynamic" ]
              },
              "instanceNames" : {
                "type" : "array",
                "description" : "Names of all instances in the worker pool (read only)",
                "items" : {
                  "type" : "string"
                }
              },
              "workerCount" : {
                "type" : "integer",
                "description" : "Number of instances in the worker pool",
                "format" : "int32"
              },
              "workerSize" : {
                "type" : "string",
                "description" : "VM size of the worker pool instances"
              },
              "workerSizeId" : {
                "type" : "integer",
                "description" : "Worker size id for referencing this worker pool",
                "format" : "int32"
              }
            }
          },
          "sku" : {
            "$ref" : "#/components/schemas/SkuDescription"
          }
        },
        "description" : "Worker pool of a hostingEnvironment (App Service Environment)",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "WorkerPoolCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to next page of resources"
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of resources",
            "items" : {
              "$ref" : "#/components/schemas/WorkerPool"
            }
          }
        },
        "description" : "Collection of worker pools"
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "API Version",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Subscription Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}