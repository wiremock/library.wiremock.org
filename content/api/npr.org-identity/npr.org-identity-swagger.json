{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "NPR Identity Service",
    "description" : "The entry point to user-specific information",
    "termsOfService" : "https://dev.npr.org/guide/prerequisites/terms-of-use",
    "contact" : {
      "name" : "NPR One Enterprise Team",
      "url" : "https://dev.npr.org",
      "email" : "NPROneEnterprise@npr.org"
    },
    "version" : "2"
  },
  "externalDocs" : {
    "description" : "Learn more at the NPR One Developer Center",
    "url" : "https://dev.npr.org/guide/services/identity"
  },
  "servers" : [ {
    "url" : "https://identity.api.npr.org/"
  } ],
  "paths" : {
    "/v2/following" : {
      "post" : {
        "tags" : [ "identity" ],
        "summary" : "Update the following status of the logged-in user for a particular aggregation",
        "description" : "After a successful call, this returns a User document with an updated list of affiliations.",
        "operationId" : "postFollowing",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A JSON-serialized object which contains data about a user affiliation such as the aggregation ID, affiliation rating, aggregation URL, days since last listen, and following status.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Affiliation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The request was successful",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              }
            }
          },
          "400" : {
            "description" : "A bad request; generally, one or more parameters passed in were incorrect or missing",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "401" : {
            "description" : "The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "429" : {
            "description" : "The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "500" : {
            "description" : "A server error",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "503" : {
            "description" : "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
            "headers" : {
              "Retry-After" : {
                "description" : "The predicted time the system will be back up",
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        },
        "security" : [ {
          "oauth2" : [ "identity.write" ]
        } ]
      }
    },
    "/v2/stations" : {
      "put" : {
        "tags" : [ "identity" ],
        "summary" : "Update the logged-in user's favorite station(s)",
        "description" : "Right now, only the primary station can be changed. Previously selected stations will not be deleted, but the new station will be moved to first in the array.",
        "operationId" : "updateStations",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A JSON-serialized array of station IDs",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer"
                }
              }
            },
            "application/vnd.collection.doc+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "The request was successful",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              }
            }
          },
          "400" : {
            "description" : "A bad request; generally, one or more parameters passed in were incorrect or missing",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "401" : {
            "description" : "The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "429" : {
            "description" : "The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "500" : {
            "description" : "A server error",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "503" : {
            "description" : "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
            "headers" : {
              "Retry-After" : {
                "description" : "The predicted time the system will be back up",
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        },
        "security" : [ {
          "oauth2" : [ "identity.write" ]
        } ]
      }
    },
    "/v2/user" : {
      "get" : {
        "tags" : [ "identity" ],
        "summary" : "Get the latest state information about the logged-in user",
        "description" : "After a successful login, the client should send a `GET` call approximately once an hour to refresh the user data.",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              }
            }
          },
          "401" : {
            "description" : "The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "429" : {
            "description" : "The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "500" : {
            "description" : "A server error",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "503" : {
            "description" : "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
            "headers" : {
              "Retry-After" : {
                "description" : "The predicted time the system will be back up",
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        },
        "security" : [ {
          "oauth2" : [ "identity.readonly" ]
        } ]
      },
      "delete" : {
        "tags" : [ "identity" ],
        "summary" : "Delete the user's account",
        "description" : "Use with caution as some steps are irreverisble. Initiates the user account deletion process, including removal of all user PII and account access.",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              }
            }
          },
          "401" : {
            "description" : "The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "500" : {
            "description" : "A server error",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "503" : {
            "description" : "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
            "headers" : {
              "Retry-After" : {
                "description" : "The predicted time the system will be back up",
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        },
        "security" : [ {
          "oauth2" : [ "identity.write" ]
        } ]
      }
    },
    "/v2/user/inherit" : {
      "post" : {
        "tags" : [ "identity" ],
        "summary" : "Copy listening data from a temporary user account to the logged-in user's account",
        "description" : "This can and should only be used by clients who have access to the `temporary_user` grant type.\n    Third-party developers do not have access to this grant type by default, and will not need this endpoint.",
        "operationId" : "inheritFromTempUser",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "temp_user",
          "in" : "query",
          "description" : "The temporary user's ID before the user registered or logged in",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "The request was successful",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDocument"
                }
              }
            }
          },
          "400" : {
            "description" : "A bad request; generally, one or more parameters passed in were incorrect or missing",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "429" : {
            "description" : "The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "500" : {
            "description" : "A server error",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "The number of remaining requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The number of seconds left in the current period",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Limit" : {
                "description" : "The number of allowed requests in the current period",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          },
          "503" : {
            "description" : "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
            "headers" : {
              "Retry-After" : {
                "description" : "The predicted time the system will be back up",
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              },
              "application/vnd.collection.doc+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        },
        "security" : [ {
          "oauth2" : [ "identity.write" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AbstractCDocLink" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractLink"
        }, {
          "required" : [ "content-type" ],
          "type" : "object",
          "properties" : {
            "content-type" : {
              "type" : "string",
              "description" : "The MIME type of the response of this link"
            }
          }
        } ]
      },
      "AbstractLink" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "The link to be followed",
            "format" : "uri"
          }
        }
      },
      "Affiliation" : {
        "required" : [ "following", "href", "id" ],
        "type" : "object",
        "properties" : {
          "daysSinceLastListen" : {
            "type" : "integer",
            "description" : "The number of days since a user last listened to a story from this aggregation. Absent if user never listened to the aggregation.",
            "format" : "int32"
          },
          "following" : {
            "type" : "boolean",
            "description" : "Whether or not the user is following the aggregation. When changing affiliation status, the client is expected to toggle this value and then send the entire object back.",
            "default" : false
          },
          "href" : {
            "type" : "string",
            "description" : "A link to more details about the program from the NPR Story API"
          },
          "id" : {
            "type" : "string",
            "description" : "A unique identifier for the aggregation (program)"
          },
          "notif_following" : {
            "type" : "array",
            "description" : "The topic in Firebase Cloud Messaging to which the device should subscribe if it supports notifications and the user wants notifications about the podcasts they follow.",
            "items" : {
              "type" : "string"
            }
          },
          "notif_rated" : {
            "type" : "array",
            "description" : "The topic in Firebase Cloud Messaging to which the device should subscribe if it supports notifications and the user wants notifications about the podcasts they have highly rated.",
            "items" : {
              "type" : "string"
            }
          },
          "rating" : {
            "type" : "number",
            "description" : "The user's average rating for this affiliation on a scale of 0-1. Absent if user never listened to the aggregation.",
            "format" : "float"
          },
          "title" : {
            "type" : "string",
            "description" : "The title for the aggregation (program)"
          }
        },
        "description" : "A program (aggregation) that a given user has shown an affiliation with"
      },
      "Algolia" : {
        "required" : [ "apiKey" ],
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "description" : "A search API key for this user"
          }
        },
        "description" : "Parameters for querying the Algolia Search SDK for content"
      },
      "Cohort" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A short ID for this cohort; ignored on a PUT"
          },
          "name" : {
            "type" : "string",
            "description" : "A text string identifying the cohort, useful for metrics; ignored on a PUT"
          },
          "public" : {
            "type" : "string",
            "description" : "For internal use only; represents the current configuration file being used by the Listening Service"
          },
          "test" : {
            "type" : "string",
            "description" : "For internal use only; represents the test configuration file being used by the Listening Service"
          }
        },
        "description" : "An experimental grouping for User Experience A/B Testing"
      },
      "CollectionDocument" : {
        "required" : [ "attributes", "errors", "href", "items", "links", "version" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "object"
          },
          "errors" : {
            "type" : "array",
            "description" : "A list of encountered errors, ignored on POST, PUT",
            "items" : {
              "type" : "object"
            }
          },
          "href" : {
            "type" : "string",
            "description" : "A URL representation of the resource; should generally be ignored by clients unless noted otherwise"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "links" : {
            "type" : "object"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the Collection.Doc+JSON spec being used",
            "default" : "1.0"
          }
        },
        "description" : "Base Collection.Doc+JSON output"
      },
      "Error" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "The error code",
            "format" : "int32"
          },
          "debug" : {
            "type" : "string",
            "description" : "Additional debug information if debug mode is turned on"
          },
          "text" : {
            "type" : "string",
            "description" : "The error description"
          }
        },
        "description" : "A serialized version of any error encountered when processing this request"
      },
      "ErrorDocument" : {
        "description" : "A Collection.doc+JSON representation of an error result from an API call",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CollectionDocument"
        }, {
          "type" : "object",
          "properties" : {
            "attributes" : {
              "type" : "object",
              "description" : "Ignore; will be empty for errors"
            },
            "errors" : {
              "type" : "array",
              "description" : "A list of encountered errors, ignored on POST, PUT",
              "items" : {
                "$ref" : "#/components/schemas/Error"
              }
            },
            "items" : {
              "type" : "array",
              "description" : "Ignore; will be empty for errors",
              "items" : {
                "type" : "object"
              }
            },
            "links" : {
              "type" : "object",
              "description" : "Ignore; will be empty for errors"
            }
          }
        } ]
      },
      "Organization" : {
        "required" : [ "call", "city", "displayName", "id" ],
        "type" : "object",
        "properties" : {
          "call" : {
            "type" : "string",
            "description" : "Station call letters"
          },
          "city" : {
            "type" : "string",
            "description" : "A short description of the station's main market city"
          },
          "displayName" : {
            "type" : "string",
            "description" : "A short displayable text field for the end user, strictly text; ignored on PUT"
          },
          "donationUrl" : {
            "type" : "string",
            "description" : "Station donation page URL"
          },
          "id" : {
            "type" : "string",
            "description" : "Some unique identifier for the organization for the user"
          },
          "logo" : {
            "type" : "string",
            "description" : "Station logo image url"
          },
          "notif_org" : {
            "type" : "array",
            "description" : "The topic in Firebase Cloud Messaging to which the device should subscribe if it supports notifications and the user wants notifications about their localized station.",
            "items" : {
              "type" : "string"
            }
          },
          "serviceId" : {
            "type" : "string",
            "description" : "Some unique identifier for the user's organization's primary service, or null if the org has no services"
          },
          "smallLogo" : {
            "type" : "string",
            "description" : "Station logo image url"
          }
        },
        "description" : "A station that a user has an affiliation with"
      },
      "UserData" : {
        "required" : [ "algolia", "cohort", "id", "organizations" ],
        "type" : "object",
        "properties" : {
          "affiliations" : {
            "type" : "array",
            "description" : "Program(s) that the user has positively interacted with",
            "items" : {
              "$ref" : "#/components/schemas/Affiliation"
            }
          },
          "algolia" : {
            "type" : "array",
            "description" : "Use this information to search Algolia for stories",
            "items" : {
              "$ref" : "#/components/schemas/Algolia"
            }
          },
          "cohort" : {
            "$ref" : "#/components/schemas/Cohort"
          },
          "email" : {
            "type" : "string",
            "description" : "The user's email address"
          },
          "firstName" : {
            "type" : "string",
            "description" : "The user's first name"
          },
          "id" : {
            "type" : "string",
            "description" : "Some unique identifier for the user"
          },
          "lastName" : {
            "type" : "string",
            "description" : "The user's last name"
          },
          "organizations" : {
            "type" : "array",
            "description" : "User's chosen NPR Member Station(s)",
            "items" : {
              "$ref" : "#/components/schemas/Organization"
            }
          },
          "totalListeningTime" : {
            "type" : "string",
            "description" : "Internal use only. User's total listening time across all platforms."
          }
        },
        "description" : "Object; see description of a user object below"
      },
      "UserDocument" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CollectionDocument"
        }, {
          "type" : "object",
          "properties" : {
            "attributes" : {
              "$ref" : "#/components/schemas/UserData"
            },
            "items" : {
              "type" : "array",
              "description" : "Not used, ignored on a PUT",
              "items" : {
                "type" : "object"
              }
            },
            "links" : {
              "type" : "object",
              "description" : "A list of links, not used by the Identity Service; ignored on a PUT"
            }
          }
        } ]
      }
    },
    "responses" : {
      "400WithDocument" : {
        "description" : "A bad request; generally, one or more parameters passed in were incorrect or missing",
        "headers" : {
          "X-RateLimit-Remaining" : {
            "description" : "The number of remaining requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The number of seconds left in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Limit" : {
            "description" : "The number of allowed requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          },
          "application/vnd.collection.doc+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          }
        }
      },
      "401WithDocument" : {
        "description" : "The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          },
          "application/vnd.collection.doc+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          }
        }
      },
      "404WithDocument" : {
        "description" : "The resource with the requested ID could not be found, and the server was unable to complete the request.",
        "headers" : {
          "X-RateLimit-Remaining" : {
            "description" : "The number of remaining requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The number of seconds left in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Limit" : {
            "description" : "The number of allowed requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          },
          "application/vnd.collection.doc+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          }
        }
      },
      "429WithDocument" : {
        "description" : "The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps.",
        "headers" : {
          "X-RateLimit-Remaining" : {
            "description" : "The number of remaining requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The number of seconds left in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Limit" : {
            "description" : "The number of allowed requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          },
          "application/vnd.collection.doc+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          }
        }
      },
      "500WithDocument" : {
        "description" : "A server error",
        "headers" : {
          "X-RateLimit-Remaining" : {
            "description" : "The number of remaining requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The number of seconds left in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Limit" : {
            "description" : "The number of allowed requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          },
          "application/vnd.collection.doc+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          }
        }
      },
      "503WithDocument" : {
        "description" : "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
        "headers" : {
          "Retry-After" : {
            "description" : "The predicted time the system will be back up",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          },
          "application/vnd.collection.doc+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorDocument"
            }
          }
        }
      },
      "IdentitySuccess" : {
        "description" : "The request was successful",
        "headers" : {
          "X-RateLimit-Remaining" : {
            "description" : "The number of remaining requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The number of seconds left in the current period",
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Limit" : {
            "description" : "The number of allowed requests in the current period",
            "schema" : {
              "type" : "integer"
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserDocument"
            }
          },
          "application/vnd.collection.doc+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserDocument"
            }
          }
        }
      }
    },
    "parameters" : {
      "Authorization" : {
        "name" : "Authorization",
        "in" : "header",
        "description" : "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "X-Advertising-ID" : {
        "name" : "X-Advertising-ID",
        "in" : "header",
        "description" : "A device-specific advertising identifier, if possible. Apple's IDFA is an example.",
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "oauth2" : {
        "type" : "oauth2"
      }
    }
  }
}