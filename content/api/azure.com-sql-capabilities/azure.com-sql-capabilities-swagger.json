{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SqlManagementClient",
    "description" : "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "version" : "2017-10-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/capabilities" : {
      "get" : {
        "tags" : [ "LocationCapabilities" ],
        "description" : "Gets the subscription capabilities available for the specified location.",
        "operationId" : "Capabilities_ListByLocation",
        "parameters" : [ {
          "name" : "locationName",
          "in" : "path",
          "description" : "The location name whose capabilities are retrieved.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "If specified, restricts the response to only include the selected item.",
          "schema" : {
            "type" : "string",
            "enum" : [ "supportedEditions", "supportedElasticPoolEditions", "supportedManagedInstanceVersions" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the subscription location capabilities.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationCapabilities"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidLocation - An invalid location was specified."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "EditionCapability" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The database edition name.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedServiceLevelObjectives" : {
            "type" : "array",
            "description" : "The list of supported service objectives for the edition.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ServiceObjectiveCapability"
            }
          },
          "zoneRedundant" : {
            "type" : "boolean",
            "description" : "Whether or not zone redundancy is supported for the edition.",
            "readOnly" : true
          }
        },
        "description" : "The edition capability."
      },
      "ElasticPoolEditionCapability" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The elastic pool edition name.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedElasticPoolPerformanceLevels" : {
            "type" : "array",
            "description" : "The list of supported elastic pool DTU levels for the edition.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ElasticPoolPerformanceLevelCapability"
            }
          },
          "zoneRedundant" : {
            "type" : "boolean",
            "description" : "Whether or not zone redundancy is supported for the edition.",
            "readOnly" : true
          }
        },
        "description" : "The elastic pool edition capability."
      },
      "ElasticPoolPerDatabaseMaxPerformanceLevelCapability" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "number",
            "description" : "The maximum performance level per database.",
            "format" : "double",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedPerDatabaseMinPerformanceLevels" : {
            "type" : "array",
            "description" : "The list of supported min database performance levels.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ElasticPoolPerDatabaseMinPerformanceLevelCapability"
            }
          },
          "unit" : {
            "type" : "string",
            "description" : "Unit type used to measure performance level.",
            "readOnly" : true,
            "enum" : [ "DTU", "VCores" ]
          }
        },
        "description" : "The max per-database performance level capability."
      },
      "ElasticPoolPerDatabaseMinPerformanceLevelCapability" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "number",
            "description" : "The minimum performance level per database.",
            "format" : "double",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "unit" : {
            "type" : "string",
            "description" : "Unit type used to measure performance level.",
            "readOnly" : true,
            "enum" : [ "DTU", "VCores" ]
          }
        },
        "description" : "The minimum per-database performance level capability."
      },
      "ElasticPoolPerformanceLevelCapability" : {
        "type" : "object",
        "properties" : {
          "includedMaxSize" : {
            "$ref" : "#/components/schemas/MaxSizeCapability"
          },
          "maxDatabaseCount" : {
            "type" : "integer",
            "description" : "The maximum number of databases supported.",
            "format" : "int32",
            "readOnly" : true
          },
          "performanceLevel" : {
            "$ref" : "#/components/schemas/PerformanceLevelCapability"
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "sku" : {
            "required" : [ "name" ],
            "type" : "object",
            "properties" : {
              "capacity" : {
                "type" : "integer",
                "description" : "Capacity of the particular SKU.",
                "format" : "int32"
              },
              "family" : {
                "type" : "string",
                "description" : "If the service has different generations of hardware, for the same SKU, then that can be captured here."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the SKU, typically, a letter + Number code, e.g. P3."
              },
              "size" : {
                "type" : "string",
                "description" : "Size of the particular SKU"
              },
              "tier" : {
                "type" : "string",
                "description" : "The tier or edition of the particular SKU, e.g. Basic, Premium."
              }
            },
            "description" : "An ARM Resource SKU."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedLicenseTypes" : {
            "type" : "array",
            "description" : "List of supported license types.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/LicenseTypeCapability"
            }
          },
          "supportedMaxSizes" : {
            "type" : "array",
            "description" : "The list of supported max sizes.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MaxSizeRangeCapability"
            }
          },
          "supportedPerDatabaseMaxPerformanceLevels" : {
            "type" : "array",
            "description" : "The list of supported per database max performance levels.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
            }
          },
          "supportedPerDatabaseMaxSizes" : {
            "type" : "array",
            "description" : "The list of supported per database max sizes.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MaxSizeRangeCapability"
            }
          }
        },
        "description" : "The Elastic Pool performance level capability."
      },
      "LicenseTypeCapability" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "License type identifier.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          }
        },
        "description" : "The license type capability"
      },
      "LocationCapabilities" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The location name.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedManagedInstanceVersions" : {
            "type" : "array",
            "description" : "The list of supported managed instance versions.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ManagedInstanceVersionCapability"
            }
          },
          "supportedServerVersions" : {
            "type" : "array",
            "description" : "The list of supported server versions.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ServerVersionCapability"
            }
          }
        },
        "description" : "The location capability."
      },
      "LogSizeCapability" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "description" : "The log size limit (see 'unit' for the units).",
            "format" : "int32",
            "readOnly" : true
          },
          "unit" : {
            "type" : "string",
            "description" : "The units that the limit is expressed in.",
            "readOnly" : true,
            "enum" : [ "Megabytes", "Gigabytes", "Terabytes", "Petabytes", "Percent" ]
          }
        },
        "description" : "The log size capability."
      },
      "ManagedInstanceEditionCapability" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The managed server version name.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedFamilies" : {
            "type" : "array",
            "description" : "The supported families.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ManagedInstanceFamilyCapability"
            }
          }
        },
        "description" : "The managed server capability"
      },
      "ManagedInstanceFamilyCapability" : {
        "type" : "object",
        "properties" : {
          "includedMaxSize" : {
            "$ref" : "#/components/schemas/MaxSizeCapability"
          },
          "name" : {
            "type" : "string",
            "description" : "Family name.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "sku" : {
            "type" : "string",
            "description" : "SKU name.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedLicenseTypes" : {
            "type" : "array",
            "description" : "List of supported license types.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/LicenseTypeCapability"
            }
          },
          "supportedStorageSizes" : {
            "type" : "array",
            "description" : "Storage size ranges.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MaxSizeRangeCapability"
            }
          },
          "supportedVcoresValues" : {
            "type" : "array",
            "description" : "List of supported virtual cores values.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ManagedInstanceVcoresCapability"
            }
          }
        },
        "description" : "The managed server family capability."
      },
      "ManagedInstanceVcoresCapability" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The virtual cores identifier.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "value" : {
            "type" : "integer",
            "description" : "The virtual cores value.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "The managed instance virtual cores capability."
      },
      "ManagedInstanceVersionCapability" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The server version name.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedEditions" : {
            "type" : "array",
            "description" : "The list of supported managed instance editions.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ManagedInstanceEditionCapability"
            }
          }
        },
        "description" : "The managed instance capability"
      },
      "MaxSizeCapability" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "description" : "The maximum size limit (see 'unit' for the units).",
            "format" : "int32",
            "readOnly" : true
          },
          "unit" : {
            "type" : "string",
            "description" : "The units that the limit is expressed in.",
            "readOnly" : true,
            "enum" : [ "Megabytes", "Gigabytes", "Terabytes", "Petabytes" ]
          }
        },
        "description" : "The maximum size capability."
      },
      "MaxSizeRangeCapability" : {
        "type" : "object",
        "properties" : {
          "logSize" : {
            "$ref" : "#/components/schemas/LogSizeCapability"
          },
          "maxValue" : {
            "$ref" : "#/components/schemas/MaxSizeCapability"
          },
          "minValue" : {
            "$ref" : "#/components/schemas/MaxSizeCapability"
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "scaleSize" : {
            "$ref" : "#/components/schemas/MaxSizeCapability"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          }
        },
        "description" : "The maximum size range capability."
      },
      "PerformanceLevelCapability" : {
        "type" : "object",
        "properties" : {
          "unit" : {
            "type" : "string",
            "description" : "Unit type used to measure performance level.",
            "readOnly" : true,
            "enum" : [ "DTU", "VCores" ]
          },
          "value" : {
            "type" : "number",
            "description" : "Performance level value.",
            "format" : "double",
            "readOnly" : true
          }
        },
        "description" : "The performance level capability."
      },
      "ServerVersionCapability" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The server version name.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedEditions" : {
            "type" : "array",
            "description" : "The list of supported database editions.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/EditionCapability"
            }
          },
          "supportedElasticPoolEditions" : {
            "type" : "array",
            "description" : "The list of supported elastic pool editions.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ElasticPoolEditionCapability"
            }
          }
        },
        "description" : "The server capability"
      },
      "ServiceObjectiveCapability" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the service objective.",
            "format" : "uuid",
            "readOnly" : true
          },
          "includedMaxSize" : {
            "$ref" : "#/components/schemas/MaxSizeCapability"
          },
          "name" : {
            "type" : "string",
            "description" : "The service objective name.",
            "readOnly" : true
          },
          "performanceLevel" : {
            "$ref" : "#/components/schemas/PerformanceLevelCapability"
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the capability not being available."
          },
          "sku" : {
            "required" : [ "name" ],
            "type" : "object",
            "properties" : {
              "capacity" : {
                "type" : "integer",
                "description" : "Capacity of the particular SKU.",
                "format" : "int32"
              },
              "family" : {
                "type" : "string",
                "description" : "If the service has different generations of hardware, for the same SKU, then that can be captured here."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the SKU, typically, a letter + Number code, e.g. P3."
              },
              "size" : {
                "type" : "string",
                "description" : "Size of the particular SKU"
              },
              "tier" : {
                "type" : "string",
                "description" : "The tier or edition of the particular SKU, e.g. Basic, Premium."
              }
            },
            "description" : "An ARM Resource SKU."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the capability.",
            "readOnly" : true,
            "enum" : [ "Visible", "Available", "Default", "Disabled" ]
          },
          "supportedLicenseTypes" : {
            "type" : "array",
            "description" : "List of supported license types.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/LicenseTypeCapability"
            }
          },
          "supportedMaxSizes" : {
            "type" : "array",
            "description" : "The list of supported maximum database sizes.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MaxSizeRangeCapability"
            }
          }
        },
        "description" : "The service objectives capability."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for the request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "BlobAuditingPolicyNameParameter" : {
        "name" : "blobAuditingPolicyName",
        "in" : "path",
        "description" : "The name of the blob auditing policy.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "default" ]
        }
      },
      "DatabaseNameParameter" : {
        "name" : "databaseName",
        "in" : "path",
        "description" : "The name of the database.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ManagedInstanceNameParameter" : {
        "name" : "managedInstanceName",
        "in" : "path",
        "description" : "The name of the managed instance.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ServerNameParameter" : {
        "name" : "serverName",
        "in" : "path",
        "description" : "The name of the server.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SqlVirtualMachineContainerNameParameter" : {
        "name" : "sqlVirtualMachineContainerName",
        "in" : "path",
        "description" : "The name of the SqlVirtualMachineContainer.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SqlVirtualMachineInstanceNameParameter" : {
        "name" : "sqlVirtualMachineInstanceName",
        "in" : "path",
        "description" : "The name of the SqlVirtualMachineInstance.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription ID that identifies an Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "VirtualClusterNameParameter" : {
        "name" : "virtualClusterName",
        "in" : "path",
        "description" : "The name of the virtual cluster.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}