{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ApiManagementClient",
    "description" : "Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.",
    "version" : "2019-12-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis" : {
      "get" : {
        "tags" : [ "Api" ],
        "description" : "Lists all APIs of the API Management service instance.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis"
        },
        "operationId" : "Api_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "Include tags in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expandApiVersionSet",
          "in" : "query",
          "description" : "Include full ApiVersionSet resource in response",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Paged Result response of Apis.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any.",
                      "readOnly" : true
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "path" ],
                            "type" : "object",
                            "properties" : {
                              "apiVersionSet" : {
                                "type" : "object",
                                "properties" : {
                                  "description" : {
                                    "type" : "string",
                                    "description" : "Description of API Version Set."
                                  },
                                  "id" : {
                                    "type" : "string",
                                    "description" : "Identifier for existing API Version Set. Omit this value to create a new Version Set."
                                  },
                                  "name" : {
                                    "type" : "string",
                                    "description" : "The display Name of the API Version Set."
                                  },
                                  "versionHeaderName" : {
                                    "type" : "string",
                                    "description" : "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
                                  },
                                  "versionQueryName" : {
                                    "type" : "string",
                                    "description" : "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
                                  },
                                  "versioningScheme" : {
                                    "type" : "string",
                                    "description" : "An value that determines where the API Version identifer will be located in a HTTP request.",
                                    "enum" : [ "Segment", "Query", "Header" ]
                                  }
                                },
                                "description" : "An API Version Set contains the common configuration for a set of API Versions relating "
                              },
                              "displayName" : {
                                "maxLength" : 300,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "API name. Must be 1 to 300 characters long."
                              },
                              "path" : {
                                "maxLength" : 400,
                                "minLength" : 0,
                                "type" : "string",
                                "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                              },
                              "protocols" : {
                                "type" : "array",
                                "description" : "Describes on which protocols the operations in this API can be invoked.",
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "http", "https" ]
                                }
                              },
                              "serviceUrl" : {
                                "maxLength" : 2000,
                                "minLength" : 0,
                                "type" : "string",
                                "description" : "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long."
                              },
                              "sourceApiId" : {
                                "type" : "string",
                                "description" : "API identifier of the source API."
                              }
                            },
                            "description" : "Api Entity Properties"
                          }
                        },
                        "description" : "Api details."
                      }
                    }
                  },
                  "description" : "Paged Api list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}" : {
      "get" : {
        "tags" : [ "Api" ],
        "description" : "Gets the details of the API specified by its identifier.",
        "operationId" : "Api_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified API entity.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "path" ],
                      "type" : "object",
                      "properties" : {
                        "apiVersionSet" : {
                          "type" : "object",
                          "properties" : {
                            "description" : {
                              "type" : "string",
                              "description" : "Description of API Version Set."
                            },
                            "id" : {
                              "type" : "string",
                              "description" : "Identifier for existing API Version Set. Omit this value to create a new Version Set."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "The display Name of the API Version Set."
                            },
                            "versionHeaderName" : {
                              "type" : "string",
                              "description" : "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
                            },
                            "versionQueryName" : {
                              "type" : "string",
                              "description" : "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
                            },
                            "versioningScheme" : {
                              "type" : "string",
                              "description" : "An value that determines where the API Version identifer will be located in a HTTP request.",
                              "enum" : [ "Segment", "Query", "Header" ]
                            }
                          },
                          "description" : "An API Version Set contains the common configuration for a set of API Versions relating "
                        },
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "API name. Must be 1 to 300 characters long."
                        },
                        "path" : {
                          "maxLength" : 400,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                        },
                        "protocols" : {
                          "type" : "array",
                          "description" : "Describes on which protocols the operations in this API can be invoked.",
                          "items" : {
                            "type" : "string",
                            "enum" : [ "http", "https" ]
                          }
                        },
                        "serviceUrl" : {
                          "maxLength" : 2000,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long."
                        },
                        "sourceApiId" : {
                          "type" : "string",
                          "description" : "API identifier of the source API."
                        }
                      },
                      "description" : "Api Entity Properties"
                    }
                  },
                  "description" : "Api details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              },
              "application/vnd.sun.wadl+xml" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "path" ],
                      "type" : "object",
                      "properties" : {
                        "apiVersionSet" : {
                          "type" : "object",
                          "properties" : {
                            "description" : {
                              "type" : "string",
                              "description" : "Description of API Version Set."
                            },
                            "id" : {
                              "type" : "string",
                              "description" : "Identifier for existing API Version Set. Omit this value to create a new Version Set."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "The display Name of the API Version Set."
                            },
                            "versionHeaderName" : {
                              "type" : "string",
                              "description" : "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
                            },
                            "versionQueryName" : {
                              "type" : "string",
                              "description" : "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
                            },
                            "versioningScheme" : {
                              "type" : "string",
                              "description" : "An value that determines where the API Version identifer will be located in a HTTP request.",
                              "enum" : [ "Segment", "Query", "Header" ]
                            }
                          },
                          "description" : "An API Version Set contains the common configuration for a set of API Versions relating "
                        },
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "API name. Must be 1 to 300 characters long."
                        },
                        "path" : {
                          "maxLength" : 400,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                        },
                        "protocols" : {
                          "type" : "array",
                          "description" : "Describes on which protocols the operations in this API can be invoked.",
                          "items" : {
                            "type" : "string",
                            "enum" : [ "http", "https" ]
                          }
                        },
                        "serviceUrl" : {
                          "maxLength" : 2000,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long."
                        },
                        "sourceApiId" : {
                          "type" : "string",
                          "description" : "API identifier of the source API."
                        }
                      },
                      "description" : "Api Entity Properties"
                    }
                  },
                  "description" : "Api details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              },
              "application/vnd.swagger.doc+json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "path" ],
                      "type" : "object",
                      "properties" : {
                        "apiVersionSet" : {
                          "type" : "object",
                          "properties" : {
                            "description" : {
                              "type" : "string",
                              "description" : "Description of API Version Set."
                            },
                            "id" : {
                              "type" : "string",
                              "description" : "Identifier for existing API Version Set. Omit this value to create a new Version Set."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "The display Name of the API Version Set."
                            },
                            "versionHeaderName" : {
                              "type" : "string",
                              "description" : "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
                            },
                            "versionQueryName" : {
                              "type" : "string",
                              "description" : "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
                            },
                            "versioningScheme" : {
                              "type" : "string",
                              "description" : "An value that determines where the API Version identifer will be located in a HTTP request.",
                              "enum" : [ "Segment", "Query", "Header" ]
                            }
                          },
                          "description" : "An API Version Set contains the common configuration for a set of API Versions relating "
                        },
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "API name. Must be 1 to 300 characters long."
                        },
                        "path" : {
                          "maxLength" : 400,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                        },
                        "protocols" : {
                          "type" : "array",
                          "description" : "Describes on which protocols the operations in this API can be invoked.",
                          "items" : {
                            "type" : "string",
                            "enum" : [ "http", "https" ]
                          }
                        },
                        "serviceUrl" : {
                          "maxLength" : 2000,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long."
                        },
                        "sourceApiId" : {
                          "type" : "string",
                          "description" : "API identifier of the source API."
                        }
                      },
                      "description" : "Api Entity Properties"
                    }
                  },
                  "description" : "Api details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              },
              "application/wsdl+xml" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "path" ],
                      "type" : "object",
                      "properties" : {
                        "apiVersionSet" : {
                          "type" : "object",
                          "properties" : {
                            "description" : {
                              "type" : "string",
                              "description" : "Description of API Version Set."
                            },
                            "id" : {
                              "type" : "string",
                              "description" : "Identifier for existing API Version Set. Omit this value to create a new Version Set."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "The display Name of the API Version Set."
                            },
                            "versionHeaderName" : {
                              "type" : "string",
                              "description" : "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
                            },
                            "versionQueryName" : {
                              "type" : "string",
                              "description" : "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
                            },
                            "versioningScheme" : {
                              "type" : "string",
                              "description" : "An value that determines where the API Version identifer will be located in a HTTP request.",
                              "enum" : [ "Segment", "Query", "Header" ]
                            }
                          },
                          "description" : "An API Version Set contains the common configuration for a set of API Versions relating "
                        },
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "API name. Must be 1 to 300 characters long."
                        },
                        "path" : {
                          "maxLength" : 400,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                        },
                        "protocols" : {
                          "type" : "array",
                          "description" : "Describes on which protocols the operations in this API can be invoked.",
                          "items" : {
                            "type" : "string",
                            "enum" : [ "http", "https" ]
                          }
                        },
                        "serviceUrl" : {
                          "maxLength" : 2000,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long."
                        },
                        "sourceApiId" : {
                          "type" : "string",
                          "description" : "API identifier of the source API."
                        }
                      },
                      "description" : "Api Entity Properties"
                    }
                  },
                  "description" : "Api details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              },
              "application/vnd.oai.openapi" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "path" ],
                      "type" : "object",
                      "properties" : {
                        "apiVersionSet" : {
                          "type" : "object",
                          "properties" : {
                            "description" : {
                              "type" : "string",
                              "description" : "Description of API Version Set."
                            },
                            "id" : {
                              "type" : "string",
                              "description" : "Identifier for existing API Version Set. Omit this value to create a new Version Set."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "The display Name of the API Version Set."
                            },
                            "versionHeaderName" : {
                              "type" : "string",
                              "description" : "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
                            },
                            "versionQueryName" : {
                              "type" : "string",
                              "description" : "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
                            },
                            "versioningScheme" : {
                              "type" : "string",
                              "description" : "An value that determines where the API Version identifer will be located in a HTTP request.",
                              "enum" : [ "Segment", "Query", "Header" ]
                            }
                          },
                          "description" : "An API Version Set contains the common configuration for a set of API Versions relating "
                        },
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "API name. Must be 1 to 300 characters long."
                        },
                        "path" : {
                          "maxLength" : 400,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                        },
                        "protocols" : {
                          "type" : "array",
                          "description" : "Describes on which protocols the operations in this API can be invoked.",
                          "items" : {
                            "type" : "string",
                            "enum" : [ "http", "https" ]
                          }
                        },
                        "serviceUrl" : {
                          "maxLength" : 2000,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long."
                        },
                        "sourceApiId" : {
                          "type" : "string",
                          "description" : "API identifier of the source API."
                        }
                      },
                      "description" : "Api Entity Properties"
                    }
                  },
                  "description" : "Api details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              },
              "application/vnd.oai.openapi+json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "path" ],
                      "type" : "object",
                      "properties" : {
                        "apiVersionSet" : {
                          "type" : "object",
                          "properties" : {
                            "description" : {
                              "type" : "string",
                              "description" : "Description of API Version Set."
                            },
                            "id" : {
                              "type" : "string",
                              "description" : "Identifier for existing API Version Set. Omit this value to create a new Version Set."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "The display Name of the API Version Set."
                            },
                            "versionHeaderName" : {
                              "type" : "string",
                              "description" : "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
                            },
                            "versionQueryName" : {
                              "type" : "string",
                              "description" : "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
                            },
                            "versioningScheme" : {
                              "type" : "string",
                              "description" : "An value that determines where the API Version identifer will be located in a HTTP request.",
                              "enum" : [ "Segment", "Query", "Header" ]
                            }
                          },
                          "description" : "An API Version Set contains the common configuration for a set of API Versions relating "
                        },
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "API name. Must be 1 to 300 characters long."
                        },
                        "path" : {
                          "maxLength" : 400,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                        },
                        "protocols" : {
                          "type" : "array",
                          "description" : "Describes on which protocols the operations in this API can be invoked.",
                          "items" : {
                            "type" : "string",
                            "enum" : [ "http", "https" ]
                          }
                        },
                        "serviceUrl" : {
                          "maxLength" : 2000,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long."
                        },
                        "sourceApiId" : {
                          "type" : "string",
                          "description" : "API identifier of the source API."
                        }
                      },
                      "description" : "Api Entity Properties"
                    }
                  },
                  "description" : "Api details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              },
              "application/vnd.sun.wadl+xml" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              },
              "application/vnd.swagger.doc+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              },
              "application/wsdl+xml" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              },
              "application/vnd.oai.openapi" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              },
              "application/vnd.oai.openapi+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Api" ],
        "description" : "Creates new or updates existing specified API of the API Management service instance.",
        "operationId" : "Api_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create or update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "apiType" : {
                        "type" : "string",
                        "description" : "Type of Api to create. \n * `http` creates a SOAP to REST API \n * `soap` creates a SOAP pass-through API .",
                        "enum" : [ "http", "soap" ]
                      },
                      "format" : {
                        "type" : "string",
                        "description" : "Format of the Content in which the API is getting imported.",
                        "enum" : [ "wadl-xml", "wadl-link-json", "swagger-json", "swagger-link-json", "wsdl", "wsdl-link", "openapi", "openapi+json", "openapi-link", "openapi+json-link" ]
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Content value when Importing an API."
                      },
                      "wsdlSelector" : {
                        "type" : "object",
                        "properties" : {
                          "wsdlEndpointName" : {
                            "type" : "string",
                            "description" : "Name of endpoint(port) to import from WSDL"
                          },
                          "wsdlServiceName" : {
                            "type" : "string",
                            "description" : "Name of service to import from WSDL"
                          }
                        },
                        "description" : "Criteria to limit import of WSDL to a subset of the document."
                      }
                    },
                    "description" : "Api Create or Update Properties."
                  }
                },
                "description" : "API Create or Update Parameters."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "API was successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "path" ],
                      "type" : "object",
                      "properties" : {
                        "apiVersionSet" : {
                          "type" : "object",
                          "properties" : {
                            "description" : {
                              "type" : "string",
                              "description" : "Description of API Version Set."
                            },
                            "id" : {
                              "type" : "string",
                              "description" : "Identifier for existing API Version Set. Omit this value to create a new Version Set."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "The display Name of the API Version Set."
                            },
                            "versionHeaderName" : {
                              "type" : "string",
                              "description" : "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
                            },
                            "versionQueryName" : {
                              "type" : "string",
                              "description" : "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
                            },
                            "versioningScheme" : {
                              "type" : "string",
                              "description" : "An value that determines where the API Version identifer will be located in a HTTP request.",
                              "enum" : [ "Segment", "Query", "Header" ]
                            }
                          },
                          "description" : "An API Version Set contains the common configuration for a set of API Versions relating "
                        },
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "API name. Must be 1 to 300 characters long."
                        },
                        "path" : {
                          "maxLength" : 400,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                        },
                        "protocols" : {
                          "type" : "array",
                          "description" : "Describes on which protocols the operations in this API can be invoked.",
                          "items" : {
                            "type" : "string",
                            "enum" : [ "http", "https" ]
                          }
                        },
                        "serviceUrl" : {
                          "maxLength" : 2000,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long."
                        },
                        "sourceApiId" : {
                          "type" : "string",
                          "description" : "API identifier of the source API."
                        }
                      },
                      "description" : "Api Entity Properties"
                    }
                  },
                  "description" : "Api details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "API was successfully created.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "path" ],
                      "type" : "object",
                      "properties" : {
                        "apiVersionSet" : {
                          "type" : "object",
                          "properties" : {
                            "description" : {
                              "type" : "string",
                              "description" : "Description of API Version Set."
                            },
                            "id" : {
                              "type" : "string",
                              "description" : "Identifier for existing API Version Set. Omit this value to create a new Version Set."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "The display Name of the API Version Set."
                            },
                            "versionHeaderName" : {
                              "type" : "string",
                              "description" : "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
                            },
                            "versionQueryName" : {
                              "type" : "string",
                              "description" : "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
                            },
                            "versioningScheme" : {
                              "type" : "string",
                              "description" : "An value that determines where the API Version identifer will be located in a HTTP request.",
                              "enum" : [ "Segment", "Query", "Header" ]
                            }
                          },
                          "description" : "An API Version Set contains the common configuration for a set of API Versions relating "
                        },
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "API name. Must be 1 to 300 characters long."
                        },
                        "path" : {
                          "maxLength" : 400,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                        },
                        "protocols" : {
                          "type" : "array",
                          "description" : "Describes on which protocols the operations in this API can be invoked.",
                          "items" : {
                            "type" : "string",
                            "enum" : [ "http", "https" ]
                          }
                        },
                        "serviceUrl" : {
                          "maxLength" : 2000,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long."
                        },
                        "sourceApiId" : {
                          "type" : "string",
                          "description" : "API identifier of the source API."
                        }
                      },
                      "description" : "Api Entity Properties"
                    }
                  },
                  "description" : "Api details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Request to create or update API was accepted. Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Api" ],
        "description" : "Deletes the specified API of the API Management service instance.",
        "operationId" : "Api_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "deleteRevisions",
          "in" : "query",
          "description" : "Delete all revisions of the Api.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The API was successfully deleted."
          },
          "204" : {
            "description" : "The API was successfully deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Api" ],
        "description" : "Gets the entity state (Etag) version of the API specified by its identifier.",
        "operationId" : "Api_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Specified API entity exists and current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Api" ],
        "description" : "Updates the specified API of the API Management service instance.",
        "operationId" : "Api_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "API Update Contract parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "displayName" : {
                        "maxLength" : 300,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "API name."
                      },
                      "path" : {
                        "maxLength" : 400,
                        "minLength" : 0,
                        "type" : "string",
                        "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                      },
                      "protocols" : {
                        "type" : "array",
                        "description" : "Describes on which protocols the operations in this API can be invoked.",
                        "items" : {
                          "type" : "string",
                          "enum" : [ "http", "https" ]
                        }
                      },
                      "serviceUrl" : {
                        "maxLength" : 2000,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Absolute URL of the backend service implementing this API."
                      }
                    },
                    "description" : "API update contract properties."
                  }
                },
                "description" : "API update contract details."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The API was successfully updated."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics" : {
      "get" : {
        "tags" : [ "ApiDiagnostic" ],
        "description" : "Lists all diagnostics of an API.",
        "operationId" : "ApiDiagnostic_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Paged Result response of diagnostics for an API.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "loggerId" ],
                            "type" : "object",
                            "properties" : {
                              "alwaysLog" : {
                                "type" : "string",
                                "description" : "Specifies for what type of messages sampling settings should not apply.",
                                "enum" : [ "allErrors" ]
                              },
                              "backend" : {
                                "type" : "object",
                                "properties" : {
                                  "request" : {
                                    "type" : "object",
                                    "properties" : {
                                      "body" : {
                                        "type" : "object",
                                        "properties" : {
                                          "bytes" : {
                                            "maximum" : 8192,
                                            "type" : "integer",
                                            "description" : "Number of request body bytes to log.",
                                            "format" : "int32"
                                          }
                                        },
                                        "description" : "Body logging settings."
                                      },
                                      "headers" : {
                                        "type" : "array",
                                        "description" : "Array of HTTP Headers to log.",
                                        "items" : {
                                          "type" : "string"
                                        }
                                      }
                                    },
                                    "description" : "Http message diagnostic settings."
                                  },
                                  "response" : {
                                    "type" : "object",
                                    "properties" : {
                                      "body" : {
                                        "type" : "object",
                                        "properties" : {
                                          "bytes" : {
                                            "maximum" : 8192,
                                            "type" : "integer",
                                            "description" : "Number of request body bytes to log.",
                                            "format" : "int32"
                                          }
                                        },
                                        "description" : "Body logging settings."
                                      },
                                      "headers" : {
                                        "type" : "array",
                                        "description" : "Array of HTTP Headers to log.",
                                        "items" : {
                                          "type" : "string"
                                        }
                                      }
                                    },
                                    "description" : "Http message diagnostic settings."
                                  }
                                },
                                "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                              },
                              "frontend" : {
                                "type" : "object",
                                "properties" : {
                                  "request" : {
                                    "type" : "object",
                                    "properties" : {
                                      "body" : {
                                        "type" : "object",
                                        "properties" : {
                                          "bytes" : {
                                            "maximum" : 8192,
                                            "type" : "integer",
                                            "description" : "Number of request body bytes to log.",
                                            "format" : "int32"
                                          }
                                        },
                                        "description" : "Body logging settings."
                                      },
                                      "headers" : {
                                        "type" : "array",
                                        "description" : "Array of HTTP Headers to log.",
                                        "items" : {
                                          "type" : "string"
                                        }
                                      }
                                    },
                                    "description" : "Http message diagnostic settings."
                                  },
                                  "response" : {
                                    "type" : "object",
                                    "properties" : {
                                      "body" : {
                                        "type" : "object",
                                        "properties" : {
                                          "bytes" : {
                                            "maximum" : 8192,
                                            "type" : "integer",
                                            "description" : "Number of request body bytes to log.",
                                            "format" : "int32"
                                          }
                                        },
                                        "description" : "Body logging settings."
                                      },
                                      "headers" : {
                                        "type" : "array",
                                        "description" : "Array of HTTP Headers to log.",
                                        "items" : {
                                          "type" : "string"
                                        }
                                      }
                                    },
                                    "description" : "Http message diagnostic settings."
                                  }
                                },
                                "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                              },
                              "httpCorrelationProtocol" : {
                                "type" : "string",
                                "description" : "Sets correlation protocol to use for Application Insights diagnostics.",
                                "enum" : [ "None", "Legacy", "W3C" ]
                              },
                              "logClientIp" : {
                                "type" : "boolean",
                                "description" : "Log the ClientIP. Default is false."
                              },
                              "loggerId" : {
                                "type" : "string",
                                "description" : "Resource Id of a target logger."
                              },
                              "sampling" : {
                                "type" : "object",
                                "properties" : {
                                  "percentage" : {
                                    "maximum" : 100,
                                    "minimum" : 0,
                                    "type" : "number",
                                    "description" : "Rate of sampling for fixed-rate sampling.",
                                    "format" : "double"
                                  },
                                  "samplingType" : {
                                    "type" : "string",
                                    "description" : "Sampling type.",
                                    "enum" : [ "fixed" ]
                                  }
                                },
                                "description" : "Sampling settings for Diagnostic."
                              },
                              "verbosity" : {
                                "type" : "string",
                                "description" : "The verbosity level applied to traces emitted by trace policies.",
                                "enum" : [ "verbose", "information", "error" ]
                              }
                            },
                            "description" : "Diagnostic Entity Properties"
                          }
                        },
                        "description" : "Diagnostic details."
                      }
                    }
                  },
                  "description" : "Paged Diagnostic list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}" : {
      "get" : {
        "tags" : [ "ApiDiagnostic" ],
        "description" : "Gets the details of the Diagnostic for an API specified by its identifier.",
        "operationId" : "ApiDiagnostic_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "diagnosticId",
          "in" : "path",
          "description" : "Diagnostic identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified Diagnostic entity.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "loggerId" ],
                      "type" : "object",
                      "properties" : {
                        "alwaysLog" : {
                          "type" : "string",
                          "description" : "Specifies for what type of messages sampling settings should not apply.",
                          "enum" : [ "allErrors" ]
                        },
                        "backend" : {
                          "type" : "object",
                          "properties" : {
                            "request" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            },
                            "response" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            }
                          },
                          "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                        },
                        "frontend" : {
                          "type" : "object",
                          "properties" : {
                            "request" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            },
                            "response" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            }
                          },
                          "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                        },
                        "httpCorrelationProtocol" : {
                          "type" : "string",
                          "description" : "Sets correlation protocol to use for Application Insights diagnostics.",
                          "enum" : [ "None", "Legacy", "W3C" ]
                        },
                        "logClientIp" : {
                          "type" : "boolean",
                          "description" : "Log the ClientIP. Default is false."
                        },
                        "loggerId" : {
                          "type" : "string",
                          "description" : "Resource Id of a target logger."
                        },
                        "sampling" : {
                          "type" : "object",
                          "properties" : {
                            "percentage" : {
                              "maximum" : 100,
                              "minimum" : 0,
                              "type" : "number",
                              "description" : "Rate of sampling for fixed-rate sampling.",
                              "format" : "double"
                            },
                            "samplingType" : {
                              "type" : "string",
                              "description" : "Sampling type.",
                              "enum" : [ "fixed" ]
                            }
                          },
                          "description" : "Sampling settings for Diagnostic."
                        },
                        "verbosity" : {
                          "type" : "string",
                          "description" : "The verbosity level applied to traces emitted by trace policies.",
                          "enum" : [ "verbose", "information", "error" ]
                        }
                      },
                      "description" : "Diagnostic Entity Properties"
                    }
                  },
                  "description" : "Diagnostic details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiDiagnostic" ],
        "description" : "Creates a new Diagnostic for an API or updates an existing one.",
        "operationId" : "ApiDiagnostic_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "diagnosticId",
          "in" : "path",
          "description" : "Diagnostic identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "loggerId" ],
                    "type" : "object",
                    "properties" : {
                      "alwaysLog" : {
                        "type" : "string",
                        "description" : "Specifies for what type of messages sampling settings should not apply.",
                        "enum" : [ "allErrors" ]
                      },
                      "backend" : {
                        "type" : "object",
                        "properties" : {
                          "request" : {
                            "type" : "object",
                            "properties" : {
                              "body" : {
                                "type" : "object",
                                "properties" : {
                                  "bytes" : {
                                    "maximum" : 8192,
                                    "type" : "integer",
                                    "description" : "Number of request body bytes to log.",
                                    "format" : "int32"
                                  }
                                },
                                "description" : "Body logging settings."
                              },
                              "headers" : {
                                "type" : "array",
                                "description" : "Array of HTTP Headers to log.",
                                "items" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "description" : "Http message diagnostic settings."
                          },
                          "response" : {
                            "type" : "object",
                            "properties" : {
                              "body" : {
                                "type" : "object",
                                "properties" : {
                                  "bytes" : {
                                    "maximum" : 8192,
                                    "type" : "integer",
                                    "description" : "Number of request body bytes to log.",
                                    "format" : "int32"
                                  }
                                },
                                "description" : "Body logging settings."
                              },
                              "headers" : {
                                "type" : "array",
                                "description" : "Array of HTTP Headers to log.",
                                "items" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "description" : "Http message diagnostic settings."
                          }
                        },
                        "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                      },
                      "frontend" : {
                        "type" : "object",
                        "properties" : {
                          "request" : {
                            "type" : "object",
                            "properties" : {
                              "body" : {
                                "type" : "object",
                                "properties" : {
                                  "bytes" : {
                                    "maximum" : 8192,
                                    "type" : "integer",
                                    "description" : "Number of request body bytes to log.",
                                    "format" : "int32"
                                  }
                                },
                                "description" : "Body logging settings."
                              },
                              "headers" : {
                                "type" : "array",
                                "description" : "Array of HTTP Headers to log.",
                                "items" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "description" : "Http message diagnostic settings."
                          },
                          "response" : {
                            "type" : "object",
                            "properties" : {
                              "body" : {
                                "type" : "object",
                                "properties" : {
                                  "bytes" : {
                                    "maximum" : 8192,
                                    "type" : "integer",
                                    "description" : "Number of request body bytes to log.",
                                    "format" : "int32"
                                  }
                                },
                                "description" : "Body logging settings."
                              },
                              "headers" : {
                                "type" : "array",
                                "description" : "Array of HTTP Headers to log.",
                                "items" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "description" : "Http message diagnostic settings."
                          }
                        },
                        "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                      },
                      "httpCorrelationProtocol" : {
                        "type" : "string",
                        "description" : "Sets correlation protocol to use for Application Insights diagnostics.",
                        "enum" : [ "None", "Legacy", "W3C" ]
                      },
                      "logClientIp" : {
                        "type" : "boolean",
                        "description" : "Log the ClientIP. Default is false."
                      },
                      "loggerId" : {
                        "type" : "string",
                        "description" : "Resource Id of a target logger."
                      },
                      "sampling" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "maximum" : 100,
                            "minimum" : 0,
                            "type" : "number",
                            "description" : "Rate of sampling for fixed-rate sampling.",
                            "format" : "double"
                          },
                          "samplingType" : {
                            "type" : "string",
                            "description" : "Sampling type.",
                            "enum" : [ "fixed" ]
                          }
                        },
                        "description" : "Sampling settings for Diagnostic."
                      },
                      "verbosity" : {
                        "type" : "string",
                        "description" : "The verbosity level applied to traces emitted by trace policies.",
                        "enum" : [ "verbose", "information", "error" ]
                      }
                    },
                    "description" : "Diagnostic Entity Properties"
                  }
                },
                "description" : "Diagnostic details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Diagnostic was successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "loggerId" ],
                      "type" : "object",
                      "properties" : {
                        "alwaysLog" : {
                          "type" : "string",
                          "description" : "Specifies for what type of messages sampling settings should not apply.",
                          "enum" : [ "allErrors" ]
                        },
                        "backend" : {
                          "type" : "object",
                          "properties" : {
                            "request" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            },
                            "response" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            }
                          },
                          "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                        },
                        "frontend" : {
                          "type" : "object",
                          "properties" : {
                            "request" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            },
                            "response" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            }
                          },
                          "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                        },
                        "httpCorrelationProtocol" : {
                          "type" : "string",
                          "description" : "Sets correlation protocol to use for Application Insights diagnostics.",
                          "enum" : [ "None", "Legacy", "W3C" ]
                        },
                        "logClientIp" : {
                          "type" : "boolean",
                          "description" : "Log the ClientIP. Default is false."
                        },
                        "loggerId" : {
                          "type" : "string",
                          "description" : "Resource Id of a target logger."
                        },
                        "sampling" : {
                          "type" : "object",
                          "properties" : {
                            "percentage" : {
                              "maximum" : 100,
                              "minimum" : 0,
                              "type" : "number",
                              "description" : "Rate of sampling for fixed-rate sampling.",
                              "format" : "double"
                            },
                            "samplingType" : {
                              "type" : "string",
                              "description" : "Sampling type.",
                              "enum" : [ "fixed" ]
                            }
                          },
                          "description" : "Sampling settings for Diagnostic."
                        },
                        "verbosity" : {
                          "type" : "string",
                          "description" : "The verbosity level applied to traces emitted by trace policies.",
                          "enum" : [ "verbose", "information", "error" ]
                        }
                      },
                      "description" : "Diagnostic Entity Properties"
                    }
                  },
                  "description" : "Diagnostic details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Diagnostic was successfully created.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "loggerId" ],
                      "type" : "object",
                      "properties" : {
                        "alwaysLog" : {
                          "type" : "string",
                          "description" : "Specifies for what type of messages sampling settings should not apply.",
                          "enum" : [ "allErrors" ]
                        },
                        "backend" : {
                          "type" : "object",
                          "properties" : {
                            "request" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            },
                            "response" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            }
                          },
                          "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                        },
                        "frontend" : {
                          "type" : "object",
                          "properties" : {
                            "request" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            },
                            "response" : {
                              "type" : "object",
                              "properties" : {
                                "body" : {
                                  "type" : "object",
                                  "properties" : {
                                    "bytes" : {
                                      "maximum" : 8192,
                                      "type" : "integer",
                                      "description" : "Number of request body bytes to log.",
                                      "format" : "int32"
                                    }
                                  },
                                  "description" : "Body logging settings."
                                },
                                "headers" : {
                                  "type" : "array",
                                  "description" : "Array of HTTP Headers to log.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Http message diagnostic settings."
                            }
                          },
                          "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                        },
                        "httpCorrelationProtocol" : {
                          "type" : "string",
                          "description" : "Sets correlation protocol to use for Application Insights diagnostics.",
                          "enum" : [ "None", "Legacy", "W3C" ]
                        },
                        "logClientIp" : {
                          "type" : "boolean",
                          "description" : "Log the ClientIP. Default is false."
                        },
                        "loggerId" : {
                          "type" : "string",
                          "description" : "Resource Id of a target logger."
                        },
                        "sampling" : {
                          "type" : "object",
                          "properties" : {
                            "percentage" : {
                              "maximum" : 100,
                              "minimum" : 0,
                              "type" : "number",
                              "description" : "Rate of sampling for fixed-rate sampling.",
                              "format" : "double"
                            },
                            "samplingType" : {
                              "type" : "string",
                              "description" : "Sampling type.",
                              "enum" : [ "fixed" ]
                            }
                          },
                          "description" : "Sampling settings for Diagnostic."
                        },
                        "verbosity" : {
                          "type" : "string",
                          "description" : "The verbosity level applied to traces emitted by trace policies.",
                          "enum" : [ "verbose", "information", "error" ]
                        }
                      },
                      "description" : "Diagnostic Entity Properties"
                    }
                  },
                  "description" : "Diagnostic details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiDiagnostic" ],
        "description" : "Deletes the specified Diagnostic from an API.",
        "operationId" : "ApiDiagnostic_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "diagnosticId",
          "in" : "path",
          "description" : "Diagnostic identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Diagnostic successfully removed"
          },
          "204" : {
            "description" : "Diagnostic successfully removed by previous request or does not exist"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiDiagnostic" ],
        "description" : "Gets the entity state (Etag) version of the Diagnostic for an API specified by its identifier.",
        "operationId" : "ApiDiagnostic_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "diagnosticId",
          "in" : "path",
          "description" : "Diagnostic identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operation completed successfully.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ApiDiagnostic" ],
        "description" : "Updates the details of the Diagnostic for an API specified by its identifier.",
        "operationId" : "ApiDiagnostic_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "diagnosticId",
          "in" : "path",
          "description" : "Diagnostic identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Diagnostic Update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "loggerId" ],
                    "type" : "object",
                    "properties" : {
                      "alwaysLog" : {
                        "type" : "string",
                        "description" : "Specifies for what type of messages sampling settings should not apply.",
                        "enum" : [ "allErrors" ]
                      },
                      "backend" : {
                        "type" : "object",
                        "properties" : {
                          "request" : {
                            "type" : "object",
                            "properties" : {
                              "body" : {
                                "type" : "object",
                                "properties" : {
                                  "bytes" : {
                                    "maximum" : 8192,
                                    "type" : "integer",
                                    "description" : "Number of request body bytes to log.",
                                    "format" : "int32"
                                  }
                                },
                                "description" : "Body logging settings."
                              },
                              "headers" : {
                                "type" : "array",
                                "description" : "Array of HTTP Headers to log.",
                                "items" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "description" : "Http message diagnostic settings."
                          },
                          "response" : {
                            "type" : "object",
                            "properties" : {
                              "body" : {
                                "type" : "object",
                                "properties" : {
                                  "bytes" : {
                                    "maximum" : 8192,
                                    "type" : "integer",
                                    "description" : "Number of request body bytes to log.",
                                    "format" : "int32"
                                  }
                                },
                                "description" : "Body logging settings."
                              },
                              "headers" : {
                                "type" : "array",
                                "description" : "Array of HTTP Headers to log.",
                                "items" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "description" : "Http message diagnostic settings."
                          }
                        },
                        "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                      },
                      "frontend" : {
                        "type" : "object",
                        "properties" : {
                          "request" : {
                            "type" : "object",
                            "properties" : {
                              "body" : {
                                "type" : "object",
                                "properties" : {
                                  "bytes" : {
                                    "maximum" : 8192,
                                    "type" : "integer",
                                    "description" : "Number of request body bytes to log.",
                                    "format" : "int32"
                                  }
                                },
                                "description" : "Body logging settings."
                              },
                              "headers" : {
                                "type" : "array",
                                "description" : "Array of HTTP Headers to log.",
                                "items" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "description" : "Http message diagnostic settings."
                          },
                          "response" : {
                            "type" : "object",
                            "properties" : {
                              "body" : {
                                "type" : "object",
                                "properties" : {
                                  "bytes" : {
                                    "maximum" : 8192,
                                    "type" : "integer",
                                    "description" : "Number of request body bytes to log.",
                                    "format" : "int32"
                                  }
                                },
                                "description" : "Body logging settings."
                              },
                              "headers" : {
                                "type" : "array",
                                "description" : "Array of HTTP Headers to log.",
                                "items" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "description" : "Http message diagnostic settings."
                          }
                        },
                        "description" : "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
                      },
                      "httpCorrelationProtocol" : {
                        "type" : "string",
                        "description" : "Sets correlation protocol to use for Application Insights diagnostics.",
                        "enum" : [ "None", "Legacy", "W3C" ]
                      },
                      "logClientIp" : {
                        "type" : "boolean",
                        "description" : "Log the ClientIP. Default is false."
                      },
                      "loggerId" : {
                        "type" : "string",
                        "description" : "Resource Id of a target logger."
                      },
                      "sampling" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "maximum" : 100,
                            "minimum" : 0,
                            "type" : "number",
                            "description" : "Rate of sampling for fixed-rate sampling.",
                            "format" : "double"
                          },
                          "samplingType" : {
                            "type" : "string",
                            "description" : "Sampling type.",
                            "enum" : [ "fixed" ]
                          }
                        },
                        "description" : "Sampling settings for Diagnostic."
                      },
                      "verbosity" : {
                        "type" : "string",
                        "description" : "The verbosity level applied to traces emitted by trace policies.",
                        "enum" : [ "verbose", "information", "error" ]
                      }
                    },
                    "description" : "Diagnostic Entity Properties"
                  }
                },
                "description" : "Diagnostic details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The Diagnostic was successfully updated."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues" : {
      "get" : {
        "tags" : [ "ApiIssue" ],
        "description" : "Lists all issues associated with the specified API.",
        "operationId" : "ApiIssue_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state | filter | eq |     | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expandCommentsAttachments",
          "in" : "query",
          "description" : "Expand the comment attachments. ",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Paged Result response of issues for the API.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any.",
                      "readOnly" : true
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Issue values.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "description", "title", "userId" ],
                            "type" : "object",
                            "properties" : {
                              "description" : {
                                "type" : "string",
                                "description" : "Text describing the issue."
                              },
                              "title" : {
                                "type" : "string",
                                "description" : "The issue title."
                              },
                              "userId" : {
                                "type" : "string",
                                "description" : "A resource identifier for the user created the issue."
                              }
                            },
                            "description" : "Issue contract Properties."
                          }
                        },
                        "description" : "Issue Contract details."
                      }
                    }
                  },
                  "description" : "Paged Issue list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}" : {
      "get" : {
        "tags" : [ "ApiIssue" ],
        "description" : "Gets the details of the Issue for an API specified by its identifier.",
        "operationId" : "ApiIssue_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "expandCommentsAttachments",
          "in" : "query",
          "description" : "Expand the comment attachments. ",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified Issue entity.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "description", "title", "userId" ],
                      "type" : "object",
                      "properties" : {
                        "description" : {
                          "type" : "string",
                          "description" : "Text describing the issue."
                        },
                        "title" : {
                          "type" : "string",
                          "description" : "The issue title."
                        },
                        "userId" : {
                          "type" : "string",
                          "description" : "A resource identifier for the user created the issue."
                        }
                      },
                      "description" : "Issue contract Properties."
                    }
                  },
                  "description" : "Issue Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiIssue" ],
        "description" : "Creates a new Issue for an API or updates an existing one.",
        "operationId" : "ApiIssue_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "description", "title", "userId" ],
                    "type" : "object",
                    "properties" : {
                      "description" : {
                        "type" : "string",
                        "description" : "Text describing the issue."
                      },
                      "title" : {
                        "type" : "string",
                        "description" : "The issue title."
                      },
                      "userId" : {
                        "type" : "string",
                        "description" : "A resource identifier for the user created the issue."
                      }
                    },
                    "description" : "Issue contract Properties."
                  }
                },
                "description" : "Issue Contract details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Api issue successfully updated",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "description", "title", "userId" ],
                      "type" : "object",
                      "properties" : {
                        "description" : {
                          "type" : "string",
                          "description" : "Text describing the issue."
                        },
                        "title" : {
                          "type" : "string",
                          "description" : "The issue title."
                        },
                        "userId" : {
                          "type" : "string",
                          "description" : "A resource identifier for the user created the issue."
                        }
                      },
                      "description" : "Issue contract Properties."
                    }
                  },
                  "description" : "Issue Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "New api issue successfully added",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "description", "title", "userId" ],
                      "type" : "object",
                      "properties" : {
                        "description" : {
                          "type" : "string",
                          "description" : "Text describing the issue."
                        },
                        "title" : {
                          "type" : "string",
                          "description" : "The issue title."
                        },
                        "userId" : {
                          "type" : "string",
                          "description" : "A resource identifier for the user created the issue."
                        }
                      },
                      "description" : "Issue contract Properties."
                    }
                  },
                  "description" : "Issue Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiIssue" ],
        "description" : "Deletes the specified Issue from an API.",
        "operationId" : "ApiIssue_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Issue successfully removed"
          },
          "204" : {
            "description" : "Issue successfully removed by previous request or does not exist"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiIssue" ],
        "description" : "Gets the entity state (Etag) version of the Issue for an API specified by its identifier.",
        "operationId" : "ApiIssue_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operation completed successfully.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ApiIssue" ],
        "description" : "Updates an existing issue for an API.",
        "operationId" : "ApiIssue_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "description" : {
                        "type" : "string",
                        "description" : "Text describing the issue."
                      },
                      "title" : {
                        "type" : "string",
                        "description" : "The issue title."
                      },
                      "userId" : {
                        "type" : "string",
                        "description" : "A resource identifier for the user created the issue."
                      }
                    },
                    "description" : "Issue contract Update Properties."
                  }
                },
                "description" : "Issue update Parameters."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Api issue updated successfully"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments" : {
      "get" : {
        "tags" : [ "ApiIssueAttachment" ],
        "description" : "Lists all attachments for the Issue associated with the specified API.",
        "operationId" : "ApiIssueAttachment_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Paged Result response of issue attachments for the API.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any.",
                      "readOnly" : true
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Issue Attachment values.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "content", "contentFormat", "title" ],
                            "type" : "object",
                            "properties" : {
                              "content" : {
                                "type" : "string",
                                "description" : "An HTTP link or Base64-encoded binary data."
                              },
                              "contentFormat" : {
                                "type" : "string",
                                "description" : "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property."
                              },
                              "title" : {
                                "type" : "string",
                                "description" : "Filename by which the binary data will be saved."
                              }
                            },
                            "description" : "Issue Attachment contract Properties."
                          }
                        },
                        "description" : "Issue Attachment Contract details."
                      }
                    }
                  },
                  "description" : "Paged Issue Attachment list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}" : {
      "get" : {
        "tags" : [ "ApiIssueAttachment" ],
        "description" : "Gets the details of the issue Attachment for an API specified by its identifier.",
        "operationId" : "ApiIssueAttachment_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "Attachment identifier within an Issue. Must be unique in the current Issue.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified issue Attachment entity.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "content", "contentFormat", "title" ],
                      "type" : "object",
                      "properties" : {
                        "content" : {
                          "type" : "string",
                          "description" : "An HTTP link or Base64-encoded binary data."
                        },
                        "contentFormat" : {
                          "type" : "string",
                          "description" : "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property."
                        },
                        "title" : {
                          "type" : "string",
                          "description" : "Filename by which the binary data will be saved."
                        }
                      },
                      "description" : "Issue Attachment contract Properties."
                    }
                  },
                  "description" : "Issue Attachment Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiIssueAttachment" ],
        "description" : "Creates a new Attachment for the Issue in an API or updates an existing one.",
        "operationId" : "ApiIssueAttachment_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "Attachment identifier within an Issue. Must be unique in the current Issue.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "content", "contentFormat", "title" ],
                    "type" : "object",
                    "properties" : {
                      "content" : {
                        "type" : "string",
                        "description" : "An HTTP link or Base64-encoded binary data."
                      },
                      "contentFormat" : {
                        "type" : "string",
                        "description" : "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property."
                      },
                      "title" : {
                        "type" : "string",
                        "description" : "Filename by which the binary data will be saved."
                      }
                    },
                    "description" : "Issue Attachment contract Properties."
                  }
                },
                "description" : "Issue Attachment Contract details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Api issue attachment successfully updated",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "content", "contentFormat", "title" ],
                      "type" : "object",
                      "properties" : {
                        "content" : {
                          "type" : "string",
                          "description" : "An HTTP link or Base64-encoded binary data."
                        },
                        "contentFormat" : {
                          "type" : "string",
                          "description" : "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property."
                        },
                        "title" : {
                          "type" : "string",
                          "description" : "Filename by which the binary data will be saved."
                        }
                      },
                      "description" : "Issue Attachment contract Properties."
                    }
                  },
                  "description" : "Issue Attachment Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "New api issue attachment successfully added",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "content", "contentFormat", "title" ],
                      "type" : "object",
                      "properties" : {
                        "content" : {
                          "type" : "string",
                          "description" : "An HTTP link or Base64-encoded binary data."
                        },
                        "contentFormat" : {
                          "type" : "string",
                          "description" : "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property."
                        },
                        "title" : {
                          "type" : "string",
                          "description" : "Filename by which the binary data will be saved."
                        }
                      },
                      "description" : "Issue Attachment contract Properties."
                    }
                  },
                  "description" : "Issue Attachment Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiIssueAttachment" ],
        "description" : "Deletes the specified comment from an Issue.",
        "operationId" : "ApiIssueAttachment_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "Attachment identifier within an Issue. Must be unique in the current Issue.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Attachment successfully removed"
          },
          "204" : {
            "description" : "Attachment successfully removed by previous request or does not exist"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiIssueAttachment" ],
        "description" : "Gets the entity state (Etag) version of the issue Attachment for an API specified by its identifier.",
        "operationId" : "ApiIssueAttachment_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "Attachment identifier within an Issue. Must be unique in the current Issue.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operation completed successfully.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments" : {
      "get" : {
        "tags" : [ "ApiIssueComment" ],
        "description" : "Lists all comments for the Issue associated with the specified API.",
        "operationId" : "ApiIssueComment_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Paged Result response of issue comments for the API.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any.",
                      "readOnly" : true
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Issue Comment values.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "text", "userId" ],
                            "type" : "object",
                            "properties" : {
                              "createdDate" : {
                                "type" : "string",
                                "description" : "Date and time when the comment was created.",
                                "format" : "date-time"
                              },
                              "text" : {
                                "type" : "string",
                                "description" : "Comment text."
                              },
                              "userId" : {
                                "type" : "string",
                                "description" : "A resource identifier for the user who left the comment."
                              }
                            },
                            "description" : "Issue Comment contract Properties."
                          }
                        },
                        "description" : "Issue Comment Contract details."
                      }
                    }
                  },
                  "description" : "Paged Issue Comment list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}" : {
      "get" : {
        "tags" : [ "ApiIssueComment" ],
        "description" : "Gets the details of the issue Comment for an API specified by its identifier.",
        "operationId" : "ApiIssueComment_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "Comment identifier within an Issue. Must be unique in the current Issue.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified issue Comment entity.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "text", "userId" ],
                      "type" : "object",
                      "properties" : {
                        "createdDate" : {
                          "type" : "string",
                          "description" : "Date and time when the comment was created.",
                          "format" : "date-time"
                        },
                        "text" : {
                          "type" : "string",
                          "description" : "Comment text."
                        },
                        "userId" : {
                          "type" : "string",
                          "description" : "A resource identifier for the user who left the comment."
                        }
                      },
                      "description" : "Issue Comment contract Properties."
                    }
                  },
                  "description" : "Issue Comment Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiIssueComment" ],
        "description" : "Creates a new Comment for the Issue in an API or updates an existing one.",
        "operationId" : "ApiIssueComment_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "Comment identifier within an Issue. Must be unique in the current Issue.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "text", "userId" ],
                    "type" : "object",
                    "properties" : {
                      "createdDate" : {
                        "type" : "string",
                        "description" : "Date and time when the comment was created.",
                        "format" : "date-time"
                      },
                      "text" : {
                        "type" : "string",
                        "description" : "Comment text."
                      },
                      "userId" : {
                        "type" : "string",
                        "description" : "A resource identifier for the user who left the comment."
                      }
                    },
                    "description" : "Issue Comment contract Properties."
                  }
                },
                "description" : "Issue Comment Contract details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Api issue comment successfully updated",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "text", "userId" ],
                      "type" : "object",
                      "properties" : {
                        "createdDate" : {
                          "type" : "string",
                          "description" : "Date and time when the comment was created.",
                          "format" : "date-time"
                        },
                        "text" : {
                          "type" : "string",
                          "description" : "Comment text."
                        },
                        "userId" : {
                          "type" : "string",
                          "description" : "A resource identifier for the user who left the comment."
                        }
                      },
                      "description" : "Issue Comment contract Properties."
                    }
                  },
                  "description" : "Issue Comment Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "New api issue comment successfully added",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "text", "userId" ],
                      "type" : "object",
                      "properties" : {
                        "createdDate" : {
                          "type" : "string",
                          "description" : "Date and time when the comment was created.",
                          "format" : "date-time"
                        },
                        "text" : {
                          "type" : "string",
                          "description" : "Comment text."
                        },
                        "userId" : {
                          "type" : "string",
                          "description" : "A resource identifier for the user who left the comment."
                        }
                      },
                      "description" : "Issue Comment contract Properties."
                    }
                  },
                  "description" : "Issue Comment Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiIssueComment" ],
        "description" : "Deletes the specified comment from an Issue.",
        "operationId" : "ApiIssueComment_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "Comment identifier within an Issue. Must be unique in the current Issue.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Comment successfully removed"
          },
          "204" : {
            "description" : "Comment successfully removed by previous request or does not exist"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiIssueComment" ],
        "description" : "Gets the entity state (Etag) version of the issue Comment for an API specified by its identifier.",
        "operationId" : "ApiIssueComment_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "Issue identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "Comment identifier within an Issue. Must be unique in the current Issue.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operation completed successfully.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations" : {
      "get" : {
        "tags" : [ "ApiOperation" ],
        "description" : "Lists a collection of the operations for the specified API.",
        "operationId" : "ApiOperation_ListByApi",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "Include tags in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A collection of operation summary entities at the API level.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any.",
                      "readOnly" : true
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "displayName", "method", "urlTemplate" ],
                            "type" : "object",
                            "properties" : {
                              "displayName" : {
                                "maxLength" : 300,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Operation Name."
                              },
                              "method" : {
                                "type" : "string",
                                "description" : "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
                              },
                              "urlTemplate" : {
                                "maxLength" : 1000,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}"
                              }
                            },
                            "description" : "Operation Contract Properties"
                          }
                        },
                        "description" : "Api Operation details."
                      }
                    }
                  },
                  "description" : "Paged Operation list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "ApiOperation" ],
        "description" : "Gets the details of the API Operation specified by its identifier.",
        "operationId" : "ApiOperation_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified Operation entity.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "displayName", "method", "urlTemplate" ],
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Operation Name."
                        },
                        "method" : {
                          "type" : "string",
                          "description" : "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
                        },
                        "urlTemplate" : {
                          "maxLength" : 1000,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}"
                        }
                      },
                      "description" : "Operation Contract Properties"
                    }
                  },
                  "description" : "Api Operation details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiOperation" ],
        "description" : "Creates a new operation in the API or updates an existing one.",
        "operationId" : "ApiOperation_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "displayName", "method", "urlTemplate" ],
                    "type" : "object",
                    "properties" : {
                      "displayName" : {
                        "maxLength" : 300,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Operation Name."
                      },
                      "method" : {
                        "type" : "string",
                        "description" : "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
                      },
                      "urlTemplate" : {
                        "maxLength" : 1000,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}"
                      }
                    },
                    "description" : "Operation Contract Properties"
                  }
                },
                "description" : "Api Operation details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Operation was successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "displayName", "method", "urlTemplate" ],
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Operation Name."
                        },
                        "method" : {
                          "type" : "string",
                          "description" : "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
                        },
                        "urlTemplate" : {
                          "maxLength" : 1000,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}"
                        }
                      },
                      "description" : "Operation Contract Properties"
                    }
                  },
                  "description" : "Api Operation details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Operation was successfully created.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "displayName", "method", "urlTemplate" ],
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 300,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Operation Name."
                        },
                        "method" : {
                          "type" : "string",
                          "description" : "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
                        },
                        "urlTemplate" : {
                          "maxLength" : 1000,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}"
                        }
                      },
                      "description" : "Operation Contract Properties"
                    }
                  },
                  "description" : "Api Operation details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiOperation" ],
        "description" : "Deletes the specified operation in the API.",
        "operationId" : "ApiOperation_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "API operation successfully removed"
          },
          "204" : {
            "description" : "API operation successfully removed by previous request or does not exist"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiOperation" ],
        "description" : "Gets the entity state (Etag) version of the API operation specified by its identifier.",
        "operationId" : "ApiOperation_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Specified API operation entity exists and current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ApiOperation" ],
        "description" : "Updates the details of the operation in the API specified by its identifier.",
        "operationId" : "ApiOperation_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "API Operation Update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "displayName" : {
                        "maxLength" : 300,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Operation Name."
                      },
                      "method" : {
                        "type" : "string",
                        "description" : "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
                      },
                      "urlTemplate" : {
                        "maxLength" : 1000,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}"
                      }
                    },
                    "description" : "Operation Update Contract Properties."
                  }
                },
                "description" : "Api Operation Update Contract details."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The operation was successfully updated."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies" : {
      "get" : {
        "tags" : [ "ApiOperationPolicy" ],
        "description" : "Get the list of policy configuration at the API Operation level.",
        "operationId" : "ApiOperationPolicy_ListByOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Api Operations Policy Collection.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Policy Contract value.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "value" ],
                            "type" : "object",
                            "properties" : {
                              "format" : {
                                "type" : "string",
                                "description" : "Format of the policyContent.",
                                "default" : "xml",
                                "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                              },
                              "value" : {
                                "type" : "string",
                                "description" : "Contents of the Policy as defined by the format."
                              }
                            },
                            "description" : "Policy contract Properties."
                          }
                        },
                        "description" : "Policy Contract details."
                      }
                    }
                  },
                  "description" : "The response of the list policy operation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}" : {
      "get" : {
        "tags" : [ "ApiOperationPolicy" ],
        "description" : "Get the policy configuration at the API Operation level.",
        "operationId" : "ApiOperationPolicy_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Policy Export Format.",
          "schema" : {
            "type" : "string",
            "default" : "xml",
            "enum" : [ "xml", "rawxml" ]
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Api Operation Policy information.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "value" ],
                      "type" : "object",
                      "properties" : {
                        "format" : {
                          "type" : "string",
                          "description" : "Format of the policyContent.",
                          "default" : "xml",
                          "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Contents of the Policy as defined by the format."
                        }
                      },
                      "description" : "Policy contract Properties."
                    }
                  },
                  "description" : "Policy Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiOperationPolicy" ],
        "description" : "Creates or updates policy configuration for the API Operation level.",
        "operationId" : "ApiOperationPolicy_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The policy contents to apply.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "value" ],
                    "type" : "object",
                    "properties" : {
                      "format" : {
                        "type" : "string",
                        "description" : "Format of the policyContent.",
                        "default" : "xml",
                        "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Contents of the Policy as defined by the format."
                      }
                    },
                    "description" : "Policy contract Properties."
                  }
                },
                "description" : "Policy Contract details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Api Operation policy configuration of the tenant was successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "value" ],
                      "type" : "object",
                      "properties" : {
                        "format" : {
                          "type" : "string",
                          "description" : "Format of the policyContent.",
                          "default" : "xml",
                          "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Contents of the Policy as defined by the format."
                        }
                      },
                      "description" : "Policy contract Properties."
                    }
                  },
                  "description" : "Policy Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Api Operation policy configuration was successfully created.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "value" ],
                      "type" : "object",
                      "properties" : {
                        "format" : {
                          "type" : "string",
                          "description" : "Format of the policyContent.",
                          "default" : "xml",
                          "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Contents of the Policy as defined by the format."
                        }
                      },
                      "description" : "Policy contract Properties."
                    }
                  },
                  "description" : "Policy Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiOperationPolicy" ],
        "description" : "Deletes the policy configuration at the Api Operation.",
        "operationId" : "ApiOperationPolicy_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Policy successfully removed"
          },
          "204" : {
            "description" : "Policy successfully removed by previous request or does not exist"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiOperationPolicy" ],
        "description" : "Gets the entity state (Etag) version of the API operation policy specified by its identifier.",
        "operationId" : "ApiOperationPolicy_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Specified API operation policy entity exists and current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags" : {
      "get" : {
        "tags" : [ "ApiOperationTag" ],
        "description" : "Lists all Tags associated with the Operation.",
        "operationId" : "Tag_ListByOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation returns a collection of tags associated with the Operation entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "displayName" ],
                            "type" : "object",
                            "properties" : {
                              "displayName" : {
                                "maxLength" : 160,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Tag name."
                              }
                            },
                            "description" : "Tag contract Properties."
                          }
                        },
                        "description" : "Tag Contract details."
                      }
                    }
                  },
                  "description" : "Paged Tag list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}" : {
      "get" : {
        "tags" : [ "ApiOperationTag" ],
        "description" : "Get tag associated with the Operation.",
        "operationId" : "Tag_GetByOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Gets the details of the tag specified by its identifier.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "displayName" ],
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag name."
                        }
                      },
                      "description" : "Tag contract Properties."
                    }
                  },
                  "description" : "Tag Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiOperationTag" ],
        "description" : "Assign tag to the Operation.",
        "operationId" : "Tag_AssignToOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Tag is already assigned to the Operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "displayName" ],
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag name."
                        }
                      },
                      "description" : "Tag contract Properties."
                    }
                  },
                  "description" : "Tag Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Tag was assigned to the Operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "displayName" ],
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag name."
                        }
                      },
                      "description" : "Tag contract Properties."
                    }
                  },
                  "description" : "Tag Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiOperationTag" ],
        "description" : "Detach the tag from the Operation.",
        "operationId" : "Tag_DetachFromOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Tag was successfully removed from Operation"
          },
          "204" : {
            "description" : "Tag successfully removed by previous request or does not exist in Operation"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiOperationTag" ],
        "description" : "Gets the entity state version of the tag specified by its identifier.",
        "operationId" : "Tag_GetEntityStateByOperation",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Empty response body, ETag header entity state version.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operationsByTags" : {
      "get" : {
        "tags" : [ "ApiOperationsByTag" ],
        "description" : "Lists a collection of operations associated with tags.",
        "operationId" : "Operation_ListByTags",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeNotTaggedOperations",
          "in" : "query",
          "description" : "Include not tagged Operations.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lists a collection of TagResource entities.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "items" : {
                        "required" : [ "tag" ],
                        "type" : "object",
                        "properties" : {
                          "api" : {
                            "type" : "object",
                            "properties" : {
                              "id" : {
                                "type" : "string",
                                "description" : "API identifier in the form /apis/{apiId}."
                              },
                              "name" : {
                                "maxLength" : 300,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "API name."
                              },
                              "path" : {
                                "maxLength" : 400,
                                "minLength" : 0,
                                "type" : "string",
                                "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                              },
                              "protocols" : {
                                "type" : "array",
                                "description" : "Describes on which protocols the operations in this API can be invoked.",
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "http", "https" ]
                                }
                              },
                              "serviceUrl" : {
                                "maxLength" : 2000,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Absolute URL of the backend service implementing this API."
                              }
                            },
                            "description" : "API contract properties for the Tag Resources."
                          },
                          "operation" : {
                            "type" : "object",
                            "properties" : {
                              "apiName" : {
                                "type" : "string",
                                "description" : "Api Name.",
                                "readOnly" : true
                              },
                              "apiRevision" : {
                                "type" : "string",
                                "description" : "Api Revision.",
                                "readOnly" : true
                              },
                              "apiVersion" : {
                                "type" : "string",
                                "description" : "Api Version.",
                                "readOnly" : true
                              },
                              "description" : {
                                "type" : "string",
                                "description" : "Operation Description.",
                                "readOnly" : true
                              },
                              "id" : {
                                "type" : "string",
                                "description" : "Identifier of the operation in form /operations/{operationId}."
                              },
                              "method" : {
                                "type" : "string",
                                "description" : "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
                                "readOnly" : true
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "Operation name.",
                                "readOnly" : true
                              },
                              "urlTemplate" : {
                                "type" : "string",
                                "description" : "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
                                "readOnly" : true
                              }
                            },
                            "description" : "Operation Entity contract Properties."
                          },
                          "product" : {
                            "required" : [ "name" ],
                            "type" : "object",
                            "properties" : {
                              "id" : {
                                "type" : "string",
                                "description" : "Identifier of the product in the form of /products/{productId}"
                              },
                              "name" : {
                                "maxLength" : 300,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Product name."
                              }
                            },
                            "description" : "Product profile."
                          },
                          "tag" : {
                            "type" : "object",
                            "properties" : {
                              "id" : {
                                "type" : "string",
                                "description" : "Tag identifier"
                              },
                              "name" : {
                                "maxLength" : 160,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Tag Name"
                              }
                            },
                            "description" : "Contract defining the Tag property in the Tag Resource Contract"
                          }
                        },
                        "description" : "TagResource contract properties."
                      }
                    }
                  },
                  "description" : "Paged Tag list representation."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies" : {
      "get" : {
        "tags" : [ "ApiPolicy" ],
        "description" : "Get the policy configuration at the API level.",
        "operationId" : "ApiPolicy_ListByApi",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Apis Policy Collection.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Policy Contract value.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "value" ],
                            "type" : "object",
                            "properties" : {
                              "format" : {
                                "type" : "string",
                                "description" : "Format of the policyContent.",
                                "default" : "xml",
                                "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                              },
                              "value" : {
                                "type" : "string",
                                "description" : "Contents of the Policy as defined by the format."
                              }
                            },
                            "description" : "Policy contract Properties."
                          }
                        },
                        "description" : "Policy Contract details."
                      }
                    }
                  },
                  "description" : "The response of the list policy operation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}" : {
      "get" : {
        "tags" : [ "ApiPolicy" ],
        "description" : "Get the policy configuration at the API level.",
        "operationId" : "ApiPolicy_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Policy Export Format.",
          "schema" : {
            "type" : "string",
            "default" : "xml",
            "enum" : [ "xml", "rawxml" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Api Policy information.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "value" ],
                      "type" : "object",
                      "properties" : {
                        "format" : {
                          "type" : "string",
                          "description" : "Format of the policyContent.",
                          "default" : "xml",
                          "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Contents of the Policy as defined by the format."
                        }
                      },
                      "description" : "Policy contract Properties."
                    }
                  },
                  "description" : "Policy Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              },
              "application/vnd.ms-azure-apim.policy+xml" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "value" ],
                      "type" : "object",
                      "properties" : {
                        "format" : {
                          "type" : "string",
                          "description" : "Format of the policyContent.",
                          "default" : "xml",
                          "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Contents of the Policy as defined by the format."
                        }
                      },
                      "description" : "Policy contract Properties."
                    }
                  },
                  "description" : "Policy Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              },
              "application/vnd.ms-azure-apim.policy.raw+xml" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "value" ],
                      "type" : "object",
                      "properties" : {
                        "format" : {
                          "type" : "string",
                          "description" : "Format of the policyContent.",
                          "default" : "xml",
                          "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Contents of the Policy as defined by the format."
                        }
                      },
                      "description" : "Policy contract Properties."
                    }
                  },
                  "description" : "Policy Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              },
              "application/vnd.ms-azure-apim.policy+xml" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              },
              "application/vnd.ms-azure-apim.policy.raw+xml" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiPolicy" ],
        "description" : "Creates or updates policy configuration for the API.",
        "operationId" : "ApiPolicy_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The policy contents to apply.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "value" ],
                    "type" : "object",
                    "properties" : {
                      "format" : {
                        "type" : "string",
                        "description" : "Format of the policyContent.",
                        "default" : "xml",
                        "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Contents of the Policy as defined by the format."
                      }
                    },
                    "description" : "Policy contract Properties."
                  }
                },
                "description" : "Policy Contract details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Api policy configuration of the tenant was successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "value" ],
                      "type" : "object",
                      "properties" : {
                        "format" : {
                          "type" : "string",
                          "description" : "Format of the policyContent.",
                          "default" : "xml",
                          "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Contents of the Policy as defined by the format."
                        }
                      },
                      "description" : "Policy contract Properties."
                    }
                  },
                  "description" : "Policy Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Api policy configuration was successfully created.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "value" ],
                      "type" : "object",
                      "properties" : {
                        "format" : {
                          "type" : "string",
                          "description" : "Format of the policyContent.",
                          "default" : "xml",
                          "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Contents of the Policy as defined by the format."
                        }
                      },
                      "description" : "Policy contract Properties."
                    }
                  },
                  "description" : "Policy Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiPolicy" ],
        "description" : "Deletes the policy configuration at the Api.",
        "operationId" : "ApiPolicy_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the policy configuration at the API level."
          },
          "204" : {
            "description" : "Successfully deleted the policy configuration at the API level."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiPolicy" ],
        "description" : "Gets the entity state (Etag) version of the API policy specified by its identifier.",
        "operationId" : "ApiPolicy_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Specified API Policy entity exists and current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products" : {
      "get" : {
        "tags" : [ "ApiProduct" ],
        "description" : "Lists all Products, which the API is part of.",
        "operationId" : "ApiProduct_ListByApis",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation returns a collection of products which have the Api entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "displayName" ],
                            "type" : "object",
                            "properties" : {
                              "displayName" : {
                                "maxLength" : 300,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Product name."
                              }
                            },
                            "description" : "Product profile."
                          }
                        },
                        "description" : "Product details."
                      }
                    }
                  },
                  "description" : "Paged Products list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases" : {
      "get" : {
        "tags" : [ "ApiRelease" ],
        "description" : "Lists all releases of an API. An API release is created when making an API Revision current. Releases are also used to rollback to previous revisions. Results will be paged and can be constrained by the $top and $skip parameters.",
        "operationId" : "ApiRelease_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation returns a list of API Releases.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any.",
                      "readOnly" : true
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "type" : "object",
                            "properties" : {
                              "apiId" : {
                                "type" : "string",
                                "description" : "Identifier of the API the release belongs to."
                              },
                              "createdDateTime" : {
                                "type" : "string",
                                "description" : "The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                                "format" : "date-time",
                                "readOnly" : true
                              },
                              "notes" : {
                                "type" : "string",
                                "description" : "Release Notes"
                              },
                              "updatedDateTime" : {
                                "type" : "string",
                                "description" : "The time the API release was updated.",
                                "format" : "date-time",
                                "readOnly" : true
                              }
                            },
                            "description" : "API Release details"
                          }
                        },
                        "description" : "ApiRelease details."
                      }
                    }
                  },
                  "description" : "Paged ApiRelease list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}" : {
      "get" : {
        "tags" : [ "ApiRelease" ],
        "description" : "Returns the details of an API release.",
        "operationId" : "ApiRelease_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "releaseId",
          "in" : "path",
          "description" : "Release identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation returns the details of an API Release.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "type" : "object",
                      "properties" : {
                        "apiId" : {
                          "type" : "string",
                          "description" : "Identifier of the API the release belongs to."
                        },
                        "createdDateTime" : {
                          "type" : "string",
                          "description" : "The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "notes" : {
                          "type" : "string",
                          "description" : "Release Notes"
                        },
                        "updatedDateTime" : {
                          "type" : "string",
                          "description" : "The time the API release was updated.",
                          "format" : "date-time",
                          "readOnly" : true
                        }
                      },
                      "description" : "API Release details"
                    }
                  },
                  "description" : "ApiRelease details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiRelease" ],
        "description" : "Creates a new Release for the API.",
        "operationId" : "ApiRelease_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "releaseId",
          "in" : "path",
          "description" : "Release identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "apiId" : {
                        "type" : "string",
                        "description" : "Identifier of the API the release belongs to."
                      },
                      "createdDateTime" : {
                        "type" : "string",
                        "description" : "The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                        "format" : "date-time",
                        "readOnly" : true
                      },
                      "notes" : {
                        "type" : "string",
                        "description" : "Release Notes"
                      },
                      "updatedDateTime" : {
                        "type" : "string",
                        "description" : "The time the API release was updated.",
                        "format" : "date-time",
                        "readOnly" : true
                      }
                    },
                    "description" : "API Release details"
                  }
                },
                "description" : "ApiRelease details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Release was successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "type" : "object",
                      "properties" : {
                        "apiId" : {
                          "type" : "string",
                          "description" : "Identifier of the API the release belongs to."
                        },
                        "createdDateTime" : {
                          "type" : "string",
                          "description" : "The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "notes" : {
                          "type" : "string",
                          "description" : "Release Notes"
                        },
                        "updatedDateTime" : {
                          "type" : "string",
                          "description" : "The time the API release was updated.",
                          "format" : "date-time",
                          "readOnly" : true
                        }
                      },
                      "description" : "API Release details"
                    }
                  },
                  "description" : "ApiRelease details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Release was successfully created.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "type" : "object",
                      "properties" : {
                        "apiId" : {
                          "type" : "string",
                          "description" : "Identifier of the API the release belongs to."
                        },
                        "createdDateTime" : {
                          "type" : "string",
                          "description" : "The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "notes" : {
                          "type" : "string",
                          "description" : "Release Notes"
                        },
                        "updatedDateTime" : {
                          "type" : "string",
                          "description" : "The time the API release was updated.",
                          "format" : "date-time",
                          "readOnly" : true
                        }
                      },
                      "description" : "API Release details"
                    }
                  },
                  "description" : "ApiRelease details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiRelease" ],
        "description" : "Deletes the specified release in the API.",
        "operationId" : "ApiRelease_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "releaseId",
          "in" : "path",
          "description" : "Release identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "API release successfully removed"
          },
          "204" : {
            "description" : "API release successfully removed by previous request or does not exist"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiRelease" ],
        "description" : "Returns the etag of an API release.",
        "operationId" : "ApiRelease_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "releaseId",
          "in" : "path",
          "description" : "Release identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Gets the entity state (Etag) version of the api release as specified by its identifier.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ApiRelease" ],
        "description" : "Updates the details of the release of the API specified by its identifier.",
        "operationId" : "ApiRelease_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "releaseId",
          "in" : "path",
          "description" : "Release identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "API Release Update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "apiId" : {
                        "type" : "string",
                        "description" : "Identifier of the API the release belongs to."
                      },
                      "createdDateTime" : {
                        "type" : "string",
                        "description" : "The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                        "format" : "date-time",
                        "readOnly" : true
                      },
                      "notes" : {
                        "type" : "string",
                        "description" : "Release Notes"
                      },
                      "updatedDateTime" : {
                        "type" : "string",
                        "description" : "The time the API release was updated.",
                        "format" : "date-time",
                        "readOnly" : true
                      }
                    },
                    "description" : "API Release details"
                  }
                },
                "description" : "ApiRelease details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Release successfully updated"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/revisions" : {
      "get" : {
        "tags" : [ "ApiRevision" ],
        "description" : "Lists all revisions of an API.",
        "operationId" : "ApiRevision_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation returns a list of revision details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any.",
                      "readOnly" : true
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "apiId" : {
                            "type" : "string",
                            "description" : "Identifier of the API Revision.",
                            "readOnly" : true
                          },
                          "apiRevision" : {
                            "maxLength" : 100,
                            "minLength" : 1,
                            "type" : "string",
                            "description" : "Revision number of API.",
                            "readOnly" : true
                          },
                          "createdDateTime" : {
                            "type" : "string",
                            "description" : "The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                            "format" : "date-time",
                            "readOnly" : true
                          },
                          "description" : {
                            "maxLength" : 256,
                            "type" : "string",
                            "description" : "Description of the API Revision.",
                            "readOnly" : true
                          },
                          "isCurrent" : {
                            "type" : "boolean",
                            "description" : "Indicates if API revision is accessible via the gateway.",
                            "readOnly" : true
                          },
                          "isOnline" : {
                            "type" : "boolean",
                            "description" : "Indicates if API revision is the current api revision.",
                            "readOnly" : true
                          },
                          "privateUrl" : {
                            "type" : "string",
                            "description" : "Gateway URL for accessing the non-current API Revision.",
                            "readOnly" : true
                          },
                          "updatedDateTime" : {
                            "type" : "string",
                            "description" : "The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                            "format" : "date-time",
                            "readOnly" : true
                          }
                        },
                        "description" : "Summary of revision metadata."
                      }
                    }
                  },
                  "description" : "Paged Api Revision list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas" : {
      "get" : {
        "tags" : [ "ApiSchema" ],
        "description" : "Get the schema configuration at the API level.",
        "operationId" : "ApiSchema_ListByApi",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Apis Schema Collection.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any.",
                      "readOnly" : true
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Api Schema Contract value.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "contentType" ],
                            "type" : "object",
                            "properties" : {
                              "contentType" : {
                                "type" : "string",
                                "description" : "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`."
                              },
                              "document" : {
                                "type" : "object",
                                "properties" : {
                                  "definitions" : {
                                    "type" : "object",
                                    "description" : "Types definitions. Used for Swagger/OpenAPI schemas only, null otherwise."
                                  },
                                  "value" : {
                                    "type" : "string",
                                    "description" : "Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI."
                                  }
                                },
                                "description" : "Schema Document Properties."
                              }
                            },
                            "description" : "API Schema create or update contract Properties."
                          }
                        },
                        "description" : "Schema Contract details."
                      }
                    }
                  },
                  "description" : "The response of the list schema operation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}" : {
      "get" : {
        "tags" : [ "ApiSchema" ],
        "description" : "Get the schema configuration at the API level.",
        "operationId" : "ApiSchema_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "schemaId",
          "in" : "path",
          "description" : "Schema identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Api Schema information.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "contentType" ],
                      "type" : "object",
                      "properties" : {
                        "contentType" : {
                          "type" : "string",
                          "description" : "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`."
                        },
                        "document" : {
                          "type" : "object",
                          "properties" : {
                            "definitions" : {
                              "type" : "object",
                              "description" : "Types definitions. Used for Swagger/OpenAPI schemas only, null otherwise."
                            },
                            "value" : {
                              "type" : "string",
                              "description" : "Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI."
                            }
                          },
                          "description" : "Schema Document Properties."
                        }
                      },
                      "description" : "API Schema create or update contract Properties."
                    }
                  },
                  "description" : "Schema Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiSchema" ],
        "description" : "Creates or updates schema configuration for the API.",
        "operationId" : "ApiSchema_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "schemaId",
          "in" : "path",
          "description" : "Schema identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The schema contents to apply.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "contentType" ],
                    "type" : "object",
                    "properties" : {
                      "contentType" : {
                        "type" : "string",
                        "description" : "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`."
                      },
                      "document" : {
                        "type" : "object",
                        "properties" : {
                          "definitions" : {
                            "type" : "object",
                            "description" : "Types definitions. Used for Swagger/OpenAPI schemas only, null otherwise."
                          },
                          "value" : {
                            "type" : "string",
                            "description" : "Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI."
                          }
                        },
                        "description" : "Schema Document Properties."
                      }
                    },
                    "description" : "API Schema create or update contract Properties."
                  }
                },
                "description" : "Schema Contract details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Api schema configuration of the tenant was successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "contentType" ],
                      "type" : "object",
                      "properties" : {
                        "contentType" : {
                          "type" : "string",
                          "description" : "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`."
                        },
                        "document" : {
                          "type" : "object",
                          "properties" : {
                            "definitions" : {
                              "type" : "object",
                              "description" : "Types definitions. Used for Swagger/OpenAPI schemas only, null otherwise."
                            },
                            "value" : {
                              "type" : "string",
                              "description" : "Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI."
                            }
                          },
                          "description" : "Schema Document Properties."
                        }
                      },
                      "description" : "API Schema create or update contract Properties."
                    }
                  },
                  "description" : "Schema Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Api schema configuration was successfully created.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "contentType" ],
                      "type" : "object",
                      "properties" : {
                        "contentType" : {
                          "type" : "string",
                          "description" : "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`."
                        },
                        "document" : {
                          "type" : "object",
                          "properties" : {
                            "definitions" : {
                              "type" : "object",
                              "description" : "Types definitions. Used for Swagger/OpenAPI schemas only, null otherwise."
                            },
                            "value" : {
                              "type" : "string",
                              "description" : "Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI."
                            }
                          },
                          "description" : "Schema Document Properties."
                        }
                      },
                      "description" : "API Schema create or update contract Properties."
                    }
                  },
                  "description" : "Schema Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Request to create or update Api schema configuration was accepted. Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiSchema" ],
        "description" : "Deletes the schema configuration at the Api.",
        "operationId" : "ApiSchema_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "schemaId",
          "in" : "path",
          "description" : "Schema identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "If true removes all references to the schema before deleting it.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the schema configuration at the API level."
          },
          "204" : {
            "description" : "Successfully deleted the schema configuration at the API level."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiSchema" ],
        "description" : "Gets the entity state (Etag) version of the schema specified by its identifier.",
        "operationId" : "ApiSchema_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "schemaId",
          "in" : "path",
          "description" : "Schema identifier within an API. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Specified schema entity exists and current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions" : {
      "get" : {
        "tags" : [ "ApiTagDescription" ],
        "description" : "Lists all Tags descriptions in scope of API. Model similar to swagger - tagDescription is defined on API level but tag may be assigned to the Operations",
        "operationId" : "ApiTagDescription_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation returns a collection of tagDescriptions associated with the Api entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "type" : "object",
                            "properties" : {
                              "displayName" : {
                                "maxLength" : 160,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Tag name."
                              },
                              "tagId" : {
                                "type" : "string",
                                "description" : "Identifier of the tag in the form of /tags/{tagId}"
                              }
                            },
                            "description" : "TagDescription contract Properties."
                          }
                        },
                        "description" : "Contract details."
                      }
                    }
                  },
                  "description" : "Paged TagDescription list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}" : {
      "get" : {
        "tags" : [ "ApiTagDescription" ],
        "description" : "Get Tag description in scope of API",
        "operationId" : "ApiTagDescription_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "tagDescriptionId",
          "in" : "path",
          "description" : "Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Gets the description of the tag specified by its identifier in scope if the Api.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag name."
                        },
                        "tagId" : {
                          "type" : "string",
                          "description" : "Identifier of the tag in the form of /tags/{tagId}"
                        }
                      },
                      "description" : "TagDescription contract Properties."
                    }
                  },
                  "description" : "Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiTagDescription" ],
        "description" : "Create/Update tag description in scope of the Api.",
        "operationId" : "ApiTagDescription_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "tagDescriptionId",
          "in" : "path",
          "description" : "Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "description" : {
                        "type" : "string",
                        "description" : "Description of the Tag."
                      },
                      "externalDocsDescription" : {
                        "type" : "string",
                        "description" : "Description of the external resources describing the tag."
                      },
                      "externalDocsUrl" : {
                        "maxLength" : 2000,
                        "type" : "string",
                        "description" : "Absolute URL of external resources describing the tag."
                      }
                    },
                    "description" : "Parameters supplied to the Create TagDescription operation."
                  }
                },
                "description" : "Parameters supplied to the Create TagDescription operation."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Tag Description was updated for the Api.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag name."
                        },
                        "tagId" : {
                          "type" : "string",
                          "description" : "Identifier of the tag in the form of /tags/{tagId}"
                        }
                      },
                      "description" : "TagDescription contract Properties."
                    }
                  },
                  "description" : "Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Tag Description was created for the Api.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag name."
                        },
                        "tagId" : {
                          "type" : "string",
                          "description" : "Identifier of the tag in the form of /tags/{tagId}"
                        }
                      },
                      "description" : "TagDescription contract Properties."
                    }
                  },
                  "description" : "Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiTagDescription" ],
        "description" : "Delete tag description for the Api.",
        "operationId" : "ApiTagDescription_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "tagDescriptionId",
          "in" : "path",
          "description" : "Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Tag description successfully removed"
          },
          "204" : {
            "description" : "Tag description successfully removed by previous request or does not exist"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiTagDescription" ],
        "description" : "Gets the entity state version of the tag specified by its identifier.",
        "operationId" : "ApiTagDescription_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "tagDescriptionId",
          "in" : "path",
          "description" : "Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Empty response body, ETag header entity state version.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags" : {
      "get" : {
        "tags" : [ "ApiTag" ],
        "description" : "Lists all Tags associated with the API.",
        "operationId" : "Tag_ListByApi",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation returns a collection of tags associated with the Api entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "displayName" ],
                            "type" : "object",
                            "properties" : {
                              "displayName" : {
                                "maxLength" : 160,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Tag name."
                              }
                            },
                            "description" : "Tag contract Properties."
                          }
                        },
                        "description" : "Tag Contract details."
                      }
                    }
                  },
                  "description" : "Paged Tag list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}" : {
      "get" : {
        "tags" : [ "ApiTag" ],
        "description" : "Get tag associated with the API.",
        "operationId" : "Tag_GetByApi",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Gets the details of the tag specified by its identifier.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "displayName" ],
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag name."
                        }
                      },
                      "description" : "Tag contract Properties."
                    }
                  },
                  "description" : "Tag Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApiTag" ],
        "description" : "Assign tag to the Api.",
        "operationId" : "Tag_AssignToApi",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Tag is already assigned to the Api.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "displayName" ],
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag name."
                        }
                      },
                      "description" : "Tag contract Properties."
                    }
                  },
                  "description" : "Tag Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Tag was assigned to the Api.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "displayName" ],
                      "type" : "object",
                      "properties" : {
                        "displayName" : {
                          "maxLength" : 160,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Tag name."
                        }
                      },
                      "description" : "Tag contract Properties."
                    }
                  },
                  "description" : "Tag Contract details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiTag" ],
        "description" : "Detach the tag from the Api.",
        "operationId" : "Tag_DetachFromApi",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "API/Tag association successfully removed"
          },
          "204" : {
            "description" : "API/Tag association successfully removed by previous request or does not exist"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ApiTag" ],
        "description" : "Gets the entity state version of the tag specified by its identifier.",
        "operationId" : "Tag_GetEntityStateByApi",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Empty response body, ETag header entity state version.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}