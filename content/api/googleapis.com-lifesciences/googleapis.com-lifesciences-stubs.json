{
  "mappings" : [ {
    "id" : "2ba5248c-8dd5-428d-84c9-9828ab865927",
    "name" : "Runs a pipeline. The returned Operation's metadata field will contain a google.c...",
    "request" : {
      "urlPath" : "/v2beta/i7vp2e18n0sqwtxn8wd3dggf2fgfafy6bfbdnn7jrwnfau90hcelxmks5jaea36ud86vk4201ddx4xi8w7wnyv3uvnyezaer25fvzyeboob36q672baho3ebwakqv5m9oen7pcgs40dvgcktti96nab1ssjq4cnljcy2m0qrmxfxa00nwkorjjk/pipelines:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Aretha Paucek\",\n  \"error\" : {\n    \"code\" : 591041316,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Excepturi voluptatem minus. Atque est id aut voluptatem velit ut. Voluptas et enim quam. Dicta ipsum dolorum in. Consequatur enim qui qui quas aperiam rem dolor.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ba5248c-8dd5-428d-84c9-9828ab865927",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.661325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.pipelines.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "6a3d4de6-e7a6-4d38-b029-226de4e6a207",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2beta/Erin+Krajcik:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a3d4de6-e7a6-4d38-b029-226de4e6a207",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.66105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "a5464d2a-6685-4ea7-aa1c-a9a744819d96",
    "name" : "Lists operations that match the specified filter in the request. Authorization r...",
    "request" : {
      "urlPath" : "/v2beta/Marisela+Bergstrom/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Linnie Breitenberg\",\n    \"error\" : {\n      \"code\" : 1600819265,\n      \"details\" : [ { } ],\n      \"message\" : \"Natus sit sequi. Nostrum et accusamus quas magnam. Voluptatem perspiciatis pariatur impedit ut quia repudiandae. Voluptas qui eligendi. Est eos dolore.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Bert Auer\",\n    \"error\" : {\n      \"code\" : 6413996,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Dolores nemo et pariatur dolores reprehenderit et iusto. Debitis architecto ut ut ex aut nobis. Fugit voluptatem officia assumenda a qui. Rerum quisquam dolorem. Dolores molestiae repellat.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Gabriel Christiansen\",\n    \"error\" : {\n      \"code\" : 127663978,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Quos dolores libero. Numquam ut et consequuntur. Labore quo repellendus natus natus rerum facilis praesentium. Asperiores quia rerum vitae. Non ab fuga.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jeannie Schaden\",\n    \"error\" : {\n      \"code\" : 1314563270,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut eveniet rerum id eius. Unde tenetur eveniet nam. Et similique aut deserunt sunt.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Earnest Hills Sr.\",\n    \"error\" : {\n      \"code\" : 2104706660,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Aut optio ut dolore illo id odio voluptatem. Cum aut soluta tempora et incidunt ut dolore. Dolorem quos tempore deserunt mollitia unde. Et quia ullam consectetur vel in. Maxime quas et repellat aliqua\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Adalberto Collins\",\n    \"error\" : {\n      \"code\" : 1841747519,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Repellat consequatur qui. Asperiores molestiae nisi id ipsam ipsum a illo. Ut non ea unde perferendis exercitationem rerum. Dolores est sit aut odit sed. Molestiae sequi cum.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"j600yw2bqsxx65b3ievlxsjqqzz6k5j89c659ej5tfq9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5464d2a-6685-4ea7-aa1c-a9a744819d96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.66093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "c984b11d-f303-4d67-978b-94def1270b69",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta/Janey+Armstrong/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"kg7rdmq97su1qt0z380\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Kaitlin Harris PhD\",\n    \"locationId\" : \"4os7\",\n    \"name\" : \"Maryjane Kuvalis\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dale Boyle\",\n    \"locationId\" : \"4608\",\n    \"name\" : \"Jade Hodkiewicz\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jimmy Feil\",\n    \"locationId\" : \"5h3i\",\n    \"name\" : \"Tayna Wolff\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Rosalina Turner\",\n    \"locationId\" : \"ej3m\",\n    \"name\" : \"Cristen Leannon\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Julietta Beatty\",\n    \"locationId\" : \"71w7\",\n    \"name\" : \"Miss Susanne Heathcote\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Bo Baumbach\",\n    \"locationId\" : \"fg1x\",\n    \"name\" : \"Marni Schulist\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Bess Barrows\",\n    \"locationId\" : \"2189\",\n    \"name\" : \"Elana Krajcik\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c984b11d-f303-4d67-978b-94def1270b69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.659771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "cf2d7084-bae0-4b4e-974b-1a8f491fd80d",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2beta/Noble+Turcotte",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Byron Kunze\",\n  \"error\" : {\n    \"code\" : 275292748,\n    \"details\" : [ { } ],\n    \"message\" : \"Commodi vel aspernatur. Dolores quaerat voluptate molestiae ea natus. Earum id incidunt quibusdam alias minus ut rerum. Consequatur soluta numquam odit.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf2d7084-bae0-4b4e-974b-1a8f491fd80d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.65754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}