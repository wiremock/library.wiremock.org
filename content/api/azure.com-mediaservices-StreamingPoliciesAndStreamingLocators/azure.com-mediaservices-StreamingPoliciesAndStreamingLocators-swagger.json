{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure Media Services",
    "description" : "This Swagger was generated by the API Framework.",
    "version" : "2018-07-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators" : {
      "get" : {
        "summary" : "List Streaming Locators",
        "description" : "Lists the Streaming Locators in the account",
        "operationId" : "StreamingLocators_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Restricts the set of items returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Specifies the key by which the result collection should be ordered.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingLocatorCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}" : {
      "get" : {
        "summary" : "Get a Streaming Locator",
        "description" : "Get the details of a Streaming Locator in the Media Services account",
        "operationId" : "StreamingLocators_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingLocatorName",
          "in" : "path",
          "description" : "The Streaming Locator name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingLocator"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Create a Streaming Locator",
        "description" : "Create a Streaming Locator in the Media Services account",
        "operationId" : "StreamingLocators_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingLocatorName",
          "in" : "path",
          "description" : "The Streaming Locator name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StreamingLocator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingLocator"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a Streaming Locator",
        "description" : "Deletes a Streaming Locator in the Media Services account",
        "operationId" : "StreamingLocators_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingLocatorName",
          "in" : "path",
          "description" : "The Streaming Locator name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "NoContent"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}/listContentKeys" : {
      "post" : {
        "summary" : "List Content Keys",
        "description" : "List Content Keys used by this Streaming Locator",
        "operationId" : "StreamingLocators_ListContentKeys",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingLocatorName",
          "in" : "path",
          "description" : "The Streaming Locator name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListContentKeysResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}/listPaths" : {
      "post" : {
        "summary" : "List Paths",
        "description" : "List Paths supported by this Streaming Locator",
        "operationId" : "StreamingLocators_ListPaths",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingLocatorName",
          "in" : "path",
          "description" : "The Streaming Locator name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListPathsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies" : {
      "get" : {
        "summary" : "List Streaming Policies",
        "description" : "Lists the Streaming Policies in the account",
        "operationId" : "StreamingPolicies_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Restricts the set of items returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Specifies the key by which the result collection should be ordered.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingPolicyCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies/{streamingPolicyName}" : {
      "get" : {
        "summary" : "Get a Streaming Policy",
        "description" : "Get the details of a Streaming Policy in the Media Services account",
        "operationId" : "StreamingPolicies_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingPolicyName",
          "in" : "path",
          "description" : "The Streaming Policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingPolicy"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Create a Streaming Policy",
        "description" : "Create a Streaming Policy in the Media Services account",
        "operationId" : "StreamingPolicies_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingPolicyName",
          "in" : "path",
          "description" : "The Streaming Policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StreamingPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingPolicy"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a Streaming Policy",
        "description" : "Deletes a Streaming Policy in the Media Services account",
        "operationId" : "StreamingPolicies_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingPolicyName",
          "in" : "path",
          "description" : "The Streaming Policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "NoContent"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ODataError"
          }
        },
        "description" : "The API error."
      },
      "CbcsDrmConfiguration" : {
        "type" : "object",
        "properties" : {
          "fairPlay" : {
            "$ref" : "#/components/schemas/StreamingPolicyFairPlayConfiguration"
          },
          "playReady" : {
            "$ref" : "#/components/schemas/StreamingPolicyPlayReadyConfiguration"
          },
          "widevine" : {
            "$ref" : "#/components/schemas/StreamingPolicyWidevineConfiguration"
          }
        },
        "description" : "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy"
      },
      "CencDrmConfiguration" : {
        "type" : "object",
        "properties" : {
          "playReady" : {
            "$ref" : "#/components/schemas/StreamingPolicyPlayReadyConfiguration"
          },
          "widevine" : {
            "$ref" : "#/components/schemas/StreamingPolicyWidevineConfiguration"
          }
        },
        "description" : "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy"
      },
      "CommonEncryptionCbcs" : {
        "type" : "object",
        "properties" : {
          "clearTracks" : {
            "type" : "array",
            "description" : "Representing which tracks should not be encrypted",
            "items" : {
              "$ref" : "#/components/schemas/TrackSelection"
            }
          },
          "contentKeys" : {
            "$ref" : "#/components/schemas/StreamingPolicyContentKeys"
          },
          "drm" : {
            "$ref" : "#/components/schemas/CbcsDrmConfiguration"
          },
          "enabledProtocols" : {
            "$ref" : "#/components/schemas/EnabledProtocols"
          }
        },
        "description" : "Class for CommonEncryptionCbcs encryption scheme"
      },
      "CommonEncryptionCenc" : {
        "type" : "object",
        "properties" : {
          "clearTracks" : {
            "type" : "array",
            "description" : "Representing which tracks should not be encrypted",
            "items" : {
              "$ref" : "#/components/schemas/TrackSelection"
            }
          },
          "contentKeys" : {
            "$ref" : "#/components/schemas/StreamingPolicyContentKeys"
          },
          "drm" : {
            "$ref" : "#/components/schemas/CencDrmConfiguration"
          },
          "enabledProtocols" : {
            "$ref" : "#/components/schemas/EnabledProtocols"
          }
        },
        "description" : "Class for envelope encryption scheme"
      },
      "DefaultKey" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label can be used to specify Content Key when creating a Streaming Locator"
          },
          "policyName" : {
            "type" : "string",
            "description" : "Policy used by Default Key"
          }
        },
        "description" : "Class to specify properties of default content key for each encryption scheme"
      },
      "EnabledProtocols" : {
        "required" : [ "dash", "download", "hls", "smoothStreaming" ],
        "type" : "object",
        "properties" : {
          "dash" : {
            "type" : "boolean",
            "description" : "Enable DASH protocol or not"
          },
          "download" : {
            "type" : "boolean",
            "description" : "Enable Download protocol or not"
          },
          "hls" : {
            "type" : "boolean",
            "description" : "Enable HLS protocol or not"
          },
          "smoothStreaming" : {
            "type" : "boolean",
            "description" : "Enable SmoothStreaming protocol or not"
          }
        },
        "description" : "Class to specify which protocols are enabled"
      },
      "EnvelopeEncryption" : {
        "type" : "object",
        "properties" : {
          "clearTracks" : {
            "type" : "array",
            "description" : "Representing which tracks should not be encrypted",
            "items" : {
              "$ref" : "#/components/schemas/TrackSelection"
            }
          },
          "contentKeys" : {
            "$ref" : "#/components/schemas/StreamingPolicyContentKeys"
          },
          "customKeyAcquisitionUrlTemplate" : {
            "type" : "string",
            "description" : "Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
          },
          "enabledProtocols" : {
            "$ref" : "#/components/schemas/EnabledProtocols"
          }
        },
        "description" : "Class for EnvelopeEncryption encryption scheme"
      },
      "ListContentKeysResponse" : {
        "type" : "object",
        "properties" : {
          "contentKeys" : {
            "type" : "array",
            "description" : "ContentKeys used by current Streaming Locator",
            "items" : {
              "$ref" : "#/components/schemas/StreamingLocatorContentKey"
            }
          }
        },
        "description" : "Class of response for listContentKeys action"
      },
      "ListPathsResponse" : {
        "type" : "object",
        "properties" : {
          "downloadPaths" : {
            "type" : "array",
            "description" : "Download Paths supported by current Streaming Locator",
            "items" : {
              "type" : "string"
            }
          },
          "streamingPaths" : {
            "type" : "array",
            "description" : "Streaming Paths supported by current Streaming Locator",
            "items" : {
              "$ref" : "#/components/schemas/StreamingPath"
            }
          }
        },
        "description" : "Class of response for listPaths action"
      },
      "NoEncryption" : {
        "type" : "object",
        "properties" : {
          "enabledProtocols" : {
            "$ref" : "#/components/schemas/EnabledProtocols"
          }
        },
        "description" : "Class for NoEncryption scheme"
      },
      "ODataError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A language-independent error name."
          },
          "details" : {
            "type" : "array",
            "description" : "The error details.",
            "items" : {
              "$ref" : "#/components/schemas/ODataError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error (for example, the name of the property in error)."
          }
        },
        "description" : "Information about an error."
      },
      "StreamingLocator" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StreamingLocatorProperties"
          }
        },
        "description" : "A Streaming Locator resource",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "StreamingLocatorCollection" : {
        "type" : "object",
        "properties" : {
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "A link to the next page of the collection (when the collection contains too many results to return in one response)."
          },
          "value" : {
            "type" : "array",
            "description" : "A collection of StreamingLocator items.",
            "items" : {
              "$ref" : "#/components/schemas/StreamingLocator"
            }
          }
        },
        "description" : "A collection of StreamingLocator items."
      },
      "StreamingLocatorContentKey" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of Content Key",
            "format" : "uuid"
          },
          "labelReferenceInStreamingPolicy" : {
            "type" : "string",
            "description" : "Label of Content Key as specified in the Streaming Policy"
          },
          "policyName" : {
            "type" : "string",
            "description" : "ContentKeyPolicy used by Content Key",
            "readOnly" : true
          },
          "tracks" : {
            "type" : "array",
            "description" : "Tracks which use this Content Key",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/TrackSelection"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Encryption type of Content Key",
            "nullable" : false,
            "readOnly" : true,
            "enum" : [ "CommonEncryptionCenc", "CommonEncryptionCbcs", "EnvelopeEncryption" ]
          },
          "value" : {
            "type" : "string",
            "description" : "Value of Content Key"
          }
        },
        "description" : "Class for content key in Streaming Locator"
      },
      "StreamingLocatorProperties" : {
        "required" : [ "assetName", "streamingPolicyName" ],
        "type" : "object",
        "properties" : {
          "alternativeMediaId" : {
            "type" : "string",
            "description" : "Alternative Media ID of this Streaming Locator"
          },
          "assetName" : {
            "type" : "string",
            "description" : "Asset Name"
          },
          "contentKeys" : {
            "type" : "array",
            "description" : "The ContentKeys used by this Streaming Locator.",
            "items" : {
              "$ref" : "#/components/schemas/StreamingLocatorContentKey"
            }
          },
          "created" : {
            "type" : "string",
            "description" : "The creation time of the Streaming Locator.",
            "format" : "date-time",
            "nullable" : false,
            "readOnly" : true
          },
          "defaultContentKeyPolicyName" : {
            "type" : "string",
            "description" : "Name of the default ContentKeyPolicy used by this Streaming Locator."
          },
          "endTime" : {
            "type" : "string",
            "description" : "The end time of the Streaming Locator.",
            "format" : "date-time"
          },
          "filters" : {
            "type" : "array",
            "description" : "A list of asset or account filters which apply to this streaming locator",
            "items" : {
              "type" : "string"
            }
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the Streaming Locator.",
            "format" : "date-time"
          },
          "streamingLocatorId" : {
            "type" : "string",
            "description" : "The StreamingLocatorId of the Streaming Locator.",
            "format" : "uuid"
          },
          "streamingPolicyName" : {
            "type" : "string",
            "description" : "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'"
          }
        },
        "description" : "Properties of the Streaming Locator."
      },
      "StreamingPath" : {
        "required" : [ "encryptionScheme", "streamingProtocol" ],
        "type" : "object",
        "properties" : {
          "encryptionScheme" : {
            "type" : "string",
            "description" : "Encryption scheme",
            "enum" : [ "NoEncryption", "EnvelopeEncryption", "CommonEncryptionCenc", "CommonEncryptionCbcs" ]
          },
          "paths" : {
            "type" : "array",
            "description" : "Streaming paths for each protocol and encryptionScheme pair",
            "items" : {
              "type" : "string"
            }
          },
          "streamingProtocol" : {
            "type" : "string",
            "description" : "Streaming protocol",
            "enum" : [ "Hls", "Dash", "SmoothStreaming", "Download" ]
          }
        },
        "description" : "Class of paths for streaming"
      },
      "StreamingPolicy" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StreamingPolicyProperties"
          }
        },
        "description" : "A Streaming Policy resource",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "StreamingPolicyCollection" : {
        "type" : "object",
        "properties" : {
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "A link to the next page of the collection (when the collection contains too many results to return in one response)."
          },
          "value" : {
            "type" : "array",
            "description" : "A collection of StreamingPolicy items.",
            "items" : {
              "$ref" : "#/components/schemas/StreamingPolicy"
            }
          }
        },
        "description" : "A collection of StreamingPolicy items."
      },
      "StreamingPolicyContentKey" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label can be used to specify Content Key when creating a Streaming Locator"
          },
          "policyName" : {
            "type" : "string",
            "description" : "Policy used by Content Key"
          },
          "tracks" : {
            "type" : "array",
            "description" : "Tracks which use this content key",
            "items" : {
              "$ref" : "#/components/schemas/TrackSelection"
            }
          }
        },
        "description" : "Class to specify properties of content key"
      },
      "StreamingPolicyContentKeys" : {
        "type" : "object",
        "properties" : {
          "defaultKey" : {
            "$ref" : "#/components/schemas/DefaultKey"
          },
          "keyToTrackMappings" : {
            "type" : "array",
            "description" : "Representing tracks needs separate content key",
            "items" : {
              "$ref" : "#/components/schemas/StreamingPolicyContentKey"
            }
          }
        },
        "description" : "Class to specify properties of all content keys in Streaming Policy"
      },
      "StreamingPolicyFairPlayConfiguration" : {
        "required" : [ "allowPersistentLicense" ],
        "type" : "object",
        "properties" : {
          "allowPersistentLicense" : {
            "type" : "boolean",
            "description" : "All license to be persistent or not"
          },
          "customLicenseAcquisitionUrlTemplate" : {
            "type" : "string",
            "description" : "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
          }
        },
        "description" : "Class to specify configurations of FairPlay in Streaming Policy"
      },
      "StreamingPolicyPlayReadyConfiguration" : {
        "type" : "object",
        "properties" : {
          "customLicenseAcquisitionUrlTemplate" : {
            "type" : "string",
            "description" : "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
          },
          "playReadyCustomAttributes" : {
            "type" : "string",
            "description" : "Custom attributes for PlayReady"
          }
        },
        "description" : "Class to specify configurations of PlayReady in Streaming Policy"
      },
      "StreamingPolicyProperties" : {
        "type" : "object",
        "properties" : {
          "commonEncryptionCbcs" : {
            "$ref" : "#/components/schemas/CommonEncryptionCbcs"
          },
          "commonEncryptionCenc" : {
            "$ref" : "#/components/schemas/CommonEncryptionCenc"
          },
          "created" : {
            "type" : "string",
            "description" : "Creation time of Streaming Policy",
            "format" : "date-time",
            "nullable" : false,
            "readOnly" : true
          },
          "defaultContentKeyPolicyName" : {
            "type" : "string",
            "description" : "Default ContentKey used by current Streaming Policy"
          },
          "envelopeEncryption" : {
            "$ref" : "#/components/schemas/EnvelopeEncryption"
          },
          "noEncryption" : {
            "$ref" : "#/components/schemas/NoEncryption"
          }
        },
        "description" : "Class to specify properties of Streaming Policy"
      },
      "StreamingPolicyWidevineConfiguration" : {
        "type" : "object",
        "properties" : {
          "customLicenseAcquisitionUrlTemplate" : {
            "type" : "string",
            "description" : "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
          }
        },
        "description" : "Class to specify configurations of Widevine in Streaming Policy"
      },
      "TrackPropertyCondition" : {
        "required" : [ "operation", "property" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "description" : "Track property condition operation",
            "enum" : [ "Unknown", "Equal" ]
          },
          "property" : {
            "type" : "string",
            "description" : "Track property type",
            "enum" : [ "Unknown", "FourCC" ]
          },
          "value" : {
            "type" : "string",
            "description" : "Track property value"
          }
        },
        "description" : "Class to specify one track property condition"
      },
      "TrackSelection" : {
        "type" : "object",
        "properties" : {
          "trackSelections" : {
            "type" : "array",
            "description" : "TrackSelections is a track property condition list which can specify track(s)",
            "items" : {
              "$ref" : "#/components/schemas/TrackPropertyCondition"
            }
          }
        },
        "description" : "Class to select a track"
      }
    },
    "parameters" : {
      "ApiVersion" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The Version of the API to be used with the client request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "MediaServicesAccountName" : {
        "name" : "accountName",
        "in" : "path",
        "description" : "The Media Services account name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group within the Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The unique identifier for a Microsoft Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}