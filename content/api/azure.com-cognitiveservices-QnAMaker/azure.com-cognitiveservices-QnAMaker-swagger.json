{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "QnAMaker Client",
    "description" : "An API for QnAMaker Service",
    "version" : "4.0"
  },
  "servers" : [ {
    "url" : "https://azure.local/"
  } ],
  "security" : [ {
    "apim_key" : null
  } ],
  "paths" : {
    "/alterations" : {
      "get" : {
        "tags" : [ "Alterations" ],
        "summary" : "Download alterations from runtime.",
        "operationId" : "Alterations_Get",
        "responses" : {
          "200" : {
            "description" : "Alterations data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WordAlterationsDTO"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Alterations" ],
        "summary" : "Replace alterations data.",
        "operationId" : "Alterations_Replace",
        "requestBody" : {
          "description" : "New alterations data.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WordAlterationsDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "HTTP 204 No Content."
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/endpointSettings" : {
      "get" : {
        "summary" : "Gets endpoint settings for an endpoint.",
        "operationId" : "EndpointSettings_GetSettings",
        "responses" : {
          "200" : {
            "description" : "Response with endpoint settings info in it.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndpointSettingsDTO"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "EndpointKeys" ],
        "summary" : "Updates endpoint settings for an endpoint.",
        "operationId" : "EndpointSettings_UpdateSettings",
        "requestBody" : {
          "description" : "Post body of the request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EndpointSettingsDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response with endpointSettings update status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/endpointkeys" : {
      "get" : {
        "summary" : "Gets endpoint keys for an endpoint",
        "operationId" : "EndpointKeys_GetKeys",
        "responses" : {
          "200" : {
            "description" : "Response with endpoint info in it.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndpointKeysDTO"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/endpointkeys/{keyType}" : {
      "patch" : {
        "tags" : [ "EndpointKeys" ],
        "summary" : "Re-generates an endpoint key.",
        "operationId" : "EndpointKeys_RefreshKeys",
        "parameters" : [ {
          "name" : "keyType",
          "in" : "path",
          "description" : "Type of Key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of the endpoint keys generated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndpointKeysDTO"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/knowledgebases" : {
      "get" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "Gets all knowledgebases for a user.",
        "operationId" : "Knowledgebase_ListAll",
        "responses" : {
          "200" : {
            "description" : "Collection of knowledgebases.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgebasesDTO"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/knowledgebases/create" : {
      "post" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "Asynchronous operation to create a new knowledgebase.",
        "operationId" : "Knowledgebase_Create",
        "requestBody" : {
          "description" : "Post body of the request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateKbDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Details of the asynchronous operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/knowledgebases/{kbId}" : {
      "get" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "Gets details of a specific knowledgebase.",
        "operationId" : "Knowledgebase_GetDetails",
        "parameters" : [ {
          "name" : "kbId",
          "in" : "path",
          "description" : "Knowledgebase id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of the knowledgebase.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgebaseDTO"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "Replace knowledgebase contents.",
        "operationId" : "Knowledgebase_Replace",
        "parameters" : [ {
          "name" : "kbId",
          "in" : "path",
          "description" : "Knowledgebase id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "An instance of ReplaceKbDTO which contains list of qnas to be uploaded",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReplaceKbDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "HTTP 204 No content."
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "Publishes all changes in test index of a knowledgebase to its prod index.",
        "operationId" : "Knowledgebase_Publish",
        "parameters" : [ {
          "name" : "kbId",
          "in" : "path",
          "description" : "Knowledgebase id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "HTTP 204 No content."
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "Deletes the knowledgebase and all its data.",
        "operationId" : "Knowledgebase_Delete",
        "parameters" : [ {
          "name" : "kbId",
          "in" : "path",
          "description" : "Knowledgebase id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "HTTP 204 No content."
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "Asynchronous operation to modify a knowledgebase.",
        "operationId" : "Knowledgebase_Update",
        "parameters" : [ {
          "name" : "kbId",
          "in" : "path",
          "description" : "Knowledgebase id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Post body of the request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateKbOperationDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Details of the asynchronous operation.",
            "headers" : {
              "Location" : {
                "description" : "Relative URI to the target location of the asynchronous operation. Client should poll this resource to get status of the operation.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/knowledgebases/{kbId}/{environment}/qna" : {
      "get" : {
        "tags" : [ "Knowledgebases" ],
        "summary" : "Download the knowledgebase.",
        "operationId" : "Knowledgebase_Download",
        "parameters" : [ {
          "name" : "kbId",
          "in" : "path",
          "description" : "Knowledgebase id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "environment",
          "in" : "path",
          "description" : "Specifies whether environment is Test or Prod.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Prod", "Test" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Collection of all Q-A in the knowledgebase.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QnADocumentsDTO"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/operations/{operationId}" : {
      "get" : {
        "tags" : [ "Operations" ],
        "summary" : "Gets details of a specific long running operation.",
        "operationId" : "Operations_GetDetails",
        "parameters" : [ {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of the long running operation.",
            "headers" : {
              "RetryAfter" : {
                "description" : "Indicates how long the client should wait before sending a follow up request. The header will be present only if the operation is running or has not started yet.",
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ActiveLearningSettingsDTO" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "string",
            "description" : "True/False string providing Active Learning"
          }
        },
        "additionalProperties" : false,
        "description" : "Active Learning settings of the endpoint."
      },
      "AlterationsDTO" : {
        "required" : [ "alterations" ],
        "type" : "object",
        "properties" : {
          "alterations" : {
            "type" : "array",
            "description" : "Words that are synonymous with each other.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Collection of words that are synonyms."
      },
      "ContextDTO" : {
        "type" : "object",
        "properties" : {
          "isContextOnly" : {
            "type" : "boolean",
            "description" : "To mark if a prompt is relevant only with a previous question or not.\ntrue - Do not include this QnA as search result for queries without context\nfalse - ignores context and includes this QnA in search result"
          },
          "prompts" : {
            "maxItems" : 20,
            "type" : "array",
            "description" : "List of prompts associated with the answer.",
            "items" : {
              "$ref" : "#/components/schemas/PromptDTO"
            }
          }
        },
        "description" : "Context associated with Qna."
      },
      "CreateKbDTO" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "defaultAnswerUsedForExtraction" : {
            "maxLength" : 300,
            "minLength" : 1,
            "type" : "string",
            "description" : "Text string to be used as the answer in any Q-A which has no extracted answer from the document but has a hierarchy. Required when EnableHierarchicalExtraction field is set to True."
          },
          "enableHierarchicalExtraction" : {
            "type" : "boolean",
            "description" : "Enable hierarchical extraction of Q-A from files and urls. Value to be considered False if this field is not present."
          },
          "files" : {
            "type" : "array",
            "description" : "List of files from which to Extract Q-A.",
            "items" : {
              "$ref" : "#/components/schemas/FileDTO"
            }
          },
          "language" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string",
            "description" : "Language of the knowledgebase."
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string",
            "description" : "Friendly name for the knowledgebase."
          },
          "qnaList" : {
            "type" : "array",
            "description" : "List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and should be omitted.",
            "items" : {
              "$ref" : "#/components/schemas/QnADTO"
            }
          },
          "urls" : {
            "type" : "array",
            "description" : "List of URLs to be used for extracting Q-A.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Post body schema for CreateKb operation."
      },
      "CreateKbInputDTO" : {
        "type" : "object",
        "properties" : {
          "files" : {
            "type" : "array",
            "description" : "List of files to be added to knowledgebase.",
            "items" : {
              "$ref" : "#/components/schemas/FileDTO"
            }
          },
          "qnaList" : {
            "type" : "array",
            "description" : "List of QNA to be added to the index. Ids are generated by the service and should be omitted.",
            "items" : {
              "$ref" : "#/components/schemas/QnADTO"
            }
          },
          "urls" : {
            "type" : "array",
            "description" : "List of URLs to be added to knowledgebase.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Input to create KB."
      },
      "DeleteKbContentsDTO" : {
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "description" : "List of Qna Ids to be deleted",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "sources" : {
            "type" : "array",
            "description" : "List of sources to be deleted from knowledgebase.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "PATCH body schema of Delete Operation in UpdateKb"
      },
      "EndpointKeysDTO" : {
        "type" : "object",
        "properties" : {
          "installedVersion" : {
            "type" : "string",
            "description" : "Current version of runtime."
          },
          "language" : {
            "type" : "string",
            "description" : "Language setting of runtime."
          },
          "lastStableVersion" : {
            "type" : "string",
            "description" : "Latest version of runtime."
          },
          "primaryEndpointKey" : {
            "type" : "string",
            "description" : "Primary Access Key."
          },
          "secondaryEndpointKey" : {
            "type" : "string",
            "description" : "Secondary Access Key."
          }
        },
        "additionalProperties" : false,
        "description" : "Schema for EndpointKeys generate/refresh operations."
      },
      "EndpointSettingsDTO" : {
        "type" : "object",
        "properties" : {
          "activeLearning" : {
            "type" : "object",
            "description" : "Active Learning settings of the endpoint.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActiveLearningSettingsDTO"
            } ]
          }
        },
        "additionalProperties" : false,
        "description" : "Endpoint settings."
      },
      "Error" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/ErrorCode"
          },
          "details" : {
            "type" : "array",
            "description" : "An array of details about specific errors that led to this reported error.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            }
          },
          "innerError" : {
            "$ref" : "#/components/schemas/InnerErrorModel"
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable representation of the error."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error."
          }
        },
        "additionalProperties" : false,
        "description" : "The error object. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses."
      },
      "ErrorCode" : {
        "type" : "string",
        "description" : "Human readable error code.",
        "enum" : [ "BadArgument", "Forbidden", "NotFound", "KbNotFound", "Unauthorized", "Unspecified", "EndpointKeysError", "QuotaExceeded", "QnaRuntimeError", "SKULimitExceeded", "OperationNotFound", "ServiceError", "ValidationFailure", "ExtractionFailure" ]
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "description" : "The error object.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Error"
            } ]
          }
        },
        "additionalProperties" : false,
        "description" : "Error response. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses."
      },
      "FileDTO" : {
        "required" : [ "fileName", "fileUri" ],
        "type" : "object",
        "properties" : {
          "fileName" : {
            "maxLength" : 200,
            "minLength" : 1,
            "type" : "string",
            "description" : "File name. Supported file types are \".tsv\", \".pdf\", \".txt\", \".docx\", \".xlsx\"."
          },
          "fileUri" : {
            "type" : "string",
            "description" : "Public URI of the file."
          }
        },
        "additionalProperties" : false,
        "description" : "DTO to hold details of uploaded files."
      },
      "InnerErrorModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A more specific error code than was provided by the containing error."
          },
          "innerError" : {
            "$ref" : "#/components/schemas/InnerErrorModel"
          }
        },
        "additionalProperties" : false,
        "description" : "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses."
      },
      "KnowledgebaseDTO" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "description" : "URL host name at which the knowledgebase is hosted."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique id that identifies a knowledgebase."
          },
          "lastAccessedTimestamp" : {
            "type" : "string",
            "description" : "Time stamp at which the knowledgebase was last accessed (UTC)."
          },
          "lastChangedTimestamp" : {
            "type" : "string",
            "description" : "Time stamp at which the knowledgebase was last modified (UTC)."
          },
          "lastPublishedTimestamp" : {
            "type" : "string",
            "description" : "Time stamp at which the knowledgebase was last published (UTC)."
          },
          "name" : {
            "type" : "string",
            "description" : "Friendly name of the knowledgebase."
          },
          "sources" : {
            "type" : "array",
            "description" : "Custom sources from which Q-A were extracted or explicitly added to the knowledgebase.",
            "items" : {
              "type" : "string"
            }
          },
          "urls" : {
            "type" : "array",
            "description" : "URL sources from which Q-A were extracted and added to the knowledgebase.",
            "items" : {
              "type" : "string"
            }
          },
          "userId" : {
            "type" : "string",
            "description" : "User who created / owns the knowledgebase."
          }
        },
        "additionalProperties" : false,
        "description" : "Response schema for CreateKb operation."
      },
      "KnowledgebasesDTO" : {
        "type" : "object",
        "properties" : {
          "knowledgebases" : {
            "type" : "array",
            "description" : "Collection of knowledgebase records.",
            "items" : {
              "$ref" : "#/components/schemas/KnowledgebaseDTO"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Collection of knowledgebases owned by a user."
      },
      "MetadataDTO" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string",
            "description" : "Metadata name."
          },
          "value" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "Metadata value."
          }
        },
        "additionalProperties" : false,
        "description" : "Name - value pair of metadata."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "createdTimestamp" : {
            "type" : "string",
            "description" : "Timestamp when the operation was created."
          },
          "errorResponse" : {
            "$ref" : "#/components/schemas/ErrorResponse"
          },
          "lastActionTimestamp" : {
            "type" : "string",
            "description" : "Timestamp when the current state was entered."
          },
          "operationId" : {
            "type" : "string",
            "description" : "Operation Id."
          },
          "operationState" : {
            "$ref" : "#/components/schemas/OperationState"
          },
          "resourceLocation" : {
            "type" : "string",
            "description" : "Relative URI to the target resource location for completed resources."
          },
          "userId" : {
            "type" : "string",
            "description" : "User Id"
          }
        },
        "additionalProperties" : false,
        "description" : "Record to track long running operation."
      },
      "OperationState" : {
        "type" : "string",
        "description" : "Enumeration of operation states.",
        "enum" : [ "Failed", "NotStarted", "Running", "Succeeded" ]
      },
      "PromptDTO" : {
        "type" : "object",
        "properties" : {
          "displayOrder" : {
            "type" : "integer",
            "description" : "Index of the prompt - used in ordering of the prompts",
            "format" : "int32"
          },
          "displayText" : {
            "maxLength" : 200,
            "type" : "string",
            "description" : "Text displayed to represent a follow up question prompt"
          },
          "qna" : {
            "type" : "object",
            "description" : "QnADTO - Either QnaId or QnADTO needs to be present in a PromptDTO object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/QnADTO"
            } ]
          },
          "qnaId" : {
            "type" : "integer",
            "description" : "Qna id corresponding to the prompt - if QnaId is present, QnADTO object is ignored.",
            "format" : "int32"
          }
        },
        "description" : "Prompt for an answer."
      },
      "QnADTO" : {
        "required" : [ "answer", "questions" ],
        "type" : "object",
        "properties" : {
          "answer" : {
            "maxLength" : 25000,
            "minLength" : 1,
            "type" : "string",
            "description" : "Answer text"
          },
          "context" : {
            "type" : "object",
            "description" : "Context of a QnA",
            "allOf" : [ {
              "$ref" : "#/components/schemas/ContextDTO"
            } ]
          },
          "id" : {
            "type" : "integer",
            "description" : "Unique id for the Q-A.",
            "format" : "int32"
          },
          "metadata" : {
            "type" : "array",
            "description" : "List of metadata associated with the answer.",
            "items" : {
              "$ref" : "#/components/schemas/MetadataDTO"
            }
          },
          "questions" : {
            "type" : "array",
            "description" : "List of questions associated with the answer.",
            "items" : {
              "type" : "string"
            }
          },
          "source" : {
            "maxLength" : 300,
            "type" : "string",
            "description" : "Source from which Q-A was indexed. eg. https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs"
          }
        },
        "additionalProperties" : false,
        "description" : "Q-A object."
      },
      "QnADocumentsDTO" : {
        "type" : "object",
        "properties" : {
          "qnaDocuments" : {
            "type" : "array",
            "description" : "List of answers.",
            "items" : {
              "$ref" : "#/components/schemas/QnADTO"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "List of QnADTO"
      },
      "ReplaceKbDTO" : {
        "required" : [ "qnAList" ],
        "type" : "object",
        "properties" : {
          "qnAList" : {
            "type" : "array",
            "description" : "List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and should be omitted.",
            "items" : {
              "$ref" : "#/components/schemas/QnADTO"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Post body schema for Replace KB operation."
      },
      "UpdateContextDTO" : {
        "type" : "object",
        "properties" : {
          "isContextOnly" : {
            "type" : "boolean",
            "description" : "To mark if a prompt is relevant only with a previous question or not.\ntrue - Do not include this QnA as search result for queries without context\nfalse - ignores context and includes this QnA in search result"
          },
          "promptsToAdd" : {
            "type" : "array",
            "description" : "List of prompts to be added to the qna.",
            "items" : {
              "$ref" : "#/components/schemas/PromptDTO"
            }
          },
          "promptsToDelete" : {
            "type" : "array",
            "description" : "List of prompts associated with qna to be deleted",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        },
        "description" : "Update Body schema to represent context to be updated"
      },
      "UpdateKbContentsDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Friendly name for the knowledgebase."
          },
          "qnaList" : {
            "type" : "array",
            "description" : "List of Q-A (UpdateQnaDTO) to be added to the knowledgebase.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateQnaDTO"
            }
          },
          "urls" : {
            "type" : "array",
            "description" : "List of existing URLs to be refreshed. The content will be extracted again and re-indexed.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "PATCH body schema for Update operation in Update Kb"
      },
      "UpdateKbOperationDTO" : {
        "type" : "object",
        "properties" : {
          "add" : {
            "type" : "object",
            "description" : "An instance of CreateKbInputDTO for add operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateKbInputDTO"
            } ]
          },
          "defaultAnswerUsedForExtraction" : {
            "maxLength" : 300,
            "minLength" : 1,
            "type" : "string",
            "description" : "Text string to be used as the answer in any Q-A which has no extracted answer from the document but has a hierarchy. Required when EnableHierarchicalExtraction field is set to True."
          },
          "delete" : {
            "type" : "object",
            "description" : "An instance of DeleteKbContentsDTO for delete Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DeleteKbContentsDTO"
            } ]
          },
          "enableHierarchicalExtraction" : {
            "type" : "boolean",
            "description" : "Enable hierarchical extraction of Q-A from files and urls. The value set during KB creation will be used if this field is not present."
          },
          "update" : {
            "type" : "object",
            "description" : "An instance of UpdateKbContentsDTO for Update Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateKbContentsDTO"
            } ]
          }
        },
        "additionalProperties" : false,
        "description" : "Contains list of QnAs to be updated"
      },
      "UpdateMetadataDTO" : {
        "type" : "object",
        "properties" : {
          "add" : {
            "type" : "array",
            "description" : "List of metadata associated with answer to be added",
            "items" : {
              "$ref" : "#/components/schemas/MetadataDTO"
            }
          },
          "delete" : {
            "type" : "array",
            "description" : "List of Metadata associated with answer to be deleted",
            "items" : {
              "$ref" : "#/components/schemas/MetadataDTO"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "PATCH Body schema to represent list of Metadata to be updated"
      },
      "UpdateQnaDTO" : {
        "type" : "object",
        "properties" : {
          "answer" : {
            "type" : "string",
            "description" : "Answer text"
          },
          "context" : {
            "type" : "object",
            "description" : "Context associated with Qna to be updated.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateContextDTO"
            } ]
          },
          "id" : {
            "maximum" : 2147483647,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Unique id for the Q-A",
            "format" : "int32"
          },
          "metadata" : {
            "type" : "object",
            "description" : "List of metadata associated with the answer to be updated",
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateMetadataDTO"
            } ]
          },
          "questions" : {
            "type" : "object",
            "description" : "List of questions associated with the answer.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateQuestionsDTO"
            } ]
          },
          "source" : {
            "maxLength" : 300,
            "type" : "string",
            "description" : "Source from which Q-A was indexed. eg. https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs"
          }
        },
        "additionalProperties" : false,
        "description" : "PATCH Body schema for Update Qna List"
      },
      "UpdateQuestionsDTO" : {
        "type" : "object",
        "properties" : {
          "add" : {
            "type" : "array",
            "description" : "List of questions to be added",
            "items" : {
              "type" : "string"
            }
          },
          "delete" : {
            "type" : "array",
            "description" : "List of questions to be deleted.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "PATCH Body schema for Update Kb which contains list of questions to be added and deleted"
      },
      "WordAlterationsDTO" : {
        "required" : [ "wordAlterations" ],
        "type" : "object",
        "properties" : {
          "wordAlterations" : {
            "type" : "array",
            "description" : "Collection of word alterations.",
            "items" : {
              "$ref" : "#/components/schemas/AlterationsDTO"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Collection of word alterations."
      }
    },
    "parameters" : {
      "Endpoint" : {
        "name" : "Endpoint",
        "in" : "path",
        "description" : "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "Environment" : {
        "name" : "environment",
        "in" : "path",
        "description" : "Specifies whether environment is Test or Prod.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "nullable" : false,
          "enum" : [ "Prod", "Test" ]
        }
      },
      "KbId" : {
        "name" : "kbId",
        "in" : "path",
        "description" : "Knowledgebase id.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "nullable" : false
        }
      },
      "KeyType" : {
        "name" : "keyType",
        "in" : "path",
        "description" : "Type of Key",
        "required" : true,
        "schema" : {
          "type" : "string",
          "nullable" : false
        }
      },
      "OperationId" : {
        "name" : "operationId",
        "in" : "path",
        "description" : "Operation id.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "nullable" : false
        }
      }
    },
    "requestBodies" : {
      "CreateKbPayload" : {
        "description" : "Post body of the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateKbDTO"
            }
          }
        },
        "required" : true
      },
      "EndpointSettingsPayload" : {
        "description" : "Post body of the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EndpointSettingsDTO"
            }
          }
        },
        "required" : true
      },
      "ReplaceKb" : {
        "description" : "An instance of ReplaceKbDTO which contains list of qnas to be uploaded",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReplaceKbDTO"
            }
          }
        },
        "required" : true
      },
      "UpdateKb" : {
        "description" : "Post body of the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateKbOperationDTO"
            }
          }
        },
        "required" : true
      },
      "WordAlterations" : {
        "description" : "New alterations data.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WordAlterationsDTO"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "apim_key" : {
        "type" : "apiKey",
        "name" : "Ocp-Apim-Subscription-Key",
        "in" : "header"
      }
    }
  }
}