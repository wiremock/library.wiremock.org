{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ApiManagementClient",
    "description" : "Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the product’s APIs.",
    "version" : "2019-12-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions" : {
      "get" : {
        "tags" : [ "Subscription" ],
        "description" : "Lists all subscriptions of the API Management service instance.",
        "operationId" : "Subscription_List",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state | filter | eq |     | </br>| user | expand |     |     | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A collection of the Subscription entities for the specified API Management service instance.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "scope", "state" ],
                            "type" : "object",
                            "properties" : {
                              "allowTracing" : {
                                "type" : "boolean",
                                "description" : "Determines whether tracing is enabled"
                              },
                              "createdDate" : {
                                "type" : "string",
                                "description" : "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                "format" : "date-time",
                                "readOnly" : true
                              },
                              "displayName" : {
                                "maxLength" : 100,
                                "minLength" : 0,
                                "type" : "string",
                                "description" : "The name of the subscription, or null if the subscription has no name."
                              },
                              "endDate" : {
                                "type" : "string",
                                "description" : "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                "format" : "date-time"
                              },
                              "expirationDate" : {
                                "type" : "string",
                                "description" : "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                "format" : "date-time"
                              },
                              "notificationDate" : {
                                "type" : "string",
                                "description" : "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                "format" : "date-time"
                              },
                              "ownerId" : {
                                "type" : "string",
                                "description" : "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier."
                              },
                              "primaryKey" : {
                                "maxLength" : 256,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
                              },
                              "scope" : {
                                "type" : "string",
                                "description" : "Scope like /products/{productId} or /apis or /apis/{apiId}."
                              },
                              "secondaryKey" : {
                                "maxLength" : 256,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
                              },
                              "startDate" : {
                                "type" : "string",
                                "description" : "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                "format" : "date-time"
                              },
                              "state" : {
                                "type" : "string",
                                "description" : "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
                                "enum" : [ "suspended", "active", "expired", "submitted", "rejected", "cancelled" ]
                              },
                              "stateComment" : {
                                "type" : "string",
                                "description" : "Optional subscription comment added by an administrator."
                              }
                            },
                            "description" : "Subscription details."
                          }
                        },
                        "description" : "Subscription details."
                      }
                    }
                  },
                  "description" : "Paged Subscriptions list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}" : {
      "get" : {
        "tags" : [ "Subscription" ],
        "description" : "Gets the specified Subscription entity.",
        "operationId" : "Subscription_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified Subscription entity.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "scope", "state" ],
                      "type" : "object",
                      "properties" : {
                        "allowTracing" : {
                          "type" : "boolean",
                          "description" : "Determines whether tracing is enabled"
                        },
                        "createdDate" : {
                          "type" : "string",
                          "description" : "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "displayName" : {
                          "maxLength" : 100,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "The name of the subscription, or null if the subscription has no name."
                        },
                        "endDate" : {
                          "type" : "string",
                          "description" : "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "expirationDate" : {
                          "type" : "string",
                          "description" : "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "notificationDate" : {
                          "type" : "string",
                          "description" : "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "ownerId" : {
                          "type" : "string",
                          "description" : "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier."
                        },
                        "primaryKey" : {
                          "maxLength" : 256,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
                        },
                        "scope" : {
                          "type" : "string",
                          "description" : "Scope like /products/{productId} or /apis or /apis/{apiId}."
                        },
                        "secondaryKey" : {
                          "maxLength" : 256,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
                        },
                        "startDate" : {
                          "type" : "string",
                          "description" : "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
                          "enum" : [ "suspended", "active", "expired", "submitted", "rejected", "cancelled" ]
                        },
                        "stateComment" : {
                          "type" : "string",
                          "description" : "Optional subscription comment added by an administrator."
                        }
                      },
                      "description" : "Subscription details."
                    }
                  },
                  "description" : "Subscription details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Subscription" ],
        "description" : "Creates or updates the subscription of specified user to the specified product.",
        "operationId" : "Subscription_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "notify",
          "in" : "query",
          "description" : "Notify change in Subscription State. \n - If false, do not send any email notification for change of state of subscription \n - If true, send email notification of change of state of subscription ",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "required" : [ "displayName", "scope" ],
                    "type" : "object",
                    "properties" : {
                      "allowTracing" : {
                        "type" : "boolean",
                        "description" : "Determines whether tracing can be enabled"
                      },
                      "displayName" : {
                        "maxLength" : 100,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Subscription name."
                      },
                      "ownerId" : {
                        "type" : "string",
                        "description" : "User (user id path) for whom subscription is being created in form /users/{userId}"
                      },
                      "primaryKey" : {
                        "maxLength" : 256,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Primary subscription key. If not specified during request key will be generated automatically."
                      },
                      "scope" : {
                        "type" : "string",
                        "description" : "Scope like /products/{productId} or /apis or /apis/{apiId}."
                      },
                      "secondaryKey" : {
                        "maxLength" : 256,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Secondary subscription key. If not specified during request key will be generated automatically."
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
                        "enum" : [ "suspended", "active", "expired", "submitted", "rejected", "cancelled" ]
                      }
                    },
                    "description" : "Parameters supplied to the Create subscription operation."
                  }
                },
                "description" : "Subscription create details."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The user already subscribed to the product.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "scope", "state" ],
                      "type" : "object",
                      "properties" : {
                        "allowTracing" : {
                          "type" : "boolean",
                          "description" : "Determines whether tracing is enabled"
                        },
                        "createdDate" : {
                          "type" : "string",
                          "description" : "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "displayName" : {
                          "maxLength" : 100,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "The name of the subscription, or null if the subscription has no name."
                        },
                        "endDate" : {
                          "type" : "string",
                          "description" : "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "expirationDate" : {
                          "type" : "string",
                          "description" : "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "notificationDate" : {
                          "type" : "string",
                          "description" : "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "ownerId" : {
                          "type" : "string",
                          "description" : "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier."
                        },
                        "primaryKey" : {
                          "maxLength" : 256,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
                        },
                        "scope" : {
                          "type" : "string",
                          "description" : "Scope like /products/{productId} or /apis or /apis/{apiId}."
                        },
                        "secondaryKey" : {
                          "maxLength" : 256,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
                        },
                        "startDate" : {
                          "type" : "string",
                          "description" : "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
                          "enum" : [ "suspended", "active", "expired", "submitted", "rejected", "cancelled" ]
                        },
                        "stateComment" : {
                          "type" : "string",
                          "description" : "Optional subscription comment added by an administrator."
                        }
                      },
                      "description" : "Subscription details."
                    }
                  },
                  "description" : "Subscription details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "The user was successfully subscribed to the product.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "scope", "state" ],
                      "type" : "object",
                      "properties" : {
                        "allowTracing" : {
                          "type" : "boolean",
                          "description" : "Determines whether tracing is enabled"
                        },
                        "createdDate" : {
                          "type" : "string",
                          "description" : "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "displayName" : {
                          "maxLength" : 100,
                          "minLength" : 0,
                          "type" : "string",
                          "description" : "The name of the subscription, or null if the subscription has no name."
                        },
                        "endDate" : {
                          "type" : "string",
                          "description" : "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "expirationDate" : {
                          "type" : "string",
                          "description" : "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "notificationDate" : {
                          "type" : "string",
                          "description" : "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "ownerId" : {
                          "type" : "string",
                          "description" : "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier."
                        },
                        "primaryKey" : {
                          "maxLength" : 256,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
                        },
                        "scope" : {
                          "type" : "string",
                          "description" : "Scope like /products/{productId} or /apis or /apis/{apiId}."
                        },
                        "secondaryKey" : {
                          "maxLength" : 256,
                          "minLength" : 1,
                          "type" : "string",
                          "description" : "Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
                        },
                        "startDate" : {
                          "type" : "string",
                          "description" : "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                          "format" : "date-time"
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
                          "enum" : [ "suspended", "active", "expired", "submitted", "rejected", "cancelled" ]
                        },
                        "stateComment" : {
                          "type" : "string",
                          "description" : "Optional subscription comment added by an administrator."
                        }
                      },
                      "description" : "Subscription details."
                    }
                  },
                  "description" : "Subscription details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Subscription" ],
        "description" : "Deletes the specified subscription.",
        "operationId" : "Subscription_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The subscription details were successfully deleted."
          },
          "204" : {
            "description" : "The subscription details were successfully deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Subscription" ],
        "description" : "Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.",
        "operationId" : "Subscription_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Specified apimanagement subscription entity exists and current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Subscription" ],
        "description" : "Updates the details of a subscription specified by its identifier.",
        "operationId" : "Subscription_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "notify",
          "in" : "query",
          "description" : "Notify change in Subscription State. \n - If false, do not send any email notification for change of state of subscription \n - If true, send email notification of change of state of subscription ",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "allowTracing" : {
                        "type" : "boolean",
                        "description" : "Determines whether tracing can be enabled"
                      },
                      "displayName" : {
                        "type" : "string",
                        "description" : "Subscription name."
                      },
                      "expirationDate" : {
                        "type" : "string",
                        "description" : "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
                        "format" : "date-time"
                      },
                      "ownerId" : {
                        "type" : "string",
                        "description" : "User identifier path: /users/{userId}"
                      },
                      "primaryKey" : {
                        "maxLength" : 256,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Primary subscription key."
                      },
                      "scope" : {
                        "type" : "string",
                        "description" : "Scope like /products/{productId} or /apis or /apis/{apiId}"
                      },
                      "secondaryKey" : {
                        "maxLength" : 256,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Secondary subscription key."
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
                        "enum" : [ "suspended", "active", "expired", "submitted", "rejected", "cancelled" ]
                      },
                      "stateComment" : {
                        "type" : "string",
                        "description" : "Comments describing subscription state change by the administrator."
                      }
                    },
                    "description" : "Parameters supplied to the Update subscription operation."
                  }
                },
                "description" : "Subscription update details."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The subscription details were successfully updated."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/listSecrets" : {
      "post" : {
        "tags" : [ "Subscription" ],
        "description" : "Gets the subscription keys.",
        "operationId" : "Subscription_ListSecrets",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains subscription keys.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "primaryKey" : {
                      "maxLength" : 256,
                      "minLength" : 1,
                      "type" : "string",
                      "description" : "Subscription primary key."
                    },
                    "secondaryKey" : {
                      "maxLength" : 256,
                      "minLength" : 1,
                      "type" : "string",
                      "description" : "Subscription secondary key."
                    }
                  },
                  "description" : "Subscription keys."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey" : {
      "post" : {
        "tags" : [ "Subscription" ],
        "description" : "Regenerates primary key of existing subscription of the API Management service instance.",
        "operationId" : "Subscription_RegeneratePrimaryKey",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The primary key was successfully regenerated."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey" : {
      "post" : {
        "tags" : [ "Subscription" ],
        "description" : "Regenerates secondary key of existing subscription of the API Management service instance.",
        "operationId" : "Subscription_RegenerateSecondaryKey",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "description" : "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The secondary key was successfully regenerated."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}