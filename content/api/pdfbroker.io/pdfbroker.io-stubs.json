{
  "mappings" : [ {
    "id" : "63168c6f-2804-4fc8-b738-fcbfc566b06a",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "63168c6f-2804-4fc8-b738-fcbfc566b06a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.963197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "fc5a36a9-b9bf-49c7-ae2a-4c99a631eb3b",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "fc5a36a9-b9bf-49c7-ae2a-4c99a631eb3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.963178Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "96107d9e-2a97-4f41-bec2-056d32c48863",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96107d9e-2a97-4f41-bec2-056d32c48863",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.963148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d830e8eb-31e5-43ec-8290-516c99390dc2",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"gm8jhxymn7hr6hc7mk8z1nwyzvb4yck9zhadsce259jxz7g3okhb9enxii2l0iqlhk\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "d830e8eb-31e5-43ec-8290-516c99390dc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.963072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "9e2a1220-5b95-4ac7-9f52-691e97623358",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e2a1220-5b95-4ac7-9f52-691e97623358",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.962999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "b7a6c43d-5853-4f37-9e6b-4bd3ca1ee113",
    "name" : "Create pdf-file from complete XSL-FO document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "b7a6c43d-5853-4f37-9e6b-4bd3ca1ee113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.962853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "dd4c016c-c53d-439f-99e2-6799be4890b4",
    "name" : "Create pdf-file from complete XSL-FO document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "dd4c016c-c53d-439f-99e2-6799be4890b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.962833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "f46abe7f-6f36-4ee7-b06a-5c5705421de0",
    "name" : "Create pdf-file from complete XSL-FO document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f46abe7f-6f36-4ee7-b06a-5c5705421de0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.962801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "efeaf355-acb3-48df-a5da-295275c8160f",
    "name" : "Create pdf-file from complete XSL-FO document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"tvxge3rhqy8mt433yrva7yy010bxbwndq9by3zc5ppzotmcmg2jbsyeovw2vqy57qexelfk5vrzu7w866y05ge3lf91v4thxg5cy7dft5g1l3htixqtkaj9t04vtneg2g7zubedheh1wpfe8oqcpslcji81m9d0u7zzxvmytu5e8lkfvvu\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "efeaf355-acb3-48df-a5da-295275c8160f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.962712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "8f6317a5-542c-4488-942d-a15251e2ad53",
    "name" : "Create pdf-file from complete XSL-FO document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f6317a5-542c-4488-942d-a15251e2ad53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.962506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "c172dc66-4f36-43dd-b9e6-d88f81dc024f",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. - 429",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "c172dc66-4f36-43dd-b9e6-d88f81dc024f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.961894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "9cfd854d-46ca-4419-b775-27b71189d1b2",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. - 415",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "9cfd854d-46ca-4419-b775-27b71189d1b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.961772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "e6a6a54e-0e16-4c05-8739-a28e3ea786c3",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6a6a54e-0e16-4c05-8739-a28e3ea786c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.961659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "0c42224b-1ae7-453b-a3e7-93d86d0b3cea",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"kq3g58hk0igkzhvjb7tz4n8j6\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "0c42224b-1ae7-453b-a3e7-93d86d0b3cea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.960227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "7831a5c7-6863-46dc-aade-6b445316d1c5",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7831a5c7-6863-46dc-aade-6b445316d1c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.960117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "ec3ee7c4-2753-43a2-8a70-0fcfceb5c9c9",
    "name" : "Write text on a page in a pdf document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "ec3ee7c4-2753-43a2-8a70-0fcfceb5c9c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.959456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "fedb7909-742d-45d5-8aa2-63ebcc6ab7d0",
    "name" : "Write text on a page in a pdf document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "fedb7909-742d-45d5-8aa2-63ebcc6ab7d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.959438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "8606987d-78f8-4627-b5b5-2afa1148eaf2",
    "name" : "Write text on a page in a pdf document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8606987d-78f8-4627-b5b5-2afa1148eaf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.95941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "6e054cf7-225d-455a-ae2f-173649b77014",
    "name" : "Write text on a page in a pdf document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"wkwqpfplf7guinle6792y752rlbknmjw4nud22r33lghkyoflmj8pemxrmtpfljam5pb69494apff3qcetcyqmwiz2f928hfnjynd84lvl5ti5q5x3g248ns2gpi6tu6mk3rnzrt88mm1z9ar\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "6e054cf7-225d-455a-ae2f-173649b77014",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.959329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "62e48715-fc6e-4810-bdeb-91d6424844ba",
    "name" : "Write text on a page in a pdf document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62e48715-fc6e-4810-bdeb-91d6424844ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.95926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "772f8f14-75a1-42ab-befb-823774eb604f",
    "name" : "Generate an image of to provided pdf file - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "772f8f14-75a1-42ab-befb-823774eb604f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.959172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "75479018-8fc3-40a5-86af-6c343a0624b0",
    "name" : "Generate an image of to provided pdf file - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "75479018-8fc3-40a5-86af-6c343a0624b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.959153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "dcd870ad-f794-47b5-819f-83c590a59f5f",
    "name" : "Generate an image of to provided pdf file (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcd870ad-f794-47b5-819f-83c590a59f5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.958872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "2dac44eb-1e5c-44f8-8a02-ffb2bf1ec0c0",
    "name" : "Generate an image of to provided pdf file (image/png)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"mocmvm0oigh55kki6w0nkshxaiohon7w22zm380ym6s8jkg25x\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "2dac44eb-1e5c-44f8-8a02-ffb2bf1ec0c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.958789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "b1d05314-b03f-497e-84b7-0b794859158c",
    "name" : "Generate an image of to provided pdf file (image/jpeg)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"dgy6hsyirdyb6g2e4p74juvl49irqo7pjw3jcxaz6hpq26hpxr7g0rj81rqdumjbc4vzwc7a9kf5niwzrfq\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "b1d05314-b03f-497e-84b7-0b794859158c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.958728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "7ef6b611-5b9d-4362-beed-71da3cdb707e",
    "name" : "Generate an image of to provided pdf file (image/gif)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/gif"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"erq33bla7o03m085l8hunpa728ihmjasv6y2g4it\"",
      "headers" : {
        "Content-Type" : "image/gif"
      }
    },
    "uuid" : "7ef6b611-5b9d-4362-beed-71da3cdb707e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.958657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "d5d3e913-06fe-45e7-950c-90e3d89c5f33",
    "name" : "Generate an image of to provided pdf file (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"imageBase64String\": \"Image file base64 encoded. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.\",\r\n  \"errorMessage\": \"If any error occurred, information will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5d3e913-06fe-45e7-950c-90e3d89c5f33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.958275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the image file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"image/jpeg\", \"image/png\" or \"image/gif\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "ImageBase64String" : {
                "description" : "The Base64 encoded string that is the image file. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "c373ecd1-ed3b-464e-b109-a9d4d084b158",
    "name" : "Concatenate multiple pdf files into single pdf file.. - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "c373ecd1-ed3b-464e-b109-a9d4d084b158",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.956852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "456f3e81-07d0-4095-bc95-cc46c37eb25b",
    "name" : "Concatenate multiple pdf files into single pdf file.. - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "456f3e81-07d0-4095-bc95-cc46c37eb25b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.956834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "11c93bb3-1323-4e84-9f3d-e996c46500c1",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11c93bb3-1323-4e84-9f3d-e996c46500c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.956804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "a43b7b80-5f36-459c-a4f8-b7c927dfad43",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"qq0qrtwc8eldzqghjo83nagkknf0n7jlxj2wtorvgne5vh08sli82vjpp2hsfehgaakoac48\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "a43b7b80-5f36-459c-a4f8-b7c927dfad43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.956714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "d81e5ed9-404c-455d-b705-571b16c5f592",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d81e5ed9-404c-455d-b705-571b16c5f592",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.956606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "e24647f2-0900-48d0-a3b8-5b00495be54a",
    "name" : "Basic method to verify api is up and running - 429",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "e24647f2-0900-48d0-a3b8-5b00495be54a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.955685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "3973cda9-5f06-4f71-a01b-cb53e6231147",
    "name" : "Basic method to verify api is up and running - 415",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "3973cda9-5f06-4f71-a01b-cb53e6231147",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.955664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "044f4b4d-b99a-4d0b-aa0c-f40ebf0d0d97",
    "name" : "Basic method to verify api is up and running (application/json)",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "044f4b4d-b99a-4d0b-aa0c-f40ebf0d0d97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.955607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  } ]
}