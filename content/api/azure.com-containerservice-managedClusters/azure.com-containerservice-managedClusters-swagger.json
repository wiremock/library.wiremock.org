{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ContainerServiceClient",
    "description" : "The Container Service Client.",
    "version" : "2019-08-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.ContainerService/operations" : {
      "get" : {
        "tags" : [ "managedClusters" ],
        "description" : "Gets a list of compute operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedClusters" : {
      "get" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Gets a list of managed clusters in the specified subscription.",
        "description" : "Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.",
        "operationId" : "ManagedClusters_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedClusterListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters" : {
      "get" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Lists managed clusters in the specified subscription and resource group.",
        "description" : "Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.",
        "operationId" : "ManagedClusters_ListByResourceGroup",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedClusterListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}" : {
      "get" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Gets a managed cluster.",
        "description" : "Gets the details of the managed cluster with a specified resource group and name.",
        "operationId" : "ManagedClusters_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedCluster"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Creates or updates a managed cluster.",
        "description" : "Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.",
        "operationId" : "ManagedClusters_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Create or Update a Managed Cluster operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagedCluster"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedCluster"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedCluster"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Deletes a managed cluster.",
        "description" : "Deletes the managed cluster with a specified resource group and name.",
        "operationId" : "ManagedClusters_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Updates tags on a managed cluster.",
        "description" : "Updates a managed cluster with the specified tags.",
        "operationId" : "ManagedClusters_UpdateTags",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Update Managed Cluster Tags operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TagsObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedCluster"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/accessProfiles/{roleName}/listCredential" : {
      "post" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Gets an access profile of a managed cluster.",
        "description" : "Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name.",
        "operationId" : "ManagedClusters_GetAccessProfile",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        }, {
          "name" : "roleName",
          "in" : "path",
          "description" : "The name of the role for managed cluster accessProfile resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedClusterAccessProfile"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools" : {
      "get" : {
        "tags" : [ "AgentPools" ],
        "summary" : "Gets a list of agent pools in the specified managed cluster.",
        "description" : "Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.",
        "operationId" : "AgentPools_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentPoolListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}" : {
      "get" : {
        "tags" : [ "AgentPools" ],
        "summary" : "Gets the agent pool.",
        "description" : "Gets the details of the agent pool by managed cluster and resource group.",
        "operationId" : "AgentPools_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        }, {
          "name" : "agentPoolName",
          "in" : "path",
          "description" : "The name of the agent pool.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentPool"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "AgentPools" ],
        "summary" : "Creates or updates an agent pool.",
        "description" : "Creates or updates an agent pool in the specified managed cluster.",
        "operationId" : "AgentPools_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        }, {
          "name" : "agentPoolName",
          "in" : "path",
          "description" : "The name of the agent pool.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Create or Update an agent pool operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentPool"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentPool"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentPool"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AgentPools" ],
        "summary" : "Deletes an agent pool.",
        "description" : "Deletes the agent pool in the specified managed cluster.",
        "operationId" : "AgentPools_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        }, {
          "name" : "agentPoolName",
          "in" : "path",
          "description" : "The name of the agent pool.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}/upgradeProfiles/default" : {
      "get" : {
        "tags" : [ "AgentPools" ],
        "summary" : "Gets upgrade profile for an agent pool.",
        "description" : "Gets the details of the upgrade profile for an agent pool with a specified resource group and managed cluster name.",
        "operationId" : "AgentPools_GetUpgradeProfile",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        }, {
          "name" : "agentPoolName",
          "in" : "path",
          "description" : "The name of the agent pool.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentPoolUpgradeProfile"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/availableAgentPoolVersions" : {
      "get" : {
        "tags" : [ "AgentPools" ],
        "summary" : "Gets a list of supported versions for the specified agent pool.",
        "description" : "Gets a list of supported versions for the specified agent pool.",
        "operationId" : "AgentPools_GetAvailableAgentPoolVersions",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentPoolAvailableVersions"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterAdminCredential" : {
      "post" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Gets cluster admin credential of a managed cluster.",
        "description" : "Gets cluster admin credential of the managed cluster with a specified resource group and name.",
        "operationId" : "ManagedClusters_ListClusterAdminCredentials",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterUserCredential" : {
      "post" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Gets cluster user credential of a managed cluster.",
        "description" : "Gets cluster user credential of the managed cluster with a specified resource group and name.",
        "operationId" : "ManagedClusters_ListClusterUserCredentials",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetAADProfile" : {
      "post" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Reset AAD Profile of a managed cluster.",
        "description" : "Update the AAD Profile for a managed cluster.",
        "operationId" : "ManagedClusters_ResetAADProfile",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Reset AAD Profile operation for a Managed Cluster.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagedClusterAADProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetServicePrincipalProfile" : {
      "post" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Reset Service Principal Profile of a managed cluster.",
        "description" : "Update the service principal Profile for a managed cluster.",
        "operationId" : "ManagedClusters_ResetServicePrincipalProfile",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagedClusterServicePrincipalProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/rotateClusterCertificates" : {
      "post" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Rotate certificates of a managed cluster.",
        "description" : "Rotate certificates of a managed cluster.",
        "operationId" : "ManagedClusters_RotateClusterCertificates",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          },
          "default" : {
            "description" : "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/upgradeProfiles/default" : {
      "get" : {
        "tags" : [ "ManagedClusters" ],
        "summary" : "Gets upgrade profile for a managed cluster.",
        "description" : "Gets the details of the upgrade profile for a managed cluster with a specified resource group and name.",
        "operationId" : "ManagedClusters_GetUpgradeProfile",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the managed cluster resource.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedClusterUpgradeProfile"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccessProfile" : {
        "type" : "object",
        "properties" : {
          "kubeConfig" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "Base64-encoded Kubernetes configuration file.",
            "format" : "byte"
          }
        },
        "description" : "Profile for enabling a user to access a managed cluster."
      },
      "AgentPool" : {
        "description" : "Agent Pool.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        }, {
          "type" : "object",
          "properties" : {
            "properties" : {
              "$ref" : "#/components/schemas/ManagedClusterAgentPoolProfileProperties"
            }
          }
        } ]
      },
      "AgentPoolAvailableVersions" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the agent pool available versions.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the agent pool available versions.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/AgentPoolAvailableVersionsProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the agent pool  available versions.",
            "readOnly" : true
          }
        },
        "description" : "The list of available versions for an agent pool."
      },
      "AgentPoolAvailableVersionsProperties" : {
        "type" : "object",
        "properties" : {
          "agentPoolVersions" : {
            "type" : "array",
            "description" : "List of versions available for agent pool.",
            "items" : {
              "type" : "object",
              "properties" : {
                "default" : {
                  "type" : "boolean",
                  "description" : "Whether this version is the default agent pool version."
                },
                "isPreview" : {
                  "type" : "boolean",
                  "description" : "Whether Kubernetes version is currently in preview."
                },
                "kubernetesVersion" : {
                  "type" : "string",
                  "description" : "Kubernetes version (major, minor, patch)."
                }
              }
            }
          }
        },
        "description" : "The list of available agent pool versions."
      },
      "AgentPoolListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of agent pool results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of agent pools.",
            "items" : {
              "$ref" : "#/components/schemas/AgentPool"
            }
          }
        },
        "description" : "The response from the List Agent Pools operation."
      },
      "AgentPoolType" : {
        "type" : "string",
        "description" : "AgentPoolType represents types of an agent pool. VirtualMachineScaleSets type is still in PREVIEW.",
        "enum" : [ "VirtualMachineScaleSets", "AvailabilitySet" ]
      },
      "AgentPoolUpgradeProfile" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the agent pool upgrade profile.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the agent pool upgrade profile.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/AgentPoolUpgradeProfileProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the agent pool upgrade profile.",
            "readOnly" : true
          }
        },
        "description" : "The list of available upgrades for an agent pool."
      },
      "AgentPoolUpgradeProfileProperties" : {
        "required" : [ "kubernetesVersion", "osType" ],
        "type" : "object",
        "properties" : {
          "kubernetesVersion" : {
            "type" : "string",
            "description" : "Kubernetes version (major, minor, patch)."
          },
          "osType" : {
            "$ref" : "#/components/schemas/OSType"
          },
          "upgrades" : {
            "type" : "array",
            "description" : "List of orchestrator types and versions available for upgrade.",
            "items" : {
              "type" : "object",
              "properties" : {
                "isPreview" : {
                  "type" : "boolean",
                  "description" : "Whether Kubernetes version is currently in preview."
                },
                "kubernetesVersion" : {
                  "type" : "string",
                  "description" : "Kubernetes version (major, minor, patch)."
                }
              }
            }
          }
        },
        "description" : "The list of available upgrade versions."
      },
      "CloudError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/CloudErrorBody"
          }
        },
        "description" : "An error response from the Container service."
      },
      "CloudErrorBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
          },
          "details" : {
            "type" : "array",
            "description" : "A list of additional details about the error.",
            "items" : {
              "$ref" : "#/components/schemas/CloudErrorBody"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A message describing the error, intended to be suitable for display in a user interface."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the particular error. For example, the name of the property in error."
          }
        },
        "description" : "An error response from the Container service."
      },
      "ContainerServiceDiagnosticsProfile" : {
        "required" : [ "vmDiagnostics" ],
        "type" : "object",
        "properties" : {
          "vmDiagnostics" : {
            "$ref" : "#/components/schemas/ContainerServiceVMDiagnostics"
          }
        },
        "description" : "Profile for diagnostics on the container service cluster."
      },
      "ContainerServiceLinuxProfile" : {
        "required" : [ "adminUsername", "ssh" ],
        "type" : "object",
        "properties" : {
          "adminUsername" : {
            "pattern" : "^[A-Za-z][-A-Za-z0-9_]*$",
            "type" : "string",
            "description" : "The administrator username to use for Linux VMs."
          },
          "ssh" : {
            "$ref" : "#/components/schemas/ContainerServiceSshConfiguration"
          }
        },
        "description" : "Profile for Linux VMs in the container service cluster."
      },
      "ContainerServiceMasterProfile" : {
        "required" : [ "dnsPrefix", "vmSize" ],
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
            "format" : "int32",
            "default" : 1,
            "enum" : [ 1, 3, 5 ]
          },
          "dnsPrefix" : {
            "type" : "string",
            "description" : "DNS prefix to be used to create the FQDN for the master pool."
          },
          "firstConsecutiveStaticIP" : {
            "type" : "string",
            "description" : "FirstConsecutiveStaticIP used to specify the first static ip of masters.",
            "default" : "10.240.255.5"
          },
          "fqdn" : {
            "type" : "string",
            "description" : "FQDN for the master pool.",
            "readOnly" : true
          },
          "osDiskSizeGB" : {
            "$ref" : "#/components/schemas/ContainerServiceOSDisk"
          },
          "storageProfile" : {
            "$ref" : "#/components/schemas/ContainerServiceStorageProfile"
          },
          "vmSize" : {
            "$ref" : "#/components/schemas/ContainerServiceVMSize"
          },
          "vnetSubnetID" : {
            "$ref" : "#/components/schemas/ContainerServiceVnetSubnetID"
          }
        },
        "description" : "Profile for the container service master."
      },
      "ContainerServiceNetworkProfile" : {
        "type" : "object",
        "properties" : {
          "dnsServiceIP" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string",
            "description" : "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
            "default" : "10.0.0.10"
          },
          "dockerBridgeCidr" : {
            "pattern" : "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "type" : "string",
            "description" : "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
            "default" : "172.17.0.1/16"
          },
          "loadBalancerProfile" : {
            "$ref" : "#/components/schemas/ManagedClusterLoadBalancerProfile"
          },
          "loadBalancerSku" : {
            "type" : "string",
            "description" : "The load balancer sku for the managed cluster.",
            "enum" : [ "standard", "basic" ]
          },
          "networkPlugin" : {
            "type" : "string",
            "description" : "Network plugin used for building Kubernetes network.",
            "default" : "kubenet",
            "enum" : [ "azure", "kubenet" ]
          },
          "networkPolicy" : {
            "type" : "string",
            "description" : "Network policy used for building Kubernetes network.",
            "enum" : [ "calico", "azure" ]
          },
          "podCidr" : {
            "pattern" : "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "type" : "string",
            "description" : "A CIDR notation IP range from which to assign pod IPs when kubenet is used.",
            "default" : "10.244.0.0/16"
          },
          "serviceCidr" : {
            "pattern" : "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "type" : "string",
            "description" : "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
            "default" : "10.0.0.0/16"
          }
        },
        "description" : "Profile of network configuration."
      },
      "ContainerServiceOSDisk" : {
        "maximum" : 1023,
        "minimum" : 0,
        "type" : "integer",
        "description" : "OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.",
        "format" : "int32"
      },
      "ContainerServiceSshConfiguration" : {
        "required" : [ "publicKeys" ],
        "type" : "object",
        "properties" : {
          "publicKeys" : {
            "type" : "array",
            "description" : "The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.",
            "items" : {
              "$ref" : "#/components/schemas/ContainerServiceSshPublicKey"
            }
          }
        },
        "description" : "SSH configuration for Linux-based VMs running on Azure."
      },
      "ContainerServiceSshPublicKey" : {
        "required" : [ "keyData" ],
        "type" : "object",
        "properties" : {
          "keyData" : {
            "type" : "string",
            "description" : "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
          }
        },
        "description" : "Contains information about SSH certificate public key data."
      },
      "ContainerServiceStorageProfile" : {
        "type" : "string",
        "description" : "Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.",
        "enum" : [ "StorageAccount", "ManagedDisks" ]
      },
      "ContainerServiceVMDiagnostics" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the VM diagnostic agent is provisioned on the VM."
          },
          "storageUri" : {
            "type" : "string",
            "description" : "The URI of the storage account where diagnostics are stored.",
            "readOnly" : true
          }
        },
        "description" : "Profile for diagnostics on the container service VMs."
      },
      "ContainerServiceVMSize" : {
        "type" : "string",
        "description" : "Size of agent VMs.",
        "enum" : [ "Standard_A1", "Standard_A10", "Standard_A11", "Standard_A1_v2", "Standard_A2", "Standard_A2_v2", "Standard_A2m_v2", "Standard_A3", "Standard_A4", "Standard_A4_v2", "Standard_A4m_v2", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A8_v2", "Standard_A8m_v2", "Standard_A9", "Standard_B2ms", "Standard_B2s", "Standard_B4ms", "Standard_B8ms", "Standard_D1", "Standard_D11", "Standard_D11_v2", "Standard_D11_v2_Promo", "Standard_D12", "Standard_D12_v2", "Standard_D12_v2_Promo", "Standard_D13", "Standard_D13_v2", "Standard_D13_v2_Promo", "Standard_D14", "Standard_D14_v2", "Standard_D14_v2_Promo", "Standard_D15_v2", "Standard_D16_v3", "Standard_D16s_v3", "Standard_D1_v2", "Standard_D2", "Standard_D2_v2", "Standard_D2_v2_Promo", "Standard_D2_v3", "Standard_D2s_v3", "Standard_D3", "Standard_D32_v3", "Standard_D32s_v3", "Standard_D3_v2", "Standard_D3_v2_Promo", "Standard_D4", "Standard_D4_v2", "Standard_D4_v2_Promo", "Standard_D4_v3", "Standard_D4s_v3", "Standard_D5_v2", "Standard_D5_v2_Promo", "Standard_D64_v3", "Standard_D64s_v3", "Standard_D8_v3", "Standard_D8s_v3", "Standard_DS1", "Standard_DS11", "Standard_DS11_v2", "Standard_DS11_v2_Promo", "Standard_DS12", "Standard_DS12_v2", "Standard_DS12_v2_Promo", "Standard_DS13", "Standard_DS13-2_v2", "Standard_DS13-4_v2", "Standard_DS13_v2", "Standard_DS13_v2_Promo", "Standard_DS14", "Standard_DS14-4_v2", "Standard_DS14-8_v2", "Standard_DS14_v2", "Standard_DS14_v2_Promo", "Standard_DS15_v2", "Standard_DS1_v2", "Standard_DS2", "Standard_DS2_v2", "Standard_DS2_v2_Promo", "Standard_DS3", "Standard_DS3_v2", "Standard_DS3_v2_Promo", "Standard_DS4", "Standard_DS4_v2", "Standard_DS4_v2_Promo", "Standard_DS5_v2", "Standard_DS5_v2_Promo", "Standard_E16_v3", "Standard_E16s_v3", "Standard_E2_v3", "Standard_E2s_v3", "Standard_E32-16s_v3", "Standard_E32-8s_v3", "Standard_E32_v3", "Standard_E32s_v3", "Standard_E4_v3", "Standard_E4s_v3", "Standard_E64-16s_v3", "Standard_E64-32s_v3", "Standard_E64_v3", "Standard_E64s_v3", "Standard_E8_v3", "Standard_E8s_v3", "Standard_F1", "Standard_F16", "Standard_F16s", "Standard_F16s_v2", "Standard_F1s", "Standard_F2", "Standard_F2s", "Standard_F2s_v2", "Standard_F32s_v2", "Standard_F4", "Standard_F4s", "Standard_F4s_v2", "Standard_F64s_v2", "Standard_F72s_v2", "Standard_F8", "Standard_F8s", "Standard_F8s_v2", "Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5", "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS4-4", "Standard_GS4-8", "Standard_GS5", "Standard_GS5-16", "Standard_GS5-8", "Standard_H16", "Standard_H16m", "Standard_H16mr", "Standard_H16r", "Standard_H8", "Standard_H8m", "Standard_L16s", "Standard_L32s", "Standard_L4s", "Standard_L8s", "Standard_M128-32ms", "Standard_M128-64ms", "Standard_M128ms", "Standard_M128s", "Standard_M64-16ms", "Standard_M64-32ms", "Standard_M64ms", "Standard_M64s", "Standard_NC12", "Standard_NC12s_v2", "Standard_NC12s_v3", "Standard_NC24", "Standard_NC24r", "Standard_NC24rs_v2", "Standard_NC24rs_v3", "Standard_NC24s_v2", "Standard_NC24s_v3", "Standard_NC6", "Standard_NC6s_v2", "Standard_NC6s_v3", "Standard_ND12s", "Standard_ND24rs", "Standard_ND24s", "Standard_ND6s", "Standard_NV12", "Standard_NV24", "Standard_NV6" ]
      },
      "ContainerServiceVnetSubnetID" : {
        "type" : "string",
        "description" : "VNet SubnetID specifies the VNet's subnet identifier."
      },
      "CredentialResult" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the credential.",
            "readOnly" : true
          },
          "value" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "Base64-encoded Kubernetes configuration file.",
            "format" : "byte",
            "readOnly" : true
          }
        },
        "description" : "The credential result response."
      },
      "CredentialResults" : {
        "type" : "object",
        "properties" : {
          "kubeconfigs" : {
            "type" : "array",
            "description" : "Base64-encoded Kubernetes configuration file.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CredentialResult"
            }
          }
        },
        "description" : "The list of credential result response."
      },
      "ManagedCluster" : {
        "description" : "Managed cluster.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        }, {
          "type" : "object",
          "properties" : {
            "identity" : {
              "$ref" : "#/components/schemas/ManagedClusterIdentity"
            },
            "properties" : {
              "$ref" : "#/components/schemas/ManagedClusterProperties"
            }
          }
        } ]
      },
      "ManagedClusterAADProfile" : {
        "required" : [ "clientAppID", "serverAppID" ],
        "type" : "object",
        "properties" : {
          "clientAppID" : {
            "type" : "string",
            "description" : "The client AAD application ID."
          },
          "serverAppID" : {
            "type" : "string",
            "description" : "The server AAD application ID."
          },
          "serverAppSecret" : {
            "type" : "string",
            "description" : "The server AAD application secret."
          },
          "tenantID" : {
            "type" : "string",
            "description" : "The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription."
          }
        },
        "description" : "AADProfile specifies attributes for Azure Active Directory integration."
      },
      "ManagedClusterAPIServerAccessProfile" : {
        "type" : "object",
        "properties" : {
          "authorizedIPRanges" : {
            "type" : "array",
            "description" : "Authorized IP Ranges to kubernetes API server.",
            "items" : {
              "type" : "string"
            }
          },
          "enablePrivateCluster" : {
            "type" : "boolean",
            "description" : "Whether to create the cluster as a private cluster or not."
          }
        },
        "description" : "Access profile for managed cluster API server."
      },
      "ManagedClusterAccessProfile" : {
        "description" : "Managed cluster Access Profile.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        }, {
          "type" : "object",
          "properties" : {
            "properties" : {
              "$ref" : "#/components/schemas/AccessProfile"
            }
          }
        } ]
      },
      "ManagedClusterAddonProfile" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "config" : {
            "type" : "object",
            "description" : "Key-value pairs for configuring an add-on."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the add-on is enabled or not."
          }
        },
        "description" : "A Kubernetes add-on profile for a managed cluster."
      },
      "ManagedClusterAgentPoolProfile" : {
        "description" : "Profile for the container service agent pool.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ManagedClusterAgentPoolProfileProperties"
        }, {
          "type" : "object",
          "properties" : {
            "name" : {
              "pattern" : "^[a-z][a-z0-9]{0,11}$",
              "type" : "string",
              "description" : "Unique name of the agent pool profile in the context of the subscription and resource group."
            }
          }
        } ]
      },
      "ManagedClusterAgentPoolProfileProperties" : {
        "type" : "object",
        "properties" : {
          "availabilityZones" : {
            "type" : "array",
            "description" : "(PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.",
            "items" : {
              "type" : "string"
            }
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.",
            "format" : "int32"
          },
          "enableAutoScaling" : {
            "type" : "boolean",
            "description" : "Whether to enable auto-scaler"
          },
          "enableNodePublicIP" : {
            "type" : "boolean",
            "description" : "Enable public IP for nodes"
          },
          "maxCount" : {
            "type" : "integer",
            "description" : "Maximum number of nodes for auto-scaling",
            "format" : "int32"
          },
          "maxPods" : {
            "type" : "integer",
            "description" : "Maximum number of pods that can run on a node.",
            "format" : "int32"
          },
          "minCount" : {
            "type" : "integer",
            "description" : "Minimum number of nodes for auto-scaling",
            "format" : "int32"
          },
          "nodeTaints" : {
            "type" : "array",
            "description" : "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
            "items" : {
              "type" : "string"
            }
          },
          "orchestratorVersion" : {
            "type" : "string",
            "description" : "Version of orchestrator specified when creating the managed cluster."
          },
          "osDiskSizeGB" : {
            "$ref" : "#/components/schemas/ContainerServiceOSDisk"
          },
          "osType" : {
            "$ref" : "#/components/schemas/OSType"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The current deployment or provisioning state, which only appears in the response.",
            "readOnly" : true
          },
          "scaleSetEvictionPolicy" : {
            "$ref" : "#/components/schemas/ScaleSetEvictionPolicy"
          },
          "scaleSetPriority" : {
            "$ref" : "#/components/schemas/ScaleSetPriority"
          },
          "type" : {
            "$ref" : "#/components/schemas/AgentPoolType"
          },
          "vmSize" : {
            "$ref" : "#/components/schemas/ContainerServiceVMSize"
          },
          "vnetSubnetID" : {
            "$ref" : "#/components/schemas/ContainerServiceVnetSubnetID"
          }
        },
        "description" : "Properties for the container service agent pool profile."
      },
      "ManagedClusterIdentity" : {
        "type" : "object",
        "properties" : {
          "principalId" : {
            "type" : "string",
            "description" : "The principal id of the system assigned identity which is used by master components.",
            "readOnly" : true
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The tenant id of the system assigned identity which is used by master components.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.",
            "enum" : [ "SystemAssigned", "None" ]
          }
        },
        "description" : "Identity for the managed cluster."
      },
      "ManagedClusterListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of managed cluster results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of managed clusters.",
            "items" : {
              "$ref" : "#/components/schemas/ManagedCluster"
            }
          }
        },
        "description" : "The response from the List Managed Clusters operation."
      },
      "ManagedClusterLoadBalancerProfile" : {
        "type" : "object",
        "properties" : {
          "effectiveOutboundIPs" : {
            "type" : "array",
            "description" : "The effective outbound IP resources of the cluster load balancer.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceReference"
            }
          },
          "managedOutboundIPs" : {
            "type" : "object",
            "properties" : {
              "count" : {
                "maximum" : 100,
                "minimum" : 1,
                "type" : "integer",
                "description" : "Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
                "format" : "int32",
                "default" : 1
              }
            },
            "description" : "Desired managed outbound IPs for the cluster load balancer."
          },
          "outboundIPPrefixes" : {
            "type" : "object",
            "properties" : {
              "publicIPPrefixes" : {
                "type" : "array",
                "description" : "A list of public IP prefix resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ResourceReference"
                }
              }
            },
            "description" : "Desired outbound IP Prefix resources for the cluster load balancer."
          },
          "outboundIPs" : {
            "type" : "object",
            "properties" : {
              "publicIPs" : {
                "type" : "array",
                "description" : "A list of public IP resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ResourceReference"
                }
              }
            },
            "description" : "Desired outbound IP resources for the cluster load balancer."
          }
        },
        "description" : "Profile of the managed cluster load balancer"
      },
      "ManagedClusterPoolUpgradeProfile" : {
        "required" : [ "kubernetesVersion", "osType" ],
        "type" : "object",
        "properties" : {
          "kubernetesVersion" : {
            "type" : "string",
            "description" : "Kubernetes version (major, minor, patch)."
          },
          "name" : {
            "type" : "string",
            "description" : "Pool name."
          },
          "osType" : {
            "$ref" : "#/components/schemas/OSType"
          },
          "upgrades" : {
            "type" : "array",
            "description" : "List of orchestrator types and versions available for upgrade.",
            "items" : {
              "type" : "object",
              "properties" : {
                "isPreview" : {
                  "type" : "boolean",
                  "description" : "Whether Kubernetes version is currently in preview."
                },
                "kubernetesVersion" : {
                  "type" : "string",
                  "description" : "Kubernetes version (major, minor, patch)."
                }
              }
            }
          }
        },
        "description" : "The list of available upgrade versions."
      },
      "ManagedClusterProperties" : {
        "type" : "object",
        "properties" : {
          "aadProfile" : {
            "$ref" : "#/components/schemas/ManagedClusterAADProfile"
          },
          "addonProfiles" : {
            "type" : "object",
            "description" : "Profile of managed cluster add-on."
          },
          "agentPoolProfiles" : {
            "type" : "array",
            "description" : "Properties of the agent pool.",
            "items" : {
              "$ref" : "#/components/schemas/ManagedClusterAgentPoolProfile"
            }
          },
          "apiServerAccessProfile" : {
            "$ref" : "#/components/schemas/ManagedClusterAPIServerAccessProfile"
          },
          "dnsPrefix" : {
            "type" : "string",
            "description" : "DNS prefix specified when creating the managed cluster."
          },
          "enablePodSecurityPolicy" : {
            "type" : "boolean",
            "description" : "(PREVIEW) Whether to enable Kubernetes Pod security policy."
          },
          "enableRBAC" : {
            "type" : "boolean",
            "description" : "Whether to enable Kubernetes Role-Based Access Control."
          },
          "fqdn" : {
            "type" : "string",
            "description" : "FQDN for the master pool.",
            "readOnly" : true
          },
          "kubernetesVersion" : {
            "type" : "string",
            "description" : "Version of Kubernetes specified when creating the managed cluster."
          },
          "linuxProfile" : {
            "$ref" : "#/components/schemas/ContainerServiceLinuxProfile"
          },
          "maxAgentPools" : {
            "type" : "integer",
            "description" : "The max number of agent pools for the managed cluster.",
            "format" : "int32",
            "readOnly" : true
          },
          "networkProfile" : {
            "$ref" : "#/components/schemas/ContainerServiceNetworkProfile"
          },
          "nodeResourceGroup" : {
            "type" : "string",
            "description" : "Name of the resource group containing agent pool nodes."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The current deployment or provisioning state, which only appears in the response.",
            "readOnly" : true
          },
          "servicePrincipalProfile" : {
            "$ref" : "#/components/schemas/ManagedClusterServicePrincipalProfile"
          },
          "windowsProfile" : {
            "$ref" : "#/components/schemas/ManagedClusterWindowsProfile"
          }
        },
        "description" : "Properties of the managed cluster."
      },
      "ManagedClusterServicePrincipalProfile" : {
        "required" : [ "clientId" ],
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "description" : "The ID for the service principal."
          },
          "secret" : {
            "type" : "string",
            "description" : "The secret password associated with the service principal in plain text."
          }
        },
        "description" : "Information about a service principal identity for the cluster to use for manipulating Azure APIs."
      },
      "ManagedClusterUpgradeProfile" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of upgrade profile.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of upgrade profile.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/ManagedClusterUpgradeProfileProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of upgrade profile.",
            "readOnly" : true
          }
        },
        "description" : "The list of available upgrades for compute pools."
      },
      "ManagedClusterUpgradeProfileProperties" : {
        "required" : [ "agentPoolProfiles", "controlPlaneProfile" ],
        "type" : "object",
        "properties" : {
          "agentPoolProfiles" : {
            "type" : "array",
            "description" : "The list of available upgrade versions for agent pools.",
            "items" : {
              "$ref" : "#/components/schemas/ManagedClusterPoolUpgradeProfile"
            }
          },
          "controlPlaneProfile" : {
            "$ref" : "#/components/schemas/ManagedClusterPoolUpgradeProfile"
          }
        },
        "description" : "Control plane and agent pool upgrade profiles."
      },
      "ManagedClusterWindowsProfile" : {
        "required" : [ "adminUsername" ],
        "type" : "object",
        "properties" : {
          "adminPassword" : {
            "pattern" : "^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\\^&\\*\\(\\)])[a-zA-Z\\d!@#$%\\^&\\*\\(\\)]{12,123}$",
            "type" : "string",
            "description" : "The administrator password to use for Windows VMs."
          },
          "adminUsername" : {
            "pattern" : "^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$",
            "type" : "string",
            "description" : "The administrator username to use for Windows VMs."
          }
        },
        "description" : "Profile for Windows VMs in the container service cluster."
      },
      "OSType" : {
        "type" : "string",
        "description" : "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.",
        "default" : "Linux",
        "enum" : [ "Linux", "Windows" ]
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of compute operations",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/OperationValue"
            }
          }
        },
        "description" : "The List Compute Operation operation response."
      },
      "OperationValue" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationValueDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the compute operation.",
            "readOnly" : true
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the compute operation.",
            "readOnly" : true
          }
        },
        "description" : "Describes the properties of a Compute Operation value."
      },
      "OperationValueDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the operation.",
            "readOnly" : true
          },
          "operation" : {
            "type" : "string",
            "description" : "The display name of the compute operation.",
            "readOnly" : true
          },
          "provider" : {
            "type" : "string",
            "description" : "The resource provider for the operation.",
            "readOnly" : true
          },
          "resource" : {
            "type" : "string",
            "description" : "The display name of the resource the operation applies to.",
            "readOnly" : true
          }
        },
        "description" : "Describes the properties of a Compute Operation Value Display."
      },
      "Resource" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource Id",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Resource location"
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "readOnly" : true
          }
        },
        "description" : "The Resource model definition."
      },
      "ResourceReference" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The fully qualified Azure resource id."
          }
        },
        "description" : "A reference to an Azure resource."
      },
      "ScaleSetEvictionPolicy" : {
        "type" : "string",
        "description" : "ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.",
        "default" : "Delete",
        "enum" : [ "Delete", "Deallocate" ]
      },
      "ScaleSetPriority" : {
        "type" : "string",
        "description" : "ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.",
        "default" : "Regular",
        "enum" : [ "Low", "Regular" ]
      },
      "SubResource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "readOnly" : true
          }
        },
        "description" : "Reference to another subresource."
      },
      "TagsObject" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          }
        },
        "description" : "Tags object for patch operations."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client Api Version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group.",
        "required" : true,
        "schema" : {
          "minLength" : 1,
          "type" : "string"
        }
      },
      "ResourceNameParameter" : {
        "name" : "resourceName",
        "in" : "path",
        "description" : "The name of the managed cluster resource.",
        "required" : true,
        "schema" : {
          "maxLength" : 63,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}