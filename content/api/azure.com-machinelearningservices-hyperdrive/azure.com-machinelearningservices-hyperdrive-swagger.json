{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "HyperDrive",
    "description" : "HyperDrive REST API",
    "version" : "2019-09-30"
  },
  "servers" : [ {
    "url" : "https://azure.local/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/hyperdrive/v1.0/{armScope}/runs" : {
      "post" : {
        "tags" : [ "HyperDriveExperiment" ],
        "summary" : "Create an Experiment.",
        "description" : "Create a HyperDrive Experiment.",
        "operationId" : "HyperparameterTuning_CreateExperiment",
        "parameters" : [ {
          "name" : "armScope",
          "in" : "path",
          "description" : "The ARM scope passed in through URL with format:\r\n            subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}.\r\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "config" ],
                "type" : "object",
                "properties" : {
                  "config" : {
                    "type" : "string",
                    "description" : "The configuration file with experiment JSON content. A text file that is a JSON-serialized '#/definitions/HyperDriveCreateExperiment' object.",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HyperDriveExperimentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HyperDriveErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/hyperdrive/v1.0/{armScope}/runs/{runId}/cancel" : {
      "post" : {
        "tags" : [ "HyperDriveExperiment" ],
        "summary" : "Cancel an Experiment.",
        "description" : "Cancel a HyperDrive Experiment.",
        "operationId" : "HyperparameterTuning_CancelExperiment",
        "parameters" : [ {
          "name" : "armScope",
          "in" : "path",
          "description" : "The ARM scope passed in through URL with format:\r\n            subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}.\r\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runId",
          "in" : "path",
          "description" : "Hyperdrive run id to cancel.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "RunHistoryHost",
          "in" : "header",
          "description" : "The host for run location.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HyperDriveCancelExperimentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HyperDriveErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "HyperDriveBanditPolicy" : {
        "description" : "Bandit Policy configuration. Please refer https://docs.microsoft.com/en-us/python/api/azureml-train-core/azureml.train.hyperdrive.banditpolicy?view=azure-ml-py for more information.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HyperDrivePolicyConfigBase"
        }, {
          "type" : "object",
          "properties" : {
            "properties" : {
              "type" : "object",
              "properties" : {
                "delay_evaluation" : {
                  "type" : "integer",
                  "description" : "Value indicating the number of sequences for which the first evaluation is delayed.",
                  "format" : "int32"
                },
                "evaluation_interval" : {
                  "type" : "integer",
                  "description" : "Evaluation interval of the policy.",
                  "format" : "int32"
                },
                "slack_amount" : {
                  "type" : "number",
                  "description" : "Slack amount.",
                  "format" : "float"
                },
                "slack_factor" : {
                  "type" : "number",
                  "description" : "Slack factor.",
                  "format" : "float"
                }
              },
              "description" : "Policy configuration properties."
            }
          }
        } ]
      },
      "HyperDriveCancelExperimentResponse" : {
        "required" : [ "code", "result" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "Response code.",
            "format" : "int32"
          },
          "result" : {
            "type" : "string",
            "description" : "Message indicating operation success."
          }
        },
        "description" : "Response for HyperDrive_CancelExperiment in case of success."
      },
      "HyperDriveCreateExperiment" : {
        "description" : "Part of request for HyperDrive_CreateExperiment. Contains configuration details required to create hyperdrive run.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HyperDriveExperimentBase"
        }, {
          "required" : [ "user" ],
          "type" : "object",
          "properties" : {
            "user" : {
              "maxLength" : 255,
              "type" : "string",
              "description" : "User who is creating the Hyperdrive run."
            }
          }
        } ]
      },
      "HyperDriveDefaultPolicy" : {
        "description" : "No early termination is applied in the case of DefaultPolicy",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HyperDrivePolicyConfigBase"
        } ]
      },
      "HyperDriveErrorResponse" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "Error response code.",
            "format" : "int32"
          },
          "message" : {
            "type" : "string",
            "description" : "Error message."
          }
        },
        "description" : "Response in case of an error."
      },
      "HyperDriveExperiment" : {
        "description" : "Part of response for HyperDrive_CreateExperiment in case of success. Contains details about the created hyperdrive run.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HyperDriveExperimentBase"
        }, {
          "required" : [ "all_jobs_generated", "cancellation_requested", "created", "created_by_user_id", "experiment_id", "hyperdrive_run_id", "modified", "status" ],
          "type" : "object",
          "properties" : {
            "all_jobs_generated" : {
              "type" : "boolean",
              "description" : "Indicates if all runs have been generated."
            },
            "cancellation_requested" : {
              "type" : "boolean",
              "description" : "Indicates if cancellation has been requested for this Hyperdrive run."
            },
            "created" : {
              "type" : "string",
              "description" : "Hyperdrive run creation time.",
              "format" : "date-time"
            },
            "created_by_user_id" : {
              "type" : "integer",
              "description" : "Id of the user who created the Hyperdrive run.",
              "format" : "int32"
            },
            "experiment_id" : {
              "type" : "string",
              "description" : "Hyperdrive run id."
            },
            "experiment_uri" : {
              "type" : "string",
              "description" : "Hyperdrive run Uri."
            },
            "hyperdrive_run_id" : {
              "type" : "string",
              "description" : "Hyperdrive run id."
            },
            "modified" : {
              "type" : "string",
              "description" : "Hyperdrive run modification time.",
              "format" : "date-time"
            },
            "status" : {
              "type" : "string",
              "description" : "Hyperdrive run status."
            },
            "study_uri" : {
              "type" : "string",
              "description" : "Study Uri of the Hyperdrive run."
            }
          }
        } ]
      },
      "HyperDriveExperimentBase" : {
        "required" : [ "generator_config", "name", "platform", "platform_config", "policy_config", "primary_metric_config" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 511,
            "type" : "string",
            "description" : "The description for Hyperdrive run.",
            "nullable" : true
          },
          "generator_config" : {
            "required" : [ "name", "parameter_space" ],
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Hyperparameter sampling method.",
                "enum" : [ "RANDOM", "GRID", "BAYESIANOPTIMIZATION" ]
              },
              "parameter_space" : {
                "type" : "object",
                "additionalProperties" : {
                  "maxItems" : 2,
                  "minItems" : 2,
                  "type" : "array",
                  "description" : "The first element in the array is a string identifying the parameter expression type like choice, uniform etc. The second element is a parameter expressions corresponding to the type.\r\n Please refer to https://docs.microsoft.com/en-us/python/api/azureml-train-core/azureml.train.hyperdrive.parameter_expressions?view=azure-ml-py for a list of supported types and options for each type.\r\n choice parameters are specified as ['choice', [[1, 2, 3, 4]]]. randint is in format ['randint', [1]].\r\n uniform, loguniform, normal, lognormal are in format [expression type, [0.01, 0.05]].\r\n quniform, qloguniform, qnormal, qlognormal are in format [expression type, [0.01, 0.05, 3]].\r\n",
                  "example" : [ "choice", [ [ 1, 2, 3, 4 ] ] ],
                  "items" : {
                    "type" : "object"
                  }
                },
                "description" : "Dictionary specifying hyperparameter space."
              }
            },
            "description" : "Hyperparameter space and the sampling method configuration."
          },
          "max_concurrent_jobs" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Maximum number of runs to run concurrently.",
            "format" : "int32"
          },
          "max_duration_minutes" : {
            "maximum" : 43200,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Maximum duration of the Hyperdrive run.",
            "format" : "int32"
          },
          "max_total_jobs" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Maximum number of runs.",
            "format" : "int32"
          },
          "name" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Name of the Hyperdrive run."
          },
          "platform" : {
            "type" : "string",
            "description" : "Platform of the Hyperdrive run.",
            "enum" : [ "AML" ]
          },
          "platform_config" : {
            "type" : "object",
            "description" : "Platform config object specifying the run definition structure."
          },
          "policy_config" : {
            "$ref" : "#/components/schemas/HyperDrivePolicyConfigBase"
          },
          "primary_metric_config" : {
            "required" : [ "goal", "name" ],
            "type" : "object",
            "properties" : {
              "goal" : {
                "type" : "string",
                "description" : "Determines if the primary metric has to be minimized/maximized.",
                "enum" : [ "MAXIMIZE", "MINIMIZE" ]
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the primary metric reported by runs."
              }
            },
            "description" : "Name of the primary metric and goal of optimizing."
          },
          "study_id" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Study Id of the Hyperdrive run.",
            "format" : "int32",
            "nullable" : true
          }
        },
        "description" : "Base object for both request and response of HyperDrive_CreateExperiment api."
      },
      "HyperDriveExperimentResponse" : {
        "required" : [ "code", "result" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "Response code.",
            "format" : "int32"
          },
          "result" : {
            "$ref" : "#/components/schemas/HyperDriveExperiment"
          }
        },
        "description" : "Response for HyperDrive_CreateExperiment in case of success."
      },
      "HyperDriveMedianStoppingPolicy" : {
        "description" : "Median stopping policy configuration. Please refer https://docs.microsoft.com/en-us/python/api/azureml-train-core/azureml.train.hyperdrive.medianstoppingpolicy?view=azure-ml-py for more information.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HyperDrivePolicyConfigBase"
        }, {
          "type" : "object",
          "properties" : {
            "properties" : {
              "type" : "object",
              "properties" : {
                "delay_evaluation" : {
                  "type" : "integer",
                  "description" : "Value indicating the number of sequences for which the first evaluation is delayed.",
                  "format" : "int32"
                },
                "evaluation_interval" : {
                  "type" : "integer",
                  "description" : "Evaluation interval of the policy.",
                  "format" : "int32"
                }
              },
              "description" : "Policy configuration properties."
            }
          }
        } ]
      },
      "HyperDrivePolicyConfigBase" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Type of early termination policy.",
            "enum" : [ "Default", "Bandit", "MedianStopping", "TruncationSelection" ]
          }
        },
        "description" : "Early termination policy configuration.",
        "discriminator" : {
          "propertyName" : "name"
        }
      },
      "HyperDriveTruncationSelectionPolicy" : {
        "description" : "Truncation selection policy configuration. Please refer https://docs.microsoft.com/en-us/python/api/azureml-train-core/azureml.train.hyperdrive.truncationselectionpolicy?view=azure-ml-py for more information.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HyperDrivePolicyConfigBase"
        }, {
          "type" : "object",
          "properties" : {
            "properties" : {
              "type" : "object",
              "properties" : {
                "delay_evaluation" : {
                  "type" : "integer",
                  "description" : "Value indicating the number of sequences for which the first evaluation is delayed.",
                  "format" : "int32"
                },
                "evaluation_interval" : {
                  "type" : "integer",
                  "description" : "Evaluation interval of the policy.",
                  "format" : "int32"
                },
                "exclude_finished_jobs" : {
                  "type" : "boolean",
                  "description" : "Boolean indicating if metrics from finished jobs should be excluded in the policy decision process."
                },
                "truncation_percentage" : {
                  "type" : "integer",
                  "description" : "Truncation percentage value.",
                  "format" : "int32"
                }
              },
              "description" : "Policy configuration properties."
            }
          }
        } ]
      }
    },
    "parameters" : {
      "ArmScopeParameter" : {
        "name" : "armScope",
        "in" : "path",
        "description" : "The ARM scope passed in through URL with format:\r\n            subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}.\r\n",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2"
      }
    }
  }
}