{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Security Insights",
    "description" : "API spec for Microsoft.SecurityInsights (Azure Security Insights) resource provider",
    "version" : "2020-01-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.SecurityInsights/operations" : {
      "get" : {
        "description" : "Lists all operations available Azure Security Insights Resource Provider.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully retrieved operations list.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules" : {
      "get" : {
        "tags" : [ "Alert Rules" ],
        "description" : "Gets all alert rules.",
        "operationId" : "AlertRules_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertRulesList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}" : {
      "get" : {
        "tags" : [ "Alert Rules" ],
        "description" : "Gets the alert rule.",
        "operationId" : "AlertRules_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "Alert rule ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertRule"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Alert Rules" ],
        "description" : "Creates or updates the alert rule.",
        "operationId" : "AlertRules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "Alert rule ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The alert rule",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertRule"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertRule"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Alert Rules" ],
        "description" : "Delete the alert rule.",
        "operationId" : "AlertRules_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "Alert rule ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions" : {
      "get" : {
        "tags" : [ "Actions" ],
        "description" : "Gets all actions of alert rule.",
        "operationId" : "Actions_ListByAlertRule",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "Alert rule ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions/{actionId}" : {
      "get" : {
        "tags" : [ "Actions" ],
        "description" : "Gets the action of alert rule.",
        "operationId" : "AlertRules_GetAction",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "Alert rule ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionId",
          "in" : "path",
          "description" : "Action ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Actions" ],
        "description" : "Creates or updates the action of alert rule.",
        "operationId" : "AlertRules_CreateOrUpdateAction",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "Alert rule ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionId",
          "in" : "path",
          "description" : "Action ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The action",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Actions" ],
        "description" : "Delete the action of alert rule.",
        "operationId" : "AlertRules_DeleteAction",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "Alert rule ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionId",
          "in" : "path",
          "description" : "Action ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors" : {
      "get" : {
        "tags" : [ "Data Connectors" ],
        "description" : "Gets all data connectors.",
        "operationId" : "DataConnectors_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataConnectorList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors/{dataConnectorId}" : {
      "get" : {
        "tags" : [ "Data Connectors" ],
        "description" : "Gets a data connector.",
        "operationId" : "DataConnectors_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "dataConnectorId",
          "in" : "path",
          "description" : "Connector ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataConnector"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Data Connectors" ],
        "description" : "Creates or updates the data connector.",
        "operationId" : "DataConnectors_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "dataConnectorId",
          "in" : "path",
          "description" : "Connector ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The data connector",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataConnector"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataConnector"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataConnector"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Data Connectors" ],
        "description" : "Delete the data connector.",
        "operationId" : "DataConnectors_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "API version for the operation",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2020-01-01" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure subscription ID",
          "required" : true,
          "schema" : {
            "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "workspaceName",
          "in" : "path",
          "description" : "The name of the workspace.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "dataConnectorId",
          "in" : "path",
          "description" : "Connector ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AADDataConnector" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AADDataConnectorProperties"
          }
        },
        "description" : "Represents AAD (Azure Active Directory) data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnector"
        } ]
      },
      "AADDataConnectorProperties" : {
        "description" : "AAD (Azure Active Directory) data connector properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnectorTenantId"
        }, {
          "$ref" : "#/components/schemas/DataConnectorWithAlertsProperties"
        } ]
      },
      "AATPDataConnector" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AATPDataConnectorProperties"
          }
        },
        "description" : "Represents AATP (Azure Advanced Threat Protection) data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnector"
        } ]
      },
      "AATPDataConnectorProperties" : {
        "description" : "AATP (Azure Advanced Threat Protection) data connector properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnectorTenantId"
        }, {
          "$ref" : "#/components/schemas/DataConnectorWithAlertsProperties"
        } ]
      },
      "ASCDataConnector" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ASCDataConnectorProperties"
          }
        },
        "description" : "Represents ASC (Azure Security Center) data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnector"
        } ]
      },
      "ASCDataConnectorProperties" : {
        "properties" : {
          "subscriptionId" : {
            "type" : "string",
            "description" : "The subscription id to connect to, and get the data from."
          }
        },
        "description" : "ASC (Azure Security Center) data connector properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnectorWithAlertsProperties"
        } ]
      },
      "ActionPropertiesBase" : {
        "required" : [ "logicAppResourceId" ],
        "type" : "object",
        "properties" : {
          "logicAppResourceId" : {
            "type" : "string",
            "description" : "Logic App Resource Id, providers/Microsoft.Logic/workflows/{WorkflowID}."
          }
        },
        "description" : "Action property bag base."
      },
      "ActionRequest" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ActionRequestProperties"
          }
        },
        "description" : "Action for alert rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceWithEtag"
        } ]
      },
      "ActionRequestProperties" : {
        "properties" : {
          "triggerUri" : {
            "type" : "string",
            "description" : "Logic App Callback URL for this specific workflow."
          }
        },
        "description" : "Action property bag.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActionPropertiesBase"
        } ]
      },
      "ActionResponse" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Etag of the action."
          },
          "properties" : {
            "$ref" : "#/components/schemas/ActionResponseProperties"
          }
        },
        "description" : "Action for alert rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ActionResponseProperties" : {
        "properties" : {
          "workflowId" : {
            "type" : "string",
            "description" : "The name of the logic app's workflow."
          }
        },
        "description" : "Action property bag.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActionPropertiesBase"
        } ]
      },
      "ActionsList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to fetch the next set of actions.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of actions.",
            "items" : {
              "$ref" : "#/components/schemas/ActionResponse"
            }
          }
        },
        "description" : "List all the actions."
      },
      "AlertRule" : {
        "description" : "Alert rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceWithEtag"
        }, {
          "$ref" : "#/components/schemas/AlertRuleKind"
        } ]
      },
      "AlertRuleKind" : {
        "required" : [ "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "The kind of the alert rule",
            "enum" : [ "Scheduled", "MicrosoftSecurityIncidentCreation", "Fusion" ]
          }
        },
        "description" : "Describes an Azure resource with kind."
      },
      "AlertRuleTemplate" : {
        "description" : "Alert rule template.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        }, {
          "$ref" : "#/components/schemas/AlertRuleKind"
        } ]
      },
      "AlertRuleTemplateDataSource" : {
        "type" : "object",
        "properties" : {
          "connectorId" : {
            "type" : "string",
            "description" : "The connector id that provides the following data types"
          },
          "dataTypes" : {
            "type" : "array",
            "description" : "The data types used by the alert rule template",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "alert rule template data sources"
      },
      "AlertRuleTemplatePropertiesBase" : {
        "type" : "object",
        "properties" : {
          "alertRulesCreatedByTemplateCount" : {
            "type" : "integer",
            "description" : "the number of alert rules that were created by this template"
          },
          "createdDateUTC" : {
            "type" : "string",
            "description" : "The time that this alert rule template has been added.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the alert rule template."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name for alert rule template."
          },
          "requiredDataConnectors" : {
            "type" : "array",
            "description" : "The required data connectors for this template",
            "items" : {
              "$ref" : "#/components/schemas/AlertRuleTemplateDataSource"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "The alert rule template status.",
            "enum" : [ "Installed", "Available", "NotAvailable" ]
          }
        },
        "description" : "Base alert rule template property bag."
      },
      "AlertRuleTriggerOperator" : {
        "type" : "string",
        "description" : "The operation against the threshold that triggers alert rule.",
        "enum" : [ "GreaterThan", "LessThan", "Equal", "NotEqual" ]
      },
      "AlertRulesList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to fetch the next set of alert rules.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of alert rules.",
            "items" : {
              "$ref" : "#/components/schemas/AlertRule"
            }
          }
        },
        "description" : "List all the alert rules."
      },
      "AlertSeverity" : {
        "type" : "string",
        "description" : "The severity of the alert",
        "enum" : [ "High", "Medium", "Low", "Informational" ]
      },
      "AlertsDataTypeOfDataConnector" : {
        "type" : "object",
        "properties" : {
          "alerts" : {
            "type" : "object",
            "description" : "Alerts data type connection.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DataConnectorDataTypeCommon"
            } ]
          }
        },
        "description" : "Alerts data type for data connectors."
      },
      "AttackTactic" : {
        "type" : "string",
        "description" : "The severity for alerts created by this alert rule.",
        "enum" : [ "InitialAccess", "Execution", "Persistence", "PrivilegeEscalation", "DefenseEvasion", "CredentialAccess", "Discovery", "LateralMovement", "Collection", "Exfiltration", "CommandAndControl", "Impact" ]
      },
      "AwsCloudTrailDataConnector" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AwsCloudTrailDataConnectorProperties"
          }
        },
        "description" : "Represents Amazon Web Services CloudTrail data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnector"
        } ]
      },
      "AwsCloudTrailDataConnectorDataTypes" : {
        "type" : "object",
        "properties" : {
          "logs" : {
            "type" : "object",
            "description" : "Logs data type.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DataConnectorDataTypeCommon"
            } ]
          }
        },
        "description" : "The available data types for Amazon Web Services CloudTrail data connector."
      },
      "AwsCloudTrailDataConnectorProperties" : {
        "type" : "object",
        "properties" : {
          "awsRoleArn" : {
            "type" : "string",
            "description" : "The Aws Role Arn (with CloudTrailReadOnly policy) that is used to access the Aws account."
          },
          "dataTypes" : {
            "$ref" : "#/components/schemas/AwsCloudTrailDataConnectorDataTypes"
          }
        },
        "description" : "Amazon Web Services CloudTrail data connector properties."
      },
      "CloudError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/CloudErrorBody"
          }
        },
        "description" : "Error response structure."
      },
      "CloudErrorBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "A message describing the error, intended to be suitable for display in a user interface.",
            "readOnly" : true
          }
        },
        "description" : "Error details."
      },
      "DataConnector" : {
        "description" : "Data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceWithEtag"
        }, {
          "$ref" : "#/components/schemas/DataConnectorKind"
        } ]
      },
      "DataConnectorDataTypeCommon" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "string",
            "description" : "Describe whether this data type connection is enabled or not.",
            "enum" : [ "Enabled", "Disabled" ]
          }
        },
        "description" : "Common field for data type in data connectors."
      },
      "DataConnectorKind" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "The kind of the data connector",
            "enum" : [ "AzureActiveDirectory", "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence", "Office365", "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection", "MicrosoftDefenderAdvancedThreatProtection" ]
          }
        },
        "description" : "Describes an Azure resource with kind."
      },
      "DataConnectorList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to fetch the next set of data connectors.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of data connectors.",
            "items" : {
              "$ref" : "#/components/schemas/DataConnector"
            }
          }
        },
        "description" : "List all the data connectors."
      },
      "DataConnectorTenantId" : {
        "type" : "object",
        "properties" : {
          "tenantId" : {
            "type" : "string",
            "description" : "The tenant id to connect to, and get the data from."
          }
        },
        "description" : "Properties data connector on tenant level."
      },
      "DataConnectorWithAlertsProperties" : {
        "type" : "object",
        "properties" : {
          "dataTypes" : {
            "$ref" : "#/components/schemas/AlertsDataTypeOfDataConnector"
          }
        },
        "description" : "Data connector properties."
      },
      "FusionAlertRule" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FusionAlertRuleProperties"
          }
        },
        "description" : "Represents Fusion alert rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AlertRule"
        } ]
      },
      "FusionAlertRuleProperties" : {
        "required" : [ "alertRuleTemplateName", "enabled" ],
        "type" : "object",
        "properties" : {
          "alertRuleTemplateName" : {
            "type" : "string",
            "description" : "The Name of the alert rule template used to create this rule."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the alert rule.",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name for alerts created by this alert rule.",
            "readOnly" : true
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Determines whether this alert rule is enabled or disabled."
          },
          "lastModifiedUtc" : {
            "type" : "string",
            "description" : "The last time that this alert has been modified.",
            "format" : "date-time",
            "readOnly" : true
          },
          "severity" : {
            "$ref" : "#/components/schemas/AlertSeverity"
          },
          "tactics" : {
            "type" : "array",
            "description" : "The tactics of the alert rule",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AttackTactic"
            }
          }
        },
        "description" : "Fusion alert rule base property bag."
      },
      "FusionAlertRuleTemplate" : {
        "properties" : {
          "properties" : {
            "required" : [ "severity" ],
            "type" : "object",
            "properties" : {
              "severity" : {
                "$ref" : "#/components/schemas/AlertSeverity"
              },
              "tactics" : {
                "type" : "array",
                "description" : "The tactics of the alert rule template",
                "items" : {
                  "$ref" : "#/components/schemas/AttackTactic"
                }
              }
            },
            "description" : "Fusion alert rule template properties"
          }
        },
        "description" : "Represents Fusion alert rule template.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AlertRuleTemplate"
        } ]
      },
      "IncidentInfo" : {
        "required" : [ "incidentId", "relationName", "severity", "title" ],
        "type" : "object",
        "properties" : {
          "incidentId" : {
            "type" : "string",
            "description" : "Incident Id"
          },
          "relationName" : {
            "type" : "string",
            "description" : "Relation Name"
          },
          "severity" : {
            "type" : "string",
            "description" : "The severity of the incident",
            "enum" : [ "Critical", "High", "Medium", "Low", "Informational" ]
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the incident"
          }
        },
        "description" : "Describes related incident information for the bookmark"
      },
      "Label" : {
        "type" : "string",
        "description" : "Label that will be used to tag and filter on."
      },
      "MCASDataConnector" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MCASDataConnectorProperties"
          }
        },
        "description" : "Represents MCAS (Microsoft Cloud App Security) data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnector"
        } ]
      },
      "MCASDataConnectorDataTypes" : {
        "properties" : {
          "discoveryLogs" : {
            "type" : "object",
            "description" : "Discovery log data type connection.",
            "allOf" : [ {
              "$ref" : "#/definitions/DataConnectorDataTypeCommon"
            } ]
          }
        },
        "description" : "The available data types for MCAS (Microsoft Cloud App Security) data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AlertsDataTypeOfDataConnector"
        } ]
      },
      "MCASDataConnectorProperties" : {
        "properties" : {
          "dataTypes" : {
            "$ref" : "#/components/schemas/MCASDataConnectorDataTypes"
          }
        },
        "description" : "MCAS (Microsoft Cloud App Security) data connector properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnectorTenantId"
        } ]
      },
      "MDATPDataConnector" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MDATPDataConnectorProperties"
          }
        },
        "description" : "Represents MDATP (Microsoft Defender Advanced Threat Protection) data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnector"
        } ]
      },
      "MDATPDataConnectorProperties" : {
        "description" : "MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnectorTenantId"
        }, {
          "$ref" : "#/components/schemas/DataConnectorWithAlertsProperties"
        } ]
      },
      "MicrosoftSecurityIncidentCreationAlertRule" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MicrosoftSecurityIncidentCreationAlertRuleProperties"
          }
        },
        "description" : "Represents MicrosoftSecurityIncidentCreation rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AlertRule"
        } ]
      },
      "MicrosoftSecurityIncidentCreationAlertRuleCommonProperties" : {
        "required" : [ "productFilter" ],
        "type" : "object",
        "properties" : {
          "displayNamesFilter" : {
            "type" : "array",
            "description" : "the alerts' displayNames on which the cases will be generated",
            "items" : {
              "type" : "string"
            }
          },
          "productFilter" : {
            "type" : "string",
            "description" : "The alerts' productName on which the cases will be generated",
            "enum" : [ "Microsoft Cloud App Security", "Azure Security Center", "Azure Advanced Threat Protection", "Azure Active Directory Identity Protection", "Azure Security Center for IoT" ]
          },
          "severitiesFilter" : {
            "type" : "array",
            "description" : "the alerts' severities on which the cases will be generated",
            "items" : {
              "$ref" : "#/components/schemas/AlertSeverity"
            }
          }
        },
        "description" : "MicrosoftSecurityIncidentCreation rule common property bag."
      },
      "MicrosoftSecurityIncidentCreationAlertRuleProperties" : {
        "required" : [ "displayName", "enabled" ],
        "properties" : {
          "alertRuleTemplateName" : {
            "type" : "string",
            "description" : "The Name of the alert rule template used to create this rule."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the alert rule."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name for alerts created by this alert rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Determines whether this alert rule is enabled or disabled."
          },
          "lastModifiedUtc" : {
            "type" : "string",
            "description" : "The last time that this alert has been modified.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "MicrosoftSecurityIncidentCreation rule property bag.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MicrosoftSecurityIncidentCreationAlertRuleCommonProperties"
        } ]
      },
      "MicrosoftSecurityIncidentCreationAlertRuleTemplate" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "description" : "MicrosoftSecurityIncidentCreation rule template properties",
            "allOf" : [ {
              "$ref" : "#/definitions/AlertRuleTemplatePropertiesBase"
            }, {
              "$ref" : "#/definitions/MicrosoftSecurityIncidentCreationAlertRuleCommonProperties"
            } ]
          }
        },
        "description" : "Represents MicrosoftSecurityIncidentCreation rule template.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AlertRuleTemplate"
        } ]
      },
      "OfficeConsent" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/OfficeConsentProperties"
          }
        },
        "description" : "Consent for Office365 tenant that already made.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "OfficeConsentList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to fetch the next set of office consents.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of the consents.",
            "items" : {
              "$ref" : "#/components/schemas/OfficeConsent"
            }
          }
        },
        "description" : "List of all the office365 consents."
      },
      "OfficeConsentProperties" : {
        "type" : "object",
        "properties" : {
          "tenantId" : {
            "type" : "string",
            "description" : "The tenantId of the Office365 with the consent."
          },
          "tenantName" : {
            "type" : "string",
            "description" : "The tenant name of the Office365 with the consent.",
            "readOnly" : true
          }
        },
        "description" : "Consent property bag."
      },
      "OfficeDataConnector" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/OfficeDataConnectorProperties"
          }
        },
        "description" : "Represents office data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnector"
        } ]
      },
      "OfficeDataConnectorDataTypes" : {
        "type" : "object",
        "properties" : {
          "exchange" : {
            "type" : "object",
            "description" : "Exchange data type connection.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DataConnectorDataTypeCommon"
            } ]
          },
          "sharePoint" : {
            "type" : "object",
            "description" : "SharePoint data type connection.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DataConnectorDataTypeCommon"
            } ]
          }
        },
        "description" : "The available data types for office data connector."
      },
      "OfficeDataConnectorProperties" : {
        "properties" : {
          "dataTypes" : {
            "$ref" : "#/components/schemas/OfficeDataConnectorDataTypes"
          }
        },
        "description" : "Office data connector properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnectorTenantId"
        } ]
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Description of the operation"
              },
              "operation" : {
                "type" : "string",
                "description" : "Operation name"
              },
              "provider" : {
                "type" : "string",
                "description" : "Provider name"
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource name"
              }
            },
            "description" : "Properties of the operation"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the operation"
          }
        },
        "description" : "Operation provided by provider"
      },
      "OperationsList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to fetch the next set of operations."
          },
          "value" : {
            "type" : "array",
            "description" : "Array of operations",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Lists the operations available in the SecurityInsights RP."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Azure resource Id",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Azure resource name",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Azure resource type",
            "readOnly" : true
          }
        },
        "description" : "An azure resource object"
      },
      "ResourceWithEtag" : {
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Etag of the azure resource"
          },
          "id" : {
            "type" : "string",
            "description" : "Azure resource Id",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Azure resource name",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Azure resource type",
            "readOnly" : true
          }
        },
        "description" : "An azure resource object with an Etag property"
      },
      "ScheduledAlertRule" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ScheduledAlertRuleProperties"
          }
        },
        "description" : "Represents scheduled alert rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AlertRule"
        } ]
      },
      "ScheduledAlertRuleCommonProperties" : {
        "type" : "object",
        "properties" : {
          "query" : {
            "type" : "string",
            "description" : "The query that creates alerts for this rule."
          },
          "queryFrequency" : {
            "type" : "string",
            "description" : "The frequency (in ISO 8601 duration format) for this alert rule to run.",
            "format" : "duration"
          },
          "queryPeriod" : {
            "type" : "string",
            "description" : "The period (in ISO 8601 duration format) that this alert rule looks at.",
            "format" : "duration"
          },
          "severity" : {
            "$ref" : "#/components/schemas/AlertSeverity"
          },
          "triggerOperator" : {
            "$ref" : "#/components/schemas/AlertRuleTriggerOperator"
          },
          "triggerThreshold" : {
            "type" : "integer",
            "description" : "The threshold triggers this alert rule."
          }
        },
        "description" : "Schedule alert rule template property bag."
      },
      "ScheduledAlertRuleProperties" : {
        "required" : [ "displayName", "enabled", "suppressionDuration", "suppressionEnabled" ],
        "properties" : {
          "alertRuleTemplateName" : {
            "type" : "string",
            "description" : "The Name of the alert rule template used to create this rule."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the alert rule."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name for alerts created by this alert rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Determines whether this alert rule is enabled or disabled."
          },
          "lastModifiedUtc" : {
            "type" : "string",
            "description" : "The last time that this alert rule has been modified.",
            "format" : "date-time",
            "readOnly" : true
          },
          "suppressionDuration" : {
            "type" : "string",
            "description" : "The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.",
            "format" : "duration"
          },
          "suppressionEnabled" : {
            "type" : "boolean",
            "description" : "Determines whether the suppression for this alert rule is enabled or disabled."
          },
          "tactics" : {
            "type" : "array",
            "description" : "The tactics of the alert rule",
            "items" : {
              "$ref" : "#/components/schemas/AttackTactic"
            }
          }
        },
        "description" : "Scheduled alert rule base property bag.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ScheduledAlertRuleCommonProperties"
        } ]
      },
      "ScheduledAlertRuleTemplate" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "tactics" : {
                "type" : "array",
                "description" : "The tactics of the alert rule template",
                "items" : {
                  "$ref" : "#/components/schemas/AttackTactic"
                }
              }
            },
            "description" : "Scheduled alert rule template properties"
          }
        },
        "description" : "Represents scheduled alert rule template.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AlertRuleTemplate"
        } ]
      },
      "Settings" : {
        "description" : "The Setting.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ResourceWithEtag"
        }, {
          "$ref" : "#/components/schemas/SettingsKind"
        } ]
      },
      "SettingsKind" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "The kind of the setting",
            "enum" : [ "UebaSettings", "ToggleSettings" ]
          }
        },
        "description" : "Describes an Azure resource with kind."
      },
      "TIDataConnector" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/TIDataConnectorProperties"
          }
        },
        "description" : "Represents threat intelligence data connector.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnector"
        } ]
      },
      "TIDataConnectorDataTypes" : {
        "type" : "object",
        "properties" : {
          "indicators" : {
            "type" : "object",
            "description" : "Data type for indicators connection.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DataConnectorDataTypeCommon"
            } ]
          }
        },
        "description" : "The available data types for TI (Threat Intelligence) data connector."
      },
      "TIDataConnectorProperties" : {
        "properties" : {
          "dataTypes" : {
            "$ref" : "#/components/schemas/TIDataConnectorDataTypes"
          }
        },
        "description" : "TI (Threat Intelligence) data connector properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataConnectorTenantId"
        } ]
      },
      "ThreatIntelligence" : {
        "type" : "object",
        "properties" : {
          "confidence" : {
            "type" : "number",
            "description" : "Confidence (must be between 0 and 1)",
            "format" : "double",
            "readOnly" : true
          },
          "providerName" : {
            "type" : "string",
            "description" : "Name of the provider from whom this Threat Intelligence information was received",
            "readOnly" : true
          },
          "reportLink" : {
            "type" : "string",
            "description" : "Report link",
            "readOnly" : true
          },
          "threatDescription" : {
            "type" : "string",
            "description" : "Threat description (free text)",
            "readOnly" : true
          },
          "threatName" : {
            "type" : "string",
            "description" : "Threat name (e.g. \"Jedobot malware\")",
            "readOnly" : true
          },
          "threatType" : {
            "type" : "string",
            "description" : "Threat type (e.g. \"Botnet\")",
            "readOnly" : true
          }
        },
        "description" : "ThreatIntelligence property bag."
      },
      "ToggleSettings" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ToggleSettingsProperties"
          }
        },
        "description" : "Settings with single toggle.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Settings"
        } ]
      },
      "ToggleSettingsProperties" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "description" : "Determines whether the setting is enable or disabled."
          }
        },
        "description" : "toggle property bag."
      },
      "UebaSettings" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UebaSettingsProperties"
          }
        },
        "description" : "Represents settings for User and Entity Behavior Analytics enablement.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Settings"
        } ]
      },
      "UebaSettingsProperties" : {
        "type" : "object",
        "properties" : {
          "atpLicenseStatus" : {
            "type" : "string",
            "description" : "Determines whether the tenant has ATP (Advanced Threat Protection) license.",
            "readOnly" : true,
            "enum" : [ "Enabled", "Disabled" ]
          },
          "isEnabled" : {
            "type" : "boolean",
            "description" : "Determines whether User and Entity Behavior Analytics is enabled for this workspace."
          },
          "statusInMcas" : {
            "type" : "string",
            "description" : "Determines whether User and Entity Behavior Analytics is enabled from MCAS (Microsoft Cloud App Security).",
            "readOnly" : true,
            "enum" : [ "Enabled", "Disabled" ]
          }
        },
        "description" : "User and Entity Behavior Analytics settings property bag."
      },
      "UserInfo" : {
        "required" : [ "objectId" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "The email of the user.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the user.",
            "readOnly" : true
          },
          "objectId" : {
            "type" : "string",
            "description" : "The object id of the user.",
            "format" : "uuid",
            "nullable" : true
          }
        },
        "description" : "User information that made some action"
      }
    },
    "parameters" : {
      "ActionId" : {
        "name" : "actionId",
        "in" : "path",
        "description" : "Action ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "AggregationsName" : {
        "name" : "aggregationsName",
        "in" : "path",
        "description" : "The aggregation name. Supports - Cases",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "AlertRuleTemplateId" : {
        "name" : "alertRuleTemplateId",
        "in" : "path",
        "description" : "Alert rule template ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ApiVersion" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "API version for the operation",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "2020-01-01" ]
        }
      },
      "ConsentId" : {
        "name" : "consentId",
        "in" : "path",
        "description" : "consent ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "DataConnectorId" : {
        "name" : "dataConnectorId",
        "in" : "path",
        "description" : "Connector ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "EntityId" : {
        "name" : "entityId",
        "in" : "path",
        "description" : "entity ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "EntityQueryId" : {
        "name" : "entityQueryId",
        "in" : "path",
        "description" : "entity query ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ODataFilter" : {
        "name" : "$filter",
        "in" : "query",
        "description" : "Filters the results, based on a Boolean condition. Optional.",
        "schema" : {
          "type" : "string"
        }
      },
      "ODataOrderBy" : {
        "name" : "$orderby",
        "in" : "query",
        "description" : "Sorts the results. Optional.",
        "schema" : {
          "type" : "string"
        }
      },
      "ODataSkipToken" : {
        "name" : "$skipToken",
        "in" : "query",
        "description" : "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
        "schema" : {
          "type" : "string"
        }
      },
      "ODataTop" : {
        "name" : "$top",
        "in" : "query",
        "description" : "Returns only the first n results. Optional.",
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "ResourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "pattern" : "^[-\\w\\._\\(\\)]+$",
          "type" : "string"
        }
      },
      "RuleId" : {
        "name" : "ruleId",
        "in" : "path",
        "description" : "Alert rule ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SettingsName" : {
        "name" : "settingsName",
        "in" : "path",
        "description" : "The setting name. Supports- Fusion, UEBA",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Azure subscription ID",
        "required" : true,
        "schema" : {
          "pattern" : "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
          "type" : "string"
        }
      },
      "WorkspaceName" : {
        "name" : "workspaceName",
        "in" : "path",
        "description" : "The name of the workspace.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "type" : "string"
        }
      }
    },
    "requestBodies" : {
      "Action" : {
        "description" : "The action",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ActionRequest"
            }
          }
        },
        "required" : true
      },
      "AlertRule" : {
        "description" : "The alert rule",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AlertRule"
            }
          }
        },
        "required" : true
      },
      "DataConnector" : {
        "description" : "The data connector",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/DataConnector"
            }
          }
        },
        "required" : true
      },
      "Settings" : {
        "description" : "The setting",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Settings"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}