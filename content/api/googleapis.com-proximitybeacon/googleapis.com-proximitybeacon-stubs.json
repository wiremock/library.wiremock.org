{
  "mappings" : [ {
    "id" : "d01aec2a-90b6-43f5-affe-05da54e510e8",
    "name" : "Updates the information about the specified namespace. Only the namespace visibi...",
    "request" : {
      "urlPath" : "/v1beta1/Otto+Glover",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"servingVisibility\" : \"VISIBILITY_UNSPECIFIED\",\n  \"namespaceName\" : \"Marco Kulas\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d01aec2a-90b6-43f5-affe-05da54e510e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:24.002888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.namespaces.update",
          "schema" : {
            "description" : "An attachment namespace defines read and write access for all the attachments created under it. Each namespace is globally unique, and owned by one project which is the only project that can create attachments under it.",
            "properties" : {
              "namespaceName" : {
                "description" : "Resource name of this namespace. Namespaces names have the format: namespaces/namespace.",
                "type" : "string"
              },
              "servingVisibility" : {
                "description" : "Specifies what clients may receive attachments under this namespace via `beaconinfo.getforobserved`.",
                "enum" : [ "VISIBILITY_UNSPECIFIED", "UNLISTED", "PUBLIC" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d3284038-fc08-455b-a916-d8de1fb76d6f",
    "name" : "Decommissions the specified beacon in the service. This beacon will no longer be...",
    "request" : {
      "urlPath" : "/v1beta1/Nicolette+Goldner:decommission",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3284038-fc08-455b-a916-d8de1fb76d6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:24.002727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.decommission",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b8d0b98f-0fa6-419c-8d71-69af6d96c630",
    "name" : "Deactivates a beacon. Once deactivated, the API will not return information nor ...",
    "request" : {
      "urlPath" : "/v1beta1/Ms.+Elfriede+Hamill:deactivate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8d0b98f-0fa6-419c-8d71-69af6d96c630",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:24.002651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.deactivate",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "3d40bede-a7e2-461f-950a-849afc083495",
    "name" : "Activates a beacon. A beacon that is active will return information and attachme...",
    "request" : {
      "urlPath" : "/v1beta1/Ernesto+Sanford:activate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d40bede-a7e2-461f-950a-849afc083495",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:24.002573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.activate",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "26a48e1a-272e-4dee-a60e-2c98c754cbf8",
    "name" : "List the diagnostics for a single beacon. You can also list diagnostics for all ...",
    "request" : {
      "urlPath" : "/v1beta1/Michale+Doyle/diagnostics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"diagnostics\" : [ {\n    \"alerts\" : [ \"WRONG_LOCATION\" ],\n    \"beaconName\" : \"Ms. Sheryl Adams\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 801473528,\n      \"year\" : 2129422384,\n      \"day\" : 1332357136\n    }\n  }, {\n    \"alerts\" : [ \"ALERT_UNSPECIFIED\", \"LOW_ACTIVITY\", \"WRONG_LOCATION\", \"WRONG_LOCATION\", \"ALERT_UNSPECIFIED\" ],\n    \"beaconName\" : \"Esteban Hagenes\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 425330217,\n      \"year\" : 1303273932,\n      \"day\" : 1161528134\n    }\n  }, {\n    \"alerts\" : [ \"LOW_ACTIVITY\" ],\n    \"beaconName\" : \"Norman Krajcik\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 1689162178,\n      \"year\" : 584345086,\n      \"day\" : 1635744116\n    }\n  }, {\n    \"alerts\" : [ \"LOW_BATTERY\", \"ALERT_UNSPECIFIED\", \"LOW_BATTERY\" ],\n    \"beaconName\" : \"Nita Yost II\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 1956948959,\n      \"year\" : 197760422,\n      \"day\" : 1731737840\n    }\n  }, {\n    \"alerts\" : [ \"ALERT_UNSPECIFIED\", \"WRONG_LOCATION\", \"LOW_ACTIVITY\" ],\n    \"beaconName\" : \"Ora Schuppe\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 1862751591,\n      \"year\" : 943548121,\n      \"day\" : 268927568\n    }\n  }, {\n    \"alerts\" : [ \"WRONG_LOCATION\", \"WRONG_LOCATION\", \"ALERT_UNSPECIFIED\", \"WRONG_LOCATION\", \"LOW_ACTIVITY\" ],\n    \"beaconName\" : \"Marcelo Weimann\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 1203218132,\n      \"year\" : 1128789162,\n      \"day\" : 100916561\n    }\n  } ],\n  \"nextPageToken\" : \"uxvftqzxgoq1c9ej4lo343yets\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26a48e1a-272e-4dee-a60e-2c98c754cbf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:24.002488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.diagnostics.list",
          "schema" : {
            "description" : "Response that contains the requested diagnostics.",
            "properties" : {
              "diagnostics" : {
                "description" : "The diagnostics matching the given request.",
                "items" : {
                  "$ref" : "#/components/schemas/Diagnostics"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token that can be used for pagination. Returned only if the request matches more beacons than can be returned in this response.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "e11c4072-9b03-41a8-bc4e-428276688013",
    "name" : "Deletes multiple attachments on a given beacon. This operation is permanent and ...",
    "request" : {
      "urlPath" : "/v1beta1/Creola+Berge/attachments:batchDelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"numDeleted\" : 507444566\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e11c4072-9b03-41a8-bc4e-428276688013",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:24.001853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.attachments.batchDelete",
          "schema" : {
            "description" : "Response for a request to delete attachments.",
            "properties" : {
              "numDeleted" : {
                "description" : "The number of attachments that were deleted.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "1d174bd3-5394-46a1-8117-5a0b9cadb93b",
    "name" : "Associates the given data with the specified beacon. Attachment data must contai...",
    "request" : {
      "urlPath" : "/v1beta1/Hung+Gleichner/attachments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTimeMs\" : \"2022-12-07T09:00:24.001427Z\",\n  \"data\" : \"r8yfs2x97tlszqvlr0apccgo5few62cipxmhffcz8ytc6u8k4t8h4jh7d7097yf646bc18zw4dyzl7ewo4ccof4oqa8i205r7dfoikjk4hnfs85ht2laictlph7nily8n02hh4eo23x9rx9uqbvz\",\n  \"maxDistanceMeters\" : 1.2968138417459593E308,\n  \"namespacedType\" : \"jr55cqxmk2yja6xcepee1d43gu2c79ujr\",\n  \"attachmentName\" : \"Granville Hessel\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d174bd3-5394-46a1-8117-5a0b9cadb93b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:24.001675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.attachments.create",
          "schema" : {
            "description" : "Project-specific data associated with a beacon.",
            "properties" : {
              "attachmentName" : {
                "description" : "Resource name of this attachment. Attachment names have the format: beacons/ beacon_id/attachments/attachment_id. Leave this empty on creation.",
                "type" : "string"
              },
              "creationTimeMs" : {
                "description" : "The UTC time when this attachment was created, in milliseconds since the UNIX epoch.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "data" : {
                "description" : "An opaque data container for client-provided data. Must be [base64](http://tools.ietf.org/html/rfc4648#section-4) encoded in HTTP requests, and will be so encoded (with padding) in responses. Required.",
                "format" : "byte",
                "type" : "string"
              },
              "maxDistanceMeters" : {
                "description" : "The distance away from the beacon at which this attachment should be delivered to a mobile app. Setting this to a value greater than zero indicates that the app should behave as if the beacon is \"seen\" when the mobile device is less than this distance away from the beacon. Different attachments on the same beacon can have different max distances. Note that even though this value is expressed with fractional meter precision, real-world behavior is likley to be much less precise than one meter, due to the nature of current Bluetooth radio technology. Optional. When not set or zero, the attachment should be delivered at the beacon's outer limit of detection. Negative values are invalid and return an error.",
                "format" : "double",
                "type" : "number"
              },
              "namespacedType" : {
                "description" : "Specifies what kind of attachment this is. Tells a client how to interpret the `data` field. Format is namespace/type. Namespace provides type separation between clients. Type describes the type of `data`, for use by the client when parsing the `data` field. Required.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "d65843f8-2807-4ef5-a14b-745cf8fac9a2",
    "name" : "Returns the attachments for the specified beacon that match the specified namesp...",
    "request" : {
      "urlPath" : "/v1beta1/Geoffrey+Daugherty/attachments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attachments\" : [ {\n    \"creationTimeMs\" : \"2022-12-10T06:00:24.000881Z\",\n    \"data\" : \"o6oru8mbvj13qe258pjlnkt90mwgtq2nfzyqb6vac66biu556eokv8q1nd2ead8tdx78nzgkf3ljxcdq6zudrl1rh5ct9g4enhmh59aa2jc0wu4z3cvb8nj2eq0r5dpx1n89titfa6m4anjtv45650jm3w17yg56\",\n    \"maxDistanceMeters\" : 8.238996656632994E307,\n    \"namespacedType\" : \"02dmglptfs9m9t4lr9qvn7xw0f9icyzwfybq0o2n3tjf51au9hrc0de2rnz7i7970k8lf871h8mh5ft9eehtdosfzcb\",\n    \"attachmentName\" : \"Mindi Considine\"\n  }, {\n    \"creationTimeMs\" : \"2022-06-08T07:01:24.001006Z\",\n    \"data\" : \"hmofp7u0zdzydep3xf9vh3phlv11xixdxkhz3bhujdkpnpll6kbegsnqb986vw8uplab2h6jgeelrb7w1vxow5k8wu22tsucgf4jp6pfik2nnhvjq4t83btjomtemx2gvhgs5ql69bwqqa2xdg4qk5pqvtshyvh2ejsddkynhb\",\n    \"maxDistanceMeters\" : 7.242059933161438E307,\n    \"namespacedType\" : \"1cytqc0e4c9yzr2kpffbazn202ddmu7kd4un3gm049b6yhtv4go5f7\",\n    \"attachmentName\" : \"Glenn Lind\"\n  }, {\n    \"creationTimeMs\" : \"2022-06-05T06:57:24.001108Z\",\n    \"data\" : \"nqwvwsioqxfgt187e7z4tkdq1bavy4kpqr50gab8bfdrkvgio30udyplg5mhbb1k0s552cmrom4rijfukqt2uxhyg2o0idruax55qvr26t6welxb9ycji88gs1pu9zqy36h0fqbdsqag5gts61x9p5gghg4mo4mxffjyu98fe0hd6whe5tztp0z2o25dxgebewhw7a\",\n    \"maxDistanceMeters\" : 1.5574801822164323E308,\n    \"namespacedType\" : \"e2llq5ub3l6bnui\",\n    \"attachmentName\" : \"Shavon Fay\"\n  }, {\n    \"creationTimeMs\" : \"2022-08-30T08:33:24.001205Z\",\n    \"data\" : \"glai5t5lrpf1g363paunr227l3cfk8t0s\",\n    \"maxDistanceMeters\" : 2.326926469176326E307,\n    \"namespacedType\" : \"17dtxlqi7ygeijnriwxvdd6ct3yokm\",\n    \"attachmentName\" : \"Sona Welch\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d65843f8-2807-4ef5-a14b-745cf8fac9a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:24.001384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.attachments.list",
          "schema" : {
            "description" : "Response to `ListBeaconAttachments` that contains the requested attachments.",
            "properties" : {
              "attachments" : {
                "description" : "The attachments that corresponded to the request params.",
                "items" : {
                  "$ref" : "#/components/schemas/BeaconAttachment"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "666a62eb-6eb6-450a-b983-234426a94dc7",
    "name" : "Updates the information about the specified beacon. **Any field that you do not ...",
    "request" : {
      "urlPath" : "/v1beta1/Magdalena+Stracke",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ephemeralIdRegistration\" : {\n    \"serviceEcdhPublicKey\" : \"ax4uup6g1qu1ftf1r4upppxv2tff1paw3kkq9wum0gehmtxrmg3qwugjtdr4vwd523b6ml85gl7q8kiqhxlydd2lj6qdwqo01oh2je8c1e0rj95v6rsg74kq10u5epkvyomzg6dglsdyztn2b6g\",\n    \"initialClockValue\" : \"1ylkuy8df0p99j2zbytah9qkcy9cr31m4gn82dexbp3uzqd8s5ghvbw14tywt13mbhkuvqtovnhfzjnb9mph5zyzpb2vs2ax53xlyan7kublxm4jstequh\",\n    \"initialEid\" : \"6b0i\",\n    \"rotationPeriodExponent\" : 3196204230494833510,\n    \"beaconEcdhPublicKey\" : \"ov23fy68xwf01tqo2xbaz2iir6980ek0x2h67uq9glibr8rnxdpspfz\",\n    \"beaconIdentityKey\" : \"k8jc2tiha4n0u6053hvo38ccgi28xse9rs09cgzzs8vf4kf9kax268zo9xck1ab9gd8mxu8spn4gnefquwhoehvkbwo36u3rjbwlpk19hulrxskyviysqcuuvmju6k2ns170vw\"\n  },\n  \"advertisedId\" : {\n    \"id\" : \"97zm\",\n    \"type\" : \"ALTBEACON\"\n  },\n  \"expectedStability\" : \"MOBILE\",\n  \"indoorLevel\" : {\n    \"name\" : \"Jakubowski\"\n  },\n  \"placeId\" : \"6hp0\",\n  \"description\" : \"Eos veritatis est rem architecto. Consequatur ex ut soluta quia esse libero magni. Quia est perspiciatis maxime quasi voluptatem dolorem. Labore delectus est voluptatem non minima voluptas error. Qui \",\n  \"provisioningKey\" : \"bx0d1dibwkw9utddcicmj7nqhphazhnnq8471lrdic0gn2sa1n1ewk4zp7xo7gum1m3d2yefxoeyphhhkmdfn3ao8bic43aidieq8lf75crpw6pqd1t9smngeosm07g65okhf5ecfsyrm14ylwp31sd3g32ysni2teeczdr3ujc65i6kv\",\n  \"beaconName\" : \"Leota Hettinger\",\n  \"latLng\" : {\n    \"latitude\" : 7.651396260721425E307,\n    \"longitude\" : 2.875058857627309E307\n  },\n  \"properties\" : { },\n  \"status\" : \"DECOMMISSIONED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "666a62eb-6eb6-450a-b983-234426a94dc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:24.000753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.update",
          "schema" : {
            "description" : "Details of a beacon device.",
            "properties" : {
              "advertisedId" : {
                "$ref" : "#/components/schemas/AdvertisedId"
              },
              "beaconName" : {
                "description" : "Resource name of this beacon. A beacon name has the format \"beacons/N!beaconId\" where the beaconId is the base16 ID broadcast by the beacon and N is a code for the beacon's type. Possible values are `3` for Eddystone, `1` for iBeacon, or `5` for AltBeacon. This field must be left empty when registering. After reading a beacon, clients can use the name for future operations.",
                "type" : "string"
              },
              "description" : {
                "description" : "Free text used to identify and describe the beacon. Maximum length 140 characters. Optional.",
                "type" : "string"
              },
              "ephemeralIdRegistration" : {
                "$ref" : "#/components/schemas/EphemeralIdRegistration"
              },
              "expectedStability" : {
                "description" : "Expected location stability. This is set when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "enum" : [ "STABILITY_UNSPECIFIED", "STABLE", "PORTABLE", "MOBILE", "ROVING" ],
                "type" : "string"
              },
              "indoorLevel" : {
                "$ref" : "#/components/schemas/IndoorLevel"
              },
              "latLng" : {
                "$ref" : "#/components/schemas/LatLng"
              },
              "placeId" : {
                "description" : "The [Google Places API](/places/place-id) Place ID of the place where the beacon is deployed. This is given when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "type" : "string"
              },
              "properties" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Properties of the beacon device, for example battery type or firmware version. Optional.",
                "type" : "object"
              },
              "provisioningKey" : {
                "description" : "Some beacons may require a user to provide an authorization key before changing any of its configuration (e.g. broadcast frames, transmit power). This field provides a place to store and control access to that key. This field is populated in responses to `GET /v1beta1/beacons/3!beaconId` from users with write access to the given beacon. That is to say: If the user is authorized to write the beacon's confidential data in the service, the service considers them authorized to configure the beacon. Note that this key grants nothing on the service, only on the beacon itself.",
                "format" : "byte",
                "type" : "string"
              },
              "status" : {
                "description" : "Current status of the beacon. Required.",
                "enum" : [ "STATUS_UNSPECIFIED", "ACTIVE", "DECOMMISSIONED", "INACTIVE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "a0a00d00-620b-4fa2-b820-318740ce0f87",
    "name" : "Returns detailed information about the specified beacon. Authenticate using an [...",
    "request" : {
      "urlPath" : "/v1beta1/Ginny+Schumm",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ephemeralIdRegistration\" : {\n    \"serviceEcdhPublicKey\" : \"vxu761wig2csl1frm077pj797piw128j0g2mwgl5ge7ngk65vfh59faqp1hi95jb70cd2kita4sipgrc0lkqu5mactyo7\",\n    \"initialClockValue\" : \"umlwt2kb7p5zi40tn2bn05aw9pifkcjrymwavt9ita5per21kkv8cwsm3l99r0hbl0ae0nelg2wgap6twinqvstm49590yvp17h2bqgb40u6tjnm94f97c9c3v6nyh459gvmxsztxh8gv8mv497dfd0\",\n    \"initialEid\" : \"8147\",\n    \"rotationPeriodExponent\" : 8780635045366162187,\n    \"beaconEcdhPublicKey\" : \"2izgyj7fjet148z4w9mrqw1kffzukch8xjmig5xgk3dqi9hrdzflqezlz6pchfjn9mm1bs0znbynuwsq50i1tmobyjuqdvx7mbxnjrf0fl8qk910va\",\n    \"beaconIdentityKey\" : \"m0qm7itptdtvwdlibr8eo80jpacgmvh2c4go9g6e5dohhsmy6\"\n  },\n  \"advertisedId\" : {\n    \"id\" : \"6fql\",\n    \"type\" : \"IBEACON\"\n  },\n  \"expectedStability\" : \"STABILITY_UNSPECIFIED\",\n  \"indoorLevel\" : {\n    \"name\" : \"Nader\"\n  },\n  \"placeId\" : \"5m8h\",\n  \"description\" : \"Quasi sit est eum ducimus. Sunt exercitationem eaque culpa. Nemo consequatur tenetur cum iste. Necessitatibus ut quis.\",\n  \"provisioningKey\" : \"xucqu9wpg4yyxq\",\n  \"beaconName\" : \"David VonRueden\",\n  \"latLng\" : {\n    \"latitude\" : 1.783522738656994E308,\n    \"longitude\" : 9.208813755180308E307\n  },\n  \"properties\" : { },\n  \"status\" : \"ACTIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0a00d00-620b-4fa2-b820-318740ce0f87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:23.999902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.get",
          "schema" : {
            "description" : "Details of a beacon device.",
            "properties" : {
              "advertisedId" : {
                "$ref" : "#/components/schemas/AdvertisedId"
              },
              "beaconName" : {
                "description" : "Resource name of this beacon. A beacon name has the format \"beacons/N!beaconId\" where the beaconId is the base16 ID broadcast by the beacon and N is a code for the beacon's type. Possible values are `3` for Eddystone, `1` for iBeacon, or `5` for AltBeacon. This field must be left empty when registering. After reading a beacon, clients can use the name for future operations.",
                "type" : "string"
              },
              "description" : {
                "description" : "Free text used to identify and describe the beacon. Maximum length 140 characters. Optional.",
                "type" : "string"
              },
              "ephemeralIdRegistration" : {
                "$ref" : "#/components/schemas/EphemeralIdRegistration"
              },
              "expectedStability" : {
                "description" : "Expected location stability. This is set when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "enum" : [ "STABILITY_UNSPECIFIED", "STABLE", "PORTABLE", "MOBILE", "ROVING" ],
                "type" : "string"
              },
              "indoorLevel" : {
                "$ref" : "#/components/schemas/IndoorLevel"
              },
              "latLng" : {
                "$ref" : "#/components/schemas/LatLng"
              },
              "placeId" : {
                "description" : "The [Google Places API](/places/place-id) Place ID of the place where the beacon is deployed. This is given when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "type" : "string"
              },
              "properties" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Properties of the beacon device, for example battery type or firmware version. Optional.",
                "type" : "object"
              },
              "provisioningKey" : {
                "description" : "Some beacons may require a user to provide an authorization key before changing any of its configuration (e.g. broadcast frames, transmit power). This field provides a place to store and control access to that key. This field is populated in responses to `GET /v1beta1/beacons/3!beaconId` from users with write access to the given beacon. That is to say: If the user is authorized to write the beacon's confidential data in the service, the service considers them authorized to configure the beacon. Note that this key grants nothing on the service, only on the beacon itself.",
                "format" : "byte",
                "type" : "string"
              },
              "status" : {
                "description" : "Current status of the beacon. Required.",
                "enum" : [ "STATUS_UNSPECIFIED", "ACTIVE", "DECOMMISSIONED", "INACTIVE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "62c5ef99-5dd3-4376-b42c-d4b4c8c15971",
    "name" : "Deletes the specified beacon including all diagnostics data for the beacon as we...",
    "request" : {
      "urlPath" : "/v1beta1/Arnoldo+Lubowitz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62c5ef99-5dd3-4376-b42c-d4b4c8c15971",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:23.999306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "a381bdd8-6f8b-442d-a369-95d7e40ad2e5",
    "name" : "Deletes the specified attachment for the given beacon. Each attachment has a uni...",
    "request" : {
      "urlPath" : "/v1beta1/Wilburn+Blick+DVM",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a381bdd8-6f8b-442d-a369-95d7e40ad2e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:23.99923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.attachments.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "0dec4302-febd-4ca8-8b05-b6be41ce73fd",
    "name" : "Lists all attachment namespaces owned by your Google Developers Console project....",
    "request" : {
      "urlPath" : "/v1beta1/namespaces",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namespaces\" : [ {\n    \"servingVisibility\" : \"VISIBILITY_UNSPECIFIED\",\n    \"namespaceName\" : \"Major Bode\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dec4302-febd-4ca8-8b05-b6be41ce73fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:23.999131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.namespaces.list",
          "schema" : {
            "description" : "Response to ListNamespacesRequest that contains all the project's namespaces.",
            "properties" : {
              "namespaces" : {
                "description" : "The attachments that corresponded to the request params.",
                "items" : {
                  "$ref" : "#/components/schemas/Namespace"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "a1d1658c-24f3-4eae-a3a1-9da71c8de7ab",
    "name" : "Gets the Proximity Beacon API's current public key and associated parameters use...",
    "request" : {
      "urlPath" : "/v1beta1/eidparams",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"serviceEcdhPublicKey\" : \"x3i5sxo2mmc97t6rkbrjgxqm9fepuda0vjabjm2z3mtabj0gyxbnvgt66cneqqu1dci1fckql908hx4kunkk5xaezy4e3ruhkjqfsyqs5uvfhp1jl40smpqqr5r5bvtug\",\n  \"minRotationPeriodExponent\" : 472536875265834149,\n  \"maxRotationPeriodExponent\" : 748166284357416491\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1d1658c-24f3-4eae-a3a1-9da71c8de7ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:23.999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.getEidparams",
          "schema" : {
            "description" : "Information a client needs to provision and register beacons that broadcast Eddystone-EID format beacon IDs, using Elliptic curve Diffie-Hellman key exchange. See [the Eddystone specification](https://github.com/google/eddystone/tree/master/eddystone-eid) at GitHub.",
            "properties" : {
              "maxRotationPeriodExponent" : {
                "description" : "Indicates the maximum rotation period supported by the service. See EddystoneEidRegistration.rotation_period_exponent",
                "format" : "uint32",
                "type" : "integer"
              },
              "minRotationPeriodExponent" : {
                "description" : "Indicates the minimum rotation period supported by the service. See EddystoneEidRegistration.rotation_period_exponent",
                "format" : "uint32",
                "type" : "integer"
              },
              "serviceEcdhPublicKey" : {
                "description" : "The beacon service's public key for use by a beacon to derive its Identity Key using Elliptic Curve Diffie-Hellman key exchange.",
                "format" : "byte",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "f359ed08-f68c-4450-a028-5589d562d789",
    "name" : "Registers a previously unregistered beacon given its `advertisedId`. These IDs a...",
    "request" : {
      "urlPath" : "/v1beta1/beacons:register",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ephemeralIdRegistration\" : {\n    \"serviceEcdhPublicKey\" : \"6rxu7uibob2mcoshgplrp40x1wrf93k48y20ev82458rbhm64cwdapuscl7a6a25ra3jypan1qb94jh7v7tdy1mhibdwchrszck23khzxi78rrpwsmnwxroqf6flljks7l1plbgupd70kkzhgoro3k97w6n1j4wyv7igkass\",\n    \"initialClockValue\" : \"d8u4uvvn69dutt0mktu186jhjzklodhnzylh745mb5hw0s6kx6\",\n    \"initialEid\" : \"g903\",\n    \"rotationPeriodExponent\" : 8308013676183180943,\n    \"beaconEcdhPublicKey\" : \"ltfm0h5msh8jdxc038q114dpox1gtjucns8i8yx7899o3mbj0to12tbqzyk8heb580evoj7t7w7cmcfwa1eh9w9ylnrpk0wp12cqrc2472f32welmuppq4qkgy1jyqp1hqz72y1ioiltvl6wz2skg8xxq5r66fup4nuj90ua414\",\n    \"beaconIdentityKey\" : \"7sf5m6m4noimemuto0sbjg4j6dwetdctj0ryqtdxqghindzwrnuguess0sm\"\n  },\n  \"advertisedId\" : {\n    \"id\" : \"i04l\",\n    \"type\" : \"EDDYSTONE\"\n  },\n  \"expectedStability\" : \"ROVING\",\n  \"indoorLevel\" : {\n    \"name\" : \"Stokes\"\n  },\n  \"placeId\" : \"lr00\",\n  \"description\" : \"Eligendi aut qui est. Quia qui molestiae reiciendis est reprehenderit. Aspernatur quia cum nam quos. Voluptas ut possimus.\",\n  \"provisioningKey\" : \"0y4v18trz1xhqk089k6m2mdy5w66pwqllmckgzkyrjej8m46436jfd48wkzylgi00ixgn8f4md45zyli48o01o95huskbauwmcx0xmbb6kr05pkydlobx3lbk2fsnn1w\",\n  \"beaconName\" : \"Mrs. Freddy Kohler\",\n  \"latLng\" : {\n    \"latitude\" : 3.1183444786505475E307,\n    \"longitude\" : 6.494097826912853E307\n  },\n  \"properties\" : { },\n  \"status\" : \"INACTIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f359ed08-f68c-4450-a028-5589d562d789",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:23.998884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.register",
          "schema" : {
            "description" : "Details of a beacon device.",
            "properties" : {
              "advertisedId" : {
                "$ref" : "#/components/schemas/AdvertisedId"
              },
              "beaconName" : {
                "description" : "Resource name of this beacon. A beacon name has the format \"beacons/N!beaconId\" where the beaconId is the base16 ID broadcast by the beacon and N is a code for the beacon's type. Possible values are `3` for Eddystone, `1` for iBeacon, or `5` for AltBeacon. This field must be left empty when registering. After reading a beacon, clients can use the name for future operations.",
                "type" : "string"
              },
              "description" : {
                "description" : "Free text used to identify and describe the beacon. Maximum length 140 characters. Optional.",
                "type" : "string"
              },
              "ephemeralIdRegistration" : {
                "$ref" : "#/components/schemas/EphemeralIdRegistration"
              },
              "expectedStability" : {
                "description" : "Expected location stability. This is set when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "enum" : [ "STABILITY_UNSPECIFIED", "STABLE", "PORTABLE", "MOBILE", "ROVING" ],
                "type" : "string"
              },
              "indoorLevel" : {
                "$ref" : "#/components/schemas/IndoorLevel"
              },
              "latLng" : {
                "$ref" : "#/components/schemas/LatLng"
              },
              "placeId" : {
                "description" : "The [Google Places API](/places/place-id) Place ID of the place where the beacon is deployed. This is given when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "type" : "string"
              },
              "properties" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Properties of the beacon device, for example battery type or firmware version. Optional.",
                "type" : "object"
              },
              "provisioningKey" : {
                "description" : "Some beacons may require a user to provide an authorization key before changing any of its configuration (e.g. broadcast frames, transmit power). This field provides a place to store and control access to that key. This field is populated in responses to `GET /v1beta1/beacons/3!beaconId` from users with write access to the given beacon. That is to say: If the user is authorized to write the beacon's confidential data in the service, the service considers them authorized to configure the beacon. Note that this key grants nothing on the service, only on the beacon itself.",
                "format" : "byte",
                "type" : "string"
              },
              "status" : {
                "description" : "Current status of the beacon. Required.",
                "enum" : [ "STATUS_UNSPECIFIED", "ACTIVE", "DECOMMISSIONED", "INACTIVE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "746f9df3-4389-4f49-9184-2a671cb3e831",
    "name" : "Searches the beacon registry for beacons that match the given search criteria. O...",
    "request" : {
      "urlPath" : "/v1beta1/beacons",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bjxnbey1s8y3\",\n  \"totalCount\" : \"26tvsx1329yzntjjy3zwflu0f8qbstd96zvmh9dhk0l536erbw41jbajjy0twuox2epj9t6bcfxqkljp6dke4ihtelu\",\n  \"beacons\" : [ {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"e3y6w3xhtd2uxsm22qz6oh37a1luoiu6is4x2vt6v2r0uor3l9hpr3vmicl5dhtm217sbdlsyke1rq5bjulaqljwlvknj41u7gdsj8jujpemrb2wf3buzqgsgjilu8kibkpwho8usknhn3vrpjwz03mj2a4yfc95o5ckma9qb92hyd8gpmgr9z51r9t6ut7\",\n      \"initialClockValue\" : \"tjyn339kfb4h7hzig75rnxxwy4fclacbzvn1xb3wx7u6zbx81h3jlfoh6r8sskmip10h42g78zfyitq9kkgbcvgi9cf9hvg7uihjmfvrju2x9rfy5sujy4vz2e6jm145rlxa2gg2fdq67lf2fsy7p98\",\n      \"initialEid\" : \"50z3\",\n      \"rotationPeriodExponent\" : 2116715693990234106,\n      \"beaconEcdhPublicKey\" : \"9f3cehba9zv5yyk8k4ys2nl8chzs8qpaxmdhtnup1j47bugz10os9e0degs7cmues8s4nsbsamj8c4fgj8lopwzsmg5aj6rwv3s1uitbmgssin0yb39vrjll8cm7pto2c7c4ccwfosiulrq1cuzafta5hhawus6gt6xlr\",\n      \"beaconIdentityKey\" : \"dgottuo3pqrrbjusj1h961wha2\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"q0je\",\n      \"type\" : \"EDDYSTONE\"\n    },\n    \"expectedStability\" : \"PORTABLE\",\n    \"indoorLevel\" : {\n      \"name\" : \"Gaylord\"\n    },\n    \"placeId\" : \"uthg\",\n    \"description\" : \"Et aut dolor. Et et dolorem in accusantium. Cum eos est. Doloremque recusandae est vitae.\",\n    \"provisioningKey\" : \"a8h1b7v6fwx32h5oo9ci11cw9aiouityvy3lh49g5d9dtk6e2vvsgmqdwi1xiusuieldaiop3db348j7gxm7rtwy9u4p4ubyoa5p9z9s3zw6ncy4mynoj61omf78c4zcn\",\n    \"beaconName\" : \"Stephan Runte\",\n    \"latLng\" : {\n      \"latitude\" : 1.1196009094384187E308,\n      \"longitude\" : 8.989496775947687E307\n    },\n    \"properties\" : { },\n    \"status\" : \"INACTIVE\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"rszq\",\n      \"initialClockValue\" : \"jlro2kndcgj6go4t7guijbavlipz3wtj292frm3wdqzig3rp9tgijoyzw6bx4iudsov9valin0jrriw28a9ufpppaeh0rmr2iweip1nk\",\n      \"initialEid\" : \"985e\",\n      \"rotationPeriodExponent\" : 2995468656590383388,\n      \"beaconEcdhPublicKey\" : \"tt8shpr4c0fco0vouwg011m9ib9ahnhhzaqkbuf\",\n      \"beaconIdentityKey\" : \"lxs1gq3oum3q6wzjo79utez5kiazrxtn6kbi1gekt98ckzw6qmj3lxx1hruc97tkq708xhvcd5sg3dceymnfjtyp942o6zizeqpqigy352lmv3f2zp6lb\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"iw3a\",\n      \"type\" : \"EDDYSTONE\"\n    },\n    \"expectedStability\" : \"MOBILE\",\n    \"indoorLevel\" : {\n      \"name\" : \"Prosacco\"\n    },\n    \"placeId\" : \"kxy3\",\n    \"description\" : \"Sed itaque odit totam quam molestias molestiae voluptatum. Optio fuga quae expedita aut. In eum est. Sapiente adipisci unde et libero.\",\n    \"provisioningKey\" : \"sg43kdqs3uml5y13ui9harfxnnqjgfk\",\n    \"beaconName\" : \"Victor Macejkovic\",\n    \"latLng\" : {\n      \"latitude\" : 1.7812270888665798E308,\n      \"longitude\" : 1.1328787361224035E308\n    },\n    \"properties\" : { },\n    \"status\" : \"DECOMMISSIONED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"s5a6xmgkiwhc7jbnsqy2b7eomrympg9w0bgawcghf121s79u80ukvzjfdez1axj3lw7uhyrc528e6fj72hd20ciocjc5yinlv4n8n46bcg53k1x3oaf1j8e6mvlng9d9lg4x32ceizj3ek08cqk1atbanp2z7cibr06\",\n      \"initialClockValue\" : \"3bhf9dlr724sim15ixdwy0b08xm38kwjhb4ynd0fbvdogxhlj8wrep7dy1etzwrw11g8ek6n8nlooblqo7ipp7w5yehpuat9c11\",\n      \"initialEid\" : \"04x6\",\n      \"rotationPeriodExponent\" : 8107713941990087493,\n      \"beaconEcdhPublicKey\" : \"kgzc3zs60cx34r9qg0ubpe8qvhl4ujnhdyed1u3prxmj2l6zcky2vjctbgt2fa2918smsuothwq4u8o1gqq2j8migguu2edq\",\n      \"beaconIdentityKey\" : \"ix31wg2feasiwy2viviqge3shngj8aat8jn6vioh68r4nbun4pdf0s2r4qcsoglrntigl1dfp4d6oazhlxw6u5ktcwl8zh0ao4it483aiq25a6p5fbbmexnewajv9ifvjf5a71ql2x6ol9ttvs6ddca818e9\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"h62d\",\n      \"type\" : \"ALTBEACON\"\n    },\n    \"expectedStability\" : \"STABILITY_UNSPECIFIED\",\n    \"indoorLevel\" : {\n      \"name\" : \"Langosh\"\n    },\n    \"placeId\" : \"7wcb\",\n    \"description\" : \"Nemo ipsa provident. Consequatur qui omnis atque. Corporis dolores necessitatibus error blanditiis dolorum sit. Dolores nostrum perspiciatis voluptates omnis voluptas quas. Nobis omnis amet voluptatem\",\n    \"provisioningKey\" : \"houx76pdyzubr6n8kshwqhbkc4w66eiskopniu48xgr0b\",\n    \"beaconName\" : \"Booker Frami III\",\n    \"latLng\" : {\n      \"latitude\" : 8.253040340410416E306,\n      \"longitude\" : 1.1494471748369746E308\n    },\n    \"properties\" : { },\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"udipkqcspyb81718aoxj496gw553vyp0hauojx84207t6hgt7i3z8elelbkqf3tgw2e7dau8thym28qxbstm9pbfzgdf6begtpwu6gpl6pqpwmfeekdqniw5piskvxgb7iy2j4mbpiyplxjsrgu1rzenm620umau9afdz4d9maay3k108lwagif77chrwt9olx0o239\",\n      \"initialClockValue\" : \"ms6i4wzoaaghfx3cwnxbzxoms6zybqmvugs83zrkpy\",\n      \"initialEid\" : \"7bbo\",\n      \"rotationPeriodExponent\" : 15356678586216215,\n      \"beaconEcdhPublicKey\" : \"tf9uf8o87a5gwiwm289wqc581l5lrd50lumyc2yn9d9xg8ifgk3thyet8uswnyorunuqesqeikx4kenhak2lxce0j46b5y0ionxiuhsycmp7o1mx2tu2r9a6mo1590sonzr2ypjv19x010smxvrumm6ig2jx4s0pjldaaokkn3mq3bc1ymuvbtt1np\",\n      \"beaconIdentityKey\" : \"k4l1sk6dpct1qz51kooyrpqlrhhc99s2h2gq858kmbd\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"gf16\",\n      \"type\" : \"EDDYSTONE\"\n    },\n    \"expectedStability\" : \"STABLE\",\n    \"indoorLevel\" : {\n      \"name\" : \"Collier\"\n    },\n    \"placeId\" : \"tfqw\",\n    \"description\" : \"Ea qui voluptas vel. Nemo repellendus consequuntur est. Est et ut possimus eos. Nesciunt nihil ut facere ipsum et sit. Modi architecto facilis velit quis quasi porro quo.\",\n    \"provisioningKey\" : \"kv5ssx6fzoyhg94gofc4slmlgv5llp5xekfeiz3se34fugsano2xf1tal0b4cwshjuqv4zt69j8ccle6zfwy0egib3rlmp3lqrzy05i9\",\n    \"beaconName\" : \"Carlita Morissette V\",\n    \"latLng\" : {\n      \"latitude\" : 9.514798259722423E306,\n      \"longitude\" : 3.2810043745076503E307\n    },\n    \"properties\" : { },\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"szajh1gyv8iwrkoj8els0bigetidpfy0qk\",\n      \"initialClockValue\" : \"ivvjsx5uqk4lklzwknd5is2nu0luzgl7gygdypmuhfmxcrj68o65903rrcs2g15jro3reh83xxvdijhlu73lazcini4z4dzftw3n1bc26vi66tnwiyomdslxad478udg8rtm66vi9d0unyfs4ig9gtyf5a80sfh1vp0scer3pe0magjn1qnot6vl\",\n      \"initialEid\" : \"0863\",\n      \"rotationPeriodExponent\" : 7045477886950704320,\n      \"beaconEcdhPublicKey\" : \"t53c10gekv6ko9sw13my1nvfw6lhtj4d03hqcu435wdta7nro9v7v23m72crr1nour8yyzhtmj9xh3wrtjcf7nmzk63l8njjrh70x0fqo16bh3vh0l6ohuwyz351wn2xcs60ny2s2um1qtk1njcsof5ox1ey77hb35q2pvev0ijl30f9ks3xdy9ocrfjc650i3ju7h\",\n      \"beaconIdentityKey\" : \"mblnashsjc7d3ug6muxohgygxrfk4zzbhgdmeyc0v1q2qyl3xdiz4n0d4gmf1l965y1nqmpziq9k9q9840drdhqzwkjct74ej24yhsk5swu46o01y5an8okhkl7mv2op23jss4q9rdr5bpae7q04hi6\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"66k8\",\n      \"type\" : \"IBEACON\"\n    },\n    \"expectedStability\" : \"MOBILE\",\n    \"indoorLevel\" : {\n      \"name\" : \"Wuckert\"\n    },\n    \"placeId\" : \"255j\",\n    \"description\" : \"Et minus sequi ut pariatur et dolorem. Temporibus velit laborum ipsam tempore voluptatem nisi nesciunt. Vitae cum qui est enim. Maiores repudiandae cum assumenda. Sint distinctio aspernatur.\",\n    \"provisioningKey\" : \"x1jwiwxyxifvj99byyn6meis07dxlv6iazhp8hxw78hpdlnets90tx0f99egl93jb954fj9ccb6ipg11c0yyqora8rnwm0r1v5p6g3p8a8pbbco0xnfgvaoe58hejk61\",\n    \"beaconName\" : \"Mrs. Harold Boyle\",\n    \"latLng\" : {\n      \"latitude\" : 7.01328049228784E307,\n      \"longitude\" : 1.2371225475489093E308\n    },\n    \"properties\" : { },\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"nz4jr4jcrhuuuo7wa6uamt8kkzns0z65gehtc17cjmytlha8xajdvwr7ike6oc8cmfqfzbrgmjqfon93wa05p\",\n      \"initialClockValue\" : \"o7npfavkbwlcwoeb93phck30w25lutl6l6eyzgn8abfs78noezl3nm20pjmeeqz9v5otantmas936ez5zz3snjcybhzktnz67aemhcpklwoyuwf2qauni5j500x47hrwwwoa03j9fek83g2c5czu6y9h62nico\",\n      \"initialEid\" : \"4305\",\n      \"rotationPeriodExponent\" : 5928788221605262742,\n      \"beaconEcdhPublicKey\" : \"y95x610uhyk48xicqqj9xp1f86yh6gfrb8cbd6b1tgia8nap786lv0ekad36nscz4n9ujv3x2o3ac21di17hn1atcr97rj5jy6ezo6wwhh\",\n      \"beaconIdentityKey\" : \"7wii66l41bd7s58c41eio4chmle5stwdop5f60hcy8c97i4qzipwoptaq63h6x0zlvkej4jvzu2zgtxuu9favxrv1z5dctzkkhp81wmo9e1sgvr3acskp0ytls7nztohi187dncoxxjrvjlrzdce7eckgc25aiohb1ztnmpe6syqjizv1prc9njvohslp7at3h08lf\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"05n0\",\n      \"type\" : \"EDDYSTONE_EID\"\n    },\n    \"expectedStability\" : \"STABLE\",\n    \"indoorLevel\" : {\n      \"name\" : \"Dare\"\n    },\n    \"placeId\" : \"536n\",\n    \"description\" : \"Laboriosam ut dignissimos assumenda architecto. Qui quidem ut beatae velit ut consequatur. Ullam quo facere animi repellat. Ipsam laboriosam nisi sit corporis facilis sunt. Aliquam iste enim rem cum.\",\n    \"provisioningKey\" : \"ubi70klmip1zmbks7m8y2fszxd0l3jo02ix6l3vkx\",\n    \"beaconName\" : \"Mr. Celine Hahn\",\n    \"latLng\" : {\n      \"latitude\" : 1.0474953616947166E308,\n      \"longitude\" : 9.495585232687686E307\n    },\n    \"properties\" : { },\n    \"status\" : \"DECOMMISSIONED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"8pvkdan1uxkzfa28lwhzkmmta55p06dpl866351dn7f4he9a8zcugw2nxpz15b7n7ncnv486quud2vil7c82gb9kt18jvr05rnf6g90of3v5ln1jorr2wj7plst2x41wjnzwn5hgyul57r1f8lk3rk34ofmjo8q2ssmd0kelzlssoybtvmv8yu6bclty31adal\",\n      \"initialClockValue\" : \"wr506\",\n      \"initialEid\" : \"fndm\",\n      \"rotationPeriodExponent\" : 2924665254904817738,\n      \"beaconEcdhPublicKey\" : \"38hd1wuk7ruir0aklcvl1tvn5aq2ktj3r037qm8hg92q0gbw7mh6zbjzlkl91e8nstub7maq571l9r51jkvnuut61i1az9piwsrip8xbnbflt1uade5dq02yztqdbc2e85z8ushbbm45t33kcrv45v5vwpw\",\n      \"beaconIdentityKey\" : \"34lpazo644sgzfr9l045uhdfnmt39v2ag97pj18ktqjhnmnhc586iqppqym44jikimudzh51wtjrmvp6biqjry\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"abj0\",\n      \"type\" : \"EDDYSTONE_EID\"\n    },\n    \"expectedStability\" : \"ROVING\",\n    \"indoorLevel\" : {\n      \"name\" : \"Beier\"\n    },\n    \"placeId\" : \"2zi3\",\n    \"description\" : \"Sed itaque eveniet est mollitia. Minima pariatur perspiciatis voluptatibus sit. Facilis a consequatur quibusdam libero nesciunt a qui. Sit est quis aut vel assumenda asperiores et.\",\n    \"provisioningKey\" : \"ctwnujxv7ax7xmrifp7pv7djo7eownhxblbaxy8wxi3ufakuy3w\",\n    \"beaconName\" : \"Gussie Gutkowski DDS\",\n    \"latLng\" : {\n      \"latitude\" : 1.4545192337604714E308,\n      \"longitude\" : 1.280384650700142E308\n    },\n    \"properties\" : { },\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"9xcfbmlei1173fl439ws9vpcism2ztwu9r5ywwxhtq0cpgnlryxan4hbyye8qvh9i4cj75s4a3mcr9w8bkvjphkc3rryjz7syx9m6sxc89b2lcslkpgl9v80uggqn4vrtu4v7t99h1fgq883a0pbatgiyr7z4qglq7gns1by99x2wu7e00ldbwdcohqq4uqziom\",\n      \"initialClockValue\" : \"3t0n0y\",\n      \"initialEid\" : \"mppg\",\n      \"rotationPeriodExponent\" : 148182344794884601,\n      \"beaconEcdhPublicKey\" : \"lvvjllj6mqcdj6gnocpk61usz6vx58yky0oztb8folyxp19841j2fc0m1cv2pvw561x50xkri5d4v4uhhcnj0kc9koe3q4u7s7x3l9drnj1c5gs2xtcnb6riodvj1by54htayl2aofdj7j3wm63uq1nwydb42slgzw0a9cq\",\n      \"beaconIdentityKey\" : \"vv59bhpqymb64e6h7xzf9zogiknjplsfzh344p4ie66c4zeck7u7e2g2iqxad6c5npwef\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"t3p8\",\n      \"type\" : \"EDDYSTONE\"\n    },\n    \"expectedStability\" : \"ROVING\",\n    \"indoorLevel\" : {\n      \"name\" : \"Braun\"\n    },\n    \"placeId\" : \"r4ju\",\n    \"description\" : \"Et et voluptatibus. Placeat doloremque esse et voluptatem neque illo sapiente. Pariatur voluptatum nisi reprehenderit velit consequatur reprehenderit beatae.\",\n    \"provisioningKey\" : \"dlwbel51dd67dlc7psgldilceaxu3k2onu810krezi7ioev41vnyxurgmzu34k4by66d7lsaq3193d0az3regxov12t8sk4p0m4r7ocje9uedsh1rkwep0qnzce6vi\",\n    \"beaconName\" : \"Hank Schmeler\",\n    \"latLng\" : {\n      \"latitude\" : 1.4237616547530297E308,\n      \"longitude\" : 1.463300705600433E308\n    },\n    \"properties\" : { },\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "746f9df3-4389-4f49-9184-2a671cb3e831",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:23.998203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beacons.list",
          "schema" : {
            "description" : "Response that contains list beacon results and pagination help.",
            "properties" : {
              "beacons" : {
                "description" : "The beacons that matched the search criteria.",
                "items" : {
                  "$ref" : "#/components/schemas/Beacon"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "An opaque pagination token that the client may provide in their next request to retrieve the next page of results.",
                "type" : "string"
              },
              "totalCount" : {
                "description" : "Estimate of the total number of beacons matched by the query. Higher values may be less accurate.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "24fa17fa-27a2-493b-854f-5f6b07a7c902",
    "name" : "Given one or more beacon observations, returns any beacon information and attach...",
    "request" : {
      "urlPath" : "/v1beta1/beaconinfo:getforobserved",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"beacons\" : [ {\n    \"advertisedId\" : {\n      \"id\" : \"g4z7\",\n      \"type\" : \"ALTBEACON\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"5lasyqlhzoyobcqpess11buwb8rppfbli7ka1jmsr6630vn0itz2i8eh0jdufj6buie39unhn0pow0te3\",\n      \"maxDistanceMeters\" : 4.946535109924692E307,\n      \"namespacedType\" : \"ha1190pehi1zur10rpizqipcob9x3u64mc4yu7mm2jsxsglw0gwns35mm3bxrox5osdicouooviz034jvftga4yjulimb24rdbv5ni4m43y99hy8oblurh24qk4ljsixs1b\"\n    }, {\n      \"data\" : \"u7g7wj9qk0wy311l2pdst9hspytp5bsmk8s8izqkocb8msy6katuqrk1dg1m26eli2mb57iui9xuzci4gyar1yj8tiikgsmb296vumd0lx21b1a3ztuf83ymt4c7b8vbmtoh8\",\n      \"maxDistanceMeters\" : 1.2924007097782909E308,\n      \"namespacedType\" : \"73lmy8es52a4mul771zrv9b1kajp68qw2l7it3okabrhnlcxfs69d2deo99ac64g07o9\"\n    }, {\n      \"data\" : \"is1lipe9uc5bdp4kq3dwww81f9vanch7s0a7pg4pn91pyxt20l\",\n      \"maxDistanceMeters\" : 3.4265902100068664E307,\n      \"namespacedType\" : \"lxmigkksnurt03m4kmtxzx11nvxux88z8ceb23xq98r4jy72rbu8x9pl8r5my1umw4wo1s03m0waog37xr0jw1l51838am5vuhz73rqn5btxplrlz343a8xirl5g1kyypwhsp42e240uv5lfo\"\n    } ],\n    \"beaconName\" : \"Emelina Hane\"\n  }, {\n    \"advertisedId\" : {\n      \"id\" : \"n3dk\",\n      \"type\" : \"ALTBEACON\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"6vm4o4q8fr6t8obnbb9pjg532d0m118niul9lklxcf244ado2pdhjqdb5aj8u3uv2xv410486li20v1s06y80b5ubepfivt8vl8l02tda1e38hr8g6k72a\",\n      \"maxDistanceMeters\" : 1.6695891489429818E308,\n      \"namespacedType\" : \"fd1p1cjybic190y3ryg4ye53474sh9xknk7pmh3rp4p6lf6hrj5w22cz3y4stiiwdvkte1mb6861\"\n    }, {\n      \"data\" : \"bj5qgili4wlkyyv6k52rk26krl209zkoe5jufzaakz9aaymzqhj66uvuw7yxdrp138fg4kjzzob8dk\",\n      \"maxDistanceMeters\" : 3.4787116836866446E307,\n      \"namespacedType\" : \"zs1xapplygr8a5jzsqk0bunlx43en\"\n    } ],\n    \"beaconName\" : \"Mr. Jules Oberbrunner\"\n  }, {\n    \"advertisedId\" : {\n      \"id\" : \"4vr3\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"ikiiprtioyqe52tfb9ecwkmv0wxdsc7gt5bmo4a4nc82ddvn7x1m36rjz1kzf9uvnpaf4s7gqbdk5kx6w287i9au7x86fs9hgsi5\",\n      \"maxDistanceMeters\" : 1.4231141137368401E308,\n      \"namespacedType\" : \"hjwamxnrqp7iza64ee3\"\n    }, {\n      \"data\" : \"goc5bzdre4v4m406orvtzj38tkw8z0p89ca96gz2k9et9wrnyc8ahd7lnfplil9lef0vfcvvfbmryw5\",\n      \"maxDistanceMeters\" : 4.2686476512230746E307,\n      \"namespacedType\" : \"g2ve0614ej50q3j3cshou94hh60g2zawfge3cjxgcm721bibhzxzqngxtkqkepvoc2zp1oed1nl1sdbca8gscgjfcdoze81cugimd272h5qsxxermhsbgsok110ttil26f3f6dcvzt1lfn9nfsr324bf21\"\n    }, {\n      \"data\" : \"j3p8diw3jiv81yrb2lfuu9ppt3q21lrm04bur3bibwevyuu829cv5vjex7sfw4awo31zcaym375nb8jw\",\n      \"maxDistanceMeters\" : 9.022512102068876E307,\n      \"namespacedType\" : \"u5cn3ogcffi09x5q3k9fb1rtzod3dlf6rwl2sp9ze4xfrzuxjusr472hho2b9ya900iyj56617hsq5898s8jiqnztbqmf1o2ycrq5cr42wln0fnptca59qxaiaoyr3lajl30qqxtfuu0adup37i3pb6j85gd0zwsmrveyvqyjub7c3v6lwj\"\n    }, {\n      \"data\" : \"qmc0glmp1u\",\n      \"maxDistanceMeters\" : 1.4741926805985214E308,\n      \"namespacedType\" : \"0rycr5t2u2kmnmin4b7qpz0gbybagzl122ni9m5peacwti8n84ec8wfpda0ck72dpjobj55x28gjgraut5\"\n    }, {\n      \"data\" : \"p8ty0l06h7usly9jh0lthotbocuumf6ztib8lk3zrih81lybo5ykr2pr0ez4hzgjl08acn7795dpjeew5dshsn2sag650e3i3u5mpj578\",\n      \"maxDistanceMeters\" : 1.2274984625195494E308,\n      \"namespacedType\" : \"5kd3335a754x39h5y0n2g8nyv54ev4su556jmpe3oaexjf709ntsshkkgu629oasonkndu1zucufz5zv6c98f7h78ipmih2onxs8het613keeeq1x48e8xlaz1gl2nlq6vcp\"\n    }, {\n      \"data\" : \"efjxti666chihxituapgmwjyqwzvqqbmppgc36vkhd8to75tkd5o0t74nh5xvdykmi4y2loyihrs3v1mlolw25ttxmq4d789x1ue8e0a5xym5pqdaczp0zt\",\n      \"maxDistanceMeters\" : 8.046085146198048E307,\n      \"namespacedType\" : \"k3fdhgd8p1zl408ncxj7bh1jx90h6cbk7nfjsdoldqiwic3mhharqghln7of2hjohhybc7\"\n    }, {\n      \"data\" : \"osgab7sbeszwr3elzxabkwr6rfxc88kvpd37y9z72tjafk824z5pglgknvoxdskk3dbujovzg6z2e3bn\",\n      \"maxDistanceMeters\" : 1.6593774632057003E308,\n      \"namespacedType\" : \"8ccgt4kp23m8323jyvue1xnq5i467r3lrx7cpvlygroeebg5uqwu\"\n    }, {\n      \"data\" : \"y0ojvv0uwysdh3ljmg3uew61eip9wpc03ezzvmueuj7ai4f2zipz6vs7lauhtf7s9tsudiarn3rz6xs85wq9vwqh4qrc1lit6iaw1947bpqwm0biyxipozczxfta6xn09gafk0vxhmknhbmmj1qnujqm\",\n      \"maxDistanceMeters\" : 1.7645285826227266E308,\n      \"namespacedType\" : \"eh7cayhr8yoelut5osz8gl0hqz4rflqrc58z3budek3xyu0wp0fchmoethanbhde6pnwo5ae0vn8h8d0shoxddw5r71ez1hk28bhc7\"\n    } ],\n    \"beaconName\" : \"Eldridge Bailey\"\n  }, {\n    \"advertisedId\" : {\n      \"id\" : \"r70t\",\n      \"type\" : \"ALTBEACON\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"qknql9q4g0dw8qkan279tufb50oski7fg229fk3v6qe25vua9fv45ntqggy9v3i9f8cmpciiiamrr\",\n      \"maxDistanceMeters\" : 1.2867368702777188E308,\n      \"namespacedType\" : \"k8dz2cl57y08dieh0zkhzp3u5g2ppqjaqi1i7c304t\"\n    }, {\n      \"data\" : \"vzndaxwv88rjugacrucqn9nj7n3uyfcanfw1d2xg88ms6q0rj911hsm3xqyx3f74kz7j3sbn5gdjiul6ev0z0zkiq1f1qwhslbdv4ryxrukgykz7vba94v9e7zp1rw08r36cz7ycn1v4x0cn69q6t75arw0qagbx\",\n      \"maxDistanceMeters\" : 1.3779774613959031E308,\n      \"namespacedType\" : \"n7xl5dfjpw2d9mtnqs77qlcqojib5l3mk51xx4jeb0ul6r8xq50vagcsvg93oreuj3chrqwj2zpat2qp2qmt64ws5tafzlsb935fdlrtjg1pil2k7r03sc\"\n    } ],\n    \"beaconName\" : \"Hang Ernser\"\n  }, {\n    \"advertisedId\" : {\n      \"id\" : \"gqf8\",\n      \"type\" : \"EDDYSTONE_EID\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"lf8h\",\n      \"maxDistanceMeters\" : 1.320711896891609E307,\n      \"namespacedType\" : \"huncp\"\n    }, {\n      \"data\" : \"a7309wpo8k5f5sbsrh4n3yc3skvw9ql573ly31jdavi00zq37ufppdnqxnh7l1haaqyw6nc4omkmqk1eagr0ap6y3bu5amk070ltagzi3ykp7kgthwzh38j3tnreg39odjb7hjiq12ct70\",\n      \"maxDistanceMeters\" : 5.752660084511866E307,\n      \"namespacedType\" : \"mm4z3hu9jq83buz6qg0bvaqqtyyirtswdp7s3f0qdkbr4zsrk0y3ft7jpeb6m817au044ccendnjm5r4i5c711e6a7t3cle76vsmtgs49j969frw8ar0n70513tp61\"\n    }, {\n      \"data\" : \"ij4t8eruu7737p8x85a9jwqdpb3ktp6idazjz3nvdieq2jy9pynl4x3tqy2gieix00kf7577ldmwi1i3bvytoeqj6j49rt1nv2hsg6es6hqt8hmq0qqxib3jlerzf0\",\n      \"maxDistanceMeters\" : 1.589141386216687E308,\n      \"namespacedType\" : \"ievz\"\n    }, {\n      \"data\" : \"cr4i4niu3e95kcltrr3he338oiyt6476swg1cthdly1qbx67v80kc0m2l5ifmcq4h93tlbd7zax9w2smwterkz8xw7illncs9x886o50jqssrrcok8sior85cnsdg\",\n      \"maxDistanceMeters\" : 2.872531890061314E307,\n      \"namespacedType\" : \"plwwpbas89cjs741eyl3pat7kn9itjaxrxxb7aaxnsztox45a23wu1e\"\n    }, {\n      \"data\" : \"0n09e6vh1wh5s8bwbofifs\",\n      \"maxDistanceMeters\" : 1.754779028361309E308,\n      \"namespacedType\" : \"3hz47oft3tknty0k0p4tjmxxpl743kj7d8jpuse02\"\n    }, {\n      \"data\" : \"xzfxn713typ64hy3n5wo4aut3mm18k1sb33ixdxbatcbfk5uoho0ut2vcmhdh4\",\n      \"maxDistanceMeters\" : 1.2258442350163027E308,\n      \"namespacedType\" : \"1ovxwyx3oslgoxzqclrbvop6minq2nlfdfsp4mr5wm6bnx4eq3w4e1gif47cplyhmkelqq8sjbh082pvop87vz5kamr45xcii058cc0qagqgu2i2b7ebv6ucae2m4v9al24uj4c10wldry05e5jtiasmvzlr32gyulwdvwao6397dapd2cf\"\n    }, {\n      \"data\" : \"wgconbonjtvrlkqya9p0va1bo8x749gs6c0jq1v5gswj1axv0zyhhx3a4xhx7c1nxkb56hdu05p0frvlqcg1and1xjwco06wtydu1i1dm4in1zgmzowvd5b6i4i9wdkfkqo94e6g3dpfk5tzbwq06a5wf2ygjmsbb26mf7f6at8is690f7174k4b9898y\",\n      \"maxDistanceMeters\" : 1.7758145369676152E308,\n      \"namespacedType\" : \"qlgpiaxd7vjj9jmgutwbz9k2nzz2obi43fauo2gun1x6h57mmebbhrl8uaenox5xifyjpipe5yymt9u3ldkdiu3m9i162yhvrwu3s2fgem8q5tb85k9ggg0l1us4h6p7mi0ruy8ki0p34mwrcvthrj5rmqcp15nfke4yji2yi0tk3kzigl5kqllup\"\n    } ],\n    \"beaconName\" : \"Meagan Prosacco\"\n  }, {\n    \"advertisedId\" : {\n      \"id\" : \"4fc2\",\n      \"type\" : \"EDDYSTONE_EID\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"7rrixpdjncguacpzutn3400h195wf88qqh12c2a038g5ktomykfhgwba\",\n      \"maxDistanceMeters\" : 6.991491877194884E307,\n      \"namespacedType\" : \"bmp7y0173ax9l623ln4de1zk6d9bow2yyf1f9pw6blrmdoeyf3\"\n    }, {\n      \"data\" : \"j7fhn9964yut4znciuxmk9hf8yk65s5t2ediasw9se1enwg1ffax2kfju7zkwg96dx8ge3hklcci8advazuvos5xz8au3inmy62jfytqhou87xx6x6i5eqbptg3dzq39vcesas49m3n81o99yguafyz7axpof\",\n      \"maxDistanceMeters\" : 6.458531841701498E307,\n      \"namespacedType\" : \"j8opft8ojqr4bqb2e3vndfjvfrgr7eadghgi5960wp3uuur2qtwenw0mcpx9dc9yogfc72z76fbi6fumbaxjvjqy78o3fueab2napofyf4mci3xyx8yjrx4sc4cprw0c9dylqbub5cgjugwbx702a6ouvm1zty8sfwccjrrcvspkk8ynhe\"\n    } ],\n    \"beaconName\" : \"Joel Dooley\"\n  }, {\n    \"advertisedId\" : {\n      \"id\" : \"yl1n\",\n      \"type\" : \"IBEACON\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"dve1r9b3ptj9vecuovwq5jagvbcn2s2wt3i4n17yx32toezbyc9p0lcb6ubg5ws5rbczalhj0na5cb9o0hwpncrn5cbw3n3zvt76jx\",\n      \"maxDistanceMeters\" : 9.609462004241323E307,\n      \"namespacedType\" : \"ccd8yuf8ofyd8zz73spr7i684b8miesu12itqjmiukjvq8zwyaf6u1t7iasrd2rd6by84528ladx\"\n    } ],\n    \"beaconName\" : \"Lemuel Rau\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24fa17fa-27a2-493b-854f-5f6b07a7c902",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:23.994066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "proximitybeacon.beaconinfo.getforobserved",
          "schema" : {
            "description" : "Information about the requested beacons, optionally including attachment data.",
            "properties" : {
              "beacons" : {
                "description" : "Public information about beacons. May be empty if the request matched no beacons.",
                "items" : {
                  "$ref" : "#/components/schemas/BeaconInfo"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  } ]
}