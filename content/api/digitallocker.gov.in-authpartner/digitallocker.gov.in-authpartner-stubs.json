{
  "mappings" : [ {
    "id" : "b4fa265f-77a9-4ce9-b175-ca33e10b9d8e",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Quasi soluta perferendis doloremque consectetur possimus. Non porro tenetur ducimus qui. Expedita omnis ex.\",\n  \"error\" : \"jn23m6osg2xykdwpks62q1qndotx03ggu993u9b6tsk0qoyja90knfo9zum99u2a0ir67bksuv5jspj56176bbd40cyz0hu6xok4z3fevglu4vmtae42\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4fa265f-77a9-4ce9-b175-ca33e10b9d8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.157072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d9339099-f033-4ba6-8f54-ade9cc0a1ca2",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Iste quisquam distinctio nulla suscipit. Non autem aut minima mollitia. Praesentium fugit esse eveniet velit distinctio assumenda exercitationem.\",\n  \"error\" : \"7fnjkf1qt6qyrv6wan0ngn26qsv6yt3e5uvulej9fyprqvjiovbful95wsej32t4j0v5p7f6m3plzrb0f5mpzavhpztfch0cx3hkb286pdck4ap2p6k22pwak5sjwanlja7fk8j52og5ghyw480angp5u3fybk6doibwm9377snjo89ixxkzqv6zf7e864aedl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9339099-f033-4ba6-8f54-ade9cc0a1ca2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.156983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "94a766b6-549e-4fc2-8ea2-e1e5be40c80f",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Necessitatibus consequatur et qui eius recusandae veniam. Accusamus laudantium pariatur delectus. Consectetur sit sequi quae iusto.\",\n  \"error\" : \"vfjbgng269l657knsz1xyf7afppyca730nc0ziiphn44ler6oyzhediio75gb1mv099sd0229h5yke2425kdjsduzybn0ai5s279d1pxhuienxcyqlbtj4c65ewmpscj4y0gbtl76zcuhk6inhvg8w8qm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94a766b6-549e-4fc2-8ea2-e1e5be40c80f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.156891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "5e150638-ecd3-40f7-af88-0c41df318ce1",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count_as_on\" : \"31072019\",\n  \"yearwise_authentic_documents\" : {\n    \"details2\" : {\n      \"year\" : \"2019\",\n      \"count\" : \"3520475277\",\n      \"id\" : \"18567\"\n    },\n    \"year\" : \"2016\",\n    \"count\" : \"10134567\",\n    \"details\" : {\n      \"year\" : \"2017\",\n      \"count\" : \"1000548093\",\n      \"id\" : \"18350\"\n    },\n    \"details1\" : {\n      \"year\" : \"2018\",\n      \"count\" : \"2410543684\",\n      \"id\" : \"18354\"\n    },\n    \"id\" : \"18347\"\n  },\n  \"monthwise_registations\" : {\n    \"month\" : \"5\",\n    \"details2\" : {\n      \"month\" : \"5\",\n      \"year\" : \"2018\",\n      \"count\" : \"124794\",\n      \"id\" : \"18496\"\n    },\n    \"year\" : \"2018\",\n    \"count\" : \"124794\",\n    \"id\" : \"18496\"\n  },\n  \"requestors\" : \"45\",\n  \"authentic_documents\" : \"3520475277\",\n  \"issuers\" : \"134\",\n  \"users\" : \"25873490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e150638-ecd3-40f7-af88-0c41df318ce1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.156787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "authentic_documents" : {
                "description" : "Count of authentic documents available through DigiLocker.",
                "example" : "3520475277",
                "type" : "string"
              },
              "count_as_on" : {
                "description" : "The date on which this statistics is generated.",
                "example" : "31072019",
                "type" : "string"
              },
              "issuers" : {
                "description" : "Count of issuer organizations registered on DigiLocker.",
                "example" : "134",
                "type" : "string"
              },
              "monthwise_registations" : {
                "description" : "List of last 12 months cumulative user registrations",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user registrations in the given month.",
                    "example" : "124794",
                    "type" : "integer"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user registrations in the given month.",
                        "example" : "124794",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18496",
                        "type" : "integer"
                      },
                      "month" : {
                        "description" : "Month of the year in numeric format with January as 1",
                        "example" : "5",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18496",
                    "type" : "integer"
                  },
                  "month" : {
                    "description" : "Month of the year in numeric format with January as 1",
                    "example" : "5",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format",
                    "example" : "2018",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "requestors" : {
                "description" : "Count of requester organizations registered on DigiLocker.",
                "example" : "45",
                "type" : "string"
              },
              "users" : {
                "description" : "Count of registered users on DigiLocker.",
                "example" : "25873490",
                "type" : "string"
              },
              "yearwise_authentic_documents" : {
                "description" : "List of cumulative year-wise counts of authentic documents in DigiLocker.",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user authentic documents in\n  the given year.",
                    "example" : "10134567",
                    "type" : "integer"
                  },
                  "details" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "1000548093",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18350",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2017",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details1" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "2410543684",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18354",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.  ",
                        "example" : "3520475277",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18567",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2019",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18347",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format.",
                    "example" : "2016",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "required" : [ "users", "authentic_documents", "issuers", "requestors", "count_as_on", "monthwise_registations", "id", "month", "year", "count", "yearwise_authentic_documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "2fdddc2e-21f0-4756-a662-bce707322719",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fdddc2e-21f0-4756-a662-bce707322719",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.15646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "e784f3f2-30ab-4cc7-bea3-3d029d41db78",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e784f3f2-30ab-4cc7-bea3-3d029d41db78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.156414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "e61541f9-afc6-49e3-85dc-06ff06e2abe6",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Est atque provident itaque ex. Et sint in accusamus excepturi magnam dignissimos sed. Ut quis nihil dolore. Perferendis qui et.\",\n  \"error\" : \"x9w5baycsc3sj5qau9hs1uaptzebqkisv7yty3mwlv8sqlkblw74zzv23xkeq2vlz98mq56nl5wa1nwtj037ub0hqced4qo8oh84t8kr7vh7nornohfxtv8u5634ulm378gjdlrm01kdrsoy57la4ab\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e61541f9-afc6-49e3-85dc-06ff06e2abe6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.156367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response10"
            }, {
              "$ref" : "#/components/schemas/Response11"
            }, {
              "$ref" : "#/components/schemas/Response12"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "5ace498f-955a-4d48-a42a-2ab710573979",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"mobile\" : \"******3712\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ace498f-955a-4d48-a42a-2ab710573979",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.156279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "mobile" : {
                    "description" : "The masked mobile number of the user on which the OTP has been sent.           ",
                    "example" : "******3712",
                    "type" : "integer"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "mobile" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "a49ae6c8-4d80-4cf6-a38f-ca6437d4f566",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a49ae6c8-4d80-4cf6-a38f-ca6437d4f566",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.156174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "ec8244cf-24a1-48fc-827e-06cbe642e3c8",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec8244cf-24a1-48fc-827e-06cbe642e3c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.156125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "68063163-4b9f-4657-ad35-3c9b7f91b3a1",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"In voluptas rerum qui rerum dolorum. Libero delectus eum. Quaerat laboriosam suscipit quia qui. Molestiae molestias mollitia aut.\",\n  \"error\" : \"nvdlzu2khazz0lf27oto50zl1ikmstuolljg7r5i4om4eshxaxvgw5q72dsaaa9ezeuegwe9vy70lp6nrfl8jd2hde00ssto16zmmjxqczfgjpfr71a28ftecsh02627jstqwnuoi81piie6d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68063163-4b9f-4657-ad35-3c9b7f91b3a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.156077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response7"
            }, {
              "$ref" : "#/components/schemas/Response8"
            }, {
              "$ref" : "#/components/schemas/Response9"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "0425d085-1184-4f05-8cab-68bb0bb819d0",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0425d085-1184-4f05-8cab-68bb0bb819d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.155995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "4e603fbd-b71a-4b77-b3db-7970c90a4074",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Deserunt exercitationem et nisi. Dolor explicabo dolores commodi alias ea quia. Ut sit architecto repudiandae amet sint. Ipsa voluptatem dolorem non consectetur soluta est.\",\n  \"error\" : \"qkqpnysekyl5uwc4ptt413mupg5z8jtp9ybmqivd95tv4qw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e603fbd-b71a-4b77-b3db-7970c90a4074",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.155887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "de58613c-c2a5-47b4-aaf4-a9bdfb3462b4",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Id occaecati dolorem reprehenderit veniam. Vel iste in nostrum quo. Non voluptas eveniet occaecati consequatur nisi molestias. Aspernatur voluptas aut ut accusamus.\",\n  \"error\" : \"4d5y0j1k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de58613c-c2a5-47b4-aaf4-a9bdfb3462b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.155798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "273c825e-f8f3-4785-b56c-9708aa217cb1",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "273c825e-f8f3-4785-b56c-9708aa217cb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.1557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "aadhaar_not_linked", "aadhaar_not_available" ]
              },
              "error_description" : {
                "enum" : [ "Aadhaar is not linked to the account", "Aadhaar data is not available for this user. Please perform Aadhaar eKYC again." ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "1240b37a-c97a-4681-91fb-e41537b4223b",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1240b37a-c97a-4681-91fb-e41537b4223b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.155641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "ece6faf4-766d-4c96-8fd9-9f8aead0eea4",
    "name" : "Get e-Aadhaar Data in XML Format (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"KycRes\" : {\n    \"ret\" : \"64kk91ecjgiz7zi2rpitsqx3yyxntofpqw61fo0s61gox8g9bvn1gf4wqghvgiavkqmv99xz9lpfzw2o1rwhhfvm94vqv00kyn527asxgo5g6twv4i27cywhtt2pvq7v66\",\n    \"Rar\" : \"ftrxyurcapjzi1akwlg8ozofc9i5p61ljrh55q7x01qx2sue3toh40evsb9dsktjvpsdf6z5cy28idjxlm3rx4h0wvcjalc8o38udib9l756y394qxhqgui3ra76u4telwdjdm2k7sdwfhr3h12evtk3i7dckfcz79zbdm\",\n    \"code\" : \"757hlaawl91b40vx3kfzyn327wv45pn6zg7f3otfv4kbry3c46lr96p31mzb21i3u64evx7vp2ug41l5m5migry7pqrk8ro90b22aqisjtqr8swwipvjvpk2vks6fxdymwy1uvdei848u1\",\n    \"Signature\" : {\n      \"xmlns\" : \"bg0b19r7shtjfe74w0v7ckz9j9dm6\",\n      \"SignatureValue\" : \"6n9piqnzt1i9c63ql0nmbzz71qwpa5jqe54w1yr5240l\",\n      \"KeyInfo\" : {\n        \"X509Data\" : {\n          \"X509SubjectName\" : \"Jacinda Friesen\",\n          \"X509Certificate\" : \"z6pp28b39e7pcbytf10domaojjkc06m3f6ojc22cj1mkf8416izro5awt17ymn9xo89nc0bsiane5u6t9uz4w6qa7qw98a65mrkf1p78wd7mxkfbj9m9n0em9498v40x0j55jm117mipvrjtnnuedo78eenra9ozf0\"\n        }\n      },\n      \"SignedInfo\" : {\n        \"Reference\" : {\n          \"Transforms\" : {\n            \"Transform\" : {\n              \"Algorithm\" : \"3ipmnbgjxvs9kh4mb6hrzephe5b9eocidr7ccqgw49a3j5mp5p085mxq1zoshw37hmldkwlx5d6t4ma22veaiublhdoxtql1lgvol8yc0mba4ej9yfu4v4pcw2nb2amj2\"\n            }\n          },\n          \"DigestMethod\" : {\n            \"Algorithm\" : \"jo84h0hw96b6f8ir1sspjue1uipjs4zjz6j67tky6gqjh7iz14w5lcwjgw7tfeca08tma1z1hs7cudl64yrennqkli3if35lezo9zcgtm18tu8piyq7wfji87vbbsp6g92ge9ml3tw8xczntbheu4vtw8\"\n          },\n          \"DigestValue\" : \"u0w83j9gac63rc4s2c3uaaqi1cp0zu506ymx30f7r1qzxs27wm7hxblgvu2mvr2nextz6j4eqwk4jacf88tyogdqg82gr8dpnm4lvjkfy9vb839pe0yq0sqygt5tym244frjbk\",\n          \"URI\" : \"https://web.example.mocklab.io/858545\"\n        },\n        \"CanonicalizationMethod\" : {\n          \"Algorithm\" : \"kabrsjokhyxlf0ey9l7t749c9hq3b9qd1743kt4xslvmafuntqhn\"\n        },\n        \"SignatureMethod\" : {\n          \"Algorithm\" : \"u1300ayh3fb8iuf97flsnd1o6o7av2t55d5pylmj8b6sm92alr6n2jv5opvf699j\"\n        }\n      }\n    },\n    \"UidData\" : {\n      \"uid\" : \"p1hh\",\n      \"Poa\" : {\n        \"country\" : \"Australia\",\n        \"lm\" : \"gyvp2839yprm63z480mv1th5tazihpwiljc0gmspzmgton75pn41we2xgmgrh2sp2elqdsun52y64ojbvj5vj0k6mncqv8ci2bmlgcw386xustebn3\",\n        \"loc\" : \"krczgojgpvs90a5qnkyuvn21b0ab0g5a97ianz6gmu91ql8hcn1gla2jhpd0m9xto5nw5u8pq1uswuvpp21yons0giaml7skxa7g17e3cb7ueh2368ikj3vg4i4mejlen8miog3mqwx8u5iongcveejnkqtvcsxtntoi55ceytadu3ae8bj254at\",\n        \"pc\" : \"obef\",\n        \"vtc\" : \"i8dc6q0tkbbnthqdyn7x97fxf137wb7vj7catykc9tp0qeuedaar95z4okunxe\",\n        \"dist\" : \"q5y1er870xbgm9tu4br637awh5o84n0roetz3xb0uc\",\n        \"state\" : \"South Carolina\",\n        \"co\" : \"p8a1c2swv73jvzymf6dz7f14fysd3k6hzw3do4tdaemwl7n7fvct4bvik79ei2s2flsifulhzz5iju4ofesq534yb80bc7q05vk4gme5l15jx5qu\"\n      },\n      \"tkn\" : \"t\",\n      \"LData\" : {\n        \"country\" : \"Slovakia\",\n        \"lm\" : \"vr5yl4bvp14nb8eqmi6ltace2vaqbw2a546bwzmsaep7zj1j6hulfgek98enottj3ax3z6fckxtdi3kcwk1cpkswvl3cl\",\n        \"loc\" : \"ue36k64gvmf4dsmzed37hcv1qy7cg2brvvi3eg6jfk1xffaqxtedgie0sut0j8stl6mn94jbc29dv81\",\n        \"pc\" : \"9973s8umc9ve9bnookxdx90bccyyl524i6sb4ctkho6u83\",\n        \"vtc\" : \"3uf4vcjgo1deuxxs3yubgjjox3wg05oiosbjbfxptka1fuho4m3px3dpru3kq1d4pir0hpoz1o0znnnt0wr7xsie9whdx0lic94k0u07epztxof5q92yweqlrl6wwcxdv9x2xmpnawo6uddvwgi50pxgiuzt7q974xi009ztfoeztmozx\",\n        \"name\" : \"Hilaria Will\",\n        \"dist\" : \"toqax3vzdyg04z2yx1nsqvsh7y2r76cq230t9fjjasjm4w8xc139rmrt9117yz3jcqxsw2y2ey6u0\",\n        \"state\" : \"Colorado\",\n        \"co\" : \"j155jpappvfe6tpw94xp74oes08aa2qr5xtwmrzbqe6zajeidjnyd1sif0ykjij9cfe529z9hg47puv93gh3clljehxv9956nid3z3pb1s1pjdw9s5ir9dqb5u5hn6pijhy22gy1nryyq9oek10mqgosbq7dtqzlc6lum\",\n        \"lang\" : \"3pp46y53ic7lx4kbnlhi3i4282dd4b9bis63lt5d9mtwyg9obfu4qxjqnga3ejoyh341clk71tp6vtrpfvij12nzdgmjzqlrupm6hsrgebvpt7ofth0bqxdp7jfpe84ufj22qod19zbzueyhyoaw3m5hc0jknxqcgp31\"\n      },\n      \"Poi\" : {\n        \"gender\" : \"Female\",\n        \"dob\" : \"2005-09-28\",\n        \"name\" : \"Mr. Lillian Schmidt\"\n      },\n      \"Pht\" : \"b0xqqmn3ldlf5bp5buag\",\n      \"Prn\" : {\n        \"text\" : \"kk8gfcfmg2arb36oiselz145ci9yncwmi5djymnf5yq1pjj8do42nuogkdt11cfqzmcilj7u1tz2p4iglqyzzpz9hfy97nbblh2e60th81abq5740wswdp0q4ulf98mnagqhihr239pnl3usbc7997pgbz9yyw\",\n        \"type\" : \"dpvqcujk\"\n      }\n    },\n    \"txn\" : \"ee1jwk6r4pnsk7ju9hrk5yedl6hmr97bfc9feptjsvo1dqm2j922a135kzztkznrqs8vm3t1jot0bwkohdavagk44x4sp6bk4x2xz47bizy4c9g5kgn6p4cznuuf6q01xcrbubmntkryuhn37v95j3b16h2mzjxvxgrrt4ikb176fo444evupviawgs8txrc\",\n    \"ttl\" : \"dytq28bji1shg4e25ksujin72dc50ba1jv141dgljzk1eaxp926igrd07ndnrhwkl5mk58kndz1u4u3q2iudygz4n2ks4x9fnhi3lsy5wt4kydq1u6tq1ofzj5o9j5japl8br14txi937jxpjw2qcwk0xw6ojdmxj75j08\",\n    \"ts\" : \"3iis903ghq44z8wltc7wr00ot5beilklkqan13zlhwtrvxqoyot98ukk2pjdngrczj4r95hwsstabkz9ggvkiq0b8ajqevu54q7m20gd22jrefq\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "ece6faf4-766d-4c96-8fd9-9f8aead0eea4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.155542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "KycRes" : {
                "properties" : {
                  "Rar" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "Signature" : {
                    "properties" : {
                      "KeyInfo" : {
                        "properties" : {
                          "X509Data" : {
                            "properties" : {
                              "X509Certificate" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "X509SubjectName" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "X509SubjectName", "X509Certificate" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "X509Data" ],
                        "type" : "object"
                      },
                      "SignatureValue" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "SignedInfo" : {
                        "properties" : {
                          "CanonicalizationMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          },
                          "Reference" : {
                            "properties" : {
                              "DigestMethod" : {
                                "properties" : {
                                  "Algorithm" : {
                                    "minLength" : 1,
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "Algorithm" ],
                                "type" : "object"
                              },
                              "DigestValue" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "Transforms" : {
                                "properties" : {
                                  "Transform" : {
                                    "properties" : {
                                      "Algorithm" : {
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "required" : [ "Algorithm" ],
                                    "type" : "object"
                                  }
                                },
                                "required" : [ "Transform" ],
                                "type" : "object"
                              },
                              "URI" : {
                                "type" : "string"
                              }
                            },
                            "required" : [ "Transforms", "DigestMethod", "DigestValue", "URI" ],
                            "type" : "object"
                          },
                          "SignatureMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "CanonicalizationMethod", "SignatureMethod", "Reference" ],
                        "type" : "object"
                      },
                      "xmlns" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "SignedInfo", "SignatureValue", "KeyInfo", "xmlns" ],
                    "type" : "object"
                  },
                  "UidData" : {
                    "properties" : {
                      "LData" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lang" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lang", "lm", "loc", "name", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Pht" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "Poa" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lm", "loc", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Poi" : {
                        "properties" : {
                          "dob" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "gender" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "dob", "gender", "name" ],
                        "type" : "object"
                      },
                      "Prn" : {
                        "properties" : {
                          "text" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "type" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "text" ],
                        "type" : "object"
                      },
                      "tkn" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "uid" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Poi", "Poa", "LData", "Pht", "Prn", "tkn", "uid" ],
                    "type" : "object"
                  },
                  "code" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ret" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ts" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "txn" : {
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "required" : [ "Rar", "UidData", "Signature", "code", "ret", "ts", "ttl", "txn" ],
                "type" : "object"
              }
            },
            "required" : [ "KycRes" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "cb038726-38c0-4339-860f-8c2646afc24e",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Fugiat et esse unde voluptates perferendis repellat. Natus enim ut. Sit labore adipisci nostrum. Et eos sunt ullam quas vel sed quaerat.\",\n  \"error\" : \"ksmhkk1lfwjqa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb038726-38c0-4339-860f-8c2646afc24e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.15407Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "def6372f-3b1f-4e6d-972e-cfca56e96c36",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "def6372f-3b1f-4e6d-972e-cfca56e96c36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.153987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "977cd6c4-1e4a-467f-8bc6-7a6e43a78f14",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resource\" : \"y5wyjvasepk6aoruz3ikcpexbrcya46oip04o96fruo3ufzafzqtzaww8apl4clm7emx9ipvzx60zxibrsemu34l702phhtvwy9jcd2vy4g8obs\",\n  \"items\" : [ {\n    \"date\" : \"2023-02-02T07:03:56.152231Z\",\n    \"doctype\" : \"sr7l46bg9eqaknxw47wcfiw442s8eu9x8nsmyaynx9qpbgzomgoe7qnt3r2ga1xcw6wo\",\n    \"issuerid\" : \"31c3\",\n    \"parent\" : \"4e5ay07nlwuvo5ywiyvjpzf1c4i59chwijqh582j0vhsvfqvhgbihbofszl9dgjo2bnxru2zeqdks7gcb7ux5bwuhnga9dm2nmd\",\n    \"size\" : \"yyzd4g1a\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Micaela Swift V\",\n    \"description\" : \"Voluptatibus exercitationem perferendis molestias tenetur molestias reprehenderit. Aliquam repellat dicta saepe et nisi autem. Omnis non earum eos non vero rerum. Impedit iure doloribus amet aut.\",\n    \"type\" : \"h9jlyjfpi6x5z7f1m9ygdh088ncvjh9q03kiodyj5knoovdu0qd7cy\",\n    \"uri\" : \"https://web.example.mocklab.io/257897\",\n    \"issuer\" : \"ra22iaverbhneguzxd4rfvgasofa9jqqcp3shdww\"\n  }, {\n    \"date\" : \"2023-01-18T07:40:56.152553Z\",\n    \"doctype\" : \"yxebla767gex4wqxatw99nllsrt8zmt2gddjdik6sh0jfyjt7zjfrpzxptfykt72ahx3msr9m8433nq0ardrjk979huksudffp60mxkixjegos4kvgyhp8ii41cxzw\",\n    \"issuerid\" : \"7c6p\",\n    \"parent\" : \"12uskfj6ira9bvdpful4pdyqzf8u54shbuywhq0zipsuk\",\n    \"size\" : \"cm4xi15gnygomhm4gzcmgt9ld9d5zw10ugg4jsdu2rwyim318j\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Blake Hodkiewicz\",\n    \"description\" : \"Deleniti voluptates adipisci consequatur sit. Dolorum et non veniam. Vero molestiae excepturi et. Dolores ab qui quasi.\",\n    \"type\" : \"ca6anw9xw3lbkzn7xo2b0vfiq5bt99\",\n    \"uri\" : \"https://web.example.mocklab.io/539088\",\n    \"issuer\" : \"1f48y2a7njyecjw7d3j4yncrh7g665o2ergsbc9ojyoyculrdfccwac3sf2f6mpmn1ge8qrw6hohkiuc0plhcj94niwqbeg58bpv7f94d49w4z8hpogvgucv142uv6t6yhbfdl6zf\"\n  }, {\n    \"date\" : \"2022-12-22T08:52:56.15286Z\",\n    \"doctype\" : \"sd\",\n    \"issuerid\" : \"4uqh\",\n    \"parent\" : \"iwv7dguex31f5ax9k08txn5k3pxtb6z1btkh3j5zrkvm3hd4kexp42sit54k7fzg3ieglm2zmd39z4j71zd7elzxe93u7h8cvc2nfrzaanyn4f8utegc6tllif1beleiz5qe6ubomnyqe6ndizzsw6im4h8sl7sfrbzm99kljcoue85rxi4ltfogt\",\n    \"size\" : \"r70de40yzyyqdglhpys8idvsbp9h58u9yrbjkdfolgtxphk3icc\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Rudy Kovacek\",\n    \"description\" : \"Et sint exercitationem commodi tenetur blanditiis dolor eaque. Eum aspernatur velit sint quia et tempore. Qui culpa eos.\",\n    \"type\" : \"m4nogcxtt3owzcmqdml1nnrffg2gmky1jtyfyc0we0odl3b9jc3ub0ra9sa1rpkqvx04hvirzx0wlk5ub36vq19nrronn3i34x9q1fovx6dmmczbuky37u8y7okmbaaedc1651lr8kqq13jeyujfjntb2wb9ymxdte5rmijutzvlugn\",\n    \"uri\" : \"https://web.example.mocklab.io/309380\",\n    \"issuer\" : \"8bbmnh59trpidqlwfve52bdgc3spge2e56972l8seg8r3vih6c4ddj4o5julz30hbftj5pbuc1av4huiwvpaxh3liycfgfsmal5iz6xncnxo20zoo4h0259ze02yg6rtl2ms42yfehf\"\n  }, {\n    \"date\" : \"2022-08-05T08:37:56.153173Z\",\n    \"doctype\" : \"r6cjjboc0npj41767bvfat3eoxgi24unj43e9bw9z4hxct4wdoqxno648x\",\n    \"issuerid\" : \"6ck8\",\n    \"parent\" : \"8p27s8g6n6saufetepxw86qoznzu\",\n    \"size\" : \"q7b1nx509qdjs9m16anzx10ujopebjevvtakhgyc8aw6baxq12hbejncasda0c67tdes76bag9yok8qqg79xdtwe1kma1qok430q8yk67gnfxcbhdsqryxi581j20upi5o8lx59n4pmpb8d36ol0oc7\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Maryanne Jones\",\n    \"description\" : \"Fuga est voluptatum officiis. Et id qui molestiae excepturi qui aperiam. Expedita vel inventore ut.\",\n    \"type\" : \"pw8cq9h1p61c8mb9f4eh9c1im8bxz7jcweqmrgiwnrzmnear2\",\n    \"uri\" : \"https://web.example.mocklab.io/802881\",\n    \"issuer\" : \"ueifbxox34uw0duja907rp7dny953iqcnjq923uf82fr0p505foi8lg6zn6g4qor52mag\"\n  }, {\n    \"date\" : \"2022-12-12T08:23:56.153465Z\",\n    \"doctype\" : \"18rgimxz7tov8r81qmgeityl90b7fit5lr2hwce20d6wydb9xp7zg3y6pd1hb7017yh7tj7b5gxt0a84c93q1d54k9a2qtb3cox7xo4uywpjzuf1gqqyq2m9wameiv22ct0zxv7jio1xqczyxgfzlvaz9m8vhi4tbxzv8nx62k\",\n    \"issuerid\" : \"z8sh\",\n    \"parent\" : \"79jcykmv12vk7az1o8q83ccsp2qpuz08j8v57m6202m9dlj1h1f17sqn5u014revqyztvxnyim3i8n4sbuvhwbuarc8450nj43f8bioswqp\",\n    \"size\" : \"un58qh98qzso50fo6tvui37djdhwg9hjbpl9vatnnbfiagbw5za4345f25qjc1l7bz1itkyhn4nk6ye16ib8k0nj6xx151nqq1s65u9z4jqr1t0bhvlhwqw4xrily9ec4u2dztip9aneqhkawu4g4fe35lm44j9gyk3k3k9jb3rt634xc4l\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Mrs. Oscar Metz\",\n    \"description\" : \"Quisquam explicabo maiores ipsum ut aut iusto iste. Quae vero facilis. Quis tenetur ducimus alias quia fuga autem.\",\n    \"type\" : \"qdzaq1fuw5mnm26lna0o5pgrnpkvq0yjcf\",\n    \"uri\" : \"https://web.example.mocklab.io/626926\",\n    \"issuer\" : \"gusziu7y1mfmr4fb0pjjqondz9ta4hn2vfe19c56joc6egqud1d67ruae\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "977cd6c4-1e4a-467f-8bc6-7a6e43a78f14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.153923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "array"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "type" : "string"
                    },
                    "size" : {
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "type", "size", "date", "parent", "uri", "doctype", "description", "issuerid", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              },
              "resource" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "items", "resource" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "96c9e6ba-5133-4aae-b3dc-83ee36f22a79",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F866198",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Quo veritatis corporis. Aut fuga expedita. Harum et tenetur qui adipisci ad. Sed quia nesciunt assumenda delectus voluptas. Atque aliquid laborum cumque velit iste reiciendis.\",\n  \"error\" : \"a0ipn4i23enurk4c39bzmjro8vwb375q222mqp0tqqjj5xyhjuiwoll7b6yr65n0gn1gnsglctbw6ew120i3v4bohfhu0a95ezgh9b99rsnusvguwuswrkdo2hjozdwnxqp355xid3w9v134xmbzptercdfm22n3hf6113trsm4y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96c9e6ba-5133-4aae-b3dc-83ee36f22a79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.152168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "75c77720-a528-4b83-9676-fdac66804d45",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F503151",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Ipsum illo nisi. Aut delectus unde enim et qui voluptas culpa. Nostrum alias vel quo aut debitis.\",\n  \"error\" : \"s372rf54aik5gmm48i9exga9bftpslcohrqhsauqsip6rm4an6jkrp0i6jghkgdy8bcepmqm43qyjk202pni8e28szpringdjyaqe8o227w699ua8j446i4ybstazb771h0gzs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75c77720-a528-4b83-9676-fdac66804d45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.152025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "b722f467-c0b4-4bcc-bece-78fbc2ca7369",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F010342",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b722f467-c0b4-4bcc-bece-78fbc2ca7369",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.15188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "80e84926-fc7d-4dfb-8c27-8c57f354a3e8",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F797200",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80e84926-fc7d-4dfb-8c27-8c57f354a3e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.151767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "e13f1106-5b68-4003-9e3f-f0c4e87b7708",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F395121",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e13f1106-5b68-4003-9e3f-f0c4e87b7708",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.151655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "cdbfb3dc-46f1-405e-98f2-d873e27be861",
    "name" : "Get Certificate Data in XML Format from URI (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F771158",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Signature\" : {\n    \"SignatureValue\" : { },\n    \"KeyInfo\" : {\n      \"X509Data\" : { }\n    },\n    \"SignedInfo\" : { }\n  },\n  \"CertificateData\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "cdbfb3dc-46f1-405e-98f2-d873e27be861",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.151537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "type" : "array"
              },
              "Signature" : {
                "properties" : {
                  "KeyInfo" : {
                    "properties" : { },
                    "type" : "object"
                  }
                },
                "required" : [ "KeyInfo" ],
                "type" : "object"
              }
            },
            "required" : [ "CertificateData", "Signature" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "2d130b27-1b5e-4006-950c-de889e29e2aa",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d130b27-1b5e-4006-950c-de889e29e2aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.151354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "06af5ef8-4142-4eb7-9811-6afa66d0d1af",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06af5ef8-4142-4eb7-9811-6afa66d0d1af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.151307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "0515097d-95c3-4c64-bd8f-c8f7ba3d8ee6",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"gender\" : \"T\",\n    \"dob\" : \"31121970\",\n    \"name\" : \"Sunil Kumar\",\n    \"eaadhar\" : \"Y\",\n    \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0515097d-95c3-4c64-bd8f-c8f7ba3d8ee6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.151253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "digilockerid" : {
                    "description" : "A unique 36 character DigiLocker Id of the user account.",
                    "example" : "123e4567-e89b-12d3-a456-426655440000",
                    "type" : "string"
                  },
                  "dob" : {
                    "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                    "example" : "31121970",
                    "format" : "dd-mm-yyy",
                    "type" : "string"
                  },
                  "eaadhar" : {
                    "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                    "enum" : [ "Y", "N" ],
                    "type" : "string"
                  },
                  "gender" : {
                    "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                    "enum" : [ "M", "F", "T" ],
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the user as registered with DigiLocker.",
                    "example" : "Sunil Kumar",
                    "type" : "string"
                  }
                },
                "required" : [ "digilockerid", "name", "dob", "gender", "eaadhaar" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "c2bbf903-b22d-4892-b1e6-78beeb971eef",
    "name" : "Get Access Token - 401",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c2bbf903-b22d-4892-b1e6-78beeb971eef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.151129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "b2192477-3572-4ce1-8a73-a8e4ce142939",
    "name" : "Get Access Token - 400",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b2192477-3572-4ce1-8a73-a8e4ce142939",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.151113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "a0b57832-b42d-4e3f-addd-6a89c38f22a1",
    "name" : "Get Access Token (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n  \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n  \"gender\" : \"F\",\n  \"dob\" : \"31121970\",\n  \"scope\" : \"fhq099sr1i924ld71gueeoxzv803u2yf65y7g5m63fk3bev5nb99tscwzr04juokusl4f9bnguqnffqq3a7kdoim200qewdeg\",\n  \"digilocker_id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n  \"name\" : \"Sunil Kumar\",\n  \"reference_key\" : \"1c66bec26364cd6fefaabc6cae91840a\",\n  \"eaadhar\" : \"N\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0b57832-b42d-4e3f-addd-6a89c38f22a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.15108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "The access token that can be used to call the DigiLocker APIs.",
                "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                "type" : "string"
              },
              "digilocker_id" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "dob" : {
                "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                "example" : "31121970",
                "format" : "dd-mm-yyy",
                "type" : "integer"
              },
              "eaadhar" : {
                "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                "enum" : [ "Y", "N" ],
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the access token is valid",
                "example" : 3600,
                "format" : "int64",
                "type" : "integer"
              },
              "gender" : {
                "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                "enum" : [ "M", "F", "T" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the user as registered with DigiLocker.",
                "example" : "Sunil Kumar",
                "type" : "string"
              },
              "reference_key" : {
                "description" : "A unique reference of the user account.",
                "example" : "1c66bec26364cd6fefaabc6cae91840a",
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                "type" : "string"
              },
              "scope" : {
                "description" : "Scope of the token.",
                "type" : "string"
              },
              "token_type" : {
                "description" : "The type of token which will always be Bearer.",
                "example" : "Bearer",
                "type" : "string"
              }
            },
            "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "digilocker_id", "name", "dob", "gender", "eaadhar", "reference_key" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "3abc39d5-7331-4edb-a708-37023fb4c8d3",
    "name" : "Revoke Token. - 400",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3abc39d5-7331-4edb-a708-37023fb4c8d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.150905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "0a79bae2-ff94-4054-a0b0-c310fe36729b",
    "name" : "Revoke Token. - 200",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0a79bae2-ff94-4054-a0b0-c310fe36729b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.150889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "71995524-6043-4c3b-9cab-769282308f90",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Quod soluta consequatur reprehenderit aut sunt. In non sunt exercitationem non est culpa exercitationem. Dolores et est. Eos tenetur natus ut reiciendis aut.\",\n  \"error\" : \"mwl5hv51iw0f7v6a8ck426wsjkflm287vyfwo3n1901sedfyf6e2wdd8m7epus\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71995524-6043-4c3b-9cab-769282308f90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.150867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response14"
            }, {
              "$ref" : "#/components/schemas/Response15"
            }, {
              "$ref" : "#/components/schemas/Response16"
            }, {
              "$ref" : "#/components/schemas/Response17"
            }, {
              "$ref" : "#/components/schemas/Response18"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "b56bdc6e-e3e0-43b1-bebb-42226f95ea5f",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b56bdc6e-e3e0-43b1-bebb-42226f95ea5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.150778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "record_not_found"
              },
              "error_description" : {
                "description" : "No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes."
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "b51e1c41-91f1-4a5e-bfd4-de0664ec447e",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b51e1c41-91f1-4a5e-bfd4-de0664ec447e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.15073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "3f842e8b-e635-4fca-b662-619dcade912f",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Iure aut facilis illo libero. Tempora labore numquam sit. Sit ut alias rerum inventore qui similique impedit. Soluta provident magnam esse dicta aperiam. Hic autem tenetur et excepturi id.\",\n  \"error\" : \"34eb2vr07m8dog6bwswh8xt4s6m9goh25v2vsodseqlta9crnsvllviu7cxhrvhdfxu4xxy3qqnr7i3ukp9p2zfudnbf7bvt4x64zlhn2qa1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f842e8b-e635-4fca-b662-619dcade912f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.150681Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response13"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "580fa069-dc64-4e3e-9f8a-0a8290e345b2",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"uri\" : \"https://web.example.mocklab.io/799605\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "580fa069-dc64-4e3e-9f8a-0a8290e345b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.150593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  }
                },
                "required" : [ "uri" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "21964bd8-c2f4-4490-a7c0-2d251f5f6329",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21964bd8-c2f4-4490-a7c0-2d251f5f6329",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.15048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "d5cc98ba-0199-4493-b4a3-f30e91fcfe78",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5cc98ba-0199-4493-b4a3-f30e91fcfe78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.150431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "86672963-1924-4345-9d09-9948b04756f7",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86672963-1924-4345-9d09-9948b04756f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.150383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "efe52059-2287-48ab-8308-4bdd53928bfc",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valuelist\" : { },\n  \"paramname\" : \"Huong Cummings\",\n  \"label\" : \"cumque\",\n  \"example\" : \"jx5vjk5a2suxmst4ldd87k6p5v1cbh8a3y2m2agootvospaemlh54g8kkaerkhhv9qukerm9p3wg8as7azdj1n7nrv4xxas54j0zcy74wdpxbhxwhfentqzvfb09rllhgnh5czft5kd2xojgrkkxxewznmxx65onm2ss6ijl10sdqusr5vadh5zb7bgg5xh9d1y\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Lashanda Stoltenberg\",\n  \"label\" : \"dolores\",\n  \"example\" : \"6lp0nltn5h8sm89shmmumt49jva03ysswojgikm2uukqsk50ntibs2\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Dan Rogahn II\",\n  \"label\" : \"quis\",\n  \"example\" : \"k1lh26\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Seymour Leuschke\",\n  \"label\" : \"nisi\",\n  \"example\" : \"y3ipsmbfpz1ggwdnrhl9xjhuse91jkiqrg6cec74dbg11uxwtm8g0zqg35lencl4kaitx8fxbxhe2tzcjiykktqiinc8syobvomomgkcggzis\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efe52059-2287-48ab-8308-4bdd53928bfc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.150322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "items" : {
              "properties" : {
                "example" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "label" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "paramname" : {
                  "minLength" : 1,
                  "type" : "string"
                }
              },
              "required" : [ "label", "paramname", "example" ],
              "type" : "object"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "f342ba81-9934-4875-9a3e-96196e333b65",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f342ba81-9934-4875-9a3e-96196e333b65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.149927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "6034361f-f0dc-4671-8284-507559e30b38",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6034361f-f0dc-4671-8284-507559e30b38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.149873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "afd86e9d-b005-4572-a895-fbdcba71c126",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afd86e9d-b005-4572-a895-fbdcba71c126",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.149824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "example" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "595de02c-c6e2-4983-a067-ed9898bc5d07",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"issuers\" : [ {\n    \"issuerid\" : \"s797\",\n    \"name\" : \"June Runte\",\n    \"description\" : \"Molestias veniam veniam voluptas perferendis. Iusto suscipit sunt explicabo porro. Temporibus nisi ex explicabo. Quas minus sit.\",\n    \"categories\" : \"ap7v22tjxh1wt1n4objgoim6xzqsjh5kgufn24pb6ni1ks1h3qun98am8g3ek89mdja5uj44g5wlduwmo6aol2hkqgy5ajf4b00079ak3gl4vjzdbgfmgwpks27gujt01wpxwgl9w3fpjbst4f6r1qbu0zehb3p82zyzm1om5edx1y5uswysw\",\n    \"orgid\" : \"xg53\"\n  }, {\n    \"issuerid\" : \"2979\",\n    \"name\" : \"Rodger Legros\",\n    \"description\" : \"Atque quaerat temporibus officiis sapiente consequatur excepturi. Rerum rem reiciendis. Quis adipisci eos eaque dolor. Quisquam est sed iusto. Tenetur ratione voluptatem.\",\n    \"categories\" : \"mzb99g5rf7elrydb9t469c6hxs53kn0bi6m2tel0qib0dlbir8hzl780e994ahs0n5mgmu6kiveson7emgibna1t210cztpvjo4u32tui80xshlx0f1ccfencl4j0aqki3q1\",\n    \"orgid\" : \"2jgd\"\n  }, {\n    \"issuerid\" : \"b2b1\",\n    \"name\" : \"Karl Barrows\",\n    \"description\" : \"Reiciendis iste aspernatur. Officia nihil qui rerum ea nihil illum. Quia et nostrum repudiandae. Molestiae magni culpa tenetur distinctio similique.\",\n    \"categories\" : \"bhhoeqxuyy9jrmfzc7lmn6c8k56ez8x51knzynpbsd86fju0kqdgvngex7zveabaysjhj0vyrlyqjvql75uoyxubu0vx9m67z65fkgl7i8c\",\n    \"orgid\" : \"z2hf\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "595de02c-c6e2-4983-a067-ed9898bc5d07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.149767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "issuers" : {
                "items" : {
                  "properties" : {
                    "categories" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "orgid" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "description", "categories", "issuerid", "orgid" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "issuers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "66098540-fa19-4ffa-a1e2-2a141d30e3cc",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66098540-fa19-4ffa-a1e2-2a141d30e3cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.148966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "0788485c-a9e3-44f3-a0f0-72d04422e653",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0788485c-a9e3-44f3-a0f0-72d04422e653",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.148917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "05f9d573-fbc5-4a5d-842c-5746940cbf5c",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05f9d573-fbc5-4a5d-842c-5746940cbf5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.148867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "af7472ca-8b78-4c75-917d-78b6d8f44739",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"doctype\" : \"bz6o6kfa7bd1171z6ebjheswgr187krkvuihmydlwufozacvsxtab7j2xjtypmdjwn102ihougd6m06q94aeqnaiyvvy5dkde901qov1fz4s69rq26gyf89m40nj19wces6htj8hr53hilfumbwnyw4fipyxsp2hc448597hhqvmgrfiaw1t7zbm9msp9z8pvuip\",\n    \"description\" : \"Eum aut vel. Nobis natus tempora accusamus enim quo. Alias ad voluptas asperiores quam. Officia sit error. Omnis assumenda aut voluptatum autem.\"\n  }, {\n    \"doctype\" : \"dvll15o5ss4b3ktw8s2yoicfohz3bmseangjzlut848xcd4xgzm4cjvqxj8nvz918ghvismlreflrujzkmianiugeaq4mav3y988bft9zmqkp9xum8d3mry3ehquz0yfl4qbhqrs1lr15j7aj55o05as24u7jt7rpp5b4lb0cpvgrzkqm1hs10r36rfyow\",\n    \"description\" : \"Sunt voluptatem omnis est. Repellendus repudiandae enim ut dolores tempora omnis. Voluptas rem rerum ut mollitia. Enim voluptas quis sit aperiam optio. Distinctio qui eveniet.\"\n  }, {\n    \"doctype\" : \"ode1kqagvmanvz8dmtoi512dpunxucbyc2sbkz2r7yw1nckt2yootjc7ioslys9b784q\",\n    \"description\" : \"Est nihil voluptas corrupti placeat. Magni nobis iusto sit rerum. Numquam impedit adipisci rerum ut harum perspiciatis non.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af7472ca-8b78-4c75-917d-78b6d8f44739",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.148811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "doctype", "description" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "ad50c25b-7a75-4b89-93ed-1a0a54ed9632",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/9u68",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad50c25b-7a75-4b89-93ed-1a0a54ed9632",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.148593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "b770f545-8b31-4639-868a-807b836a8e32",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/hout",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b770f545-8b31-4639-868a-807b836a8e32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.148474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "7e9bbb3a-9f8d-40e7-8175-50a1c4ce5342",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/3v18",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e9bbb3a-9f8d-40e7-8175-50a1c4ce5342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.148363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "b283846c-079b-4d43-a8ab-b541ca42d78f",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/449t",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"parent\" : \"1234\",\n    \"size\" : \"366481\",\n    \"mime\" : \"\",\n    \"name\" : \"My Documents\",\n    \"description\" : \"\",\n    \"id\" : \"5678\",\n    \"type\" : \"dir\",\n    \"uri\" : \"\",\n    \"issuer\" : \"\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b283846c-079b-4d43-a8ab-b541ca42d78f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.148243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date of file upload in case of self uploaded documents",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The id if this item is a folder.",
                    "example" : "5678",
                    "type" : "integer"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer. This is blank in case of uploaded documents and folders.",
                    "example" : "",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the file or folder.",
                    "example" : "My Documents",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "The id of the parent folder.",
                    "example" : "1234",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file or folder.",
                    "example" : "366481",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String dir for folder and string file for file.",
                    "example" : "dir",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "id", "size", "date", "parent", "mime", "uri", "description", "issuer" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "3ac43525-6753-4fd3-920d-4f3fa578bd66",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Dignissimos qui nisi. Consequatur velit eligendi vero rerum. Ut corporis quidem placeat aperiam facere in. Et excepturi facilis.\",\n  \"error\" : \"11meqkne3m6zju5iuh2r61fy4g4id3kmhsf816hzp0wh9hp75vgh0hxxev3i3i03k68flebtcyatgmycmyoemy02opt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ac43525-6753-4fd3-920d-4f3fa578bd66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.148026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "94b492f5-12c6-4cd0-bf59-157213d8da45",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94b492f5-12c6-4cd0-bf59-157213d8da45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.147945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "58731c41-57c3-4d44-af3e-d9058a1686ed",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"doctype\" : \"HSCER\",\n    \"issuerid\" : \"in.gov.cbse\",\n    \"parent\" : \" \",\n    \"size\" : \" \",\n    \"mime\" : \"application/pdf\",\n    \"name\" : \"Class XII Marksheet\",\n    \"description\" : \"Class XII Marksheet\",\n    \"type\" : \"file\",\n    \"uri\" : \"in.gov.cbse-HSCER-201412345678\",\n    \"issuer\" : \"CBSE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58731c41-57c3-4d44-af3e-d9058a1686ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.147892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date on which the certificate was last modified in DigiLocker.",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "doctype" : {
                    "description" : "A 5 character unique document type provided by DigiLocker.",
                    "example" : "HSCER",
                    "type" : "string"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer.",
                    "example" : "CBSE",
                    "type" : "string"
                  },
                  "issuerid" : {
                    "description" : "Unique DigiLocker issuer id as mentioned in the URI.",
                    "example" : "in.gov.cbse",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.",
                    "example" : "application/pdf",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the certificate.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String file.",
                    "example" : "file",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.",
                    "example" : "in.gov.cbse-HSCER-201412345678",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "size", "date", "parent", "mime", "uri", "doctype", "description", "issuer", "issuerid" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "b434926a-6d1a-49ee-9cc2-92c7f042f22b",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b434926a-6d1a-49ee-9cc2-92c7f042f22b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.147738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "9829c921-2438-44b5-b6b0-48a29011395d",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9829c921-2438-44b5-b6b0-48a29011395d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.14769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "c7d3588c-ca8a-4cc7-8da5-4dba4a097d82",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7d3588c-ca8a-4cc7-8da5-4dba4a097d82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.147639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "7bb438ac-4abf-449c-bf43-24bd08c9cea1",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directory\" : \"htmoq994h2g9a15ls2mctxevvyk4rk6c1hcvg4rb8qh02afkrwzqqgvg44mmpyafl38cktp04rh29uq3s9f35r7jeihpq4hbjt9b533g364jf4atpl1osxkq3rs1sinhkgb0regrleoz60ibfcnizeu9to7y353803ey3a1cwhz29e7oiy93\",\n  \"items\" : [ {\n    \"date\" : \"2023-02-11T07:58:56.146995Z\",\n    \"parent\" : \"c0c1v80tmn8fglbjcmfirwgodo78ylck0ehzs85m35lqe8ez29i7mepbynkzqnhags5kv9v89jn9cxfg1udqtaag5qj9a4n3r295n685ej41w0c68qq18hfivjp4jhfadokopbbyk4vq2cz1u7hy6iorqshekyrl2a\",\n    \"size\" : \"w4f0z2of06q6laewh8tgys3uk2kwqo1d9pak3ua1umro8l11fdplt0f3qihxp8722r98nzcrmfx0qqfg8lwht7jnnad57nrb3awg8lglabptrx9oejxnay160q9su0xcoyk1\",\n    \"mime\" : \"0g7gkatmgdttzbwychyyxzctaesqyt0fzu5549e8gjyxthbav9hg0ercd4hwufrcjlyg\",\n    \"name\" : \"Zack Marvin\",\n    \"description\" : \"Impedit eveniet delectus aut et laudantium. Rerum optio blanditiis nihil reiciendis beatae beatae molestiae. Aut ut blanditiis. Ullam error sit animi beatae dignissimos voluptatem at. Consectetur reic\",\n    \"id\" : 189079894,\n    \"type\" : \"yrpfevqpxx6v65cjiyuyvmuh1v7lu8lbuoqcfl9new2phmoai8jr2cxyszqqly9cbhb72nd5zeuqly9eap9vum654zwvy28jvywioos6b\",\n    \"uri\" : \"https://web.example.mocklab.io/239233\",\n    \"issuer\" : \"t4th9cwo0\"\n  }, {\n    \"date\" : \"2022-05-08T07:21:56.147238Z\",\n    \"parent\" : \"k4r2z82myifsplvtmymty5tqpg1qticzib8sm6twga96rzn99drzp26ty899eawvs4efyb48ufo4bngndjfg3ecgu\",\n    \"size\" : \"9ue03mq2fnotq57lmayx95sd5p4o8b6u8uirwilcxvwi3xkxwhs6ffsdrky27elfmemfsidu7d06001yevzpudnm6i307r29mrasyc0vkk2z9c4jdw\",\n    \"mime\" : \"i3vznifnz4mgz3bmij0pfxlfr0yzct6b3p9xz476zkjred66724y300ezopgfvq9tsg54wret2tbjqvs78efvz698ckuzmhog26of4\",\n    \"name\" : \"Joe Bernier\",\n    \"description\" : \"Quae maiores dolorem provident ducimus. Pariatur quo quam provident non accusamus voluptatem eum. Omnis nemo eligendi ipsum quibusdam tempore.\",\n    \"id\" : 189079894,\n    \"type\" : \"iyxsns8epf787k1nbodiihcr3uvcgtexoov5jgcoqq5gedighl9vye4xromkwvt\",\n    \"uri\" : \"https://web.example.mocklab.io/026604\",\n    \"issuer\" : \"8i5twwzclp4p9ff3py3hibmi6h4n4cahrn8z49r7g1qqhc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bb438ac-4abf-449c-bf43-24bd08c9cea1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.147575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "directory" : {
                "minLength" : 1,
                "type" : "string"
              },
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "id" : {
                      "example" : 189079894,
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "size" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "type", "size", "date", "parent", "mime", "uri", "description", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "directory", "items" ],
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "45bcf44a-f5bb-4668-9fed-609f6b695ed5",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F501538",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Natus voluptatem quaerat sunt et non est fugiat. Accusantium possimus rerum nostrum et. Facilis laborum ad. Cupiditate enim maxime laboriosam autem commodi.\",\n  \"error\" : \"bh2u4o96feh0c8msdpyok63cpzxhh6ps4naa1h7zg7puv4jkatwimm6n1w93gd6h5263klzv6sbcaj039i0o4r5hfu9hcm0vadneexa1ppx0cjd157tyeug80efwpd0vjyn3i3raplkvuygfz5pj8d4jj3wok29brx3u7om\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45bcf44a-f5bb-4668-9fed-609f6b695ed5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.146927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "d2ecdd65-9b6e-4c46-b8b3-2939480a5720",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F875614",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Commodi consequatur maiores et illum illum voluptates assumenda. Odio et voluptatem minima qui rerum eos cupiditate. Qui omnis similique rerum. Necessitatibus quam atque enim nihil vel perferendis ips\",\n  \"error\" : \"0qj3x3ywr0s7yqizsmiitbszvm2e00eg6n2mxveuoc7c5oj0jmambmw4n110oimw27wvmufyz3adibr99v7lwjvxoisrf7xy06xeb95tajocxqgxwd05vtt3hmikymxastzzaj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2ecdd65-9b6e-4c46-b8b3-2939480a5720",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.146782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "773e0482-9bd0-494e-b1c3-0b35d368a834",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F005740",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "773e0482-9bd0-494e-b1c3-0b35d368a834",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.146627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "6a2ea589-96a3-463f-af55-df411c77421c",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F793635",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a2ea589-96a3-463f-af55-df411c77421c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.14651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "1e833bab-8712-49fd-bda8-c15dacbedf82",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F453285",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e833bab-8712-49fd-bda8-c15dacbedf82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.146395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "6b2102c8-77a1-4c5c-9890-38e6c7ff4c3c",
    "name" : "Get File from URI (image/png)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F641123",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"png binary content\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "6b2102c8-77a1-4c5c-9890-38e6c7ff4c3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.146281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "png binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "eec882bd-a7fa-4299-b061-4f0a99f6dc28",
    "name" : "Get File from URI (image/jpg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F378356",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpg"
      }
    },
    "uuid" : "eec882bd-a7fa-4299-b061-4f0a99f6dc28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.146181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "7ef9c88a-876c-4f2e-812e-cdfd0ce44c34",
    "name" : "Get File from URI (image/jpeg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F540401",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpeg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "7ef9c88a-876c-4f2e-812e-cdfd0ce44c34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.146086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpeg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "7d49fa94-ba20-4e29-be18-8fa24f2e5bee",
    "name" : "Get File from URI (application/pdf)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F748040",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"pdf binary content\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "7d49fa94-ba20-4e29-be18-8fa24f2e5bee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.145975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "pdf binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "8a41e260-2e0d-455a-9fcf-7892a8e1293b",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Suscipit veritatis ducimus id culpa. Architecto alias provident autem blanditiis. Dolores in ab.\",\n  \"error\" : \"4zsc3x17vllnxaosodknay7yyq7ryiuxdnhwjdhvqr471\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a41e260-2e0d-455a-9fcf-7892a8e1293b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.145849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "bc47bbbf-0893-495b-8a72-b6d5e3b301e2",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc47bbbf-0893-495b-8a72-b6d5e3b301e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.14576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "f9f87bdd-b3d5-4b76-9316-bcc7d57ce601",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9f87bdd-b3d5-4b76-9316-bcc7d57ce601",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.145708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "path_missing", "contenttype_missing", "hmac_missing", "filename_missing", "hmac_mismatch", "invalid_filename", "invalid_filesize", "invalid_filetype", "invalid_path", "file_data_missing", "mimetype_mismatch" ]
              },
              "error_description" : {
                "enum" : [ "Path parameter is missing", "Content-Type parameter is missing", "HMAC parameter is missing", "Filename is missing in path parameter", "HMAC does not match", "Restricted characters are not allowed in file name", "The file size exceeds maximum allowed file size of 10MB", "The file type is not allowed", "The destination folder does not exist", "Missing file content in the request", "The mimetype provided in Content-Type parameter does not match with the mimetype of the file" ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "a766147d-b289-4532-a463-aef0e3b8b997",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"Path\" : \"kjbkn3onon8169ej5j35q344ilalv8poicy74d7t5dtcaow27d8kllvr\",\n    \"size\" : \"mex6qp234xfi5jh8czi3s24qiqzpnn58g3gyyeigk0kwgfhyylfq83gs3p2crzt8qjz1b1zf74\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a766147d-b289-4532-a463-aef0e3b8b997",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.145635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "Path" : {
                    "description" : "The destination path of the file in DigiLocker including filename.",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file.",
                    "type" : "string"
                  }
                },
                "required" : [ "Path", "size" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "126a0b6a-2be4-4354-80e4-cd2f3ddcf710",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Tempore cum vel laborum sint. Qui molestias tempora non illum doloremque. Rerum esse ex.\",\n  \"error\" : \"9vtpjqots2ua6ovcsa7p7pjdcn0ke0wh4tdnfdmjdlhunizb58rhfaiflptx02axs5cq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "126a0b6a-2be4-4354-80e4-cd2f3ddcf710",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.145546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseFive"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "fb9f5102-2ac8-4e45-8eba-414b772661a9",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb9f5102-2ac8-4e45-8eba-414b772661a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.145463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "ad1f3c0f-0a2d-48ea-b86e-2c0b5a0e225a",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Libero dolor aut labore aliquam illum qui. Minima quaerat optio sit quis atque. Sed cumque quae dolorum delectus.\",\n  \"error\" : \"ogzvi97nmjcsv9rs7tn9vduvrene4qes7dz85kza1jtdvmdkhbm5v2wl1pa16zzpyxuj4l0fgbgf85tmq6k67by6fu6uo9wmhgxm06jpleawfmprdh6npe8a01j81m7nphiflxppc5mxj9j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad1f3c0f-0a2d-48ea-b86e-2c0b5a0e225a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.145397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseOne"
            }, {
              "$ref" : "#/components/schemas/ResponseTwo"
            }, {
              "$ref" : "#/components/schemas/ResponseThree"
            }, {
              "$ref" : "#/components/schemas/ResponseFour"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "465da791-596b-402e-8ef4-4fa5cd33ab66",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dl_masked_email\" : \"xxxxxx@gmail.com\",\n  \"device_code\" : \"74tq5miHKB\",\n  \"expires_in\" : 600,\n  \"dl_masked_mobile\" : \"XXXXXX1234\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "465da791-596b-402e-8ef4-4fa5cd33ab66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.145285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "example" : "74tq5miHKB",
                "type" : "string"
              },
              "dl_masked_email" : {
                "description" : "The masked email on which the OTP is sent.",
                "example" : "xxxxxx@gmail.com",
                "type" : "string"
              },
              "dl_masked_mobile" : {
                "description" : "The masked mobile number on which the OTP is sent.",
                "example" : "XXXXXX1234",
                "type" : "integer"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the code is valid.",
                "example" : 600,
                "type" : "integer"
              }
            },
            "required" : [ "device_code", "dl_masked_mobile", "dl_masked_email", "expires_in" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "f13834c6-44cf-4ec0-9647-7f0ed2eef57b",
    "name" : "Get Authorization Code - 400",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "mv4cfvy35qs600s38upsmrp11krnooajt21th7foff3k4os3pna8vksefyfujspl9mopnvuu9rclmxnt6kzetgvbuorw625l4kbeja2"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F420886"
        },
        "state" : {
          "equalTo" : "New+Jersey"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f13834c6-44cf-4ec0-9647-7f0ed2eef57b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.145183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "91a433b5-1c74-4cf9-8549-5464585ffa8c",
    "name" : "Get Authorization Code (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "va6tim6zj6w9gbvbwdr6ew3ezf975z7mspqwfh6hp2"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F155932"
        },
        "state" : {
          "equalTo" : "Kentucky"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"xlq1mnjxyt5ng0lh1gm4q8ctrcmkz9evkbhhil4h06lxqgkwrprk0f0mq52ztwazhc9taffbdwrmemya1ceasx86mcqif\",\n    \"scope\" : \"q17970viizxfhpqizs66396xeg0f3ue3t7kqlxbdrcc5kogrux2fkaqowcplnjb8df9kippalcvcvsih8mfub5yv\",\n    \"token_type\" : \"ubpntpppusamzutk0ru2c4kwd8zio6rbapb\",\n    \"expires_in\" : 2934477687855736809\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91a433b5-1c74-4cf9-8549-5464585ffa8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.144893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "type" : "string"
                  },
                  "expires_in" : {
                    "type" : "integer"
                  },
                  "scope" : {
                    "type" : "string"
                  },
                  "token_type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "1e63a36b-5dcc-4660-868f-ecce5e707cc8",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e63a36b-5dcc-4660-868f-ecce5e707cc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.144593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "31d9cc64-ae86-4862-afc7-a333739793c3",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Excepturi expedita blanditiis. Aliquid velit occaecati dolores et id doloremque aut. Esse doloremque voluptatibus in sunt. Amet et aut distinctio aut. Aut rerum voluptatem.\",\n  \"error\" : \"edvja2b89z5y0b9r8l7frsgou2gbi8ttvcvqr60oqd62b5gkpyiaw923zfz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31d9cc64-ae86-4862-afc7-a333739793c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.144545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "a3491708-02a1-49a1-a0ea-6d04f6510e86",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3491708-02a1-49a1-a0ea-6d04f6510e86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.144451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "ed7d37e6-2cdf-47cb-a7be-14d61af4d05b",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"registered\" : \"true\",\n  \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed7d37e6-2cdf-47cb-a7be-14d61af4d05b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.144399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "digilockerid" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "registered" : {
                "description" : "true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.",
                "example" : "true",
                "type" : "string"
              }
            },
            "required" : [ "registered", "digilockerid" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "161c6849-9039-4d64-9050-225c630d5b93",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Animi corporis iure. Quod temporibus voluptatem sed consequuntur rerum. Omnis aut et. Non qui aliquam dolore iste.\",\n  \"error\" : \"2wnhzsi678k9gzhnnbc1mevxexp95s4v7ci72x6g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "161c6849-9039-4d64-9050-225c630d5b93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.144319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "e1ac31b2-27c3-4681-b772-4095b1719589",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"Dolorem exercitationem rerum. Dolores quo ipsam sed enim. Quia doloribus commodi. Ut voluptatem asperiores asperiores ea. Et eum eos fugiat ut.\",\n  \"error\" : \"a7wk1kt18sb51dnn4crfl6w3ygfhj5961ezjutd8zzjrgx604yy7q40ur446rjdtgbbeowbs0pdskn8jvho5dw5hwm9tieqonkhjusrex4umbvlcsc6jkc12klimo980qvl0ehlp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1ac31b2-27c3-4681-b772-4095b1719589",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.144227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_digilocker_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The digilockerid parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "e8c4150c-5416-471d-9bec-0d830d27b40d",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Eum placeat voluptatum voluptatem tenetur expedita. Delectus est aut repellendus ut sit quis. Sit nostrum repudiandae consectetur ea in cum eos. Ab ullam veritatis quas blanditiis possimus. Repudianda\",\n  \"error\" : \"jt30pb7xj0qe4gushe9iyrw5rmdg4zsamfqr8ddt5rriw14gu3byvqvvqcombherjac0n6u8qtt3113okvonrmvm6rvef1jjex42g2awim8j4ly6u8r9lao7j7dw6ytfs5wqas98pfu1l56wk1p5jc7ralq569ipx05v0h84sj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8c4150c-5416-471d-9bec-0d830d27b40d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.144129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "9c663668-1957-4b9f-aed8-3b20e0fbc9f2",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Soluta placeat eligendi quo amet ut accusantium et. Delectus nam laboriosam deleniti tempora. Consequatur maxime quas nisi ut sit dolor. Est nobis excepturi porro iusto ex. Cumque sint est.\",\n  \"error\" : \"zltrmj3untlmfg8zvz88cit7udtnpp7mef3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c663668-1957-4b9f-aed8-3b20e0fbc9f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.144021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "4934aa9d-8fa0-4b1c-a36c-3b869ac414b2",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4934aa9d-8fa0-4b1c-a36c-3b869ac414b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:56.143826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 89
  } ]
}