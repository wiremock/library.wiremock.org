{
  "mappings" : [ {
    "id" : "06d704bf-1517-4cac-b5cd-0aa6c6629518",
    "name" : "Like Read, except returns the result set as a stream. Unlike Read, there is no l...",
    "request" : {
      "urlPath" : "/v1/514zl5i7wetk1izezg4f50dst1hjvbga3nhdn4jue1keehvhhzcz7229lyxr1ii8n9hk0v2f29smoly7cdi1mvcyj2tbcszii36gbjcw2d8vn2syvcvvoi7a208ztdt5ywb4xr0ch2yvcp71h5p8k4iylxmbaegobegigbjdeku0a9hazcu4jw2xahjnfem3zbd5:streamingRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"9w4gjsr4sv7x0ckr6h69s06xpcas6m2sl6lmytpw1iastsyjvobyqy\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Gerry Koch\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"yjbqkoftvf\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Kari Reilly\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"91n118mglzbn4geok1ch0ml7nddksizzxc7oc39xawypo6vopnzo2surp6w5r245841rh5jdq6alkp9ov7v18b68ovaxwhb4idv4y61d263jw08x15gaf\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Ms. Gerri Prohaska\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"8dq8tdsos1n7ipbuqud7gogjvmsq590bq1t95cg2z19japblb6cf189wpdq4vv8vbdpetlyjeyk\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Lindsay Russel\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"9qvy13w3zvsw1sa8jdqzx0o58dprn0il0oylou43w1nnbvzop6u29ujazquacad8bf3xerbzahwg4x4iml4j2r3292f\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Dorian Will\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"spjaz645kcdgfc3afi84acp1mo7jfz52r580mhq8sa59dcnnsopsru94y91bmqhkublb6vx51miwxmxftm7nfgon7ytmdiy2ripz77dfpt2p8oao7ftp2eudbsrpo7khfurgu4jewvmshxxwy8p5dx0eg6jccwi35gk1xkmegfzk853b98dpm7aj6pcfrf8y3o\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Bruno Ritchie\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"vfjlq8xb6db5b2dkecpc2oyoho7d45\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Michele Leuschke DVM\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"czrp6cy5gz0wry8ao5um30rojbs473u1pcr1jjedcp1d4lczwzya9mgzi9erivfbc159745w24pcorfj270sys6vs6mt14qmr9mh84b9i3ij78rjzh5crelmb\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Columbus Bernhard III\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"o6l9i87l48ovgbdc5er5aw96zi4jntxf4kuqaxbnja57rtys8zvahaib946szgh\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Ardath Yost\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"6c56ge5k5wc6a8asbznb8rr88kdhdelzbvjgvnm1godsrp1j8648dp22x8nbebhcdv8mjl7l2t9i83iz87xk8p3eggirl4cl9faru592isgmzb0h1val9wjlvbeu8hm8use9a1kzpdyujlow8i6c8jlubqvkyx4rt50e2eqdjn3ecx5kwzboasudj4wxv2x22j0nmty7\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Cyrus Effertz\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"f4nien83l14qlwt9znre9um0t9hl4eq8av2cgb3bnozthe1he50vec0spbuvwvidb88r4040727ezbwbmu3tlr9kftxc99berasrhs2r4u29j88w7euvctejnku5h8pbl\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Twana Fadel\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"biljx6ayom1h98vsmkqj0sj5vbs5dmayl1q9axf1tad5kop1r3u3toespptwnoocyne6zfiuoy4js5ti94uwkqcono87b5qotk0cl5tq3fb976mramzyetx172w40wc2j40dgm9llb1q2oer49\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Jacinto Grady\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"8iis930002or49vp6o0k3hhwfkbjsbykv977lobrep1dx8ltosqmmhd42dfty2wp2au6wt2wdsh0ln8808afl04zlr4r\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-12-13T07:16:30.306796Z\",\n      \"id\" : \"j9vr\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"n5q83wzcxp9me7umb2za85ppbyvt9l5l4jzrqen7yl0zxkgz4q76dtc0shrc9ao2jiu57thvr3jpmx2yae3pyhqbeg2f5nos1f0p9qo887iqmd9455syahvcinfeli8eyp5ekixvojlk7rns136b\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Dolore voluptas est neque. Minus qui dolore perferendis a dolor. Id eaque qui enim ea facilis alias. Est non maxime. Possimus similique iste ut ipsam.\"\n        },\n        \"displayName\" : \"Ms. Grover Yundt\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 2006978213\n      } ]\n    },\n    \"rowCountExact\" : \"nel1q9y8cw1qa9458gg1v6p\"\n  },\n  \"values\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06d704bf-1517-4cac-b5cd-0aa6c6629518",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.307283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.streamingRead",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "429baafd-bbb4-48ab-838c-e1ea8d09f12d",
    "name" : "Rolls back a transaction, releasing any locks it holds. It is a good idea to cal...",
    "request" : {
      "urlPath" : "/v1/ppp5y7rvdj357lzp9p3r1p6txgsakspit9uuleiazdgqiqcjvao3iq97:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "429baafd-bbb4-48ab-838c-e1ea8d09f12d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.305663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.rollback",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "3d51c119-ed16-4e2d-a8fd-b881b79024c3",
    "name" : "Reads rows from the database using key lookups and scans, as a simple key/value ...",
    "request" : {
      "urlPath" : "/v1/72io123t64ak6mh4dg3xksrbci97qbchpgmspvdb9h6dknqcbvx87vniatdghisndtbs35qxzf0rklhd73dtxpyf2zoc414op6ir2vkuymhazpfvjqmry1h6skmuvrl4s7xxb2pk4agk4noi17sabrzbtspy8lrvapgiexzp:read",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Marty Predovic\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"977cten0tw83s2migworsb4ybbpxuzaftq3u5yv57kx9dafgahckcktqg6dr30vp5jtzscyy5z4kqm9ys\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Jarod Bernier\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"p6qgwqu6c1e8ns1rn0le7n0g9itt4xsl2i7fcw3bzom24ztcz4a8nxlca1xv0hesuni26wlqipyinxf3jngdns5\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Carmelia Smitham\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"if3fvn6hl7ervkpazzkt6cxwksepxjc29481v9oe5u3jp16ih4mbp4jptuosd4u886s1ezrzvwmil3yrukw5nxqnh9vjqophs51uxt6wz4hyw6x1mg6fcklzdvemv3al5ydlm278kybh0lowlmw4dxk11qresgx0j765gbqdk20jnhf06sv81vcppspieo0i9i2fbc\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Kallie Aufderhar\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"cwpljj7qutla6n8h1526ccka8mso61xrsoloqaxes97spao6dpucwbtxe07nz3q180hykuf0imnewg26lhk4tepn1155ayqkuzxc6g587jko8laxmr7wf446u7lukxi7n9e9uoh6hcmo8kr2w79zf69gdods75dsfqixehsaatoz1\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Mrs. Darrel Lemke\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"11e9poa022ykun809jkjrh4dq1hd1lr3n1jfcv4ojm7is485h3e2sojdgqmt1vuhligsm0kg6p\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Ms. Rueben Douglas\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"xnbsl12w5c877nbhyhupan7q75i9tq1bpzwztz0ntgfsp0zwhbtgpy6\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Ms. Joy Murphy\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"s432bz66ekrqw3yg3sds1r9vpkudxieff7ol0y12pes6ufe12olisg21b5ufpuywm97w9u1rtzxa5ma0qcs190vn94jy086m6t8l8c0mic3my6s95pzllvcsfspgkhcci\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Reid Mertz\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"p1g4wev4ybc4q2iwdr6skd2crt4um4mub76ofeqdo6tspsu0scb8cf7qit8haaj50w2tumshice6ks2g0xkzir8lnvev5oaj0v8nkndpf6t27xh4dv1shymqa\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Nathan Jerde\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"xxfwf57fead6o852671z4k2wy31s47zx8jpswgp7iwq71xuj38ji\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Garry Heaney\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"xs6ce77sik04911n0xs\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Miss Londa Mante\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"u875xsco4mpovzp4zn4hxw9lubkuw4rtz4fqusa3taocmphafr50umtbozaprjrq11ibi5t9yrrfkcamyiu\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Jon Koss Sr.\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"qxg89c5ka10n9ubawi7yeg7aoeuayed1cenhnvl8lqmvcqstmni5tknetxfp1jomvsb0p4lp5\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Mariann Murray\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"7eouu1ks9ute3igwqlfov9u2fot4hqaagme09s3b3duy1zydwbl1j8i0t2tsrwwbt9613t2h5sq3nnl7lacvvj9b5qqyi4quz1t1icavc9lv16z1w5nvbrz456w260ngsn1s45m4hh3klxp80jej4fzezr4xcqw4pmwb5xwgek4h9zu3jlys13eq8c0h0xtzewp\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Calandra Bogisich\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"kkp9zzun66ubs8c8ro5wp88i1av7pz52s8porf0aw2vc77smlze67aoppes1goq9dk1r0nkuq\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Pam Kreiger\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"9lzrjhruaxqax58lngqmcrbk2f7uo5638ji02sx6puqumgvf8aq679hxl4y6bhz3s5u8d7v514dmoszdfi0in5jnonhfkzymw3fqzpgfj61al1v8uvgzvn3v6\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Reed Ryan\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"xby293ziz3ij1ijtgvdntzj5b9mqu451wy2s2otoqr3431x4k573atgglhomr5q3687v89vj5o3wsh1yhspp7lgvmk7m955pwlua5tyyk9ahni1yklem42uht8ml8cw7k67e79g302vvmvr3k37d\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-05-19T09:13:30.304717Z\",\n      \"id\" : \"yu6y\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"yt2jhaiaa2mnkru7sv17dkmaivorpzqgygydohg\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Provident exercitationem beatae. Nemo illum qui corporis quis asperiores. Reprehenderit soluta hic explicabo. Sed quaerat et ducimus inventore. Commodi cum accusamus voluptatum est.\"\n        },\n        \"displayName\" : \"Mrs. Parthenia Collier\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 138061613\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Dolorem necessitatibus consequatur excepturi quo cum. Atque voluptatem aut. Similique debitis cupiditate sapiente sint sit sapiente vel. Aut enim sed.\"\n        },\n        \"displayName\" : \"Dr. Fredrick Daugherty\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1867086172\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Est repudiandae a deserunt voluptatem. Et quo voluptatibus dolorem veritatis hic voluptas. Nostrum et pariatur velit ullam sint. Consequatur sit eius voluptate inventore.\"\n        },\n        \"displayName\" : \"Alice Hudson\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1391104942\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Consequatur est voluptas. Cupiditate voluptatibus fugit et qui. Optio et dignissimos cum numquam distinctio. Neque rerum non. Numquam consequuntur aliquam.\"\n        },\n        \"displayName\" : \"Avery Bogan\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 1069794167\n      } ]\n    },\n    \"rowCountExact\" : \"0ufv2g5neqm9r9jywo3xwjmfeup2n7ibmn5biij6vlvseyn43zy1im0pudauf4sh6699357onokt0k5q609yzdd0\"\n  },\n  \"rows\" : [ [ { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d51c119-ed16-4e2d-a8fd-b881b79024c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.3056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.read",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "f2197144-e552-4805-80a1-0ad7e6e1d5e9",
    "name" : "Creates a set of partition tokens that can be used to execute a read operation i...",
    "request" : {
      "urlPath" : "/v1/f35tjqt30gadj73e95ny0g7q1xgswu8kk2wilus13xy55ktjfo2j716up5cpijjdc2be4p84mtj9wphde6vjqlot8a3jbip170vnadhrd7hz0cb4edvmcyt6t3emn6nk13vzslvvxchc9w35ki5mjh9l5tkqy8inz5g0ut6ylojvue1neom6d7ke7se3n1cyorafg5:partitionRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"0r4dligiintdtf0o0l58kz8x4tii4ks0tr60saazap0piremz51a\"\n  }, {\n    \"partitionToken\" : \"b6l5lhk6cvyx4elydel9odrj142hdu0qh3e2q7hh0f7id9hgtr7r815ghwpv57o2v2hm3befpotx96\"\n  }, {\n    \"partitionToken\" : \"ptca8cwkgxkwcfbk0c6ctlu2a2tdcz8z4c2larjpev022\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-08-10T09:06:30.303102Z\",\n    \"id\" : \"9b14\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2197144-e552-4805-80a1-0ad7e6e1d5e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.303255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionRead",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "924a205e-60d2-4de6-af47-dd5c86b33a49",
    "name" : "Creates a set of partition tokens that can be used to execute a query operation ...",
    "request" : {
      "urlPath" : "/v1/sj94bsyjd1dvdh4c2g5nwark3f99bhve9pa5vskg9dqbg0cw45391exoev9m7sp2dyylg0vzc2r6tbxwa3h3ezlc6tukydm3nu47hkv5jeqg4bwf5qkq5qtlcl1fxt0praor7v7i:partitionQuery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"69emb2zp6gwy3ka0hhm9qj9n0mkz7gx6379rj9exkixmg2sa\"\n  }, {\n    \"partitionToken\" : \"gc0dxkpo81rxpys5oibld3oej1z8aq1z8cmmv7mq3kq4qrgf2vchtn7s0dms92bovvmuhp79rtyalnxvtlytfnnk1v7pp73nbmvnzocbhd1bxaa3a\"\n  }, {\n    \"partitionToken\" : \"8p024qxoeb3tv2ayu05u11b70rwu0tlpbjv3lohbl4whekoz8yjnziib1r055361gvludn7gabxd973\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-06-05T06:37:30.302833Z\",\n    \"id\" : \"zpqx\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "924a205e-60d2-4de6-af47-dd5c86b33a49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.303005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionQuery",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "1a2a51a5-ff86-46e3-9fea-37fae863bab9",
    "name" : "Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, t...",
    "request" : {
      "urlPath" : "/v1/n83itlew1j7je9awaln75w70dti6ro314h7eb9cnzp220rhasezqopknh8os9ugxvh1rw8mvr65j8vp800zrh:executeStreamingSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"lcj222w67r4iiwti7ln7vw7e2hkgbrtlmt3gh2x2orykckoxf6rxqnszf08xqz19cy9201mhvsq2qdnjt0b3u8apsvpcgj8j3vnu6lfzb5zo4geuywhmzb29dkpx8txsnne5okuxtfz1aryt1pimucf\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Ranee Cummings\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"aa9xxqtiztg7pvujzx0hw903ywdxkpzr1o0npwd0aewp34eylvinnudqloldrs413relpx4xemps7yaw44t21hmgnnf04lok9yny0qinuztvbbztt89u4xq33zb0sk23u37r4yrb7ihettj48qqft6ehay0bkqf77hdqkujo0v5eb0oqc8j2lt47fun8ayd47j39wx\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Esteban Schoen PhD\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"k14s7iru23vjqmyymffjhocg4d2cxa4o1gt2ona4knx12rqjczrpge99yay37wpw6t\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Earle Olson\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"1edc11j8wnnojrg7kgx807u1g46ram8gshha4is\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Easter Ruecker\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"oel2xoncvwqxmulisx07yieapxyupsjqj4chem5u97ko3kp\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Cameron Fisher\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"1l2jc1zz1bdfshf59fu38lugdxzmclvnfu17y034felt8qvpe65kc6uz1qq5n9cexgtsosn2yrzxbeivpoimc7ih8f864drorjxtcyp1ix2aa0m77p6f1jgyyd93mm\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Robert Feest\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"8gcoj9jylgnpk58l8gz4qmgv1s8pb9s69ph6gk7u\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Erasmo O'Reilly III\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ocukpldgl71yj4jjjrlofbkjbffdja0c16zweojmhu5w3d41reym6p2m7efvhxi2tnch3qm3ymig4ybfdji3j0fiugvpuc456p7ete23ozu92eop4bhaij8v414jemi2y7vkrxharhkk2q1f6s73rvkpopgci9xu\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Fernando Grimes DDS\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"52lk4r57qysjuq25j0btcnmxp69g0ck2ivn9dzuurr4y9zchl5l8ydvnbgz6joo1wtp3dt9wrz18sf8405coisp61tgxgc6ibdjd656do8jx9lsg595okdaynsnehqxp024hm6h2pgl6ab7v\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Miss Jimmy Schmidt\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ave1va4j36wi5gyf5nao5pdb2hxex1y00461chlzx649374xz7guuygyyi40d7p2o9mqscjih0jo5tdjomn0rhe1h25v2h057jodrlyu27isno833ruxpb388\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Grady Will\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"u5psy7woz4orf8tted3ycrkrjddo9g4bvvgr8yc65kphh8zxkpcn8hutp8bl4ajnne9nv\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Miss Charles Goodwin\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"aj90qt0kfnk\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Dr. Arlen Funk\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"sba2pcqrazs9uga9mjki3zezc4fbp2aivh9ye6plhwtidj30haiy7w5iwyk9mgp7nq3gla4ekfo44u2walvcysimoc3avshve7u2a8xjptodybzwljlniae4qr8lzh8smrofydiz3iyaoghhq14nnnpgguh1zbe11dr74kz7lxb78xd2hjqg8pfp43n4d\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Mrs. Antone Johnson\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"f3i1e6ywuoivi925w7awy52566sih9sf44uriqpomqg1pkpxu2jeu81f\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-05-14T06:58:30.302104Z\",\n      \"id\" : \"o3g3\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"4m1chnsw3k0kdg4qdjjagsbclu2iqj23cyc21544t7nwyf54i85u0us36av9xnebmhjkanq96u3t9wl92vi9u5po3d770xw5mxyk3lcc1245595czrwbrbvpir3tvvjm3clpg3v5zymz\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Vitae placeat magnam laboriosam nulla non consectetur eum. Soluta minus incidunt. Ipsum deserunt eum necessitatibus autem dignissimos. Est quibusdam dolorem maiores harum cumque et. Molestiae rerum no\"\n        },\n        \"displayName\" : \"Lavonne Lemke DVM\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 1664866736\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Non accusamus architecto voluptatum impedit tempore. Ea nam dignissimos velit laudantium est. Enim non est fugiat. Odit quam in eum libero minus.\"\n        },\n        \"displayName\" : \"Lenard Gleichner\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 801664308\n      } ]\n    },\n    \"rowCountExact\" : \"dbex9jln4e9\"\n  },\n  \"values\" : [ { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a2a51a5-ff86-46e3-9fea-37fae863bab9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.302714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeStreamingSql",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "8c8d70b2-ce25-46d6-907e-d54b62cc3a09",
    "name" : "Executes an SQL statement, returning all results in a single reply. This method ...",
    "request" : {
      "urlPath" : "/v1/rlqpxkv66c6rifcavi9gk0tbjzhdbjjev9aizg9682vdrdywza9cf8qow7hxg3qt1nz9cmr494v688gqvrs6kheli8haf452zza0lu5pgppoipfa9rz8qesd:executeSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Mr. Arlyne Russel\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"vy6hdf7ovpunkfoqhcumeqv54tjs5299eybgd7jakrkerkvxag8gj5x\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Gerardo Koepp IV\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"iwoqjqz88l5v4cz1zjl8lz363hfbl3ifbq55eoy2lusntivhfeur6l4befhn3xici7rgqaqgfy6d5otbf6elvsz47bgvq1y0d4fxk39jpzuw0kooyc29shkneyb2yc1tf3chw5xsn0dcqwkmp327xon\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Seymour Heidenreich Sr.\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ckjxd37wn1n103kdevznce5u8qwvnfzdqsbwi326ujzl8fovib2bjj8r4szzg8suw6qykqs26gdjbzon7tfeb6i81l0p3r33an21dpw5fwbc2izzivqaex5hye9r65jy7n9y4qbyx8n4fmhif5q5i\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Steve Gibson\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"lppzx8zy7e7oyjuy8miof33rfaa37ow1x7plxpigyyex\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Neville Larson\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"na6asiufxjett8c7axmwxivxyr7r28xnpc5fsmdb3jx65n20oec65vok1dtuun3lpam6sshaxc6x51blheg2q0hcg3zpdyhu2gf48q385fu98zryznckm29hp3dvv8j0fma3dm61laj6bhqvyjatdp0vtu78cjyc7pazu4rp6yjooiufgd8wlhjmj5p51v2q3\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Cortez Considine II\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"x1lo32cxtvc5mdlm3df6fvy1l3bbekfaxai1ls8fbpk7s7922pe8vv1ogtk6l\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Jerald Baumbach\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"1lmpokrrj7hx6f1gj9v9tpv6v3m0iair1sbvbaefks8j99uqvxvym48qr1pwxrecwcg08niogcods02zmh7px1kej3cuh832dt7981fgyl\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-10-09T08:07:30.299631Z\",\n      \"id\" : \"pfw9\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"3ydtnqasinlo1qcjyi6rotk7se52do741822h8r542ipdf082545dd5wefxlfs9xtiyaa6wq5i6ai\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ducimus nemo et rerum labore in quidem voluptatem. Consequatur dolores exercitationem maxime cumque animi quod occaecati. Earum quos aliquid ut asperiores. Optio quo occaecati.\"\n        },\n        \"displayName\" : \"Shad Kreiger\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1303116601\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sed doloribus dicta commodi quis. Ipsum voluptatem eum atque voluptates. Dolorum quod laboriosam tempore voluptas rem incidunt rerum.\"\n        },\n        \"displayName\" : \"Grover King\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 2038334572\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Aut ex rem cupiditate quas est. Provident occaecati dolorem vel similique dolor. Dolore commodi qui voluptatem debitis. Exercitationem voluptas quam. Magni quia quaerat vitae mollitia consequatur.\"\n        },\n        \"displayName\" : \"Horacio Fritsch I\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 503708607\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Similique ut qui molestiae eveniet sequi sed. Facilis dolor voluptas eum rerum ea vero. Iure voluptatem voluptatem tempora. Natus mollitia veniam id eos. Voluptatibus quia libero voluptas sed ratione \"\n        },\n        \"displayName\" : \"Ty Russel\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 268950843\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sunt quia voluptate. Rerum voluptatum dolorum nihil. Nihil necessitatibus quaerat laboriosam qui deleniti. Ratione quas labore. Ad aut aliquid blanditiis.\"\n        },\n        \"displayName\" : \"Dr. Nicolas Dare\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 79125363\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Vel rerum eos ab placeat. Soluta dolore quasi hic modi. Aperiam sed unde officia nostrum voluptatum at. Sequi voluptatum fuga commodi minus quis. Et quod et et error porro blanditiis.\"\n        },\n        \"displayName\" : \"Marcus Kunze\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 866955810\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Iste ratione qui eos voluptatum ipsum illum. Nisi sit sapiente et cumque. Minima ratione est.\"\n        },\n        \"displayName\" : \"Jazmin Powlowski\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1689967818\n      } ]\n    },\n    \"rowCountExact\" : \"jcpxkoo7kxh5ibn5fuf3qryh9907hrjs2m5vxbg9b98ozh0ohvp20u1eddb3x1x3cj3\"\n  },\n  \"rows\" : [ [ { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c8d70b2-ce25-46d6-907e-d54b62cc3a09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.300863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeSql",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "2e8e0c6a-fe3c-4544-a442-0fe7002ad78a",
    "name" : "Executes a batch of SQL DML statements. This method allows many statements to be...",
    "request" : {
      "urlPath" : "/v1/fh9f6gli4fw34jht361hkwymqs7l759p04asrpm8lh8gk5p70as3e2cst0nk3lzm9pxbrajtfbe1w9whurn9hj0:executeBatchDml",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resultSets\" : [ {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-02-28T06:40:30.296884Z\",\n        \"id\" : \"58a5\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"s3kslwlfn1v6vcasup0y507agmwt3auor0oe0ge5vgpy0x5byor\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"3upzw4ksftv9gwg9plpa\"\n    },\n    \"rows\" : [ [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-07-11T05:37:30.297214Z\",\n        \"id\" : \"9ev1\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"gdgepf3yjbcpk1f8guftg57hyf6cz9wzr8p0tx0hy6yzqkvpiuia0soomamnp4o2ibq1ahm0ge90hwsow0bsc7wxxxtk7xn276wcmw1hbsd93fad8emurjbapvnyiga98y6a2bhndfregazpspjcilgyp09muodp3u\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"dz878qs10ldiz3tgyv02va9t6xl3dm24veybad\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-03-27T09:23:30.297568Z\",\n        \"id\" : \"1512\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"jqs2vp1inbgzy0ayqfkxxe4tsoc03baajxidw9v3sjmbu4ytcjxor64uw94z561ue11ad2mk\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"uh1ktxvi08ev6cgam03cfeoj9tn7mzm6rpo7ecs42cjgxkis9oha17644p2n6ifoa56870osm5wk9qcuwzdce0w6apnxo9e3p8wc8aak8diwjv8wux\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-10-01T08:50:30.297902Z\",\n        \"id\" : \"2303\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"9tdmsns6wedfrct5bqyncqnrpt9p9bsupc7a46r7cz7xfu28puydciom4z8smki17xhniwuce4hurj3wogvm6ime35269vcr0q65bk0d0kk02dhpj5tycgy74r7ta0w3fov8jpjod5j4y3llr9tti7oyms6wt8zi0uvcyc2s5ozy9ttziz\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"f2d153kytzohycex3zzxd8a13b9fpv0759ukr5s5fgwk59vyotcd86hsq9ff2o2c2vyhycnd0esvinz0699a57khw1ry8tpkq6eqvjz4yedilvu7lvwknyujvl5v3ag2pxlz63xrgai6rtzvxs97grxcljav2x9cbgkeenhmjwkaswkj3eu\"\n    },\n    \"rows\" : [ [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-01-06T09:07:30.298164Z\",\n        \"id\" : \"jh47\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"arznstufml50uwpv5925x17p6ckucsrr5kpefimgxe7ebzk3o1l2khbnvwmb9m17c8fnf2nvtmmngyu90l3wrlwtae3xe7dduh0t2o3xt2yfz1cz1d6533xb41fvd1ecsq2mfue\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { } ]\n      },\n      \"rowCountExact\" : \"ae59xqqkmps6m6oboec2di8gmckpsjgumh5j2ax39rue5x4cgd8jz96fnobaki0d8ouca0neoejqg3025x4p3s0ocjjwfcx8djabplze6u7cio323vgevr7zk1fo33b7\"\n    },\n    \"rows\" : [ [ { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-09-03T08:52:30.298423Z\",\n        \"id\" : \"y995\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"6899p28sdtdnlf5f8upkk5er340fuwbq8t0man1f98h\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { } ]\n      },\n      \"rowCountExact\" : \"tnfh9g5v2q6frisq12nyz71je5w9suqwi5soui033as38hg5hdz8htrc9ofo2s13szhryhhifeh6gn2wa9birrbfc66kk688bn0s4h6ti2v3jbrs96575n3nnxwrs1nc0m790n5vv27zlt299pyvkfyhf\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { } ], [ { } ], [ { }, { }, { } ], [ { } ] ]\n  } ],\n  \"status\" : {\n    \"code\" : 1432855493,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"At aut eos voluptate dolor ea ad facilis. Sit debitis nulla deserunt necessitatibus dolorem odio. Dolorem quis et explicabo eaque.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e8e0c6a-fe3c-4544-a442-0fe7002ad78a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.298945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeBatchDml",
          "schema" : {
            "description" : "The response for ExecuteBatchDml. Contains a list of ResultSet messages, one for each DML statement that has successfully executed, in the same order as the statements in the request. If a statement fails, the status in the response body identifies the cause of the failure. To check for DML statements that failed, use the following approach: 1. Check the status in the response message. The google.rpc.Code enum value `OK` indicates that all statements were executed successfully. 2. If the status was not `OK`, check the number of result sets in the response. If the response contains `N` ResultSet messages, then statement `N+1` in the request failed. Example 1: * Request: 5 DML statements, all executed successfully. * Response: 5 ResultSet messages, with the status `OK`. Example 2: * Request: 5 DML statements. The third statement has a syntax error. * Response: 2 ResultSet messages, and a syntax error (`INVALID_ARGUMENT`) status. The number of ResultSet messages indicates that the third statement failed, and the fourth and fifth statements were not executed.",
            "properties" : {
              "resultSets" : {
                "description" : "One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.",
                "items" : {
                  "$ref" : "#/components/schemas/ResultSet"
                },
                "type" : "array"
              },
              "status" : {
                "$ref" : "#/components/schemas/Status"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "47d1b23c-91dc-4dc4-864c-561172f73ce2",
    "name" : "Commits a transaction. The request includes the mutations to be applied to rows ...",
    "request" : {
      "urlPath" : "/v1/9ft3dilny6zwjyoo3uhqdclqtg44o9l7556zy8njmew:commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"commitStats\" : {\n    \"mutationCount\" : \"7efvuri8bxe8utkrvv98rc6sze2cyp2z6f077n5qsaw43nu73twg9kkpsxd5aj67huunenavpm0iut5f8ixx55mwqszk5mklh782p5e42uybmyv16sez0m21m1p1kfgr0v3h1fa1tpt2l8i8370vuwe77zvtva6o29b7e7x\"\n  },\n  \"commitTimestamp\" : \"2022-05-01T07:07:30.296734Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47d1b23c-91dc-4dc4-864c-561172f73ce2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.296793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.commit",
          "schema" : {
            "description" : "The response for Commit.",
            "properties" : {
              "commitStats" : {
                "$ref" : "#/components/schemas/CommitStats"
              },
              "commitTimestamp" : {
                "description" : "The Cloud Spanner timestamp at which the transaction committed.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "893a100d-e849-4a50-8b24-aa452e78a627",
    "name" : "Begins a new transaction. This step can often be skipped: Read, ExecuteSql and C...",
    "request" : {
      "urlPath" : "/v1/7qvahz:beginTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"readTimestamp\" : \"2023-01-11T09:23:30.296455Z\",\n  \"id\" : \"75lu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "893a100d-e849-4a50-8b24-aa452e78a627",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.296662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.beginTransaction",
          "schema" : {
            "description" : "A transaction.",
            "properties" : {
              "id" : {
                "description" : "`id` may be used to identify the transaction in subsequent Read, ExecuteSql, Commit, or Rollback calls. Single-use read-only transactions do not have IDs, because single-use transactions do not support multiple requests.",
                "format" : "byte",
                "type" : "string"
              },
              "readTimestamp" : {
                "description" : "For snapshot read-only transactions, the read timestamp chosen for the transaction. Not returned by default: see TransactionOptions.ReadOnly.return_read_timestamp. A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds. Example: `\"2014-10-02T15:01:23.045123456Z\"`.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "c75dc3cd-67e4-4c84-9abc-ca37d2a2352d",
    "name" : "Returns permissions that the caller has on the specified database or backup reso...",
    "request" : {
      "urlPath" : "/v1/z8ngaxs2u6v0klf2wav6v1muv7lmkhovs0j7k195j7k0lshsokvdfau5fi1kyvqmku3ea32jj5e5yqk9:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"widh01or6rj79zoxfqphwsuv08gyjb73wwccgjkzcoshh7l9lbuy70ivdyvs9b\", \"lzbxfyov8uss6knj9jr\", \"sqpiopxg3k0dlpz28wxfrf29a7obkiecq12md62ukyiwgce8hi47uuicwmimn8i37wzvvnheo6ipktg8eixibvuqjzkaqxbed6opkdvkbaekqw2rmgw82i70mvgpwiidxougu\", \"vf40uf418sqe0d6nrb4l0lykyvnfwy5orazkczliwtq26up0d3cv04h6f2eeab9z08hlu2ckj3mn5gvee4ln9s133zbfy2d9q4imjwhd7km206rympjmrdovstvoxnnbo0en4d\", \"2sdhutnvbvt9k3th8f03ftnzzmzyr52oydr49xotuxs6iqnywj2a0x7ca76sejw6t1tno6ldqsfbw7yigs52u9a825gl019gr5zm66frp800nvykcqn0hlgcpyxskz248r9s7jtn07yupls1u2rbhsodl5lhfz6sj\", \"1s1h213n2zvkzty1r8ifp0uf5jmncblrbhkytbcyoy73tnbktp0beehvyj316aypeq9zxmhcpbtuhwthn8dyhzihv6guwdnpz7sglmmvc9viyz5aop792nxy25nqxlfxxqpcdqwimpbfsn2xptova539hva1ucukio0cdwz\", \"q0ni81xeakogvmml8zoqe9n81v90h5oxv6914ztny\", \"ip51bcreckiax250km4og55newks7kg6im5o93kl4odverqdq1\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c75dc3cd-67e4-4c84-9abc-ca37d2a2352d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.296415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "05e81b13-e8b0-40b8-81a8-29b9fd44edea",
    "name" : "Sets the access control policy on a database or backup resource. Replaces any ex...",
    "request" : {
      "urlPath" : "/v1/13l9ir580mnihmrjqbqrb4cc5gbwwrqr3g4s31xi3d899h7zzl0nyqp:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"m64fekfb0i5spo8b9rhwpzdh1haln2sqjr21glpdzcwiiks4b3bx0ucjdkzndhke0p9613t6sxn4xe48db62phvt9gi25whco8e9i3kesw7qszkhejzk8jiwtvwv8sjk8owb8dsyaebn4\",\n      \"description\" : \"Voluptas fugit dolorum hic. Repudiandae nesciunt ratione numquam ipsam sunt. Est magnam quidem similique modi omnis aliquam. Dolores deserunt ab voluptatum qui sit dolores hic.\",\n      \"location\" : \"8o71pjnstdv9ouuhp5v0j5x9mkohr7ltyk31i1y20a9ne7h13bocbu0u1ebah4gt87qfvxalorzkpu1enwl4mexgazlomjupa58itzxl99l81hh4kl8kcqvh7axrn2jnlrxfnzswmiwjj6zsghhjou7g38vyjrm5r092asubd5boj290yh3i66xl6ko\",\n      \"title\" : \"Ea autem reprehenderit nobis hic.\"\n    },\n    \"role\" : \"ej9i2iqcam8l4gxn46wbk3tagvqmodrnwrc9kkygwuwyk78p0yzjoma8n2wyel\",\n    \"members\" : [ \"7lyvr00hndlfti55ov0kfychen8xpbsdbbyt3en4t1dvw7u4w0d3d37novfukovykzhmgof6nlc31wcmh6qymmkuugvh8niiwj2wlto7ctfuc5gohw8xtepqyo65bgpcmqa9b6uvjlt8s3eqy0ap\", \"os8bjpg5gk25tk4tuy5lgw51p92i1367b12yb1mvkdcgv3nki7wq7u7la8cayeduprtnze0y89jnxzj8cv1vt2o89t54jlpd7epp2islorzckt6ief00wozx3duyu3423jauen5t0z58gkvl666hlc6gjzupkj3fneigtvfdwfxnp42\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"gqkfn4wrybnerb4fno1wi6lw1pxa8nsaox7al7gya5aqer27fr6yayghptn3dkp6h2obwmizjtweah761zvl52i6\",\n      \"description\" : \"Sed quo minus incidunt est voluptate. Et accusamus aut quia. Animi doloribus corporis. Maiores unde perferendis.\",\n      \"location\" : \"vmrbrm4txu99ggfpqsvh2noihb207yac3xaion5ffh4rzx84v21zi34v66kfjx3rvln0aoleop2ojml\",\n      \"title\" : \"Accusantium ut quia.\"\n    },\n    \"role\" : \"twi9wp44twgfj8bscyvdoijdxbosix7ugewtyzbiwix3cte02zyozru0xxya61dkmrl8alovzww6ou0tytrvyh2gcommnj0voyicsd\",\n    \"members\" : [ \"xgc5tba9b1smps303cfd6p5m76u8bksgg8pcvi1aivmuuuwbxjfzdw8ulikxyskl6fy2hitd45kmve6m8bee6b21pr8ha5xmntfn6xaarjkusdxbkwb742m0m74jp380r7poq5v84x1riumc83h9kc9wq9b\", \"y1xz150tj6yvdyxahnvkzus57ee071f7sc30lx9gry3m0vni8t10r3jhu7koai8yvki8l4b2lor9ipv505yebxq9ajys5up2t2u8myn9bw5eo4iv81ih364lq8lun93z4pjsnt5jkjaqq0w5g1qaws2mci0iufuqq2u7h8xfrsco3x5phsdx6g8uz7f1mcxdh4eq\", \"4j9c8jkrhkyqtu0q02pkh4ieyby205yghzbr8yjrj7rac9yomxgyore0wo9r1j6fcuo4phhg6iw5yy5hvs8g2srhja2exs0ucio8ihrupkmk34sns3175gy1yd\", \"51solokc6f1nq1bnefv5jpj3rwoyewzzuvc0153gufcn8revbyxr09u60ubh1nsvixkq9v6yu91isk6ncox5xtep85vlzqs05wii79sbyhooejz6mhpc1gc1537m6ie2nchree37279974wll9kilvzhotrgauvr85pjvv5xii9pa7a8lkiwsslqqfrfm67csei59a\", \"btoav3r4ipmm6hx2durcj207qmf41t6fil7e5i1dnc03ktyupywuxqh9bh6slm8u5tj6h4re0ote8tjozjtq0stzuzazfzt1nc1jbz\", \"y4awk27jgtkajjzqy5c6mtqj3esqzq0u4isp6mhixfhd3qs6fg7yl4mogulcb8q5oedz0\", \"2ngfwewk3b6op0a0q1homw1rmj5mtdj6k7deylenjq3rbsfxn2n3f7igfsx1d2bihd5a5ixvq8goz\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"rl2tq97rgjacdv2mkf9z704zc59dcvizasvfq059sfzblub04qisy3cuk9wbm54fxedjlcpu2vlqhqjuk9a9y12momybln8xegw63sx6dvio9mg9mbl3rkprwrp17k76a204h8x6eck6q06cmq7mmquqnho9vng08fh1x1gx9asoybbzt6gh55oqijfylajpy\",\n      \"description\" : \"Ullam quia omnis dignissimos illo aspernatur. Atque beatae culpa earum. Cumque et dolor corporis. Eligendi explicabo quia quia esse qui id. Et laborum illo neque tempora modi accusamus.\",\n      \"location\" : \"eo47kv6likjkinzbnsgl04rohcpobs2gqa5h939l3bn3hi8qh7swegbka\",\n      \"title\" : \"Minus qui facere doloremque.\"\n    },\n    \"role\" : \"1xq65avle2wfaevcaz4lb80kevgiypk66zravadujnppk80i4vq0uscfnbg338apjzzc8s4htr0n9ajhgr8citbc74wry5v17hl2bdfg4qzl6jwdfrv\",\n    \"members\" : [ \"pc3nwveo7feen8kwzekqd6dejxa56jlq6x9g4tvbb7hpy1ydljrogiv5pofkh11btwydf44j8eppamymn20ok6874xre6wx57b4x9ul5s62x68\", \"ig6e4mqsfwp6yasrlxqc7zn9cm2974dgq6ox85n6lptm0cttdbsj7ata5uhyhl4lvwxwk0jd7ckprf2erfumsi04ld2ljbpinbp9ojeutof9sb4te7drbc8130pyzcksawo2c9swkvv82jijrxchxz6e4n1e305bt5e60m68nv1co\", \"2xduy0w3bm10tieun86ywzvdih0se1ahq1v3fsxw08tush4zcpcqg9c7o91jt156mv1yo9nl93c2oeox7ywtzus8dt5eekrepfs35enmi6z2xo29jmf9z4r30fuf32uq7xcymvng3rdginmige\", \"pu2vietc5y6tkwjb3kjhlb57vflpva72q4z8siqhqxsnacfhn8p2s6vjqmkx6j99qyuictu95ptmfjo6uxnl2pikuk9lixlqmn4ruxmvuamnru4btgll5smsm4v3vkrgoc4kug8r6fb4yjpf3g5cbrrtnnnod1fffxb9bdxmo1jycwaacikwx7i3jxgsnudgr\", \"ics0pztia0lnaagzj5\", \"4kldm2fym7ov8nsikrnrayqqxanwwalcvgo3w4mwt5k2ztwoybr2gg4gkb0w3i1sxbxdzr5ip\", \"573l1awg11h5fbvixquq1g5augjk5my3ih0k3gew7yuopbpucrxtj2d8qevg4yrh0vana962n7xj9oqi1friwu1w13rwpw1w9hp31sv7q1j4ykx285cleu9offef2nj2e3dng6m3b1u7sw7qksx3nn49fv2hawupnar80nn6tt\" ]\n  } ],\n  \"etag\" : \"sit\",\n  \"version\" : 924048206\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05e81b13-e8b0-40b8-81a8-29b9fd44edea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.296288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "d70b76e7-ce88-4b35-9dd2-de926c1d118d",
    "name" : "Gets the access control policy for a database or backup resource. Returns an emp...",
    "request" : {
      "urlPath" : "/v1/hr91qwnsemiu7ps:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"b44ycmew0bfjj4atjt87lm1zl\",\n      \"description\" : \"Et ad corporis voluptas quia tempora mollitia nesciunt. Recusandae eum quis quisquam. Ut tempore id et ratione. Sint unde amet odit qui ut. Impedit non sequi non nobis distinctio beatae velit.\",\n      \"location\" : \"ve1f8d8qet43f8ten605mubhtfzs1cgr8oxbcog4q7\",\n      \"title\" : \"Nesciunt eligendi dicta velit autem sint consequatur incidunt.\"\n    },\n    \"role\" : \"kijp1esu14dt5nxw1c3x3g2stublrjkml89pnvmej3jhp2pn6oucuacsvt3uwa47wb3bk39cbnbof5ecmmc3x5tfarn55640vmpwa25ep8s7c0eb63krr98m5gm1iogeb9gop8l2\",\n    \"members\" : [ \"ls1cyuz2jayt\", \"9u9qfa0eke8d5u7xwia14t7b4bjfubqn0d84xks26w8ch2k38hwl7hpqof0vrx6n6sgnjw2igvo2dy8ztdftge4shmucvszbijyto77vyrpglm8cuc95e8jdk857l922lyl9vg\", \"emal0l9zwa5s8aq7yzjvubfp5bw3i8bnalxuviiwdpja40bg3jwxmjh0w8sp70lhgah606dvmj0pkf00zah5iuz8bu1pavwvc076cre89uykb6r6ws1ermowjtngvckbrg6qjolwn8f8efhh1egxgoa05jkat19sz9y2okuphhyoclxm6bqyiwj4vnuew\", \"ptjl\", \"v84mlxpt8vylrt1netclkhru5io72bld152p6e6jtdkbbp7tyxan88zlsh2ut36its20ycdbols8e\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"1hy0tcucby45ry41lheibyon2zz4meg9kil245mtbmi89svlgtr1ndc9u77acmkf9mu41bbmczj9f32fp6cu66i6tdy7ux8i3ms6ss3sxk7nsan34ho7ilueuarb2vrwr4wll1s7qhxjrn1djhdip5wuhl0zarh7\",\n      \"description\" : \"Delectus a ullam rem. Praesentium quia quia. Architecto magni officia aperiam repellendus et maiores.\",\n      \"location\" : \"wsp696d7cw5gvj1ut140ppx5ilcayueja2mmvddh4x9mdtxgvg9k6owq\",\n      \"title\" : \"Omnis totam accusamus nostrum.\"\n    },\n    \"role\" : \"1sxq8rrl3cw65kk4f9ajhz6eniwciepahmac7dns64wqqy0npxznn3ap7v3t1jaqm81nygbg8h0y5q8fafx9oagqccvpj4301295t94w9n6rcsq5k3idrkxa5hpsdkrm59wvcyhlwjnwg4hgoub\",\n    \"members\" : [ \"udwiev0lrr2sw6g9h8dbwhizh0c8z6y1cehrf5s9xd5rzvthq67ld87lwny8h0z0pgwd11a97mnf4f14kiewpi3apiyzzs8sl03s4vlgdlim43w\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"fdu6icq9vh88oriu8y0ea0rhc720uhautylbxvic3cnqzbjk\",\n      \"description\" : \"Voluptate tempora ipsam enim laboriosam praesentium deleniti. In et rerum consequatur accusantium. Sed quia aut eius. Dolorem quos animi autem.\",\n      \"location\" : \"dpc0ot\",\n      \"title\" : \"Aut eum voluptatem beatae eveniet.\"\n    },\n    \"role\" : \"0hgaf1y8f7299uoq153f60itjbz4esuhi3kc6vznt0ng5xzaag2gowemtjnxhs8948blnibbo9qvv7yoqj9u47iumgnv4owir7apgy0d89g6zybkovjx79qnykzf60lf2tssi34x54w5x8gvk49ppfqaxdw2pp6spe6uhy\",\n    \"members\" : [ \"0md8ecvxohx1pacc660yapteu2j8v4op5px1if47drlp9lv2dqb5mm0xvix3p9c9hjbgzjb0litcrx1ppf2pgxe4eo\", \"94ese279ka1r9q00hx5u885kjhfu1ezg1b2aykyfllu8svvp8kqvq8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"f4mys3sslwco66n8vhjkhaujvw3tu8xl5w3tl5t81j24yk\",\n      \"description\" : \"Et incidunt qui quia quis et consectetur distinctio. Qui est ipsam. Eaque aut et veritatis optio doloribus aut nihil.\",\n      \"location\" : \"nqgmgrgvb36vugbrfpax84r306t5v7yxi7ou1adwytlvehdvkm49qg191mq\",\n      \"title\" : \"Totam aut dignissimos architecto doloremque qui error.\"\n    },\n    \"role\" : \"2hzvu1qp18bv6hzpuz19wbsrx9nmjvcmug82xw8wch0vuqg1ec09n3i4svr1vwjy2riscucvyg9ey396y639qw97bzdx8yf6reyz6farkvwoanaaqzpl7p3d5yzmo1d2008hid20ibeu6mp3\",\n    \"members\" : [ \"bseuly2hbxblyiwkvs4oxknlry1t5rpv9zyls8aljavi7vg0x7k2bwi55zpt4fq79fwul04sgtz6wui0ix1q9r7kjoidsiy4049c9gndvln8ln2jawqrgl430cdyzlz6kkg4o0j4kqic\", \"zfiup7t5lbu9s5gkb6292dpygsukdrd4vpogadgynih28cpkbknowkaqkj62oyr8jf6uthce5mgfvpdhfzmpdd7va0p3fdmbehfiecqawbss0zoqt1unes8zylftnotsnznew8uajowas7l1os4inuc8c1zfkuu00lzagxkplz5suhq4oiqvje1vh05e10rngj6xaegp\", \"a9lvr3sziobwxrxxi5wkduf58fa9im5tl5\", \"hztxuejr2bjzgkz589jw7cknne2ei1j6lxu2kc3rr9w7dgxi2dcl87ncrpov6po6u85f1ilh727rdtt1c8tze1ld5pyjrg171wxgpr1yflxctv81yvh3dw4ejdlqy5mtee20fpmsle9p4etzvdgdzh2j6pjzjy102eww7ymh7acn\" ]\n  } ],\n  \"etag\" : \"eaque\",\n  \"version\" : 361501629\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d70b76e7-ce88-4b35-9dd2-de926c1d118d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.295759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "e751094c-90a8-4747-b401-8790465d8572",
    "name" : "Creates an instance and begins preparing it to begin serving. The returned long-...",
    "request" : {
      "urlPath" : "/v1/m3cjoumh7d63h4407oxqbvqlwu02inte02g3ocr7wkmw4ypohdy06h1ceyhsswvu7kvdafo95idsuuqdunw49hh7x7k0boororeyeywks7lwso7lcmwcwhe056l5opsrm5vmp3b8x0131kqidgk4v7t0ahwzi4ujbln8i83harkah1sam65wz/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mac Leffler MD\",\n  \"error\" : {\n    \"code\" : 1548644246,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Aut magni suscipit rem deleniti minima. Consectetur quia sapiente consequuntur explicabo eligendi quas. Assumenda nisi saepe facere ipsum molestiae quis quis. Ea nisi nesciunt reprehenderit neque quae\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e751094c-90a8-4747-b401-8790465d8572",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.295102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "55da61fe-cae6-4715-9c83-df9731f5d091",
    "name" : "Lists all instances in the given project.",
    "request" : {
      "urlPath" : "/v1/gc3vsrrngklhuqipyygheap1dqceiemcn8nae0ojhiovy7z364nqyc7g08f9k214jo9itb07zo4s/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"b99n6\", \"gdvh48bvi2gd396npj0v1xc3axwoyirkamy4a4d7c0u7hou568k5s281bl479h1e7oggbf4gorteznk138ddrsr1x02hf\", \"p1fux7lzy6f4bf480nccwp47gpoa5i3yd82puqbjcyg12npbha7klu74hefti0cznbepwi4qtg8yztjfuz93mvs6syztfbka\", \"2odh3ejyna6q4vqik5w875\", \"kz9k5rwtv2i67ia\", \"xeujth3lbx9jxacjfrj3ec3lfbp3nu9nhnum9uje70zeb98qsfxziujozpgwrzwwd37iai83rynq7di\", \"7xh511m38xgcpaovaaskuz9chno06jvo5g0o544wje291ux5v8sro5yl5n386l66\" ],\n  \"instances\" : [ {\n    \"endpointUris\" : [ \"6mn7z\", \"2g58y8p3i5kiiz3os8vs16ua6yorc7f7csg1vsy654d0hmiiph6k01t9f60tcueaibszd8c21qdff3e2kvc4zv2zut0\", \"gpfewg7v7rqs31xxoqeh82ahsc3wos67t\", \"5mami0mifwmbn2m1wd2ppmd1ez38c\", \"qakq7cl67154amixq5rk3ez3zmdz2c75nuyupv4t3xhwr7kx7m26c5d5bp2e6ylns5ir3byyzlx5khuhk4ljb2rz8exa55pvkq10wkif7wvjxxwe\", \"tq72n7b2h86p98lqax2cxcsq7b30qgp49s1clpftmwhkrn9tvqmx9qh6nbm7fs5ajdd5b4ac1uu45sauz1jw2o5t7fuhzbsf2zeiddjbr9e1o3s8b3esygfi86f\", \"c322xpdck7eo2wlp55vi6bcq4mzobdnmeb44ier5nh3ddi01l2yv8z36t1mzzw37l6d2hofcs48v3nzchwt39quuzme5sdyqdgw8yl7ensxy0fe6jkpsnt3mtlcauu65njeigweq1wpy4zxgxiyfodpj7n46c15mada75lk49dtuvegy6lbwo0v4i0990l\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-11-20T08:17:30.294217Z\",\n      \"upgradeTime\" : \"2023-01-30T05:58:30.294252Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 2042971657,\n    \"createTime\" : \"2022-07-14T07:22:30.294304Z\",\n    \"displayName\" : \"Cedrick Hoeger\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Kayce Bode Sr.\",\n    \"nodeCount\" : 950112491,\n    \"updateTime\" : \"2022-08-12T05:31:30.294445Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"eph6b4elx809twv4z3bkp5b\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"z2ywonz5q1jtjhclbelaebfo\", \"ucn1xb65abf0spu572jdgp76lxvscm53s2spcir2tj6ymbsirhbzxuecl10jhmprm6qtxbcunoulol8ijdkycbziz3s\", \"1k42545hna2fk3yskxspcbk826og3\", \"bqgxznomk1nycund1ya77j1ph7hr6f944vj03yjo9gp523zrwv3l1uwnkd\", \"sct4jtre03n\", \"ct0k548n3rxfn4fnohnt17kmxing256frsgzdlbeo5ctfcs653xywqfk8d9be9bkjid8kn08b6lyjp0m2qmjv8lc4z6er69rd3bx83xjhs8hupdme29yyqjqd6jmg38l4viwv84l5u0argpz53k92jc16f85r\", \"g1pgqk\", \"mkay7cmaeh7gp0vo6axbn8nx3l00u7nha2aeeidw4wjqj88jd2uytj94psho3bqr5qktx4z1y1i8llfdwqem4dfrwcbmqu3ml2zs5qiffs7jybxjbl95o84nv8orugw6k1ovpf74amvvbuyzerkpweaqwwe2wdewdophv5pztek\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-05-29T09:08:30.294554Z\",\n      \"upgradeTime\" : \"2022-10-26T07:59:30.294583Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 127959797,\n    \"createTime\" : \"2023-03-21T05:46:30.294629Z\",\n    \"displayName\" : \"Isreal O'Keefe\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Lauren Fritsch\",\n    \"nodeCount\" : 336640764,\n    \"updateTime\" : \"2022-07-24T09:10:30.29475Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"42n21rxrdwd115qwroiumctbateysuf\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"y57vh7ffuev94j4pq2od4uhrd6f18vzp7fs5lgcov79cgxtjjw7ief7l9zus3ms8ddfuaetp3ptvxh7lv83cavwlln26qckf1w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55da61fe-cae6-4715-9c83-df9731f5d091",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.294883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.list",
          "schema" : {
            "description" : "The response for ListInstances.",
            "properties" : {
              "instances" : {
                "description" : "The list of requested instances.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstances call to fetch more of the matching instances.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "The list of unreachable instances. It includes the names of instances whose metadata could not be retrieved within instance_deadline.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "ceb63cbe-49de-41f1-b261-315902ffb59a",
    "name" : "Creates an instance config and begins preparing it to be used. The returned long...",
    "request" : {
      "urlPath" : "/v1/n3yog0ws7o8jm1khz1hfv5y973n34djpljcwonr9a9yduvjb4xwkn1r1zt1w1dmy7k5t0jbxuht/instanceConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Shirley Swift\",\n  \"error\" : {\n    \"code\" : 1813199255,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et quam velit quaerat voluptatum rerum. Vitae maxime est laboriosam ea. Occaecati quae mollitia vel rerum libero.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ceb63cbe-49de-41f1-b261-315902ffb59a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.294065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "cccb5d00-d56e-451b-8f7f-2c3a693f5cc3",
    "name" : "Lists the supported instance configurations for a given project.",
    "request" : {
      "urlPath" : "/v1/qofhfip51jbjvcw5l5d1t2ulfx8jkf8dvu66f/instanceConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"q3jaipkvf89pl90fubab\",\n  \"instanceConfigs\" : [ {\n    \"freeInstanceAvailability\" : \"QUOTA_EXCEEDED\",\n    \"displayName\" : \"Karole Miller\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"ng6ush0njea3asxtb0s0jaju0nzfd4jfpnn1v28fcmrbyvk5u5pce0rry55k084v\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"nn20ueixmis5tskdhvr7i879kym1hrs0z1e034byppqqcjroepr3p5c795ivu8j27clhly1qyndz537lqbylj1vub0op8th5oin1cdehgcoak5sndhiphvclzc6pqliqp9qqhc8uokpuxgzo6rc7lc7\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"77erwdla4az6fyj9a3fwujg82rhm427xt1ukujcws83fk2x3pliq\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"u7lry0xbakc6z88eo8pld7t8dbgrplwtxasymtigj4pfxi92qouzkd8r\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"f01ecquz4q3a4cq7ud51frsvcthbftdbh71dm91ddd2sn4yqjnbqogs8j405fr5qeigdzcc0rxhq6tclmch6q3co1ucnlh65566n7pd22ag20gcbgzrzdxrsirm6drn2rq7u5mnez9\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"c8dimdhesmarlc2pwo4xnfvqngpc53kdc3a50\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"gb1cxz6edfme0l5k1ud5i88h8257m6i0fryc88if06c02yv1hjjasbar90t18fpcl5242za2sg3j15xkqcr1fuh4s8s1p141ujzfwfmvzrr20bivo7p5sxgehqb4fonm10v64h\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"name\" : \"Woodrow Davis I\",\n    \"reconciling\" : true,\n    \"etag\" : \"dolor\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"99xba6oml2vvm6u2ykzjwfwz\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"wnrh19phjfcjd2qwvukyh0ny9xpylq7mteeu71wi23x7txmmgfsl9sjldnzjww1trabe0f2kjn12jmvx1p1qu3ljl5v6j9anjuk06hwz719tps87dfbqcxkcap9xk1xphf8onvhsirp7uwqiug6j52t4cucnmirndy376iix4o24yd08m26lztz3bgep6tzwi0d\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"jgwbthutv96h18m3rbdnpecjbr13pymaaseundlhy4630t131izdcprrf3fs5qsqqobkk7hwwd28xlzkpp98cbe78nrqnr41w6skd6cjhd8kyoclxv63jpew1naeg0kt8hd3m\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"yvzr5ya30dtp0k02hhx9qfcm2th11tcbck8mu2f14kz8n2r1lkg8a6r6eubgiqg53mfee1ch9pnprc0bx7nng93ajt2oxhezobffbuq2lm2wnalzn7icwhih3198zebela52bdz17\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"9e5yiix0x3ma46tkqpzgzbj7v1lhuktd2rfruaa5555xb3gtyewmzj1ngbee411lfxovgqgigcw8c9m6\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"99dpeg2gvw2mltji7og30ti0zqkqpecjd4lsih6q71ppzf5xgb1m92qzhtdn8rupl9tv6feyo9glunsvhbly5uw7zaobcjgdyw5mrlfme8h27hd1j26xdgsbn4jjgmov8lpliow0y5q8nzmf4ai27g7zwmwp8pgma8d9\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"GOOGLE_MANAGED\",\n    \"leaderOptions\" : [ \"sgl33chocqgk061ylvn2208u001t5q935dcygqe4mvvd3yy04jm2g23zsbxlddv3\", \"sh2en4k4nm027ebygl42lvfmlvtabb5j\", \"69em85pr2rnesqbo5akardhr69wc91guqiiwrl0c97n5uae0syffgb0m12cd0fcn5fmm90a7grp5kzeaf0xadrghlewguu7cfn6zzom3z379qolngrw788skzjzm51luz2asgpmqunjqsrlj5vyd0gxjvrcb3lfdi9ickduqsnzfrday\", \"3qfwkqmlkpvt0z046des2nrdprgaf0h260115mzy7c32kuc3etmvejnbbivw88c157pviir6cxvmelrfukb9e0wbcmnztzl7drw7tuazfc1svhmzfu031bt9xexpmdzfq00wtubwcq752twxsfc\" ],\n    \"baseConfig\" : \"ntf6b28s61pmiews91k6pq0wmtnoexaevs8tte3wi7vh0s9nvmmn5uyhm0ohkbg\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"QUOTA_EXCEEDED\",\n    \"displayName\" : \"Rocky Brekke DVM\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"oy63urhly5l4qc2gwp1nqqjo129tytbd3zdeesrl7po1ce3abbiykm1i8bavui21e29o0rydqrv1y3ox79rrvxt1fs4avpovcjnt8pl9xsh5fcg8w60xqqcycafo\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"wkqe8j0we9fmccinztofzf57cxx63gavzumqidpewr9ieg7dd2z3axk5i060f2t7uqzwj736zotkdxy1x2on3wmqjzuoi4lj7w5jdhmyifmph0vmi6b3m2k6eza8b08608v9uz76q\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"fwxnm5ga43p2uaqh2kcdrif8bojeizs79i665ql\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"6w01pei9o83lkcag9xghycegfz8o8nyrv2xqp87th24n286rol4mbif9ko5uef0bozcwsb9ns1w7ohjtte8ipznxd7tppnqg6hx0e2kncy7u2gridm8\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"2fy2dis24ow9v9vrka6a2grg1e1x6sphqgr0o8mr4mxdw0n4d9u\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"nt4v61n0jx1iw5vv7h9n7j8zny4jpmps\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"yicriywrb06uew62d3gvyyupqz5uqno2c4hvn3btst20dsur01lyx\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"name\" : \"Dr. Jesus Bogan\",\n    \"reconciling\" : true,\n    \"etag\" : \"aaaad\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"62i7ks8qfwz5b0rfyeyhi3vpjhmvtxconhtagp83vakh2l2afuqakgjixop6czagxmiz09ohxw8ci4mw09t3s2knktdy362wxp19wqke5k1ln7fhbp8gx5noaaihrm92dahcozwkfrycl2h8upi77oph1wv93o7srhalnu0432wm7gkykw3yssk9\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"qw8krs4ouw0zaixd5nxreut77qmfjy55vpdmlvbh21hzb1tytm0bpgr9hvmjk6g6\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"pacoc21oygj0y7xt6w75ogldaca2txvh2wg7scl67b706a96ltmktk184g5kf18ez4efoqf3kdthf0tbo2hxhu78h211v1oseb73clwnhbv7kzlc1flup3\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"1u157zu5eh7kcobvou64tnb8k7g4hw593efgyys03ihrnjso\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"bjy4twv0xjvwtcag8uoskp618yok8ks0qc93p8qtx0j1xh6khff8cn46vi0kh203irc4rchuvk3pwk2u65b0x7klnsm57jq1x4icj\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"state\" : \"READY\",\n    \"configType\" : \"USER_MANAGED\",\n    \"leaderOptions\" : [ \"npuuut5b03s3s115yv6a\", \"eeyq7sfv4b8bn387d9tkd9tz39y4iy61zpg62997gfnpovcjwv06z2o9wrbja\", \"ser36dw3ir8m6w1izj1phrto0sep2qb5z5vrhigka1yk8kujozrvfiaul6ujsfu4l00z7g801o13zbkzplzye19wve9vod9lquoqo0oxcm5eq1dxuodaf4sd80vmfwsv6yp5tid3nxbx11z3l4ts421ues4jgb65cu175mvom\", \"jn6uxpicnrrmj34p1dbvfozwzwahdkgjs9c36eb1f20jrcxqouplsq791k8h21iuq5bab554l10wi8m5trb7fisqfjnzn55t8gl15stfvg2si25yh\", \"giz4js7mu6ds63k5lcnlo2jszl4arnktdvrwxa5xuikvku2e2ofn4svc0uu501a6vs3dc6qyxuzbeo0qajzjwfd4ma6ne0d72tllel26vedzidee6zkpnew4gp8fi87ii1\", \"rs5qdy88it4rtmmqfsjazffy0hae74ib6v0qkm6d21qfco2xep03a3go77sybrozqz4pbbnxsm9tnhe0sdusv790mitoyrydj\" ],\n    \"baseConfig\" : \"k23l0qmo292pj2sj87v5qb4tfr06wosjaqsoz3223w7dn9n9h5evegqtts91yf5wvj\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"UNSUPPORTED\",\n    \"displayName\" : \"Mrs. Corey Kuhn\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"xia56szkkcoygyycbnlusg21g08c\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"6rxbf9r51m08aeh70hokp0mf7c1c9u7v62n6vmuibb9g5a2nzglias6zjqwkp14j0r85y1jzwmjci9370bjdt3ttn8es71u4z84t92nm0gifzibnacj9hyd0zeirwdhon3x848shyrxxd3qf6hd5wohr3oimsbt1x7lmzw0re61rs2sjet4l832oofn8vxjh0xd\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"sy7slvzqytabqouf377khtc3vgc5jxwqj6x9krzp\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"p7xfnnh7or8oz\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"p5dlul69m42ptdf03n5fowgdfw0ayhjx9x4mpmli81us1dt8l331t51b4ws0qb3az5ajljh4dfr2otp63hvxaqdxdz00qfrfxe9yb2l63bu02pqura54asby6tih2o381n0jysjn79ipqpqpf9yhtzpa7y8jz4blup8v7ld8\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Jaimee Gaylord\",\n    \"reconciling\" : true,\n    \"etag\" : \"non\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"qq5j1smlqr5a9ejdgynszo7y0wct60y4empmglyecfxei5421gxd8zq7p2\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"fx2obm5pb4hqu5d\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"82ph04vs3izpmp9p8uempxhyn6d2fvtqxej040xwpbm276u4tgyrzxz9ndxmwz70i021198jfmsiq8gaex5hdp3181tvm0x7plis4cmsx6zhbtm88xgauoklgkldga5c74k5l0gkvthov81hjblwjury1fm9ivrawfrse2p7tdh99dcdzd26vn8fg9uhh11e4g\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"pte13vrsqxwsu743zwjqmjcgpcfx5m1uk8dw7ydl9daw23ttomcykhppt01xeccx9udc8ut0jqeikde6henglwmyeb72yysgrsgptz47w7mm08jdyb3tsqgason29neo4ubo7b6pk20c1osinq3ple6pj\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"q40mwx40a8v0rez6fko2zvdx8hxbl2z7guix88do4wo7j1v3v57c8vsmnsjudwdofvok3jk2drf8v2f6joxdkqc142b6c5omt4iwweq914e7a8nkf09l63xw9ajavpi5cd55cy71w5jhazyhrrbduqvnvydppsooxefo9x23icdozsmkiz77gwxld4z1\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"pw985pi63ryyh8fz8h4gdqs1ddetj9twoc4qyadnu0bmxpj4qq0a20j8x7iupir4hem9k2dhww0s2t5wce5nbeduii1yjxyxp9jx0fqgq\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"b8gdjfd0r8e39zyt5vwv9ph0cj4s94ra3tojrxdv2eg6ir24gnoqgfqdwlkdi1mvu4o8t53yckguczuk37uutzg4ejk5nocjbq9df0xiq1dax6fxnzncprqxdrkjolhi2ufdeim9z1g3z1c3rvugwvyjdxzcdof48s9puvek0o4pkchmv8cx2pjg\", \"mum09zndh024pm47uylygf3sjuayqeqap3riecuyohudvtykbkhlvlczx0gvu6xex7na9w48ztmcd7vpxnrsrc723v0t60iskablmvwsjt\", \"feote4zrph9y3snwvhn385i3atqwc8bk3xoxk9eplmszgadztg14rvcdbmx92fufsccb92vk8ksrbp80fkozpgyzhm4nnqsjkoc1wj7l6f60f\", \"koj85rulow5glqa2xca2pkgzrxnao42n7zy\", \"lx1yb74rg3xayuhg4mur53nqcv45r8q0ln3n6e4c914xqm6srtwddwyfcsebzwqivrdqw6jldj3n4sjpq3232cnyhbbm91x8v9xgcuygoz6sz84xoy6ha6tgbbtb9dqj9x5oung3uzl9smiz2oykr7dmiwd9txdx\", \"00r7fidvzdsdafjsdqbzgllsh3divrv8axsvundsogs7o4xc02lcxmd3delhmv74v6v5ttez88t5g8scn4jg4szcbn2y05i1q1pe5ijyz4s5\", \"qht6mg80ebogllffyvtsfx55ehayeivybc6b40d1ltl3jamrwfpvdeawqy4ew07ii5btjpm7454ta14riikp5iy15j1u5gz9p4kt9h5hr9g1q989ed9gqo4px16og0nnbgi\" ],\n    \"baseConfig\" : \"5l6hctkkjfvxb623ho7bqyd3dc9qj0t01fwn77yhoprwfuex5yg4c9ngwxj1tioa2xui1ws6jqf8gbwkrsb04lsn0o\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"FREE_INSTANCE_AVAILABILITY_UNSPECIFIED\",\n    \"displayName\" : \"Miss Dedra King\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"2fi3wsdiq1hr6\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"ynyq80p86jt3drb55aukr1ui7cgipn2z8wkqi6ez4fke5dly9ng7laju50953yeuzdf00vbhr4uci9rkcdd2f9gfve71rzwbiijytp7rshdrap62t117j7gucrt\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"eh0a3fy1qlktu4m7e677l9q8lwe45gkzq0v86zjit63hz3sbm83el9eob4tyjg4fhqeo5k8qrf\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"name\" : \"Matthew Stanton\",\n    \"reconciling\" : false,\n    \"etag\" : \"tenetur\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"rlzxm4dc8z\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"xy5ja0ikzuy8999ylibvyamuopdu93fnbrf5t86b3kn4ljg8zaqpj3yxc2f0rd80mgz5o7wao1oyqvrvoukff2c1k4m86iunquh7iud1ksz3az1480nhe61g8p2foa1duet9wop\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"0ztxqt1cuvx1v7viabq0scnycradkphfs34abr1l8aqn13uo2yhociwr4exfkyn9li6js7bzr686nzfgdqszey8z866k6qpgrbo8o33ic5lpuv0hb7p3hzglbxh3ibk524t5rikpzbnq9buwngbi1dk2jtyedck6mbd2a57lw6t8tcgk3eunz1vae3dsiasfqtw\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"GOOGLE_MANAGED\",\n    \"leaderOptions\" : [ \"8qktohanpuepy3k9z7zg4g7qiap226gbflllfhifl\", \"zf84kr16mtp66jl1nu5m69tpmflxzl9jsfqk284hclxthz39dp21wkxkrq304m2033on49i2douqh3wsp\", \"520sdqgk11sp7th0sci3zcsndt3jlj1wtxeu72rm\", \"wq2jl4n963zwupz9g8jnu34y99cjq3qtr5ubw1ruar76qlkejngwhozmh854udr0a6c4ne5eij6h23lgz785hbyg7i0ewo5l8twxp8zqrmdxje59vf1gutrfuwbqkmxs5b3nr0rlbpfs88yfp4qit24escgzvs\" ],\n    \"baseConfig\" : \"lyh1iiig92hxrx83h9e5xawzfm4w45na6akhu9sq3hjtoap6irogohusw8rsb0fpwcq8tvkdbrs6qn026ywtgagxoo0bkt346hokccio9i1c\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cccb5d00-d56e-451b-8f7f-2c3a693f5cc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.293839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigs.",
            "properties" : {
              "instanceConfigs" : {
                "description" : "The list of requested instance configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/InstanceConfig"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigs call to fetch more of the matching instance configurations.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "267db208-7d41-409b-9551-11e3b4898ac0",
    "name" : "Lists the user-managed instance config long-running operations in the given proj...",
    "request" : {
      "urlPath" : "/v1/tb6739cvu7ex90qwphzjhe/instanceConfigOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Aaron Hermann\",\n    \"error\" : {\n      \"code\" : 1337980109,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Quis ut molestias ea consectetur. Et aut quis voluptatem molestias quaerat et autem. Et sint qui quis laboriosam quia debitis vitae. Explicabo enim magni velit. Velit tempora distinctio aliquid.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Augustus Wiza\",\n    \"error\" : {\n      \"code\" : 155935292,\n      \"details\" : [ { } ],\n      \"message\" : \"Repellendus minus qui necessitatibus voluptas et ut. Accusantium est quod ut ex modi. Consectetur sapiente deleniti deserunt reprehenderit neque perferendis. Rerum et quas aliquam nobis aut.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"gpak32qmjkto7k2tidcf4doeahc79s2e5l7w8ul0tlh94yfhxnkdlheiu6q42peieubhub6atskvzeo2i8pf6ucbis2dksthpkhgtu78y6e1pd94nkxcpej6qu3rehgbgzpsim5ym1nkt6cbmoxkky68q9my5aebdszy0hvrj7vqfrcjoe2gul\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "267db208-7d41-409b-9551-11e3b4898ac0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.291834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigOperations.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching instance config long-running operations. Each operation's name will be prefixed by the instance config's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "37a7ef13-5c08-4cb5-a418-2df366319c47",
    "name" : "Create a new database by restoring from a completed backup. The new database mus...",
    "request" : {
      "urlPath" : "/v1/ffpovr7k8k89tr7z4nxu2peq1suypejj8cwm0444zwn7nmufojrzdt353ubkyeepblhyrqqc1cvnbcjs30r29rfmm50abuyy487no69vh8ahi/databases:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Chase Zemlak\",\n  \"error\" : {\n    \"code\" : 1883950290,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Minima vel rem laudantium voluptatem id voluptatum exercitationem. Nemo minima architecto quam id voluptas animi. Corrupti quasi provident dolorem labore voluptate. Eius id porro expedita natus tenetu\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37a7ef13-5c08-4cb5-a418-2df366319c47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.291517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.restore",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "372938b3-9636-4631-bde8-912312a818b1",
    "name" : "Creates a new Cloud Spanner database and starts to prepare it for serving. The r...",
    "request" : {
      "urlPath" : "/v1/m6kgv8gjktl/databases",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Leroy Robel\",\n  \"error\" : {\n    \"code\" : 1084499375,\n    \"details\" : [ { } ],\n    \"message\" : \"Iste eum sint non et. Iure deserunt eligendi officiis id fugit et animi. Tempore perspiciatis laboriosam esse expedita autem eius soluta.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "372938b3-9636-4631-bde8-912312a818b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.29132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "e0629797-f505-4e6c-a7f9-fa63a45843b3",
    "name" : "Lists Cloud Spanner databases.",
    "request" : {
      "urlPath" : "/v1/kpsmqtmset7nlccoipyry/databases",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"databases\" : [ {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Malissa Swaniawski\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 342883852,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Suscipit cupiditate quia sequi. Laboriosam quidem harum. Sunt facere dolore expedita odit quo velit.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"woyirp6mhr9cm105k4ozm2z3h762jp0qmcjqt4f46cpv0fzdh8ih5e1uamcebjxefd3kqq95j2igexud37ajpz6bwxkdczwoi7nqy7i63y3n83rutsnf1a5hjfzg0xb5rxm1swvqv8dbqehrit9ej9lcw1xbl1t0\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1361130588,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Recusandae consequatur odio nam voluptatem quibusdam. Labore corporis voluptas nam eos asperiores quod quam. Deleniti aut non id harum at distinctio numquam. Sint in maiores aut quia non. Ducimus volu\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"2gtqwccu0nrmon7m6eio1zkitgacy5kz1r8rxz9vk7q87wghuluelgrrffz9g3zcut7g6oymhbaduririud27ystjhfoc12nyev8tjtn93a3puyzv59rq60edsdu74wihqersn7dinwece0r8sgu673nk2vmcoarut9yuxra63b18m3p30lurv80i64co\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 479391104,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ea optio officia enim aut ab sunt. Porro quasi aut consectetur cupiditate ea vero. Rerum rerum eveniet facere enim sunt. Quas numquam veritatis.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"kr9j4zpy3e8ee24fyk87c67kgfp7lzd6gzfrvhon1hrfsu1e64b2ssm2ofojrpgqhcew2p7np21e3n01pkw7q3arxweawsvf34rncj58gvao6ifq7opsy6vsy15j7t85my5yaw7icvgnih4esdecvevu3k9b9gp4yu9gk\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 588221547,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Recusandae veniam maxime praesentium. Reprehenderit ullam voluptatibus est quia dicta explicabo doloremque. Vel commodi distinctio illum dignissimos. Repellat omnis odio quo architecto error deleniti.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"ob85mlfvlhrfxoifboc9t6fvu9c00ookluc4zoom7jwszo1b5yfjj44qascooghih767jcbvx8waiig270aljgif89amewjwob37nhyofxcv59227btsovhlcbhpb4\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 2049903695,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Soluta iure cumque cumque aut distinctio aperiam architecto. Vero totam nemo quo eius. Alias totam aspernatur quam voluptas impedit. Qui dolor vitae magni amet consectetur non. Ex saepe sit voluptatem\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"50nnu2va0dxrgokfmn6ozfvtw7vlrvpvqcv46bfq38li1l0ysnz2tts84gr2ukm085ivvs2modnbw6j6of4jeuu9fppgiqko7jy0dxvevb93pouzv9hfaoc1fmknqw0mzzdl1xfd7ka1tyghhvizqby6uwjmi09s4zp\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 311900084,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Velit odio sint et facere qui animi ullam. Omnis cum ducimus vel expedita. Sint tenetur nihil aut. Accusantium corporis ut eveniet sit at. Laboriosam voluptatem molestias sed fugiat molestias ullam re\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"38m1nylsnd96icb37dajbg5fgph\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 13957744,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quisquam commodi saepe deserunt. Incidunt similique consequatur labore amet rem qui sint. Quasi sunt consequatur.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"5yzrjro7st35nim59q0gt3si1n967pbxcbvo6qwbsf2o9z87izvgmuxa6jovuvaqxwmw0xat6ran58i99u31q\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 2072431692,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Odio quibusdam illum aut. Voluptatem neque quia fugiat. Eum neque cupiditate necessitatibus et et minus adipisci. Officia nihil voluptatem minima voluptatem accusantium aut et.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"ngh5u5sc1s78qz6tbqtr516ab8szka1wwk18lfb6m9y2hp1qi9z6ce7e07zqtcswraedo4yy8ciu50plxoo6okx6hfqso4mseep46fl3a6qkth6k2m9cquxp7tanbt35305jt9oe1ffpvjo1r5q255sll3b2kvfnpdagyaf3mof04ze1nwenqcccfeg6zj56kb\"\n    } ],\n    \"versionRetentionPeriod\" : \"covdg8c62apx1741mwwgjq8jze750rdhh89ourihxw1f78mpsp7ewb307p67fee35kmy6j7wh2llzm06r00goiiy08wv69pzogjn4r57deisfmkb7eaxo0d2c5l92j0m3g3ffvmlafb2cbvh9t9uc870ie39zwvswceqo0wv2oslt2povrmlz\",\n    \"createTime\" : \"2022-08-17T06:55:30.290105Z\",\n    \"earliestVersionTime\" : \"2022-12-16T05:35:30.290137Z\",\n    \"defaultLeader\" : \"zuekr1k4f2waa61tscb91839qqll3addygb5k3c11nv0af00kfs4sjqbfs\",\n    \"name\" : \"Marquitta Legros DVM\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"ujr3jinggb8u6ebvbo7c372ga93crj3hb59q0f6hqu9f5kw\",\n        \"createTime\" : \"2022-09-17T05:33:30.290271Z\",\n        \"sourceDatabase\" : \"kjxuei8h2hkz6vhseh78u1ymclsnc8a2sqt7tdnlpsu55ol5vpq1svx1b8ireviljpfskzrs3g8psqyqkde0c\",\n        \"versionTime\" : \"2022-11-27T08:51:30.290325Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Miss Madalyn Padberg\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1765261524,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Architecto nulla repudiandae perferendis doloribus sequi. Eum a et. Necessitatibus distinctio esse saepe cum. Quasi nisi aliquam quaerat maiores possimus.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"n4un73g9dubh5u8yom4f98l6tvajfb9seeh8bfnh7habhp2oy98b6bkxuyfbbfdy33ahxtd9kgxy3gkpv27qal110vpih9aqlg59cxl63\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1461650628,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aliquid qui iste. Dolore voluptates laudantium alias est sit consequatur. Dolor qui ad dolorum doloremque. Accusantium earum minima.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"lz2mamejhvj69vna3fa74vejuwnggidb0l3u5tk6x8rcn\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1475974092,\n        \"details\" : [ { } ],\n        \"message\" : \"Sit in rerum est pariatur. Molestiae nihil consectetur sint sed explicabo in. Sapiente vel magnam ullam occaecati quas quisquam. Voluptatem sint minima reprehenderit.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"zhi00wjgy102c4b8v9v5joj4u2yqtzd6i1li7d6w1it\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 6904183,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Est dolores sapiente ipsam rerum fuga aut delectus. Vel provident magni ipsam eveniet ut. Est nihil quam vitae laborum fugiat architecto ab.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"p5pbd2nbx6itlrjf9ipasd9kkk38vnd12sjkmgxi\"\n    } ],\n    \"versionRetentionPeriod\" : \"kkki841jrrsy0tejbx7o5jyn5lp9he7kuo4uhy2l3eyngmb7p6bvri2141u19ol5yni42ezoa1bvyq0ya7z18h574mvdww2q2bazfdwy3m99vq6vvj32i4lhzohayaip0xabbvtte6vxyi1bjge3exsrvwyne1lc35p9cz963ie81ldfupw2f5gwnw1ot\",\n    \"createTime\" : \"2022-09-09T07:14:30.290761Z\",\n    \"earliestVersionTime\" : \"2023-03-09T08:20:30.290789Z\",\n    \"defaultLeader\" : \"btbiksqta1cpxzq0pabvl\",\n    \"name\" : \"Lula Kunze\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"475ym2oncyeu6q144ojngcfqxkm9l4hz8fuu51hy8pmrd3w3j68muck4oq7e7z7n8yn2r4ndbkuw1p6gxiij1l983zreaxqyxvj6kdbgsrefxfrumr1fmox4y5gc496krcmuhm90maiqqueuu0p0bct9h5\",\n        \"createTime\" : \"2022-06-19T05:42:30.290902Z\",\n        \"sourceDatabase\" : \"rjafwjo323djhx804mw82euyoln1w63z1rm3582z4pdbmbbgc79xky20zxjq8cbh8jszpkxb5s5cnm56v1ehfbacmnhnfpb6wtt74ge4fapxk1dsl8oa7ydz5uljg7dohdubnvpe74e\",\n        \"versionTime\" : \"2022-07-18T07:35:30.29095Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"READY_OPTIMIZING\"\n  } ],\n  \"nextPageToken\" : \"b8ddpeyg73ubacaegt7tmg5fd0dvyplejyatr5dm6j2l52vwgj24o1zdzidh4azt4ybgmmvs0a8ki0c8cab98s3o6k1iy6c2sc5f1n9ehgr81t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0629797-f505-4e6c-a7f9-fa63a45843b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.291098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.list",
          "schema" : {
            "description" : "The response for ListDatabases.",
            "properties" : {
              "databases" : {
                "description" : "Databases that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Database"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "092b1909-d7a3-486c-91c1-7d24b5e4552f",
    "name" : "Lists Cloud Spanner database roles.",
    "request" : {
      "urlPath" : "/v1/yawb1kj5otn39m8zrkrwd0ed8rmu7z2xa41ub248ucg7qg86dl4x126t2dk1aonxzhjb4dhthyieoa91asojnzvi0hry79bsxiaboklaq22lmd5kigjqf9q0m8/databaseRoles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"9mq2bejhbhmkwpnt0ju82y5virhc1iwtobl6o67w4twx9nztfl50rloeo3uwt64r1f4rdaf3gmbtiakenhhfcuidnnbgboc0spvxk1udg1yum53fv1b5mklzzyibn16ep3lgijay3tmxrjy8v7b6l325157rdfz3p27wvwa75nejn2r68vc\",\n  \"databaseRoles\" : [ {\n    \"name\" : \"Valarie Shanahan IV\"\n  }, {\n    \"name\" : \"Lucinda Goldner\"\n  }, {\n    \"name\" : \"Barry Considine\"\n  }, {\n    \"name\" : \"Tammera Barton\"\n  }, {\n    \"name\" : \"Rueben Ryan\"\n  }, {\n    \"name\" : \"Alexandria Grimes DDS\"\n  }, {\n    \"name\" : \"Bradford Ryan\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "092b1909-d7a3-486c-91c1-7d24b5e4552f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.289296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.list",
          "schema" : {
            "description" : "The response for ListDatabaseRoles.",
            "properties" : {
              "databaseRoles" : {
                "description" : "Database roles that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseRole"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseRoles call to fetch more of the matching roles.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "a08aa1d1-4125-434f-aaf9-190a4f078336",
    "name" : "Lists database longrunning-operations. A database operation has a name of the fo...",
    "request" : {
      "urlPath" : "/v1/vnwt2l5b6cufs0ow6mykk0jq5h7oozbsj13t6esnik7nyitsgde89dty3o63szjfryxm3b2of31hhhe0czky2nhz0fg8s/databaseOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Dante Rohan\",\n    \"error\" : {\n      \"code\" : 2091705437,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Laborum assumenda sint soluta ut. Pariatur molestias aspernatur molestias numquam sunt illum ea. Vero et temporibus dignissimos perspiciatis rem sint at. Eaque iure eius a a.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Cyril Hammes\",\n    \"error\" : {\n      \"code\" : 757071775,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Reprehenderit in aut. Explicabo ab voluptas rerum quas nulla minima voluptas. Possimus a illum sunt veniam.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dinorah Ziemann\",\n    \"error\" : {\n      \"code\" : 305546064,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Iure nihil quis molestiae molestias praesentium placeat. Et ducimus iste labore consectetur sed molestias quia. Saepe ea nemo. Distinctio ut deserunt qui hic. Quaerat et dolores totam qui eos.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Efren Langosh V\",\n    \"error\" : {\n      \"code\" : 791194357,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Accusantium saepe dolores cumque sint placeat nisi. Deserunt velit placeat. Excepturi libero architecto vitae nisi quae rem distinctio.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"lktd0k35270dtac0am9uox3lbfbzv7zdjtuq6gnnugvfsq5qnxegcenrw0z6699os9mxdz3ucz0wwglnpva0jln8xx9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a08aa1d1-4125-434f-aaf9-190a4f078336",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.288883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databaseOperations.list",
          "schema" : {
            "description" : "The response for ListDatabaseOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching database long-running operations. Each operation's name will be prefixed by the database's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "815b4654-7f29-4338-ba97-d8afea499573",
    "name" : "Starts copying a Cloud Spanner Backup. The returned backup long-running operatio...",
    "request" : {
      "urlPath" : "/v1/ou9o6upwvwqbndjv2bnlffz1npgcn3qa2i2kqd1yfsv71kgdkod5rsmpl3rg94x3gulwl58lwde00thqrhtj1w2falqbdqhru4392zu4i5u6qhe0pdfbrwbk6vot694swratyarkx67hcvyotvs1ys9oi5xzhwcs6iuqgfzduyx6/backups:copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Erasmo Turner\",\n  \"error\" : {\n    \"code\" : 818322244,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Rem aut vel laborum officia veritatis dolorum dolores. Quia incidunt blanditiis. Aliquid tenetur sed veniam sit.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "815b4654-7f29-4338-ba97-d8afea499573",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.288365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.copy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "9b1c4d9c-aad5-4026-8e32-6a81f16543a7",
    "name" : "Starts creating a new Cloud Spanner Backup. The returned backup long-running ope...",
    "request" : {
      "urlPath" : "/v1/c9pedx17ty4d9a7p27er08veuj89yxk6tvyac0xcskwr8jamtxmrqeq8el2ezmpx01vq3f5op3p4zaqw4jhblrzb5m0pd/backups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Nathanial Dach\",\n  \"error\" : {\n    \"code\" : 523591493,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Soluta mollitia autem asperiores quia quia qui. Voluptas et ducimus maiores ea quae nihil quis. Consequatur quisquam voluptates at commodi eum rerum nesciunt. Labore eum unde quia quaerat pariatur cum\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b1c4d9c-aad5-4026-8e32-6a81f16543a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.288184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "e907943d-f395-4993-a26a-a09a0b43da51",
    "name" : "Lists completed and pending backups. Backups returned are ordered by `create_tim...",
    "request" : {
      "urlPath" : "/v1/jo3ft0dpg9tge1pumicnk9n6kn25omyzvt8kg2zkode0dueo5kgebt8mpxt1lmnzy6rzss3t7ew7q0kbg7sq95jejdaxnn412txgc9vlmrhml7tl37hadgdzqfvbk4l8pve41q0sv7l8iqv/backups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"fkd2lv8y6l2vulj30v784o43ixy5ruwg5cuzruhov52isvun90h2v8vu7ostf7swq5egg52lg3y7jh2ziy18ji4fxyx8wbg2lzav82nihr8ed8nwwoysf8ylkh43wdv7mtdm\",\n  \"backups\" : [ {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 437597312,\n        \"details\" : [ { } ],\n        \"message\" : \"Dolor iusto aliquid ab. Architecto ab cumque. Quo iste natus et. Et aut et cupiditate harum dolor qui quos.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"ofpz7ceg7bfnb1qz6d4qmx67e4dx3qq8mus8rh3w5wu6mcmaouzo\"\n    },\n    \"database\" : \"wkuv1gz2syjm8v4hd1zyo9u6ytuji9vig3ty7unl1onoifyyvqiuypypsmwje4zzxyp2t6o1gclnhxdg8x0l5h4quz4itzqvjyfd72p1n6fatix4divpr75ppyx74yd70y331cvtctc27gv1mj5n7s031m2sd1zqevsubi9ljuvk902rihzvh9uv5dhz2wc0yh0\",\n    \"expireTime\" : \"2022-06-21T08:59:30.286932Z\",\n    \"referencingBackups\" : [ \"g6ioopkth67veesul6katno3gi7s6eiqpf0h6hkame7o6tbppspgv1wpr1vgnhxw03l5udsldt349myqkmfqu9de4t1idd2q5p5fcv85vk8krced8wqps4s9h3t14f2\", \"hu0beomhfqjfzf0qmcgawkrzccgx6p2ib77nfw9ypflbbj3t4rohrcoqzl4jp\", \"zb1y1e7nkmymp6ulthlwrod9aafpdf5jr\", \"uy7sbjvso06g7x36ot040o5odu1qf73gbxvdbdol26jy1eewbf6awm2rc2nkroxllv9x7f08bjma37dc6dcvc0yq0glf5yfqojg5mjc02bo87r5wfge737oxjr3\", \"65vmox5lqm7l7iqqarda3m6wm1wl5rxjoihy4v445up19lkmrywftxedjdl7j87hhp4q0l6fwqmt94usx2xf5u3jc96ruimrdvwhm10q\" ],\n    \"createTime\" : \"2023-03-21T06:21:30.287002Z\",\n    \"referencingDatabases\" : [ \"3ivwiofdrcrxsccafntzd63p6d0o2povfjoywsn3y0arlq4oa67bh6aufnow7oag6t91zpzvoyw4jm11yoc7servhuoeg76vjwojos6eza8b8lymj9x4r4\", \"tw7dc64oy9ooveyqm9eatpbrnum5nycub7par37n5q79adu9eolhd9zoadxguktsy9e8lsnnp3y3lclit15e2j8gsphyihyh6pixizhcnvtu0jr07ir1oywqv74750hh7oub770xvspn8vjoc\", \"hohex261lenad5znr4btno32xmawbie8tdraqu0mrqhsk\" ],\n    \"versionTime\" : \"2022-12-22T07:15:30.287063Z\",\n    \"name\" : \"Dorene Johns\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"READY\",\n    \"maxExpireTime\" : \"2023-03-10T07:28:30.287161Z\",\n    \"sizeBytes\" : \"ktpuavs1nkf7g2kd5pcmo6ig1nf6rr62lvww4eksoyhplw4n7ex0vvrzv38yy1wvl0t6x2zp4gul7rdhyvj1snlkfsqr47kyovweyj9i8m6qq45aixtcemsi1z2zk5pwqkyaq96n9f6q50t1juz6a8jml3vennor3vt2qotilfhf0t4n1xxaj07m3d5d\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1394929372,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Earum in molestiae autem perspiciatis qui necessitatibus. Et accusamus voluptas deserunt sed. Ducimus aut non ea aperiam ut.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"vw4j6v1rh4rsmlvqwjrkv9xkt7h0ems7j7pc5y9woqcg78sg2kmbfrgn7y8k07490k3i9th29jzie35vzdldhvw8wd9k6be2u54a3nv4seaucc9jn48nvd9wphjtcxxpxwqzulb\"\n    },\n    \"database\" : \"ex0tpyyahfj8d3mr73p9ljixgsviylgp3blxpjffcu2fgrheght6t3voh3o1e34xx78trjebqwmjr878pjkajlxw269rkgdmpod4okfckhxra9fmqwmydl2okhnjgbal3ym3wkx8osvxro7mbdk1fv29w81m1q94o\",\n    \"expireTime\" : \"2022-06-26T05:32:30.287315Z\",\n    \"referencingBackups\" : [ \"u1irbyp1kfp7hwee99pyad7rudoaovsw8xsxsxajyjoqzhoohr2ydq2574cbzrmz239sue4mv1bu7d0\", \"ce1fdh6ayp15lgsuv9ugyigaknok181zabs670a02a00eu0lssd2pn6b7ioapdj4khz88j870p7fr3\", \"fu78gdfemgjk4y34y48aaoqenyd89\", \"x0p41jet8szptxhjfl5dfwv0o9lzxvadpnika9rxk5ei2aotcbpskae6qbj5ahk7l85akzxa\", \"kdwuohpw869ficttey47r3llwyitp2tre89ketpa8n17fi2r5s95rugbfz5tzw4sau4bpv93cwldrtclf73jue6lgmm3h83rwbpp9i2jbpw7fvl6avdagwbca7ximnybsnhtloc6xfvhm77z\", \"f0rdc6wkj0hesj16xhv8wdlfhb5j8yc436z89ull97f0in7f9yy\" ],\n    \"createTime\" : \"2022-06-03T06:39:30.28738Z\",\n    \"referencingDatabases\" : [ \"wprbxlhhyx3pou3yoga01p16blcdlsc04rqs9cqtbwhg3rxhrycspe97uljrxrqcevc4tfx0k3vmmghr9ej53wrhtwvi9gwi2vsquaoa09nkwevlgqluc8d\", \"4h6sgqxjzb5hl1si61h3\", \"mgoggb8ryamdmgxo5bf8kf0rffuee7fu8fywf00e3djsz69wl4bmfgi7yjfu0uylvsdmgpaxy64p680c4x7kyal29q49mgzz2yyl92zw6acl8brti9rl7n5bw2zekl1gjhet86ivsj\" ],\n    \"versionTime\" : \"2022-04-07T09:13:30.287428Z\",\n    \"name\" : \"Bernadine Rice\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2022-06-08T08:36:30.28751Z\",\n    \"sizeBytes\" : \"rfst4k3zhq8fcfrl35cy16lynbsg6rt1qpmtt95qip0lcfxzqsk5895wt1uw03icuxmc6zx75fvct6a3cf8spn1t6lie5scn24nxwmap4tw6rmxqjr754c16py92zm36nyphvj2xl33oopgztgyy70ptd9h4zjvmgj1pec\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1842675364,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Ipsum veritatis laboriosam. Est est et ducimus. Rerum laudantium repellat. Aperiam impedit hic ducimus in deserunt et cum.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"zghbg7g7o1ia6ux5xtotctr5yhxkdvg6may1i0y9rj98h8bcsahjwtuac7zz49ooef5hptdt59fiyiz7jgryrbj7kb6gkdwxxbibcx2t\"\n    },\n    \"database\" : \"d37zlsll5r5mcne2uhdfxx1numabhy8labxbw70j0b1qrauh57c86pmrb8jeicsd84thjl5f8a1qbqiji07y\",\n    \"expireTime\" : \"2022-11-16T05:49:30.287649Z\",\n    \"referencingBackups\" : [ \"qp5wr0cfrqalwpriwsafszpwim2joptgjp3ofnrlw6jorjue5zxxx5g2oloheyzpjvgayqo95dm6xtsxe1yjv5tt5y8fptzvgnm56fg3nw2u73iwytl\" ],\n    \"createTime\" : \"2023-02-24T07:58:30.287685Z\",\n    \"referencingDatabases\" : [ \"l4wfl275vwl3opt3q11nh95a36hf7jpfh0d5rl89clubdpunxuhlbqdajdeiusexnjiiuxkmw9gia444biz15afpo21iek2u7jp5\", \"mg3yp25jf1b69xfzpo0v145uh6ui85yaoxm9g9v9ispwygnm6jc7er54fxz64vs4g8h3r993pl801h5izu7z0ks4cl6vagi0k0sm9s5m4d5fcq1w2cc7sg2uba2mrwxgzyg\", \"xipbl1myd0d6tdevayn70712u6gfksvo50x2fh0cpxsyz84714you6d4szt0dfagoags3pfu5b0qk85s5on1ghhbffsnzxpz\", \"ol73jxdpfm8y4xtgv586tzt0vci5tqcbw8kdvujy5od35v7vk69bi8orczho4hutaf56crk162wu8rew9kv787oaa6bw43u7uuy3l471ia3jhc09p8smxw81871fqk3moo7djmh3slw6r3676ybcdfdrs2inh1jx4q90d86eui5zim05y98pqc3sdd9iyw8iqsrkwi5n\", \"ikz73oqwzn3yluwskjmk559inl4x9wifahsaantzpw54jmmv33ypgca9uifl5o472hw933i38ej3bb3f894jc9si0m9fjb8tsikfp3x7y1ilqyr85pnyvttxk9ezlilquyb5yveid518wuhy4zbfpjbxq7pez5\", \"sr8j06iw7un2ai6uhmq1erz37e1r9gx0ue86vzh63b990z6o4s1h90rdh48ukfakkcgpbhzxlgaclbabtiwz2wzebckyvzp0ela6ro2ewcp7nsod1yv137vnoegtmj1pgkymdc\", \"89at79jwd8u9neos6pbdosl2yzcncz5jcq8jba5r2gtnd48ovirf17odd4xz3dy2j2rnyphhcbexrsovd2f5sirm67gqt3eb5wpf94hd5evem68f0bk9ozfshrwphmnjyh1wo1bufsww9xn700dcmvg8vdir0s6ofw0eyu0xxyn\" ],\n    \"versionTime\" : \"2022-07-08T07:24:30.287757Z\",\n    \"name\" : \"Miss Leonel Bosco\",\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2022-06-26T06:18:30.287843Z\",\n    \"sizeBytes\" : \"i7zmb98ffy1n5wpw\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e907943d-f395-4993-a26a-a09a0b43da51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.287961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.list",
          "schema" : {
            "description" : "The response for ListBackups.",
            "properties" : {
              "backups" : {
                "description" : "The list of matching backups. Backups returned are ordered by `create_time` in descending order, starting from the most recent `create_time`.",
                "items" : {
                  "$ref" : "#/components/schemas/Backup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "88f47f99-e790-4003-9280-2d86d03e2cec",
    "name" : "Lists the backup long-running operations in the given instance. A backup operati...",
    "request" : {
      "urlPath" : "/v1/nj6mrn71rdh1fhzppzwaauvaioypu1xr0sj8y6ymhedw84jk6burt1iu56pl1400dpw2d4ytmmoxfte5g72ru549mg90tlsmg4b52f8irgvgg6vo6mumfxe48nwnc2j4qt1/backupOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Leann Ritchie V\",\n    \"error\" : {\n      \"code\" : 1339470798,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Quam eum autem tempora. Consequatur sit sunt. Modi suscipit in soluta accusamus voluptatum architecto.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"yvxfrmec0v8drc04i8uxrp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88f47f99-e790-4003-9280-2d86d03e2cec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.28675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backupOperations.list",
          "schema" : {
            "description" : "The response for ListBackupOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackupOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching backup long-running operations. Each operation's name will be prefixed by the backup's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that are pending or have completed/failed/canceled within the last 7 days. Operations returned are ordered by `operation.metadata.value.progress.start_time` in descending order starting from the most recently started operation.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "5093e799-7df3-456b-b73b-172de5b3662e",
    "name" : "Return available scans given a Database-specific resource name.",
    "request" : {
      "urlPath" : "/v1/jxteokze",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scans\" : [ {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"hs372kdr9c5lo9dhgd7606\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"s2t3mu84v3kovzbl76bwzl58x7o00rezhnxpu3xr1lm080yv39hs5ulexkl750est1ydfh5d749jns9f8zu\" ],\n        \"dataSourceSeparatorToken\" : \"h20q9jnf5tarq5n86m7xx52lc9a8hju0r28w6anqfursso7ia51yknuoprtlbvyofd9\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n        \"keySeparator\" : \"is8x\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"5e8kpv8nop59elk9bidh5ju4992jkiyf3l70jij8v3msj0hcnwqvxxyt8ikpewwyxec5arufunn9mfsqrloo0v6q8n52rs5el9xzdbb2ta0zksqhsecni5ptm8gbl1sfv\", \"m4a5ebvtt2yqo6pkma\", \"q25e6d2q580rmx9byuksubsbym63fnpomq825uz9b0gowhhrr9meflsv1khfwe4isy6edq3zc5v50p9t3ilxg4lflt6il3mewpuqjgn37a2j47kjips2k6wsh804rtlf4s\", \"0i0t3b00jb7dkh2ye84v9ae2mtfllunc705c867hld6d6lfauhbu6x0le50cc97tdavgob4pvgezasytcop4wq82wwhqtmj4gc10dfufacdernckoel7t3xr\", \"fyeira7e5of2n0q0e396lw6brh80ocwhf0k4xhalan\", \"ipqs51oekvrue80uxio58q4pxiiwjtwfbys8y9txr8yy7chrzwkkxlkzk9to2hrcn1\", \"sswx99gmas0o0srosi4p9eza9h2g5fy7\" ]\n      },\n      \"startTime\" : \"2023-01-21T08:33:30.285052Z\",\n      \"endTime\" : \"2022-06-27T07:03:30.285081Z\"\n    },\n    \"name\" : \"Mr. Mohamed Hermiston\",\n    \"details\" : { },\n    \"startTime\" : \"2022-11-25T07:01:30.285155Z\",\n    \"endTime\" : \"2022-03-31T07:37:30.285184Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"mjtuwz2a6yk2z4vytn8xqoe24r093wpn1eeowzy5sv3hnq59fp1x8d8rgmqnvfm47ckdtmygeas9xgi5yj9awu3aovzagk9sz76im3p4j9ayle\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"ky1j0w6a42rrve5b0lj3b0dc2fxe8jvo0y86umpv6cdqkxa794i2o2253m8cxclz4hdrktjdyia0fpq6twynkvm6jo0gyt3fczs0u23dj4m67opnnpsc3c\", \"hnc3d\", \"e35ml2i8xe0dgbfpbq20j1ucxw8bexk2nhnot3gggpja2baszkeuk3al1a7\", \"kqhs0tc0y0iokly9arcgwl8p3ujucte3nskoitnp39b9iqjmck9ue50vid19pe7th0026lewwgu0vcw\" ],\n        \"dataSourceSeparatorToken\" : \"pnu1wok\",\n        \"diagnosticMessages\" : [ { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"vp2x74au8g3x9euerzf9in8u1rga0cfzo8stawyh8tsw1iwdkqf1p5bsw1dtyjeyqlnm13lofun\",\n        \"metrics\" : [ { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"l9e38jf3j6euhie8j2xvzjqck165zltwnqba1i9q3p31jer1c6bapi3thxapc2d80k77kvseqkkevt6di7mkm5o9ou9sho91gvbv4a8fx4x927k4o3qpq4lkdndvm3126hk15aeew\", \"8chfz27be3exftj78suxfkg23fdeu7sd3cq8tjhdzstx86mt3xhxzj5v8wqbd4uf7js8oqqmuhu13lb00uw22p2sh69u0\" ]\n      },\n      \"startTime\" : \"2022-09-20T07:50:30.285349Z\",\n      \"endTime\" : \"2022-04-17T08:39:30.285376Z\"\n    },\n    \"name\" : \"Israel Feest\",\n    \"details\" : { },\n    \"startTime\" : \"2022-10-19T08:42:30.285447Z\",\n    \"endTime\" : \"2022-07-20T08:30:30.285473Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"z726v5e92t9pgu067xb2thqu0rubdlvalcdl9p5c4g0wfp4rl\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"wiqyzx98zn\", \"a3jitnh5nxu6k6sh500i25jclip6ihyad1ygzlzbosmnb03nkkxdcdylvd13mzbh8d8xu7pkk9fos3m0pxpelejmw2sut1miwzafalzroicn34351tm2t3v85n\" ],\n        \"dataSourceSeparatorToken\" : \"yrzh4qnuvukf2gv1hse0ug5sbcqxfq0q9g51i0jjkjpify3loa73ygc8sd1pm8cb0blctfp2ih809hvj1dcm4fbzp09\",\n        \"diagnosticMessages\" : [ { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"kozydsh01v60hzmmczt4ixfozas5wdcfgrpra9utrtdl4allrdu9nwp8pnjnl0zhu1ddj4f5z5mo04hmhjq9xp9oogsod8lbthb0wara19mdd21jxta4th3s33kucx9\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"az0mpf7\" ]\n      },\n      \"startTime\" : \"2022-04-15T06:39:30.285621Z\",\n      \"endTime\" : \"2022-04-20T05:42:30.28565Z\"\n    },\n    \"name\" : \"Makeda Runolfsson\",\n    \"details\" : { },\n    \"startTime\" : \"2023-02-22T08:59:30.285722Z\",\n    \"endTime\" : \"2022-07-08T06:35:30.285751Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"fi6czeywpkgw6wrgo8gh80cu2eb2t6rlgk8ehz784y7x9inxjzrvs8qm3qpfcxmuwpg99z780ogcalon93m85imsrgvkdidz71qsjs4e5nkwuxlbr8wrxuc298y4adz4yghge4cwam726aomzbddxrwel2u0w8olljqd8chon19p080api3d9ef2cn68jx0qe9\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"sxethpzwmnr0fjx7te9pvprb85oi8dwpmpffai2hfyxs0eaolz1y3ibow8i2w7bg77j391kmiekzjvkaapuyp0xuuuqwvudypmm9wiybl6e8406epkgat50bz2du2ht3fvxkbposlv502ceybtsylz92sot9de4sl4\", \"l1co9bo4dkwdp48sq76j4ynfrezlw7bd4jjbw\" ],\n        \"dataSourceSeparatorToken\" : \"htam16avl7m3rgs0iey\",\n        \"diagnosticMessages\" : [ { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"uqgydch53hv0qlywb4clix9dds2jmg79x2hfttj7kz\",\n        \"metrics\" : [ { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"2m4eubq9iks3n1gcrl3tccb3ue2325lnkdl29wykybem4yo6toq8xsap20vbu7h\" ]\n      },\n      \"startTime\" : \"2022-09-29T05:52:30.285897Z\",\n      \"endTime\" : \"2022-05-12T06:40:30.285927Z\"\n    },\n    \"name\" : \"Leo Hills\",\n    \"details\" : { },\n    \"startTime\" : \"2022-09-10T08:59:30.285998Z\",\n    \"endTime\" : \"2022-08-14T07:13:30.286025Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"sndeb917s3ooumdsmvp5rizs7xohlvf0cur8pexxi41l5w2vbf6i6c\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"n751513cuwn1qa4ehykndqjgsetu6nvuosv51vqwuxvj2wnmzukzgywv432xo5qc5gualjleseyom17s4u3f5b2dck3skfcr79ih8awds6fesfgkha\", \"j40vwkiy6inqy98u2oyqlhb5a5mnn7zmxmw4jxsjhxh94x39n7nf5vdtmhoq389brmzqoonynmniss8em0przda8jpj1ounh7fegh9nydm14irkhtt4e\" ],\n        \"dataSourceSeparatorToken\" : \"ofq1uywrd3sce9ovy3s6e3byd36tesz4mntzucyryuznwngqsn8syzsn6kk397jbw3zne3gv4t3shg16gjm24fkb2rzlnja5zmtsrki7f17428y7atdslf1tpthr1j7n98ard8cb750q1z8m2x59sqw1v512317ngi24711j4ugvy\",\n        \"diagnosticMessages\" : [ { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"u7opd6t9lroigueun4skfp6wic6wwrhgeywjag8j912jfjn49odxo6hhp6dchbwj5jskoc7595f03o5wzspk981xuijv2uhkbzktg4\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"r0fhuefcx0jy84wjkx8goa60bx45afjkhdtne9rgjf8uymij2j8hss53g25521nx55bgcyl3seq3iw0gh92foix4mwqb\", \"rc3okd6isnxuj12xsg5kgqo11batxu9c01mtceucg0wx0qyffrbbo260vwohccwumnw3x3012qvrobpqolhlkr55pp8xnmoionfe0rcr1jkm314tlunri3wgbisyqm6ern8jne8cq6o584n6w380kokxg0ynloq0g58hsa1dp701mchnajqc9zwcytcsdpnukzdt\", \"4hrou7fz56g0e316lieuu3n66tlhu0vm0hx7phupzv1q754km90hifs1orwzmqxozt47eo9aluwqq6r50c10taqhzw7vugqt1y9qx541mr0i46q5j4yj7li1l6q0yuqbe0668qurwdr9ovj1joxapv4tcbix3gway\", \"u9wp5905hpvqxufhiwa2uvv99rm79r2tzms9zkgrp80o1j0dqo9yp9bxdjnu7f7u6jwq17dm5j5mmejr71zvu8i8aqegr3\", \"15d2la8jbv5r323vih1cd7dpjrwbb31uegriytp9pev1ucreoivlumvaa3ckebawf1jesuskgoxbi7erpglze5hrtscw2vsewxs8jzxgset5tx5fsvaesuu4b7c18ko9uom16u061bnjhhi553numbowd0egfl847ly9itlhzskcjky293jr\", \"e5rztz9maht7ydoj21f06sdqh9k3i4oalugs3\" ]\n      },\n      \"startTime\" : \"2022-06-17T09:01:30.28621Z\",\n      \"endTime\" : \"2022-05-22T08:22:30.286238Z\"\n    },\n    \"name\" : \"Kory Stamm\",\n    \"details\" : { },\n    \"startTime\" : \"2022-10-24T06:51:30.286311Z\",\n    \"endTime\" : \"2022-07-07T06:33:30.286338Z\"\n  } ],\n  \"nextPageToken\" : \"07yovah4vcguy22s8dfqdudszed4ls9yj9i4awp51jahnv8b4b62ykom7997qmnvcv4k6jah5s3ddu8gi7g7dpwygsd96oeneqwnefw23p0v8rm9lmyez9jt5e2uqlcyiylby4tv5xzcdil4zngan5dtgvgyk7517ili7bw4hi9zibhk9n6l9bos6tz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5093e799-7df3-456b-b73b-172de5b3662e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.286491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.scans.list",
          "schema" : {
            "description" : "Response method from the ListScans method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "scans" : {
                "description" : "Available scans based on the list query parameters.",
                "items" : {
                  "$ref" : "#/components/schemas/Scan"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "d11006ee-6746-4d7f-b89d-11cfbeb3f4f5",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Hyacinth+Kirlin+PhD:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d11006ee-6746-4d7f-b89d-11cfbeb3f4f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.284842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "a465c86d-5e32-4d9b-9cb0-e56b5f9aff9c",
    "name" : "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
    "request" : {
      "urlPath" : "/v1/Merissa+Marks/scans",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scanData\" : {\n    \"data\" : {\n      \"dataSourceEndToken\" : \"ms51ii0nf8oz79sfvw36sylvahjf2gmtwij4bxim5yhp6n0y86blti8gy47hozgzltxlcep5zo9gzg9n2jkg0h973t93qnr5walrjpqas7iq28mfokt6fheupx19s897uwh1ryw49aal8fsl\",\n      \"hasPii\" : false,\n      \"prefixNodes\" : [ {\n        \"startIndex\" : 369717980,\n        \"depth\" : 161172355,\n        \"endIndex\" : 593950008,\n        \"dataSourceNode\" : true,\n        \"word\" : \"j6mwv95wysa8h4wvvj4sewz24g06x2kiwf8e6wy23utaksnzxkwz1zlwgrru6izq1x349x254ek2f2y8mwetkachwudm8nfyvxaymq1d25e723hgh7b1w04d20e5c5tyklhpd2r12hpp5ekhm6fb5h1z4f3suvei26l8g7wij3hlrs609vwgyvrw9e8ulu41gpuzd5\"\n      }, {\n        \"startIndex\" : 979693083,\n        \"depth\" : 66174940,\n        \"endIndex\" : 1444037868,\n        \"dataSourceNode\" : false,\n        \"word\" : \"02ovhgw03vd26is05mde1pou1jezkvryl44q626p5c6xansd58cnh5oc0xc4rbb5p07vf8dol4ui52i6yoodceeib64zuxj5rcxnouw60dun1hiyu0wkysclk8dzo\"\n      }, {\n        \"startIndex\" : 40532641,\n        \"depth\" : 486427982,\n        \"endIndex\" : 443155873,\n        \"dataSourceNode\" : true,\n        \"word\" : \"80z0nlphwk2chewueilhzbyd5on5m7a19bbrgw2p8htd4idoictg7zi7uvpxveva6hq976m0nr3e1u3yaogqynnhnkwdtfqdlzfns61az9x8o4hjw6cal8t74clng0zt9ln1e08y68ynry2br5lfcwlhavz0r3mzmvqfbkxww7jn82sz4u2\"\n      }, {\n        \"startIndex\" : 1521252012,\n        \"depth\" : 244224796,\n        \"endIndex\" : 773588954,\n        \"dataSourceNode\" : true,\n        \"word\" : \"q2xy7qob972vn8tvef6pg9z3cqyu6jurgmwhktnlfwoictcvhlfoai7afzwkc9mj\"\n      }, {\n        \"startIndex\" : 411566138,\n        \"depth\" : 277286472,\n        \"endIndex\" : 1247040626,\n        \"dataSourceNode\" : true,\n        \"word\" : \"4mx1uk9nib0ex8o20ll3qzw3j9l8zmovk3hr6rrptznkb2sh1ex1n2ri39qg5zb2y6eyx7dircdojb7dtgoaww633axd98usxcj2x8lkjcsmre0lkkla9i8akuh66utcq1dnorexinprlz7enchd2r9q2z5wjc1vw1kewn19jncavrkc\"\n      } ],\n      \"endKeyStrings\" : [ \"vsuf8f7nzax2j3u8jvxtdtags7kmqvxvkvgssy2848jqok55idwzf6hfjasp6gkpiwdlsld3mk5uzu1gzhn7rctmxh1gos9raq8wwvzj02b3f84e19cs4f6d8fo42i0lqtibk5htbq94zb0no\", \"bvjb1h4w9oqlq9v9kjmxxkw7kzzeopyvvmnatmf9g65d9qqn88kme27pns0v9q64k2ribf3cchss7bak3vw4umdyz5gudctlqu8mrick7pmcc0pa59iei9hiq27vz4ce1e88kkq5kv4af866upz522l51y6pt77jlrdd3ocgvyspxpo5285thcbj11sln3dk61nkzsff\", \"0vzl0g5gc7p8y7flb77d9u0crvlqvjzv3f\", \"tvb9nvi8ux0235bv4zwficjgcaqiviek0mx86\" ],\n      \"dataSourceSeparatorToken\" : \"lswkjh9esg8hrjglkdvml6rlx76n731lexkqub05r7feywawzl9b2iij3wcdhkn9wwdavbdz86xuf7pbahajryh6tf144y1wwawj53zww1z9c4riwieth9zvwnb3ccgt6ja9myu1f4otc0nna0h7ac\",\n      \"diagnosticMessages\" : [ {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Qui omnis reprehenderit. Veritatis reprehenderit ipsam omnis ut. Natus deleniti et qui qui voluptas.\",\n          \"token\" : \"bc6if7l0zxjqxganlndzhbd4pqja47ub39pfmqyfh4ylkwpw1wzm0oxxp8majkl9xb8hl6zr2mvjfyn3vd4ycblkym57dw5y3z3qgimr539pspega1f9e13yyq4htblnsprkv2ykjullhy0ya19oasl74aa485lvkkg1ha\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Aut nostrum quidem recusandae ex id consectetur qui. Deleniti odit et quae cupiditate voluptatem. Dicta vel porro pariatur. Nihil explicabo molestiae odit. Dolores tempora quia facilis voluptatem vel \",\n          \"token\" : \"p4tjbpsg8xqse1gll6k9llpefpulpl\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Cumque ut magnam ipsam. Debitis illo fugiat similique amet et. Vero et illo omnis laboriosam officiis pariatur. Aut cum suscipit quae.\",\n          \"token\" : \"223oxlf9qatvvownaneng9cye7pa75kuqniqwkewkqvlf64x3q3z08he533t6a9i2traw0po7i192fcwrq24n3jv81e8k8exatk4wfncaezh9fuscoyw5u3ne15kyrhvahwn4ryd7jqenesysb0c6ttc2cltsrn9yxwgdhsdox9rxoecdc\"\n        }\n      }, {\n        \"severity\" : \"ERROR\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Magnam autem architecto tempora sapiente provident dolorem. Error et aut est et ducimus sit. Vel et debitis in at molestiae. Ea minima harum aspernatur eligendi dolorum eum occaecati. Aut voluptatem d\",\n          \"token\" : \"8i5xi80s3dzsgf\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Sunt possimus omnis delectus totam. Placeat vero eveniet beatae. Voluptatem non ut quasi praesentium nobis sed repellat.\",\n          \"token\" : \"v0xdagln96cei9yuc0hm0a4wr509evyb27c9o5h712j0grm117b72osk5vnu552tqoqkwa1wk8i9t672ajxo591qhf4g1nhysruh63wq5m9aeb1difpikoj\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Quaerat ut non. Alias sit in corporis doloremque. Quam perferendis natus et esse dolorum atque qui. Omnis recusandae nam praesentium.\",\n          \"token\" : \"76ofocgp4vrxejyc715shz2d9b5gw0dlr0f01ml065akvq4vl6njvjuarwh506yifuw5htx0x3vsfbwsg1och5d33wld1mqkr3ibu0yyw93pespz5ctfyll2zumdbp9yejm9dmjww7ecshzl765l0ert0a34y2bgca4cm48osivlo4r46w5y\"\n        }\n      }, {\n        \"severity\" : \"FATAL\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Illum maiores et. Non id nisi. Rerum impedit odio.\",\n          \"token\" : \"9vukec045c73kb9dxj2wbbxxwc9h4k46srstsumluk5tponoy0iaj4u0y\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Minima porro facere et maxime exercitationem aut dolore. Consequatur recusandae ut. Ad nihil non cum vel magni error. Enim dolorem consequatur soluta eos iusto vel eos. Suscipit quia voluptatibus haru\",\n          \"token\" : \"8ni1sgfpxzmuxsso5db\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptas sed deserunt. Qui hic laudantium corporis. Quis ipsa dicta alias iure neque tempore est. Vel incidunt ut qui.\",\n          \"token\" : \"yk8dxwp4p51ruklboxcs7t8qmc3ceot618maudg7pprne194a1rie0lrg62cun6jmg56wxrc6lrv93az6sftspc0un\"\n        }\n      } ],\n      \"keyUnit\" : \"CHUNK\",\n      \"keySeparator\" : \"h5tdkr71bnszjx9p4njh2a2ibdt9a3e8dopr5nq1z61qm3m3qzycsbeasqb5cpmnumkf59f65mdsdvu53x6ez60eciyl44mgflyc\",\n      \"metrics\" : [ {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Odit quo maiores quae est ex. Velit aliquid quasi dicta veniam. Voluptas voluptatum quidem occaecati necessitatibus voluptatem.\",\n          \"token\" : \"zmx1jjvemr8l3vdpqf6l5ozkh5uabel2u3lgz784d8zyr8k1fzgiggwiwyehkfzquwd4qwv3xr1jqfe7ii8\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Provident unde rerum qui et. Voluptas et eos praesentium quia saepe est. Nesciunt accusantium alias. Necessitatibus praesentium nam est laborum error nobis.\",\n          \"token\" : \"1evmwldd4hsuar1fwfrstu\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"SUM\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Et aliquam officiis voluptatibus. Doloremque voluptate quia a reiciendis vitae hic voluptatem. Sed a sint.\",\n          \"token\" : \"d2qo0ysbrwu6b7a7p0ggdt2xqv1wi1sbowhdrz7a98wt5io8zumvb16eawkppvhuqoj9lrs9vf0sr0g9z51eamo0gecfduxfsigx\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.5934247146358325E37,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Libero quod quia corrupti nostrum libero ea quia. Quia qui quo est libero eum. Et corporis est. Possimus molestiae voluptatum. Eaque voluptatem quidem facere ea aliquid vel blanditiis.\",\n          \"token\" : \"w5o3\"\n        }\n      } ],\n      \"indexedKeys\" : [ \"qdqtugmr2wcafitxggmpplaj9d446y1rvzb86qdhkxs9qa2z9bx43czxtolslc2llge2h4k7rb\", \"czz9iaxtdi5qp1qqzvtn02u9luk9b6r101354em2jc3tzmet608ab2neuya2zpvkv7bh6s0ugaap7mza2bd3c2me1fsp653khzukf0efx439e026v2wmamg61f47vy2dlfqb39xnqv4elgadkjx1da8l45zbmo9rl2m0y7k8ftm3hgsbvtgni1bdkqh2\" ]\n    },\n    \"startTime\" : \"2022-12-23T06:45:30.28443Z\",\n    \"endTime\" : \"2022-10-28T07:15:30.284461Z\"\n  },\n  \"name\" : \"Shasta Cormier\",\n  \"details\" : { },\n  \"startTime\" : \"2022-05-25T06:50:30.284554Z\",\n  \"endTime\" : \"2022-11-02T06:26:30.284583Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a465c86d-5e32-4d9b-9cb0-e56b5f9aff9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.284752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getScans",
          "schema" : {
            "description" : "Scan is a structure which describes Cloud Key Visualizer scan information.",
            "properties" : {
              "details" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Additional information provided by the implementer.",
                "type" : "object"
              },
              "endTime" : {
                "description" : "The upper bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the scan, specific to the Database service implementing this interface.",
                "type" : "string"
              },
              "scanData" : {
                "$ref" : "#/components/schemas/ScanData"
              },
              "startTime" : {
                "description" : "A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "5b519453-4bea-4e0e-b020-d03ac33b8400",
    "name" : "Updates a pending or completed Backup.",
    "request" : {
      "urlPath" : "/v1/Ms.+Lorean+Harber",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryptionInfo\" : {\n    \"encryptionStatus\" : {\n      \"code\" : 379004903,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Laboriosam blanditiis id inventore occaecati ea cupiditate rerum. Eum unde quo neque adipisci assumenda. Ut qui quam officiis beatae voluptatem. Quis adipisci ratione mollitia unde minus aut aut.\"\n    },\n    \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n    \"kmsKeyVersion\" : \"htsxj61h72ll1aasqut0389x1kx2wjtedsq2\"\n  },\n  \"database\" : \"68dkq2f7b67n5luq61u7v0e0npnuj5i77e0yay4d3j2j1inm4m02assk6p62io6798jfriu0u2ysfrn46rdmvce89gd8tcynwfne64xx\",\n  \"expireTime\" : \"2022-04-29T09:18:30.282658Z\",\n  \"referencingBackups\" : [ \"famki3l8brt0g6dfkd1v\", \"srmash23rcxaxn3yaa5x3v5v2ezwa14uxxjc9uo5b9r9lojkzmsrvaun982t23kc71bouoycwp47ud7mycv\", \"17seprkh5ygo49u75mobj7rhigjtungl0eea6lqs6u41t31sivicpikeo406dkv6fy2enqzk8br6vdxz\", \"78tqsjxn8o3rdgdow75r2gork3jmjfd7uuxuwgaoa45jdva2simb1z9eaopusg5io4s2eq9d30nvv31clktczga255p4tt98debpy49yxa14ohnrjzpi10r0vsfozxae1kx\" ],\n  \"createTime\" : \"2022-09-05T06:35:30.282723Z\",\n  \"referencingDatabases\" : [ \"zvn9i7\", \"n95ncdlpgzsroucfdpi817gv1detw3fj8murrz919j5i1vkdaw4ex8530dvj1beq5gr18oc7v4z4qrres4xcgnfsyrndfdf31qcs7o5r2b2gywmq8wj1w\", \"apceyitp6bfqip1d2duxk3mpajxblycd8zpu6snnzfj8yjb7ok945y1aczbm1z3ms27hp1r5yhgusxvrajrja2ubqfk3bf9yk5tu\", \"9jc5np8f523mu0yfj8lxhxwj6zas9ya4kmfpbrndw6ozpj46i3rlkpvqzw4694eps6cfu3bmv18hw\", \"xwnwbjddcvfle1mmh0bkzq5sy20z0kbcia34xl0w0xxh32sjqmw220r7cgtnkbfmgeshvhmxt59w97ab2hn3b\", \"lprh0mka56cy3ifng9xajmyvebyi2ghli1gype1xkrpno1mul0dtzm222xbrddcv9twf58la6cmpvfmby2152bb6m21jtwxuld28hw499lmgpg10u8mgqslu3l1uqk7euged\" ],\n  \"versionTime\" : \"2023-02-03T06:19:30.282794Z\",\n  \"name\" : \"Mrs. Brendan Thompson\",\n  \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"maxExpireTime\" : \"2022-09-28T09:09:30.282893Z\",\n  \"sizeBytes\" : \"h4mz1nqgcfhlq3a8swujjwnswjvnh2zmtrz86jwp0jlur5lwmq14iqi6h0960531h019rc9agtwspxvlg3srbvtm1y1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b519453-4bea-4e0e-b020-d03ac33b8400",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.283165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.patch",
          "schema" : {
            "description" : "A backup of a Cloud Spanner database.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "database" : {
                "description" : "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
                "type" : "string"
              },
              "databaseDialect" : {
                "description" : "Output only. The database dialect information for the backup.",
                "enum" : [ "DATABASE_DIALECT_UNSPECIFIED", "GOOGLE_STANDARD_SQL", "POSTGRESQL" ],
                "readOnly" : true,
                "type" : "string"
              },
              "encryptionInfo" : {
                "$ref" : "#/components/schemas/EncryptionInfo"
              },
              "expireTime" : {
                "description" : "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "maxExpireTime" : {
                "description" : "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
                "type" : "string"
              },
              "referencingBackups" : {
                "description" : "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "referencingDatabases" : {
                "description" : "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "sizeBytes" : {
                "description" : "Output only. Size of the backup in bytes.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The current state of the backup.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY" ],
                "readOnly" : true,
                "type" : "string"
              },
              "versionTime" : {
                "description" : "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "4f504fd4-be47-4be4-8304-ccfec2d424db",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Dr.+Aleida+Fay",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lyndia Beer\",\n    \"error\" : {\n      \"code\" : 169933971,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ut debitis nesciunt rerum consequatur eum voluptatem aut. Temporibus aperiam at quisquam ad. Modi autem qui quaerat fugiat officiis nulla tempore. Quia quisquam similique.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Bobbie Willms\",\n    \"error\" : {\n      \"code\" : 785192233,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Possimus aut voluptatem. Repellat autem dolorum mollitia. Aut molestiae et eos molestias. Optio nihil deleniti eos. Atque quo qui odit quidem.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Wan Nader\",\n    \"error\" : {\n      \"code\" : 353757504,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Et iure et nostrum consequatur maiores nesciunt. Quasi enim voluptatem sunt ipsa ex quas voluptatem. Animi veniam aliquid molestiae.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kristeen Hoeger PhD\",\n    \"error\" : {\n      \"code\" : 1177175787,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Magnam molestiae rerum odio consectetur vero totam. Neque et distinctio nemo harum. Impedit minus velit.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Cecily Bode I\",\n    \"error\" : {\n      \"code\" : 1607926089,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Autem cum dolor sit sint. Possimus corporis adipisci voluptatum cupiditate sit et eveniet. Provident non tempore quos animi. Nulla ea et mollitia.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Vivienne Shanahan I\",\n    \"error\" : {\n      \"code\" : 2078393824,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Labore aliquid eos et enim quod nostrum. Vitae nam eaque quae. Qui saepe unde similique id excepturi sed laboriosam. Aliquam numquam vel eaque corrupti rerum. Quis odio qui dolorem illo voluptates.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Cathy Wiza\",\n    \"error\" : {\n      \"code\" : 879284361,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Eius voluptates quam et sequi deleniti id eos. Repellat fugit amet sapiente rerum quae. Temporibus necessitatibus at tempora aut.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Elmer Schiller\",\n    \"error\" : {\n      \"code\" : 1571058405,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Voluptas tenetur aliquid et eum asperiores enim optio. Neque alias dicta. Id eos nisi nostrum ut. Ut corrupti magni vero placeat repudiandae aliquam expedita.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"pth3iv52rg7nd59crfs3czwlaf7sav2na5elpf12lv6yrleee518qjp51v2j9n3ma1hjisxnrusmn2orcfy8vdlcni99gi752\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f504fd4-be47-4be4-8304-ccfec2d424db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.282503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "720393d9-59ca-482d-81e5-71c9c4abe29c",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Paulene+Jacobson",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "720393d9-59ca-482d-81e5-71c9c4abe29c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.281532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "e35cf979-9da2-4a75-972f-13025995f87c",
    "name" : "Creates multiple new sessions. This API can be used to initialize a session cach...",
    "request" : {
      "urlPath" : "/v1/1tpy8jqx3jm2dzw4fbikeuzh0jpzl2750d8113kjz0j1uj767b9ldc991bzjmauo6rb6sbzi67iw9fsakbi2j8e84vph3g5zn7f14sr96h3tsx6k7vxzyiq/sessions:batchCreate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"session\" : [ {\n    \"approximateLastUseTime\" : \"2022-09-02T05:40:30.280968Z\",\n    \"creatorRole\" : \"kbwwbe3n3zi6a0zen3u38i5clu2f6dqm\",\n    \"createTime\" : \"2023-03-21T08:56:30.281005Z\",\n    \"name\" : \"Terrence Reilly\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-10-09T09:18:30.281075Z\",\n    \"creatorRole\" : \"7h2fas737fycbrey4m3gvqi89z4s1og47j1ag38dnu7buxoyez8x13kkqe950cszjwixs62lcyeblbfsdlac4u37sj4xobr2m8pd6x0hhtd1fzjcl5j9iqli9yntsotdd025q8zq2ptsb79735\",\n    \"createTime\" : \"2023-02-07T07:21:30.281117Z\",\n    \"name\" : \"Dr. Jarod Runolfsdottir\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-06-13T05:59:30.281192Z\",\n    \"creatorRole\" : \"41wnqt92cpgjjm9rn\",\n    \"createTime\" : \"2022-12-09T06:21:30.281231Z\",\n    \"name\" : \"Drew Yost\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-12-24T08:33:30.281302Z\",\n    \"creatorRole\" : \"r67hv3ci7m86q588fwdw01tjgjods2yzf1nd8cu6qpk2wtx60gdwdac90a5gb1xolfcb7q579o2dls4gcgg8qj859ilof5dkpz2lk2tbx2iqi29fcuy64reeacm7kddryjpp7oj\",\n    \"createTime\" : \"2022-10-17T05:29:30.281341Z\",\n    \"name\" : \"Tobias Batz\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e35cf979-9da2-4a75-972f-13025995f87c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.281451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.batchCreate",
          "schema" : {
            "description" : "The response for BatchCreateSessions.",
            "properties" : {
              "session" : {
                "description" : "The freshly created sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "a2902edb-8fe1-4d8b-9af9-03682b310d91",
    "name" : "Creates a new session. A session can be used to perform transactions that read a...",
    "request" : {
      "urlPath" : "/v1/fownt0fsu98yw1c2nov4mbptuwisy3mzoiagn729ga8zfuiwg1wsjj17y9spem/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approximateLastUseTime\" : \"2022-11-05T09:08:30.28072Z\",\n  \"creatorRole\" : \"64asugxqu529b9xfa82nwn25kekg6pwns6doitjkc0l4t6aktwxqfg7yfaf6z88ht9v5aahha5xx7c7pwj0tbx2ks5drqxkio01es1z9fo2fsduy44xa0wkgnkdsykedl0yoo8hho4zg57l8rg87ykj92fr9hdw20xjb8ir1j24b21yusu0u\",\n  \"createTime\" : \"2022-06-12T07:49:30.28076Z\",\n  \"name\" : \"Mrs. Casey Barrows\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2902edb-8fe1-4d8b-9af9-03682b310d91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.28092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.create",
          "schema" : {
            "description" : "A session in the Cloud Spanner API.",
            "properties" : {
              "approximateLastUseTime" : {
                "description" : "Output only. The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the session is created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "creatorRole" : {
                "description" : "The database role which created this session.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The name of the session. This is always system-assigned.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "e9a08fbb-2b0f-4d11-be5d-ca92abfeb9cb",
    "name" : "Lists all sessions in a given database.",
    "request" : {
      "urlPath" : "/v1/7ahy6e3llyc6ruiaak4qfqjgoz9bq7tpjfa8hmhiirm2nkvww4l9utelwhgargrec7kwd79k9fulucj9p9qgz8g5y5bb8cyjihkcdcjo9zpdyqz8kuq5km79cay611ih76levbglmzn4w75ql41yfz2dmduq52ng9e8vtker0b2rc6m/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessions\" : [ {\n    \"approximateLastUseTime\" : \"2023-02-15T07:26:30.28013Z\",\n    \"creatorRole\" : \"gavbwnt0tt70azznc1z413wzrg88hi468fujdzr1k1kaok7hmix4s4wnd\",\n    \"createTime\" : \"2023-02-05T07:13:30.280177Z\",\n    \"name\" : \"Gertrud Lemke\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-02-03T05:58:30.28026Z\",\n    \"creatorRole\" : \"q2xlhactlh6mkvf6iat836l6644azgngxm7bvhcj6pha126bk2m2htgnodcj3sylnak3bou07fgewf79z4oy7ymidtvvz73xtmxvc8a5cakb2hgrrncj4l0z48kl76s0xntb7ogu1ybnm57r9x5iyb3xopcmh\",\n    \"createTime\" : \"2022-04-09T08:30:30.280303Z\",\n    \"name\" : \"Aaron Franecki\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-11-25T06:24:30.280379Z\",\n    \"creatorRole\" : \"vctkifviilaeczr5nhmvfezxmvrhribynnnahu35loprutu3a3i7n8vmjdigkfi4i5hh30d\",\n    \"createTime\" : \"2022-04-02T06:45:30.280416Z\",\n    \"name\" : \"Delora Hodkiewicz\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-08-15T05:35:30.280491Z\",\n    \"creatorRole\" : \"f93te8gieqnzeba4a77osov17kmuoa6hx0mczffqweqnhe3k7z3xppxx2i44tn5txivj4iyb0z7zyeex3difo8yj57z1ec9c21imyjdznyk90p7fimmjhjdfs0eke53e9hb5shl8kz0r3e9mayh\",\n    \"createTime\" : \"2022-04-19T08:38:30.280533Z\",\n    \"name\" : \"Ms. Howard Wisoky\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"e1s2q6v2y23nult4ha9sxe8v57z80yt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9a08fbb-2b0f-4d11-be5d-ca92abfeb9cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.280684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.list",
          "schema" : {
            "description" : "The response for ListSessions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListSessions call to fetch more of the matching sessions.",
                "type" : "string"
              },
              "sessions" : {
                "description" : "The list of requested sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "1aa3a167-aa27-4c93-a772-a0709d9c3e6f",
    "name" : "Updates the schema of a Cloud Spanner database by creating/altering/dropping tab...",
    "request" : {
      "urlPath" : "/v1/97tfnj87be0r3ya9/ddl",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Colby Lueilwitz\",\n  \"error\" : {\n    \"code\" : 868064864,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Consequatur nostrum nihil totam. Fugiat qui laborum ratione omnis quo. Est deserunt veniam quam voluptatem soluta iste autem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1aa3a167-aa27-4c93-a772-a0709d9c3e6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.280072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.updateDdl",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "03ff62c8-d81b-47e3-b8c0-e9ce72510c9a",
    "name" : "Returns the schema of a Cloud Spanner database as a list of formatted DDL statem...",
    "request" : {
      "urlPath" : "/v1/g82l1saax138pzbdrmweqzjg1cm89q39r2ge2o2hp83slefrym8y6xhlqfl2oqlvmngqd14mn3tczjuz2u4kgi3u6zgdfddmhb9dk2koqe64fy81t2765hae5l03dx2dw9wf01afm4685oxm2j6xh44t75dm3xs14n80/ddl",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"protoDescriptors\" : \"e6e2um6gis9ptja65rumvd016wlf35m2j3ytp8sf70hgoui9zijjjn8uge5fq863ooo1f1cjafp0fegpw9ou81o\",\n  \"statements\" : [ \"k88zg2v8pojeg2r0aogidywfq199w7hf9urridi6y475vz9pd4go4uh7tp2wqb3db4tuk7sd7iecohjpmik2i81yutoxv6vkvcq\", \"8igm2nnpg1qu9gu6kwglxu2grknhwb9kkijcvkaq6a3z4esae0n0azwwfpl7294cyaiulpg6ocftqltn26ehiaqasp98kipjgekzdvf71nk6z6pt3d87fkgebw0j3beh131buhln3rmgqw4oxberec9jty9tf4jipju35wgvdw4qvfa30rbsaebakzdc\", \"kvkrlxt2jjma84n783dgdgp2a8cr2q1f46cnuy942w501qos\", \"594sqibaas3hj2mcd0b2az43orl9c59ak9ir93vujtxorhml6t214lthcsbckc6gdclc8smb30q2v8ys4cut8gmeel5jdk1l57eftyn8frq0nn5h3p1xww8ht8gwlm2ynjp\", \"s2espcjz00fpkwld7205flmnst5ae4waqmyhut2y66bw73qde269o44qho5pzr2mvrfawoc6o7olnj322u3k44vycodjgwmpbrp2bqk55rzeq2nwu7urbxf5h5ww1m1nllvin380ymf7edsby3sodno2yzbfar9cxiam0a40xdy104t37pdr\", \"x6d9xgkaeaepdmqy7\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03ff62c8-d81b-47e3-b8c0-e9ce72510c9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.27982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getDdl",
          "schema" : {
            "description" : "The response for GetDatabaseDdl.",
            "properties" : {
              "protoDescriptors" : {
                "description" : "Proto descriptors stored in the database. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
                "format" : "byte",
                "type" : "string"
              },
              "statements" : {
                "description" : "A list of formatted DDL statements defining the schema of the database specified in the request.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "28b9af23-e07f-44e5-b069-6d6c67601f67",
    "name" : "Drops (aka deletes) a Cloud Spanner database. Completed backups for the database...",
    "request" : {
      "urlPath" : "/v1/rg0iolzr9qlwz68754ccbn8emkdeyfvjn0biz5rxciibi0sl7epgneegp9ww7bmfaejnt9k44ggp2jlws910xffda27f3ugbdpbynx2copl6rnhlx3rg837cto2rag2qqn0oh5pw4hiewcjnc8ww2l26zfrwbq9w36i7bxh0sze5qvnzgxfrdcwmb6dhfereriw",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28b9af23-e07f-44e5-b069-6d6c67601f67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:30.279642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.dropDatabase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  } ]
}