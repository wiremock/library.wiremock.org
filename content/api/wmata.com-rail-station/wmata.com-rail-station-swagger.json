{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Rail Station Information",
    "description" : "Rail line and station information, including locations, fares, times, and parking.",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "http://api.wmata.com/Rail.svc"
  }, {
    "url" : "https://api.wmata.com/Rail.svc"
  } ],
  "security" : [ {
    "apiKeyHeader" : null
  }, {
    "apiKeyQuery" : null
  } ],
  "paths" : {
    "/Lines" : {
      "get" : {
        "summary" : "XML - Lines",
        "description" : "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns information about all rail lines.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Lines</td>\r\n\r\n<td>\r\nArray containing line information (<a href=\"#Line\">Line</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"Line\" name=\"Line\">Line Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DisplayName</td>\r\n\r\n<td>Full name of line color.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>EndStationCode</td>\r\n\r\n<td>End station code. For example, will be E10 (Greenbelt) for the\r\nGreen Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>InternalDestination1</td>\r\n\r\n<td>Intermediate terminal station code. During normal service, some\r\ntrains on some lines might end their trip prior to the\r\nStartStationCode or EndStationCode. A good example is on the Red\r\nLine where some trains stop at A11 (Grosvenor) or B08 (Silver\r\nSpring). Empty string if not defined.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>InternalDestination2</td>\r\n\r\n<td>Similar to InternalDestination1.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StartStationCode</td>\r\n\r\n<td>Start station code. For example, will be F11 (Branch Avenue)\r\nfor the Green Line, A15 (Shady Grove) for the Red Line, etc. Use\r\nthis value in other rail-related APIs to retrieve data about a\r\nstation.</td>\r\n</tr>\r\n</tbody>\r\n</table>",
        "operationId" : "5476364f031f5909e4fe3314",
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/xml" : {
                "example" : "<LinesResp xmlns=\"http://www.wmata.com\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Lines>\n        <Line>\n            <DisplayName>Green</DisplayName>\n            <EndStationCode>E10</EndStationCode>\n            <InternalDestination1/>\n            <InternalDestination2/>\n            <LineCode>GR</LineCode>\n            <StartStationCode>F11</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Blue</DisplayName>\n            <EndStationCode>G05</EndStationCode>\n            <InternalDestination1/>\n            <InternalDestination2/>\n            <LineCode>BL</LineCode>\n            <StartStationCode>J03</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Silver</DisplayName>\n            <EndStationCode>G05</EndStationCode>\n            <InternalDestination1/>\n            <InternalDestination2/>\n            <LineCode>SV</LineCode>\n            <StartStationCode>N06</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Red</DisplayName>\n            <EndStationCode>B11</EndStationCode>\n            <InternalDestination1>A11</InternalDestination1>\n            <InternalDestination2>B08</InternalDestination2>\n            <LineCode>RD</LineCode>\n            <StartStationCode>A15</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Orange</DisplayName>\n            <EndStationCode>D13</EndStationCode>\n            <InternalDestination1/>\n            <InternalDestination2/>\n            <LineCode>OR</LineCode>\n            <StartStationCode>K08</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Yellow</DisplayName>\n            <EndStationCode>E06</EndStationCode>\n            <InternalDestination1>E01</InternalDestination1>\n            <InternalDestination2/>\n            <LineCode>YL</LineCode>\n            <StartStationCode>C15</StartStationCode>\n        </Line>\n    </Lines>\n</LinesResp>"
              }
            }
          }
        }
      }
    },
    "/Path" : {
      "get" : {
        "summary" : "XML - Path Between Stations",
        "description" : "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a set of ordered stations and distances between two stations on the\r\n<em>same line</em>.</p>\r\n\r\n<p>Note that this method is not suitable on its own as a pathfinding solution\r\nbetween stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Path</td>\r\n\r\n<td>\r\nArray containing path details (<a href=\r\n\"#MetroPathItem\">MetroPathItem</a>)\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"MetroPathItem\" name=\"MetroPathItem\">MetroPathItem\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DistanceToPrev</td>\r\n\r\n<td>Distance in feet to the previous station in the list.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) this station's platform is on.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>SeqNum</td>\r\n\r\n<td>Ordered sequence number.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode</td>\r\n\r\n<td>Station code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationName</td>\r\n\r\n<td>Full name for this station, as shown on the WMATA website.</td>\r\n</tr>\r\n</tbody>\r\n</table>",
        "operationId" : "5476364f031f5909e4fe3316",
        "parameters" : [ {
          "name" : "FromStationCode",
          "in" : "query",
          "description" : "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "N06",
            "enum" : [ "N06" ]
          }
        }, {
          "name" : "ToStationCode",
          "in" : "query",
          "description" : "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "G05",
            "enum" : [ "G05" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/xml" : {
                "example" : "\n\n<PathResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Path>\n        <MetroPathItem>\n            <DistanceToPrev>0</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>1</SeqNum>\n            <StationCode>N06</StationCode>\n            <StationName>Wiehle-Reston East</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>30867</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>2</SeqNum>\n            <StationCode>N04</StationCode>\n            <StationName>Spring Hill</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3634</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>3</SeqNum>\n            <StationCode>N03</StationCode>\n            <StationName>Greensboro</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3902</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>4</SeqNum>\n            <StationCode>N02</StationCode>\n            <StationName>Tysons Corner</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3440</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>5</SeqNum>\n            <StationCode>N01</StationCode>\n            <StationName>McLean</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>24745</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>6</SeqNum>\n            <StationCode>K05</StationCode>\n            <StationName>E Falls Church</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>13156</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>7</SeqNum>\n            <StationCode>K04</StationCode>\n            <StationName>Ballston</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2980</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>8</SeqNum>\n            <StationCode>K03</StationCode>\n            <StationName>Virginia Square</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2473</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>9</SeqNum>\n            <StationCode>K02</StationCode>\n            <StationName>Clarendon</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2687</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>10</SeqNum>\n            <StationCode>K01</StationCode>\n            <StationName>Court House</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>4936</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>11</SeqNum>\n            <StationCode>C05</StationCode>\n            <StationName>Rosslyn</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>6993</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>12</SeqNum>\n            <StationCode>C04</StationCode>\n            <StationName>Foggy Bottom</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2783</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>13</SeqNum>\n            <StationCode>C03</StationCode>\n            <StationName>Farragut West</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2001</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>14</SeqNum>\n            <StationCode>C02</StationCode>\n            <StationName>McPherson Square</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2359</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>15</SeqNum>\n            <StationCode>C01</StationCode>\n            <StationName>Metro Center</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>1561</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>16</SeqNum>\n            <StationCode>D01</StationCode>\n            <StationName>Federal Triangle</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2016</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>17</SeqNum>\n            <StationCode>D02</StationCode>\n            <StationName>Smithsonian</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2643</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>18</SeqNum>\n            <StationCode>D03</StationCode>\n            <StationName>L'Enfant Plaza</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>1757</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>19</SeqNum>\n            <StationCode>D04</StationCode>\n            <StationName>Federal Center SW</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3052</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>20</SeqNum>\n            <StationCode>D05</StationCode>\n            <StationName>Capitol South</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2703</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>21</SeqNum>\n            <StationCode>D06</StationCode>\n            <StationName>Eastern Market</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3289</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>22</SeqNum>\n            <StationCode>D07</StationCode>\n            <StationName>Potomac Avenue</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3750</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>23</SeqNum>\n            <StationCode>D08</StationCode>\n            <StationName>Stadium Armory</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>12162</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>24</SeqNum>\n            <StationCode>G01</StationCode>\n            <StationName>Benning Road</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>7779</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>25</SeqNum>\n            <StationCode>G02</StationCode>\n            <StationName>Capitol Heights</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>5215</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>26</SeqNum>\n            <StationCode>G03</StationCode>\n            <StationName>Addison Road</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>7960</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>27</SeqNum>\n            <StationCode>G04</StationCode>\n            <StationName>Morgan Blvd</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>7256</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>28</SeqNum>\n            <StationCode>G05</StationCode>\n            <StationName>Largo Town Center</StationName>\n        </MetroPathItem>\n    </Path>\n</PathResp>"
              }
            }
          }
        }
      }
    },
    "/SrcStationToDstStationInfo" : {
      "get" : {
        "summary" : "XML - Station to Station Information",
        "description" : "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns a distance, fare information, and estimated travel time between any\ntwo stations, including those on different lines. Omit both parameters to\nretrieve data for all stations.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>StationToStationInfos</td>\n\n<td>\nArray containing station to station information (<a href=\n\"#StationToStationInfo\">StationToStationInfo</a>).\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"StationToStationInfo\" name=\n\"StationToStationInfo\">StationToStationInfo Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>CompositeMiles</td>\n\n<td>Average of distance traveled between two stations and straight-line distance (as used for WMATA fare calculations).  For more details, please refer to WMATA's <a href=\"https://www.wmata.com/about/records/public_docs/upload/Tariff-on-Fares-Annotated-2-12-18.pdf#page=6\" target=\"_blank\" rel=\"noopener noreferrer\">Tariff on Fares</a>.</td>\n</tr>\n\n<tr>\n<td>DestinationStation</td>\n\n<td>Destination station code. Use this value in other rail-related\nAPIs to retrieve data about a station.</td>\n</tr>\n\n<tr>\n<td>RailFare</td>\n\n<td>\nStructure containing <a href=\"#RailFare\">fare</a> information.\n</td>\n</tr>\n\n<tr>\n<td>RailTime</td>\n\n<td>Estimated travel time (schedule time) in minutes between the source and\ndestination station. This is not correlated to minutes <span class=\"text-info\">(Min)</span> in Real-Time Rail Predictions.</td>\n</tr>\n\n<tr>\n<td>SourceStation</td>\n\n<td>Origin station code. Use this value in other rail-related APIs\nto retrieve data about a station.</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"RailFare\" name=\"RailFare\">RailFare Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>OffPeakTime</td>\n\n<td>Fare during off-peak times (times other than the ones described\nbelow).</td>\n</tr>\n\n<tr>\n<td>PeakTime</td>\n\n<td>Fare during peak times (weekdays from opening to 9:30 AM and\n3-7 PM, and weekends from midnight to closing).</td>\n</tr>\n\n<tr>\n<td>SeniorDisabled</td>\n\n<td>\nReduced fare for <a href=\n\"http://www.wmata.com/fares/reduced.cfm\">senior citizens or\npeople with disabilities</a>.\n</td>\n</tr>\n</tbody>\n</table>",
        "operationId" : "5476364f031f5909e4fe331b",
        "parameters" : [ {
          "name" : "FromStationCode",
          "in" : "query",
          "description" : "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
          "schema" : {
            "type" : "string",
            "default" : "E10",
            "enum" : [ "E10" ]
          }
        }, {
          "name" : "ToStationCode",
          "in" : "query",
          "description" : "Station code for the destination station.  Use the Station List method to return a list of all station codes.",
          "schema" : {
            "type" : "string",
            "default" : "J03",
            "enum" : [ "J03" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/xml" : {
                "example" : "<StationToStationInfoResp xmlns=\"http://www.wmata.com\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <StationToStationInfos>\n        <StationToStationInfo>\n            <CompositeMiles>25.41</CompositeMiles>\n            <DestinationStation>J03</DestinationStation>\n            <RailFare>\n                <OffPeakTime>3.60</OffPeakTime>\n                <PeakTime>5.90</PeakTime>\n                <SeniorDisabled>2.95</SeniorDisabled>\n            </RailFare>\n            <RailTime>66</RailTime>\n            <SourceStation>E10</SourceStation>\n        </StationToStationInfo>\n    </StationToStationInfos>\n</StationToStationInfoResp>"
              }
            }
          }
        }
      }
    },
    "/StationEntrances" : {
      "get" : {
        "summary" : "XML - Station Entrances",
        "description" : "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a list of nearby station entrances based on latitude, longitude, and\r\nradius (meters). Omit search parameters to return all station entrances.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Entrances</td>\r\n\r\n<td>\r\nArray containing detailed information about station entrances\r\n(<a href=\"#StationEntrance\">StationEntrance</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationEntrance\" name=\r\n\"StationEntrance\">StationEntrance Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Description</td>\r\n\r\n<td>Additional information for the entrance, if available.\r\nCurrently available data usually shows the same value as the Name\r\nelement.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td style=\"text-decoration: line-through\">ID</td>\r\n\r\n<td><span class=\"text-danger\">Deprecated.</span></td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lat</td>\r\n\r\n<td>Latitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lon</td>\r\n\r\n<td>Longitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Name</td>\r\n\r\n<td>Name of the entrance (usually the station name and nearest\r\nintersection).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode1</td>\r\n\r\n<td>The station code associated with this entrance. Use this value\r\nin other rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode2</td>\r\n\r\n<td>For stations containing multiple platforms (e.g.: Gallery\r\nPlace, Fort Totten, L'Enfant Plaza, and Metro Center), the other\r\nstation code.</td>\r\n</tr>\r\n</tbody>\r\n</table>",
        "operationId" : "5476364f031f5909e4fe3317",
        "parameters" : [ {
          "name" : "Lat",
          "in" : "query",
          "description" : "Center point Latitude, required if Longitude and Radius are specified.",
          "schema" : {
            "type" : "number",
            "default" : 38.8978168,
            "enum" : [ 38.8978168 ]
          }
        }, {
          "name" : "Lon",
          "in" : "query",
          "description" : "Center point Longitude, required if Latitude and Radius are specified.",
          "schema" : {
            "type" : "number",
            "default" : -77.0404246,
            "enum" : [ -77.0404246 ]
          }
        }, {
          "name" : "Radius",
          "in" : "query",
          "description" : "Radius (meters) to include in the search area, required if Latitude and Longitude are specified.",
          "schema" : {
            "type" : "number",
            "default" : 500.0,
            "enum" : [ 500 ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/xml" : {
                "example" : "<StationEntrancesResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Entrances>\n        <StationEntrance>\n            <Description>Farragut West, 17th &amp; I St</Description>\n            <ID>100</ID>\n            <Lat>38.901098</Lat>\n            <Lon>-77.039293</Lon>\n            <Name>Farragut West 17th &amp; I St</Name>\n            <StationCode1>C03</StationCode1>\n            <StationCode2/>\n        </StationEntrance>\n        <StationEntrance>\n            <Description>Farragut West, 18th &amp; I St</Description>\n            <ID>101</ID>\n            <Lat>38.901453</Lat>\n            <Lon>-77.042093</Lon>\n            <Name>Farragut West 18th &amp; I St</Name>\n            <StationCode1>C03</StationCode1>\n            <StationCode2/>\n        </StationEntrance>\n    </Entrances>\n</StationEntrancesResp>"
              }
            }
          }
        }
      }
    },
    "/StationInfo" : {
      "get" : {
        "summary" : "XML - Station Information",
        "description" : "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns station location and address information based on a given\nStationCode.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>Address</td>\n\n<td>\nStructure describing <a href=\"#Address\">address</a> information.\n</td>\n</tr>\n\n<tr>\n<td>Code</td>\n\n<td>Station code. Repeated from input.</td>\n</tr>\n\n<tr>\n<td>Lat</td>\n\n<td>Latitude.</td>\n</tr>\n\n<tr>\n<td>LineCode1</td>\n\n<td>Two-letter abbreviation for one line (e.g.: RD, BL, YL, OR, GR, or SV) served by this station. If the station has an additional platform, the lines served by the other platform are listed in the LineCodeX values for the record associated with the StationCode found in StationTogether1.</td>\n</tr>\n\n<tr>\n<td>LineCode2</td>\n\n<td>Additional line served by this station, if applicable.</td>\n</tr>\n\n<tr>\n<td>LineCode3</td>\n\n<td>Additional line served by this station, if applicable.</td>\n</tr>\n\n<tr>\n<td>LineCode4</td>\n\n<td>Additional line served by this station, if applicable. Currently not in use.</td>\n</tr>\n\n<td>Lon</td>\n\n<td>Longitude.</td>\n</tr>\n\n<tr>\n<td>Name</td>\n\n<td>Station name.</td>\n</tr>\n\n<tr>\n<td>StationTogether1</td>\n\n<td>For stations with multiple platforms (e.g.: Gallery Place, Fort\nTotten, L'Enfant Plaza, and Metro Center), the additional\nStationCode will be listed here.</td>\n</tr>\n\n<tr>\n<td>StationTogether2</td>\n\n<td>Similar in function to StationTogether2. Currently not in\nuse.</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a name=\"Address\">Address Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>City</td>\n\n<td>City.</td>\n</tr>\n\n<tr>\n<td>State</td>\n\n<td>State (abbreviated).</td>\n</tr>\n\n<tr>\n<td>Street</td>\n\n<td>Street address (for GPS use).</td>\n</tr>\n\n<tr>\n<td>Zip</td>\n\n<td>Zip code.</td>\n</tr>\n</tbody>\n</table>",
        "operationId" : "5476364f031f5909e4fe3318",
        "parameters" : [ {
          "name" : "StationCode",
          "in" : "query",
          "description" : "Station code.  Use the Station List method to return a list of all station codes.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "A01",
            "enum" : [ "A01" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/xml" : {
                "example" : "<Station\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Address>\n        <City>Washington</City>\n        <State>DC</State>\n        <Street>607 13th St. NW</Street>\n        <Zip>20005</Zip>\n    </Address>\n    <Code>A01</Code>\n    <Lat>38.8983144732</Lat>\n    <LineCode1>RD</LineCode1>\n    <LineCode2 i:nil=\"true\"/>\n    <LineCode3 i:nil=\"true\"/>\n    <LineCode4 i:nil=\"true\"/>\n    <Lon>-77.0280779971</Lon>\n    <Name>Metro Center</Name>\n    <StationTogether1>C01</StationTogether1>\n    <StationTogether2/>\n</Station>"
              }
            }
          }
        }
      }
    },
    "/StationParking" : {
      "get" : {
        "summary" : "XML - Parking Information",
        "description" : "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns parking information at a station based on a given StationCode. Omit\nthe StationCode to return parking information for all stations.</p>\n\n<p>If a station has no parking, the StationsParking element will contain no\nchild elements.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>StationsParking</td>\n\n<td>\nArray containing station parking information (<a href=\n\"#StationParking\">StationParking</a>).\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"StationParking\" name=\"StationParking\">StationParking\nElements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>Code</td>\n\n<td>Station code. Useful when returning parking information for all\nstations. Use this value in other rail-related APIs to retrieve\ndata about a station.</td>\n</tr>\n\n<tr>\n<td>Notes</td>\n\n<td>When not NULL, provides additional parking resources such as\nnearby lots.</td>\n</tr>\n\n<tr>\n<td>AllDayParking</td>\n\n<td>\nStructure describing <a href=\"#AllDayParking\">all-day\nparking</a> options.\n</td>\n</tr>\n\n<tr>\n<td>ShortTermParking</td>\n\n<td>\nStructure describing <a href=\"#ShortTermParking\">short-term\nparking</a> options.\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"AllDayParking\" name=\"AllDayParking\">AllDayParking\nElements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>TotalCount</td>\n\n<td>Number of all-day parking spots available at a station.</td>\n</tr>\n\n<tr>\n<td>RiderCost</td>\n\n<td>All-day cost per day (weekday) for Metro riders. NULL when no all-day\nspots are available. For most stations, this value is identical to\nthe NonRiderCost.<br>\n<br>\nFor cases where the NonRiderCost is different, the lower cost per\nday requires a valid rail trip using a SmarTrip&reg; card\noriginating from a station other than the one where the patron\nparked. To receive this lower rate, patrons must pay for their\nparking with the same SmarTrip&reg; card used to enter/exit\nMetrorail, and must exit the parking lot within two hours of\nexiting Metrorail.</td>\n</tr>\n\n<tr>\n<td>NonRiderCost</td>\n\n<td>All-day cost per day (weekday) for non-Metro riders. NULL when no all-day\nspots are available.</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"ShortTermParking\" name=\n\"ShortTermParking\">ShortTermParking Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>SaturdayRiderCost</td>\n\n<td>Similar to RiderCost, except denoting Saturday prices.</td>\n</tr>\n\n<tr>\n<td>SaturdayNonRiderCost</td>\n\n<td>Similar to NonRiderCost, except denoting Saturday prices.</td>\n</tr>\n\n<tr>\n<td>TotalCount</td>\n\n<td>Number of short-term parking spots available at a station\n(parking meters).</td>\n</tr>\n\n<tr>\n<td>Notes</td>\n\n<td>Misc. information relating to short-term parking. NULL when no\nshort-term spots are available.</td>\n</tr>\n</tbody>\n</table>",
        "operationId" : "5476364f031f5909e4fe3315",
        "parameters" : [ {
          "name" : "StationCode",
          "in" : "query",
          "description" : "Station code.  Use the Station List method to return a list of all station codes.",
          "schema" : {
            "type" : "string",
            "enum" : [ "E08", "F06" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/xml" : {
                "example" : "<StationParkingResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <StationsParking>\n        <StationParking>\n            <Code>F06</Code>\n            <Notes>325 spaces metered for 12-hr. max. @ $1.00 per 60 mins.</Notes>\n            <AllDayParking>\n                <TotalCount>808</TotalCount>\n                <RiderCost>4.45</RiderCost>\n                <NonRiderCost>4.45</NonRiderCost>\n                <SaturdayRiderCost>2.00</SaturdayRiderCost>\n                <SaturdayNonRiderCost>2.00</SaturdayNonRiderCost>\n            </AllDayParking>\n            <ShortTermParking>\n                <TotalCount>15</TotalCount>\n                <Notes>Short term parking available 5 am - 2 am, time limit 12 hours</Notes>\n            </ShortTermParking>\n        </StationParking>\n    </StationsParking>\n</StationParkingResp>"
              }
            }
          }
        }
      }
    },
    "/StationTimes" : {
      "get" : {
        "summary" : "XML - Station Timings",
        "description" : "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns opening and scheduled first/last train times based on a given\r\nStationCode. Omit the StationCode to return timing information for all\r\nstations.</p>\r\n\r\n<p>Note that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\r\nfull set of train times at such stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>StationTimes</td>\r\n\r\n<td>\r\nArray containing station timing information (<a href=\r\n\"#StationTime\">StationTime</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationTime\" name=\"StationTime\">StationTime\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationName</td>\r\n\r\n<td>Full name of the station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>*Day Elements</td>\r\n\r\n<td>\r\nContainer elements containing timing information based on\r\n<a href=\"#dow\">day of the week.</a>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"dow\" name=\"dow\">Monday/Tuesday/Wednesday/etc.\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>OpeningTime</td>\r\n\r\n<td>Station opening time. Format is HH:mm.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>FirstTrains</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#first\">first train</a>\r\ninformation.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LastTrains</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#last\">last train</a>\r\ninformation.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"first\" name=\"first\">FirstTrains Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Time</td>\r\n\r\n<td>First train leaves the station at this time. Format is\r\nHH:mm.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Station code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"last\" name=\"last\">LastTrains Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Time</td>\r\n\r\n<td>Last train leaves the station at this time. Format is HH:mm.\r\nNote that when the time is AM, it signifies the next day. For\r\nexample, a value of 02:30 under a Saturday element means the last\r\ntrain leaves on Sunday at 2:30 AM.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Station code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n</tbody>\r\n</table>",
        "operationId" : "5476364f031f5909e4fe331a",
        "parameters" : [ {
          "name" : "StationCode",
          "in" : "query",
          "description" : "Station code.  Use the Station List method to return a list of all station codes.",
          "schema" : {
            "type" : "string",
            "default" : "E10",
            "enum" : [ "E10" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/xml" : {
                "example" : "<StationTimeResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <StationTimes>\n        <StationTime>\n            <Code>E10</Code>\n            <StationName>Greenbelt</StationName>\n            <Monday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Monday>\n            <Tuesday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Tuesday>\n            <Wednesday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Wednesday>\n            <Thursday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Thursday>\n            <Friday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>02:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Friday>\n            <Saturday>\n                <OpeningTime>06:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>07:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>02:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Saturday>\n            <Sunday>\n                <OpeningTime>06:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>07:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Sunday>\n        </StationTime>\n    </StationTimes>\n</StationTimeResp>"
              }
            }
          }
        }
      }
    },
    "/Stations" : {
      "get" : {
        "summary" : "XML - Station List",
        "description" : "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns a list of station location and address information based on a given\nLineCode. Omit the LineCode to return all stations. The response is an array of\nobjects identical to those returned in the Station Information method.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>Stations</td>\n\n<td>\nArray containing station information (<a href=\n\"#Station\">Station</a>).\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"Station\" name=\"Station\">Station Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>Address</td>\n\n<td>\nStructure describing <a href=\"#Address\">address</a> information.\n</td>\n</tr>\n\n<tr>\n<td>Code</td>\n\n<td>Station code. Repeated from input.</td>\n</tr>\n\n<tr>\n<td>Lat</td>\n\n<td>Latitude.</td>\n</tr>\n\n<tr>\n<td>LineCode1</td>\n\n<td>Two-letter abbreviation for one line (e.g.: RD, BL, YL, OR, GR, or SV) served by this station. If the station has an additional platform, the lines served by the other platform are listed in the LineCodeX values for the record associated with the StationCode found in StationTogether1.</td>\n</tr>\n\n<tr>\n<td>LineCode2</td>\n\n<td>Additional line served by this station, if applicable.</td>\n</tr>\n\n<tr>\n<td>LineCode3</td>\n\n<td>Additional line served by this station, if applicable.</td>\n</tr>\n\n<tr>\n<td>LineCode4</td>\n\n<td>Additional line served by this station, if applicable. Currently not in use.</td>\n</tr>\n\n<tr>\n<td>Lon</td>\n\n<td>Longitude.</td>\n</tr>\n\n<tr>\n<td>Name</td>\n\n<td>Station name.</td>\n</tr>\n\n<tr>\n<td>StationTogether1</td>\n\n<td>For stations with multiple platforms (e.g.: Gallery Place, Fort\nTotten, L'Enfant Plaza, and Metro Center), the additional\nStationCode will be listed here.</td>\n</tr>\n\n<tr>\n<td>StationTogether2</td>\n\n<td>Similar in function to StationTogether2. Currently not in\nuse.</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"Address\" name=\"Address\">Address Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>City</td>\n\n<td>City.</td>\n</tr>\n\n<tr>\n<td>State</td>\n\n<td>State (abbreviated).</td>\n</tr>\n\n<tr>\n<td>Street</td>\n\n<td>Street address (for GPS use).</td>\n</tr>\n\n<tr>\n<td>Zip</td>\n\n<td>Zip code.</td>\n</tr>\n</tbody>\n</table>",
        "operationId" : "5476364f031f5909e4fe3319",
        "parameters" : [ {
          "name" : "LineCode",
          "in" : "query",
          "description" : "Two-letter line code abbreviation:\n\n<ul>\n<li>RD - Red</li>\n<li>YL - Yellow</li>\n<li>GR - Green</li>\n<li>BL - Blue</li>\n<li>OR - Orange</li>\n<li>SV - Silver</li>\n</ul>",
          "schema" : {
            "type" : "string",
            "enum" : [ "RD", "YL", "GR", "BL", "OR", "SV" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/xml" : {
                "example" : "\n\n<StationsResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Stations>\n        <Station>\n            <Address>\n                <City>Rockville</City>\n                <State>MD</State>\n                <Street>15903 Somerville Drive</Street>\n                <Zip>20855</Zip>\n            </Address>\n            <Code>A15</Code>\n            <Lat>39.1199273249</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.1646273343</Lon>\n            <Name>Shady Grove</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Rockville</City>\n                <State>MD</State>\n                <Street>251 Hungerford Drive</Street>\n                <Zip>20850</Zip>\n            </Address>\n            <Code>A14</Code>\n            <Lat>39.0843216075</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.1461253392</Lon>\n            <Name>Rockville</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Rockville</City>\n                <State>MD</State>\n                <Street>1600 Chapman Avenue</Street>\n                <Zip>20852</Zip>\n            </Address>\n            <Code>A13</Code>\n            <Lat>39.0624676517</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.1208179517</Lon>\n            <Name>Twinbrook</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Rockville</City>\n                <State>MD</State>\n                <Street>5500 Marinelli Road</Street>\n                <Zip>20852</Zip>\n            </Address>\n            <Code>A12</Code>\n            <Lat>39.0481513573</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.112829859</Lon>\n            <Name>White Flint</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Bethesda</City>\n                <State>MD</State>\n                <Street>10300 Rockville Pike</Street>\n                <Zip>20852</Zip>\n            </Address>\n            <Code>A11</Code>\n            <Lat>39.02926895</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.10384972</Lon>\n            <Name>Grosvenor</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Bethesda</City>\n                <State>MD</State>\n                <Street>8810 Rockville Pike</Street>\n                <Zip>20814</Zip>\n            </Address>\n            <Code>A10</Code>\n            <Lat>39.0000564843</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0969522905</Lon>\n            <Name>Medical Center</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Bethesda</City>\n                <State>MD</State>\n                <Street>7450 Wisconsin Avenue</Street>\n                <Zip>20814</Zip>\n            </Address>\n            <Code>A09</Code>\n            <Lat>38.9843936603</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0941291922</Lon>\n            <Name>Bethesda</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>5337 Wisconsin Avenue NW</Street>\n                <Zip>20015</Zip>\n            </Address>\n            <Code>A08</Code>\n            <Lat>38.9594838736</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.084995805</Lon>\n            <Name>Friendship Heights</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>4501 Wisconsin Avenue NW</Street>\n                <Zip>20016</Zip>\n            </Address>\n            <Code>A07</Code>\n            <Lat>38.9488514351</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0795873255</Lon>\n            <Name>Tenleytown</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>4200 Connecticut Avenue NW</Street>\n                <Zip>20008</Zip>\n            </Address>\n            <Code>A06</Code>\n            <Lat>38.9432652883</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0629861805</Lon>\n            <Name>Van Ness UDC</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>3599 Connecticut Avenue NW</Street>\n                <Zip>20008</Zip>\n            </Address>\n            <Code>A05</Code>\n            <Lat>38.9347628908</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0580425191</Lon>\n            <Name>Cleveland Park</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>2700 Connecticut Ave., NW</Street>\n                <Zip>20008</Zip>\n            </Address>\n            <Code>A04</Code>\n            <Lat>38.9250851371</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0524180207</Lon>\n            <Name>Woodley Park Zoo</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>1525 20th St. NW</Street>\n                <Zip>20036</Zip>\n            </Address>\n            <Code>A03</Code>\n            <Lat>38.9095980575</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0434143597</Lon>\n            <Name>Dupont Circle</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>1001 Connecticut Avenue NW</Street>\n                <Zip>20036</Zip>\n            </Address>\n            <Code>A02</Code>\n            <Lat>38.9032019462</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0397008272</Lon>\n            <Name>Farragut North</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>607 13th St. NW</Street>\n                <Zip>20005</Zip>\n            </Address>\n            <Code>A01</Code>\n            <Lat>38.8983144732</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0280779971</Lon>\n            <Name>Metro Center</Name>\n            <StationTogether1>C01</StationTogether1>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>630 H St. NW</Street>\n                <Zip>20001</Zip>\n            </Address>\n            <Code>B01</Code>\n            <Lat>38.8983168097</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0219153904</Lon>\n            <Name>Gallery Place</Name>\n            <StationTogether1>F01</StationTogether1>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>450 F Street NW</Street>\n                <Zip>20001</Zip>\n            </Address>\n            <Code>B02</Code>\n            <Lat>38.8960903176</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0166389566</Lon>\n            <Name>Judiciary Square</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>701 First St. NE</Street>\n                <Zip>20002</Zip>\n            </Address>\n            <Code>B03</Code>\n            <Lat>38.8977660392</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0074142921</Lon>\n            <Name>Union Station</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>200 Florida Ave N.E.</Street>\n                <Zip>20002</Zip>\n            </Address>\n            <Code>B35</Code>\n            <Lat>38.9070162121</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0030204472</Lon>\n            <Name>New York Avenue</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>919 Rhode Island Avenue NE</Street>\n                <Zip>20018</Zip>\n            </Address>\n            <Code>B04</Code>\n            <Lat>38.9210596891</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-76.9959369166</Lon>\n            <Name>Rhode Island Avenue</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>801 Michigan Avenue NE</Street>\n                <Zip>20017</Zip>\n            </Address>\n            <Code>B05</Code>\n            <Lat>38.9332109913</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-76.9945342851</Lon>\n            <Name>Brookland</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>550 Galloway Street NE</Street>\n                <Zip>20011</Zip>\n            </Address>\n            <Code>B06</Code>\n            <Lat>38.9518467675</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0022030768</Lon>\n            <Name>Fort Totten</Name>\n            <StationTogether1>E06</StationTogether1>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>327 Cedar Street NW</Street>\n                <Zip>20012</Zip>\n            </Address>\n            <Code>B07</Code>\n            <Lat>38.976078531</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0181766987</Lon>\n            <Name>Takoma</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Silver Spring</City>\n                <State>MD</State>\n                <Street>8400 Colesville Road</Street>\n                <Zip>20910</Zip>\n            </Address>\n            <Code>B08</Code>\n            <Lat>38.9939493747</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0310178268</Lon>\n            <Name>Silver Spring</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Forest Glen</City>\n                <State>MD</State>\n                <Street>9730 Georgia Avenue</Street>\n                <Zip>20910</Zip>\n            </Address>\n            <Code>B09</Code>\n            <Lat>39.0149542752</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0429165548</Lon>\n            <Name>Forest Glen</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Silver Spring</City>\n                <State>MD</State>\n                <Street>11171 Georgia Avenue</Street>\n                <Zip>20902</Zip>\n            </Address>\n            <Code>B10</Code>\n            <Lat>39.0375271436</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0501070535</Lon>\n            <Name>Wheaton</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Silver Spring</City>\n                <State>MD</State>\n                <Street>12501 Georgia Avenue</Street>\n                <Zip>20906</Zip>\n            </Address>\n            <Code>B11</Code>\n            <Lat>39.0617837655</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0535573593</Lon>\n            <Name>Glenmont</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n    </Stations>\n</StationsResp>"
              }
            }
          }
        }
      }
    },
    "/json/jLines" : {
      "get" : {
        "summary" : "JSON - Lines",
        "description" : "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns information about all rail lines.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Lines</td>\r\n\r\n<td>\r\nArray containing line information (<a href=\"#Line\">Line</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"Line\" name=\"Line\">Line Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DisplayName</td>\r\n\r\n<td>Full name of line color.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>EndStationCode</td>\r\n\r\n<td>End station code. For example, will be E10 (Greenbelt) for the\r\nGreen Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>InternalDestination1</td>\r\n\r\n<td>Intermediate terminal station code. During normal service, some\r\ntrains on some lines might end their trip prior to the\r\nStartStationCode or EndStationCode. A good example is on the Red\r\nLine where some trains stop at A11 (Grosvenor) or B08 (Silver\r\nSpring). Empty string if not defined.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>InternalDestination2</td>\r\n\r\n<td>Similar to InternalDestination1.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StartStationCode</td>\r\n\r\n<td>Start station code. For example, will be F11 (Branch Avenue)\r\nfor the Green Line, A15 (Shady Grove) for the Red Line, etc. Use\r\nthis value in other rail-related APIs to retrieve data about a\r\nstation.</td>\r\n</tr>\r\n</tbody>\r\n</table>",
        "operationId" : "5476364f031f5909e4fe330c",
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"Lines\": [\n        {\n            \"DisplayName\": \"Green\",\n            \"EndStationCode\": \"E10\",\n            \"InternalDestination1\": \"\",\n            \"InternalDestination2\": \"\",\n            \"LineCode\": \"GR\",\n            \"StartStationCode\": \"F11\"\n        },\n        {\n            \"DisplayName\": \"Blue\",\n            \"EndStationCode\": \"G05\",\n            \"InternalDestination1\": \"\",\n            \"InternalDestination2\": \"\",\n            \"LineCode\": \"BL\",\n            \"StartStationCode\": \"J03\"\n        },\n        {\n            \"DisplayName\": \"Silver\",\n            \"EndStationCode\": \"G05\",\n            \"InternalDestination1\": \"\",\n            \"InternalDestination2\": \"\",\n            \"LineCode\": \"SV\",\n            \"StartStationCode\": \"N06\"\n        },\n        {\n            \"DisplayName\": \"Red\",\n            \"EndStationCode\": \"B11\",\n            \"InternalDestination1\": \"A11\",\n            \"InternalDestination2\": \"B08\",\n            \"LineCode\": \"RD\",\n            \"StartStationCode\": \"A15\"\n        },\n        {\n            \"DisplayName\": \"Orange\",\n            \"EndStationCode\": \"D13\",\n            \"InternalDestination1\": \"\",\n            \"InternalDestination2\": \"\",\n            \"LineCode\": \"OR\",\n            \"StartStationCode\": \"K08\"\n        },\n        {\n            \"DisplayName\": \"Yellow\",\n            \"EndStationCode\": \"E06\",\n            \"InternalDestination1\": \"E01\",\n            \"InternalDestination2\": \"\",\n            \"LineCode\": \"YL\",\n            \"StartStationCode\": \"C15\"\n        }\n    ]\n}"
              }
            }
          }
        }
      }
    },
    "/json/jPath" : {
      "get" : {
        "summary" : "JSON - Path Between Stations",
        "description" : "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a set of ordered stations and distances between two stations on the\r\n<em>same line</em>.</p>\r\n\r\n<p>Note that this method is not suitable on its own as a pathfinding solution\r\nbetween stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Path</td>\r\n\r\n<td>\r\nArray containing path details (<a href=\r\n\"#MetroPathItem\">MetroPathItem</a>)\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"MetroPathItem\" name=\"MetroPathItem\">MetroPathItem\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DistanceToPrev</td>\r\n\r\n<td>Distance in feet to the previous station in the list.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) this station's platform is on.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>SeqNum</td>\r\n\r\n<td>Ordered sequence number.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode</td>\r\n\r\n<td>Station code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationName</td>\r\n\r\n<td>Full name for this station, as shown on the WMATA website.</td>\r\n</tr>\r\n</tbody>\r\n</table>",
        "operationId" : "5476364f031f5909e4fe330e",
        "parameters" : [ {
          "name" : "FromStationCode",
          "in" : "query",
          "description" : "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "N06",
            "enum" : [ "N06" ]
          }
        }, {
          "name" : "ToStationCode",
          "in" : "query",
          "description" : "Station code for the destination station.  Use the Station List method to return a list of all station codes.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "G05",
            "enum" : [ "G05" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"Path\": [\n        {\n            \"DistanceToPrev\": 0,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 1,\n            \"StationCode\": \"N06\",\n            \"StationName\": \"Wiehle-Reston East\"\n        },\n        {\n            \"DistanceToPrev\": 30867,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 2,\n            \"StationCode\": \"N04\",\n            \"StationName\": \"Spring Hill\"\n        },\n        {\n            \"DistanceToPrev\": 3634,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 3,\n            \"StationCode\": \"N03\",\n            \"StationName\": \"Greensboro\"\n        },\n        {\n            \"DistanceToPrev\": 3902,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 4,\n            \"StationCode\": \"N02\",\n            \"StationName\": \"Tysons Corner\"\n        },\n        {\n            \"DistanceToPrev\": 3440,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 5,\n            \"StationCode\": \"N01\",\n            \"StationName\": \"McLean\"\n        },\n        {\n            \"DistanceToPrev\": 24745,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 6,\n            \"StationCode\": \"K05\",\n            \"StationName\": \"E Falls Church\"\n        },\n        {\n            \"DistanceToPrev\": 13156,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 7,\n            \"StationCode\": \"K04\",\n            \"StationName\": \"Ballston\"\n        },\n        {\n            \"DistanceToPrev\": 2980,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 8,\n            \"StationCode\": \"K03\",\n            \"StationName\": \"Virginia Square\"\n        },\n        {\n            \"DistanceToPrev\": 2473,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 9,\n            \"StationCode\": \"K02\",\n            \"StationName\": \"Clarendon\"\n        },\n        {\n            \"DistanceToPrev\": 2687,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 10,\n            \"StationCode\": \"K01\",\n            \"StationName\": \"Court House\"\n        },\n        {\n            \"DistanceToPrev\": 4936,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 11,\n            \"StationCode\": \"C05\",\n            \"StationName\": \"Rosslyn\"\n        },\n        {\n            \"DistanceToPrev\": 6993,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 12,\n            \"StationCode\": \"C04\",\n            \"StationName\": \"Foggy Bottom\"\n        },\n        {\n            \"DistanceToPrev\": 2783,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 13,\n            \"StationCode\": \"C03\",\n            \"StationName\": \"Farragut West\"\n        },\n        {\n            \"DistanceToPrev\": 2001,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 14,\n            \"StationCode\": \"C02\",\n            \"StationName\": \"McPherson Square\"\n        },\n        {\n            \"DistanceToPrev\": 2359,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 15,\n            \"StationCode\": \"C01\",\n            \"StationName\": \"Metro Center\"\n        },\n        {\n            \"DistanceToPrev\": 1561,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 16,\n            \"StationCode\": \"D01\",\n            \"StationName\": \"Federal Triangle\"\n        },\n        {\n            \"DistanceToPrev\": 2016,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 17,\n            \"StationCode\": \"D02\",\n            \"StationName\": \"Smithsonian\"\n        },\n        {\n            \"DistanceToPrev\": 2643,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 18,\n            \"StationCode\": \"D03\",\n            \"StationName\": \"L'Enfant Plaza\"\n        },\n        {\n            \"DistanceToPrev\": 1757,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 19,\n            \"StationCode\": \"D04\",\n            \"StationName\": \"Federal Center SW\"\n        },\n        {\n            \"DistanceToPrev\": 3052,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 20,\n            \"StationCode\": \"D05\",\n            \"StationName\": \"Capitol South\"\n        },\n        {\n            \"DistanceToPrev\": 2703,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 21,\n            \"StationCode\": \"D06\",\n            \"StationName\": \"Eastern Market\"\n        },\n        {\n            \"DistanceToPrev\": 3289,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 22,\n            \"StationCode\": \"D07\",\n            \"StationName\": \"Potomac Avenue\"\n        },\n        {\n            \"DistanceToPrev\": 3750,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 23,\n            \"StationCode\": \"D08\",\n            \"StationName\": \"Stadium Armory\"\n        },\n        {\n            \"DistanceToPrev\": 12162,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 24,\n            \"StationCode\": \"G01\",\n            \"StationName\": \"Benning Road\"\n        },\n        {\n            \"DistanceToPrev\": 7779,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 25,\n            \"StationCode\": \"G02\",\n            \"StationName\": \"Capitol Heights\"\n        },\n        {\n            \"DistanceToPrev\": 5215,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 26,\n            \"StationCode\": \"G03\",\n            \"StationName\": \"Addison Road\"\n        },\n        {\n            \"DistanceToPrev\": 7960,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 27,\n            \"StationCode\": \"G04\",\n            \"StationName\": \"Morgan Blvd\"\n        },\n        {\n            \"DistanceToPrev\": 7256,\n            \"LineCode\": \"SV\",\n            \"SeqNum\": 28,\n            \"StationCode\": \"G05\",\n            \"StationName\": \"Largo Town Center\"\n        }\n    ]\n}"
              }
            }
          }
        }
      }
    },
    "/json/jSrcStationToDstStationInfo" : {
      "get" : {
        "summary" : "JSON - Station to Station Information",
        "description" : "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns a distance, fare information, and estimated travel time between any\ntwo stations, including those on different lines. Omit both parameters to\nretrieve data for all stations.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>StationToStationInfos</td>\n\n<td>\nArray containing station to station information (<a href=\n\"#StationToStationInfo\">StationToStationInfo</a>).\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"StationToStationInfo\" name=\n\"StationToStationInfo\">StationToStationInfo Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>CompositeMiles</td>\n\n<td>Average of distance traveled between two stations and straight-line distance (as used for WMATA fare calculations).  For more details, please refer to WMATA's <a href=\"https://www.wmata.com/about/records/public_docs/upload/Tariff-on-Fares-Annotated-2-12-18.pdf#page=6\" target=\"_blank\" rel=\"noopener noreferrer\">Tariff on Fares</a>.</td>\n</tr>\n\n<tr>\n<td>DestinationStation</td>\n\n<td>Destination station code. Use this value in other rail-related\nAPIs to retrieve data about a station.</td>\n</tr>\n\n<tr>\n<td>RailFare</td>\n\n<td>\nStructure containing <a href=\"#RailFare\">fare</a> information.\n</td>\n</tr>\n\n<tr>\n<td>RailTime</td>\n\n<td>Estimated travel time (schedule time) in minutes between the source and\ndestination station. This is not correlated to minutes <span class=\"text-info\">(Min)</span> in Real-Time Rail Predictions.</td>\n</tr>\n\n<tr>\n<td>SourceStation</td>\n\n<td>Origin station code. Use this value in other rail-related APIs\nto retrieve data about a station.</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"RailFare\" name=\"RailFare\">RailFare Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>OffPeakTime</td>\n\n<td>Fare during off-peak times (times other than the ones described\nbelow).</td>\n</tr>\n\n<tr>\n<td>PeakTime</td>\n\n<td>Fare during peak times (weekdays from opening to 9:30 AM and\n3-7 PM, and weekends from midnight to closing).</td>\n</tr>\n\n<tr>\n<td>SeniorDisabled</td>\n\n<td>\nReduced fare for <a href=\n\"http://www.wmata.com/fares/reduced.cfm\">senior citizens or\npeople with disabilities</a>.\n</td>\n</tr>\n</tbody>\n</table>",
        "operationId" : "5476364f031f5909e4fe3313",
        "parameters" : [ {
          "name" : "FromStationCode",
          "in" : "query",
          "description" : "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
          "schema" : {
            "type" : "string",
            "default" : "E10",
            "enum" : [ "E10" ]
          }
        }, {
          "name" : "ToStationCode",
          "in" : "query",
          "description" : "Station code for the destination station.  Use the Station List method to return a list of all station codes.",
          "schema" : {
            "type" : "string",
            "default" : "J03",
            "enum" : [ "J03" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"StationToStationInfos\": [\n        {\n            \"CompositeMiles\": 25.41,\n            \"DestinationStation\": \"J03\",\n            \"RailFare\": {\n                \"OffPeakTime\": 3.6,\n                \"PeakTime\": 5.9,\n                \"SeniorDisabled\": 2.95\n            },\n            \"RailTime\": 66,\n            \"SourceStation\": \"E10\"\n        }\n    ]\n}"
              }
            }
          }
        }
      }
    },
    "/json/jStationEntrances" : {
      "get" : {
        "summary" : "JSON - Station Entrances",
        "description" : "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a list of nearby station entrances based on latitude, longitude, and\r\nradius (meters). Omit search parameters to return all station entrances.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Entrances</td>\r\n\r\n<td>\r\nArray containing detailed information about station entrances\r\n(<a href=\"#StationEntrance\">StationEntrance</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationEntrance\" name=\r\n\"StationEntrance\">StationEntrance Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Description</td>\r\n\r\n<td>Additional information for the entrance, if available.\r\nCurrently available data usually shows the same value as the Name\r\nelement.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td style=\"text-decoration: line-through\">ID</td>\r\n\r\n<td><span class=\"text-danger\">Deprecated.</span></td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lat</td>\r\n\r\n<td>Latitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lon</td>\r\n\r\n<td>Longitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Name</td>\r\n\r\n<td>Name of the entrance (usually the station name and nearest\r\nintersection).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode1</td>\r\n\r\n<td>The station code associated with this entrance. Use this value\r\nin other rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode2</td>\r\n\r\n<td>For stations containing multiple platforms (e.g.: Gallery\r\nPlace, Fort Totten, L'Enfant Plaza, and Metro Center), the other\r\nstation code.</td>\r\n</tr>\r\n</tbody>\r\n</table>",
        "operationId" : "5476364f031f5909e4fe330f",
        "parameters" : [ {
          "name" : "Lat",
          "in" : "query",
          "description" : "Center point Latitude, required if Longitude and Radius are specified.",
          "schema" : {
            "type" : "number",
            "default" : 38.8978168,
            "enum" : [ 38.8978168 ]
          }
        }, {
          "name" : "Lon",
          "in" : "query",
          "description" : "Center point Longitude, required if Latitude and Radius are specified.",
          "schema" : {
            "type" : "number",
            "default" : -77.0404246,
            "enum" : [ -77.0404246 ]
          }
        }, {
          "name" : "Radius",
          "in" : "query",
          "description" : "Radius (meters) to include in the search area, required if Latitude and Longitude are specified.",
          "schema" : {
            "type" : "number",
            "default" : 500.0,
            "enum" : [ 500 ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"Entrances\": [\n        {\n            \"Description\": \"Farragut West, 17th & I St\",\n            \"ID\": \"100\",\n            \"Lat\": 38.901098,\n            \"Lon\": -77.039293,\n            \"Name\": \"Farragut West 17th & I St\",\n            \"StationCode1\": \"C03\",\n            \"StationCode2\": \"\"\n        },\n        {\n            \"Description\": \"Farragut West, 18th & I St\",\n            \"ID\": \"101\",\n            \"Lat\": 38.901453,\n            \"Lon\": -77.042093,\n            \"Name\": \"Farragut West 18th & I St\",\n            \"StationCode1\": \"C03\",\n            \"StationCode2\": \"\"\n        }\n    ]\n}"
              }
            }
          }
        }
      }
    },
    "/json/jStationInfo" : {
      "get" : {
        "summary" : "JSON - Station Information",
        "description" : "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns station location and address information based on a given\nStationCode.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>Address</td>\n\n<td>\nStructure describing <a href=\"#Address\">address</a> information.\n</td>\n</tr>\n\n<tr>\n<td>Code</td>\n\n<td>Station code. Repeated from input.</td>\n</tr>\n\n<tr>\n<td>Lat</td>\n\n<td>Latitude.</td>\n</tr>\n\n<tr>\n<td>LineCode1</td>\n\n<td>Two-letter abbreviation for one line (e.g.: RD, BL, YL, OR, GR, or SV) served by this station. If the station has an additional platform, the lines served by the other platform are listed in the LineCodeX values for the record associated with the StationCode found in StationTogether1.</td>\n</tr>\n\n<tr>\n<td>LineCode2</td>\n\n<td>Additional line served by this station, if applicable.</td>\n</tr>\n\n<tr>\n<td>LineCode3</td>\n\n<td>Additional line served by this station, if applicable.</td>\n</tr>\n\n<tr>\n<td>LineCode4</td>\n\n<td>Additional line served by this station, if applicable. Currently not in use.</td>\n</tr>\n\n<tr>\n<td>Lon</td>\n\n<td>Longitude.</td>\n</tr>\n\n<tr>\n<td>Name</td>\n\n<td>Station name.</td>\n</tr>\n\n<tr>\n<td>StationTogether1</td>\n\n<td>For stations with multiple platforms (e.g.: Gallery Place, Fort\nTotten, L'Enfant Plaza, and Metro Center), the additional\nStationCode will be listed here.</td>\n</tr>\n\n<tr>\n<td>StationTogether2</td>\n\n<td>Similar in function to StationTogether2. Currently not in\nuse.</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a name=\"Address\">Address Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>City</td>\n\n<td>City.</td>\n</tr>\n\n<tr>\n<td>State</td>\n\n<td>State (abbreviated).</td>\n</tr>\n\n<tr>\n<td>Street</td>\n\n<td>Street address (for GPS use).</td>\n</tr>\n\n<tr>\n<td>Zip</td>\n\n<td>Zip code.</td>\n</tr>\n</tbody>\n</table>",
        "operationId" : "5476364f031f5909e4fe3310",
        "parameters" : [ {
          "name" : "StationCode",
          "in" : "query",
          "description" : "Station code.  Use the Station List method to return a list of all station codes.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "A01",
            "enum" : [ "A01" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"Address\": {\n        \"City\": \"Washington\",\n        \"State\": \"DC\",\n        \"Street\": \"607 13th St. NW\",\n        \"Zip\": \"20005\"\n    },\n    \"Code\": \"A01\",\n    \"Lat\": 38.8983144732,\n    \"LineCode1\": \"RD\",\n    \"LineCode2\": null,\n    \"LineCode3\": null,\n    \"LineCode4\": null,\n    \"Lon\": -77.0280779971,\n    \"Name\": \"Metro Center\",\n    \"StationTogether1\": \"C01\",\n    \"StationTogether2\": \"\"\n}"
              }
            }
          }
        }
      }
    },
    "/json/jStationParking" : {
      "get" : {
        "summary" : "JSON - Parking Information",
        "description" : "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns parking information at a station based on a given StationCode. Omit\nthe StationCode to return parking information for all stations.</p>\n\n<p>If a station has no parking, the StationsParking element will contain no\nchild elements.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>StationsParking</td>\n\n<td>\nArray containing station parking information (<a href=\n\"#StationParking\">StationParking</a>).\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"StationParking\" name=\"StationParking\">StationParking\nElements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>Code</td>\n\n<td>Station code. Useful when returning parking information for all\nstations. Use this value in other rail-related APIs to retrieve\ndata about a station.</td>\n</tr>\n\n<tr>\n<td>Notes</td>\n\n<td>When not NULL, provides additional parking resources such as\nnearby lots.</td>\n</tr>\n\n<tr>\n<td>AllDayParking</td>\n\n<td>\nStructure describing <a href=\"#AllDayParking\">all-day\nparking</a> options.\n</td>\n</tr>\n\n<tr>\n<td>ShortTermParking</td>\n\n<td>\nStructure describing <a href=\"#ShortTermParking\">short-term\nparking</a> options.\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"AllDayParking\" name=\"AllDayParking\">AllDayParking\nElements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>TotalCount</td>\n\n<td>Number of all-day parking spots available at a station.</td>\n</tr>\n\n<tr>\n<td>RiderCost</td>\n\n<td>All-day cost per day (weekday) for Metro riders. NULL when no all-day\nspots are available. For most stations, this value is identical to\nthe NonRiderCost.<br>\n<br>\nFor cases where the NonRiderCost is different, the lower cost per\nday requires a valid rail trip using a SmarTrip&reg; card\noriginating from a station other than the one where the patron\nparked. To receive this lower rate, patrons must pay for their\nparking with the same SmarTrip&reg; card used to enter/exit\nMetrorail, and must exit the parking lot within two hours of\nexiting Metrorail.</td>\n</tr>\n\n<tr>\n<td>NonRiderCost</td>\n\n<td>All-day cost per day (weekday) for non-Metro riders. NULL when no all-day\nspots are available.</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"ShortTermParking\" name=\n\"ShortTermParking\">ShortTermParking Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>SaturdayRiderCost</td>\n\n<td>Similar to RiderCost, except denoting Saturday prices.</td>\n</tr>\n\n<tr>\n<td>SaturdayNonRiderCost</td>\n\n<td>Similar to NonRiderCost, except denoting Saturday prices.</td>\n</tr>\n\n<tr>\n<td>TotalCount</td>\n\n<td>Number of short-term parking spots available at a station\n(parking meters).</td>\n</tr>\n\n<tr>\n<td>Notes</td>\n\n<td>Misc. information relating to short-term parking. NULL when no\nshort-term spots are available.</td>\n</tr>\n</tbody>\n</table>",
        "operationId" : "5476364f031f5909e4fe330d",
        "parameters" : [ {
          "name" : "StationCode",
          "in" : "query",
          "description" : "Station code.  Use the Station List method to return a list of all station codes.",
          "schema" : {
            "type" : "string",
            "enum" : [ "E08", "F06" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"StationsParking\": [\n        {\n            \"Code\": \"F06\",\n            \"Notes\": \"325 spaces metered for 12-hr. max. @ $1.00 per 60 mins.\",\n            \"AllDayParking\": {\n                \"TotalCount\": 808,\n                \"RiderCost\": 4.45,\n                \"NonRiderCost\": 4.45,\n                \"SaturdayRiderCost\": 2,\n                \"SaturdayNonRiderCost\": 2,\n            },\n            \"ShortTermParking\": {\n                \"TotalCount\": 15,\n                \"Notes\": \"Short term parking available 5 am - 2 am, time limit 12 hours\"\n            }\n        }\n    ]\n}"
              }
            }
          }
        }
      }
    },
    "/json/jStationTimes" : {
      "get" : {
        "summary" : "JSON - Station Timings",
        "description" : "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns opening and scheduled first/last train times based on a given\r\nStationCode. Omit the StationCode to return timing information for all\r\nstations.</p>\r\n\r\n<p>Note that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\r\nfull set of train times at such stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>StationTimes</td>\r\n\r\n<td>\r\nArray containing station timing information (<a href=\r\n\"#StationTime\">StationTime</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationTime\" name=\"StationTime\">StationTime\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationName</td>\r\n\r\n<td>Full name of the station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>*Day Elements</td>\r\n\r\n<td>\r\nContainer elements containing timing information based on\r\n<a href=\"#dow\">day of the week.</a>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"dow\" name=\"dow\">Monday/Tuesday/Wednesday/etc.\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>OpeningTime</td>\r\n\r\n<td>Station opening time. Format is HH:mm.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>FirstTrains</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#first\">first train</a>\r\ninformation.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LastTrains</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#last\">last train</a>\r\ninformation.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"first\" name=\"first\">FirstTrains Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Time</td>\r\n\r\n<td>First train leaves the station at this time. Format is\r\nHH:mm.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Station code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"last\" name=\"last\">LastTrains Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Time</td>\r\n\r\n<td>Last train leaves the station at this time. Format is HH:mm.\r\nNote that when the time is AM, it signifies the next day. For\r\nexample, a value of 02:30 under a Saturday element means the last\r\ntrain leaves on Sunday at 2:30 AM.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Station code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n</tbody>\r\n</table>",
        "operationId" : "5476364f031f5909e4fe3312",
        "parameters" : [ {
          "name" : "StationCode",
          "in" : "query",
          "description" : "Station code.  Use the Station List method to return a list of all station codes.",
          "schema" : {
            "type" : "string",
            "default" : "E10",
            "enum" : [ "E10" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"StationTimes\": [\n        {\n            \"Code\": \"E10\",\n            \"StationName\": \"Greenbelt\",\n            \"Monday\": {\n                \"OpeningTime\": \"04:50\",\n                \"FirstTrains\": [\n                    {\n                        \"Time\": \"05:00\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ],\n                \"LastTrains\": [\n                    {\n                        \"Time\": \"23:30\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ]\n            },\n            \"Tuesday\": {\n                \"OpeningTime\": \"04:50\",\n                \"FirstTrains\": [\n                    {\n                        \"Time\": \"05:00\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ],\n                \"LastTrains\": [\n                    {\n                        \"Time\": \"23:30\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ]\n            },\n            \"Wednesday\": {\n                \"OpeningTime\": \"04:50\",\n                \"FirstTrains\": [\n                    {\n                        \"Time\": \"05:00\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ],\n                \"LastTrains\": [\n                    {\n                        \"Time\": \"23:30\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ]\n            },\n            \"Thursday\": {\n                \"OpeningTime\": \"04:50\",\n                \"FirstTrains\": [\n                    {\n                        \"Time\": \"05:00\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ],\n                \"LastTrains\": [\n                    {\n                        \"Time\": \"23:30\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ]\n            },\n            \"Friday\": {\n                \"OpeningTime\": \"04:50\",\n                \"FirstTrains\": [\n                    {\n                        \"Time\": \"05:00\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ],\n                \"LastTrains\": [\n                    {\n                        \"Time\": \"02:30\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ]\n            },\n            \"Saturday\": {\n                \"OpeningTime\": \"06:50\",\n                \"FirstTrains\": [\n                    {\n                        \"Time\": \"07:00\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ],\n                \"LastTrains\": [\n                    {\n                        \"Time\": \"02:30\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ]\n            },\n            \"Sunday\": {\n                \"OpeningTime\": \"06:50\",\n                \"FirstTrains\": [\n                    {\n                        \"Time\": \"07:00\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ],\n                \"LastTrains\": [\n                    {\n                        \"Time\": \"23:30\",\n                        \"DestinationStation\": \"F11\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
              }
            }
          }
        }
      }
    },
    "/json/jStations" : {
      "get" : {
        "summary" : "JSON - Station List",
        "description" : "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns a list of station location and address information based on a given\nLineCode. Omit the LineCode to return all stations. The response is an array of\nobjects identical to those returned in the Station Information method.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>Stations</td>\n\n<td>\nArray containing station information (<a href=\n\"#Station\">Station</a>).\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"Station\" name=\"Station\">Station Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>Address</td>\n\n<td>\nStructure describing <a href=\"#Address\">address</a> information.\n</td>\n</tr>\n\n<tr>\n<td>Code</td>\n\n<td>Station code. Repeated from input.</td>\n</tr>\n\n<tr>\n<td>Lat</td>\n\n<td>Latitude.</td>\n</tr>\n\n<tr>\n<td>LineCode1</td>\n\n<td>Two-letter abbreviation for one line (e.g.: RD, BL, YL, OR, GR, or SV) served by this station. If the station has an additional platform, the lines served by the other platform are listed in the LineCodeX values for the record associated with the StationCode found in StationTogether1.</td>\n</tr>\n\n<tr>\n<td>LineCode2</td>\n\n<td>Additional line served by this station, if applicable.</td>\n</tr>\n\n<tr>\n<td>LineCode3</td>\n\n<td>Additional line served by this station, if applicable.</td>\n</tr>\n\n<tr>\n<td>LineCode4</td>\n\n<td>Additional line served by this station, if applicable. Currently not in use.</td>\n</tr>\n\n<tr>\n<td>Lon</td>\n\n<td>Longitude.</td>\n</tr>\n\n<tr>\n<td>Name</td>\n\n<td>Station name.</td>\n</tr>\n\n<tr>\n<td>StationTogether1</td>\n\n<td>For stations with multiple platforms (e.g.: Gallery Place, Fort\nTotten, L'Enfant Plaza, and Metro Center), the additional\nStationCode will be listed here.</td>\n</tr>\n\n<tr>\n<td>StationTogether2</td>\n\n<td>Similar in function to StationTogether2. Currently not in\nuse.</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"Address\" name=\"Address\">Address Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>City</td>\n\n<td>City.</td>\n</tr>\n\n<tr>\n<td>State</td>\n\n<td>State (abbreviated).</td>\n</tr>\n\n<tr>\n<td>Street</td>\n\n<td>Street address (for GPS use).</td>\n</tr>\n\n<tr>\n<td>Zip</td>\n\n<td>Zip code.</td>\n</tr>\n</tbody>\n</table>",
        "operationId" : "5476364f031f5909e4fe3311",
        "parameters" : [ {
          "name" : "LineCode",
          "in" : "query",
          "description" : "Two-letter line code abbreviation:\n\n<ul>\n<li>RD - Red</li>\n<li>YL - Yellow</li>\n<li>GR - Green</li>\n<li>BL - Blue</li>\n<li>OR - Orange</li>\n<li>SV - Silver</li>\n</ul>",
          "schema" : {
            "type" : "string",
            "enum" : [ "RD", "YL", "GR", "BL", "OR", "SV" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default response code.",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"Stations\": [\n        {\n            \"Address\": {\n                \"City\": \"Rockville\",\n                \"State\": \"MD\",\n                \"Street\": \"15903 Somerville Drive\",\n                \"Zip\": \"20855\"\n            },\n            \"Code\": \"A15\",\n            \"Lat\": 39.1199273249,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.1646273343,\n            \"Name\": \"Shady Grove\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Rockville\",\n                \"State\": \"MD\",\n                \"Street\": \"251 Hungerford Drive\",\n                \"Zip\": \"20850\"\n            },\n            \"Code\": \"A14\",\n            \"Lat\": 39.0843216075,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.1461253392,\n            \"Name\": \"Rockville\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Rockville\",\n                \"State\": \"MD\",\n                \"Street\": \"1600 Chapman Avenue\",\n                \"Zip\": \"20852\"\n            },\n            \"Code\": \"A13\",\n            \"Lat\": 39.0624676517,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.1208179517,\n            \"Name\": \"Twinbrook\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Rockville\",\n                \"State\": \"MD\",\n                \"Street\": \"5500 Marinelli Road\",\n                \"Zip\": \"20852\"\n            },\n            \"Code\": \"A12\",\n            \"Lat\": 39.0481513573,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.112829859,\n            \"Name\": \"White Flint\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Bethesda\",\n                \"State\": \"MD\",\n                \"Street\": \"10300 Rockville Pike\",\n                \"Zip\": \"20852\"\n            },\n            \"Code\": \"A11\",\n            \"Lat\": 39.02926895,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.10384972,\n            \"Name\": \"Grosvenor\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Bethesda\",\n                \"State\": \"MD\",\n                \"Street\": \"8810 Rockville Pike\",\n                \"Zip\": \"20814\"\n            },\n            \"Code\": \"A10\",\n            \"Lat\": 39.0000564843,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0969522905,\n            \"Name\": \"Medical Center\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Bethesda\",\n                \"State\": \"MD\",\n                \"Street\": \"7450 Wisconsin Avenue\",\n                \"Zip\": \"20814\"\n            },\n            \"Code\": \"A09\",\n            \"Lat\": 38.9843936603,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0941291922,\n            \"Name\": \"Bethesda\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"5337 Wisconsin Avenue NW\",\n                \"Zip\": \"20015\"\n            },\n            \"Code\": \"A08\",\n            \"Lat\": 38.9594838736,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.084995805,\n            \"Name\": \"Friendship Heights\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"4501 Wisconsin Avenue NW\",\n                \"Zip\": \"20016\"\n            },\n            \"Code\": \"A07\",\n            \"Lat\": 38.9488514351,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0795873255,\n            \"Name\": \"Tenleytown\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"4200 Connecticut Avenue NW\",\n                \"Zip\": \"20008\"\n            },\n            \"Code\": \"A06\",\n            \"Lat\": 38.9432652883,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0629861805,\n            \"Name\": \"Van Ness UDC\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"3599 Connecticut Avenue NW\",\n                \"Zip\": \"20008\"\n            },\n            \"Code\": \"A05\",\n            \"Lat\": 38.9347628908,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0580425191,\n            \"Name\": \"Cleveland Park\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"2700 Connecticut Ave., NW\",\n                \"Zip\": \"20008\"\n            },\n            \"Code\": \"A04\",\n            \"Lat\": 38.9250851371,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0524180207,\n            \"Name\": \"Woodley Park Zoo\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"1525 20th St. NW\",\n                \"Zip\": \"20036\"\n            },\n            \"Code\": \"A03\",\n            \"Lat\": 38.9095980575,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0434143597,\n            \"Name\": \"Dupont Circle\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"1001 Connecticut Avenue NW\",\n                \"Zip\": \"20036\"\n            },\n            \"Code\": \"A02\",\n            \"Lat\": 38.9032019462,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0397008272,\n            \"Name\": \"Farragut North\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"607 13th St. NW\",\n                \"Zip\": \"20005\"\n            },\n            \"Code\": \"A01\",\n            \"Lat\": 38.8983144732,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0280779971,\n            \"Name\": \"Metro Center\",\n            \"StationTogether1\": \"C01\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"630 H St. NW\",\n                \"Zip\": \"20001\"\n            },\n            \"Code\": \"B01\",\n            \"Lat\": 38.8983168097,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0219153904,\n            \"Name\": \"Gallery Place\",\n            \"StationTogether1\": \"F01\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"450 F Street NW\",\n                \"Zip\": \"20001\"\n            },\n            \"Code\": \"B02\",\n            \"Lat\": 38.8960903176,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0166389566,\n            \"Name\": \"Judiciary Square\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"701 First St. NE\",\n                \"Zip\": \"20002\"\n            },\n            \"Code\": \"B03\",\n            \"Lat\": 38.8977660392,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0074142921,\n            \"Name\": \"Union Station\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"200 Florida Ave N.E.\",\n                \"Zip\": \"20002\"\n            },\n            \"Code\": \"B35\",\n            \"Lat\": 38.9070162121,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0030204472,\n            \"Name\": \"New York Avenue\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"919 Rhode Island Avenue NE\",\n                \"Zip\": \"20018\"\n            },\n            \"Code\": \"B04\",\n            \"Lat\": 38.9210596891,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -76.9959369166,\n            \"Name\": \"Rhode Island Avenue\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"801 Michigan Avenue NE\",\n                \"Zip\": \"20017\"\n            },\n            \"Code\": \"B05\",\n            \"Lat\": 38.9332109913,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -76.9945342851,\n            \"Name\": \"Brookland\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"550 Galloway Street NE\",\n                \"Zip\": \"20011\"\n            },\n            \"Code\": \"B06\",\n            \"Lat\": 38.9518467675,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0022030768,\n            \"Name\": \"Fort Totten\",\n            \"StationTogether1\": \"E06\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Washington\",\n                \"State\": \"DC\",\n                \"Street\": \"327 Cedar Street NW\",\n                \"Zip\": \"20012\"\n            },\n            \"Code\": \"B07\",\n            \"Lat\": 38.976078531,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0181766987,\n            \"Name\": \"Takoma\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Silver Spring\",\n                \"State\": \"MD\",\n                \"Street\": \"8400 Colesville Road\",\n                \"Zip\": \"20910\"\n            },\n            \"Code\": \"B08\",\n            \"Lat\": 38.9939493747,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0310178268,\n            \"Name\": \"Silver Spring\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Forest Glen\",\n                \"State\": \"MD\",\n                \"Street\": \"9730 Georgia Avenue\",\n                \"Zip\": \"20910\"\n            },\n            \"Code\": \"B09\",\n            \"Lat\": 39.0149542752,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0429165548,\n            \"Name\": \"Forest Glen\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Silver Spring\",\n                \"State\": \"MD\",\n                \"Street\": \"11171 Georgia Avenue\",\n                \"Zip\": \"20902\"\n            },\n            \"Code\": \"B10\",\n            \"Lat\": 39.0375271436,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0501070535,\n            \"Name\": \"Wheaton\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        },\n        {\n            \"Address\": {\n                \"City\": \"Silver Spring\",\n                \"State\": \"MD\",\n                \"Street\": \"12501 Georgia Avenue\",\n                \"Zip\": \"20906\"\n            },\n            \"Code\": \"B11\",\n            \"Lat\": 39.0617837655,\n            \"LineCode1\": \"RD\",\n            \"LineCode2\": null,\n            \"LineCode3\": null,\n            \"LineCode4\": null,\n            \"Lon\": -77.0535573593,\n            \"Name\": \"Glenmont\",\n            \"StationTogether1\": \"\",\n            \"StationTogether2\": \"\"\n        }\n    ]\n}"
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "apiKeyHeader" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      },
      "apiKeyQuery" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "query"
      }
    }
  }
}