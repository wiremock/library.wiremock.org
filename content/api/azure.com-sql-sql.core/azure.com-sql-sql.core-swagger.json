{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure SQL Database",
    "description" : "Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.",
    "version" : "2014-04-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors" : {
      "get" : {
        "tags" : [ "ServiceTierAdvisors" ],
        "description" : "Returns service tier advisors for specified database.",
        "operationId" : "ServiceTierAdvisors_ListByDatabase",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of database.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceTierAdvisorListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors/{serviceTierAdvisorName}" : {
      "get" : {
        "tags" : [ "ServiceTierAdvisors" ],
        "description" : "Gets a service tier advisor.",
        "operationId" : "ServiceTierAdvisors_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of database.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceTierAdvisorName",
          "in" : "path",
          "description" : "The name of service tier advisor.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceTierAdvisor"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{transparentDataEncryptionName}" : {
      "get" : {
        "tags" : [ "TransparentDataEncryption" ],
        "description" : "Gets a database's transparent data encryption configuration.",
        "operationId" : "TransparentDataEncryptions_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database for which the transparent data encryption applies.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transparentDataEncryptionName",
          "in" : "path",
          "description" : "The name of the transparent data encryption configuration.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "current" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransparentDataEncryption"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TransparentDataEncryption" ],
        "description" : "Creates or updates a database's transparent data encryption configuration.",
        "operationId" : "TransparentDataEncryptions_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database for which setting the transparent data encryption applies.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transparentDataEncryptionName",
          "in" : "path",
          "description" : "The name of the transparent data encryption configuration.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "current" ]
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for creating or updating transparent data encryption.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransparentDataEncryption"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransparentDataEncryption"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransparentDataEncryption"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{transparentDataEncryptionName}/operationResults" : {
      "get" : {
        "tags" : [ "TransparentDataEncryption" ],
        "description" : "Returns a database's transparent data encryption operation result.",
        "operationId" : "TransparentDataEncryptionActivities_ListByConfiguration",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database for which the transparent data encryption applies.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transparentDataEncryptionName",
          "in" : "path",
          "description" : "The name of the transparent data encryption configuration.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "current" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransparentDataEncryptionActivityListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolActivity" : {
      "get" : {
        "tags" : [ "ElasticPools" ],
        "description" : "Returns elastic pool activities.",
        "operationId" : "ElasticPoolActivities_ListByElasticPool",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elasticPoolName",
          "in" : "path",
          "description" : "The name of the elastic pool for which to get the current activity.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElasticPoolActivityListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolDatabaseActivity" : {
      "get" : {
        "tags" : [ "ElasticPools" ],
        "description" : "Returns activity on databases inside of an elastic pool.",
        "operationId" : "ElasticPoolDatabaseActivities_ListByElasticPool",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elasticPoolName",
          "in" : "path",
          "description" : "The name of the elastic pool.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElasticPoolDatabaseActivityListResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ElasticPoolActivity" : {
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The geo-location where the resource lives"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ElasticPoolActivityProperties"
          }
        },
        "description" : "Represents the activity on an elastic pool.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "ElasticPoolActivityListResult" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of elastic pool activities.",
            "items" : {
              "$ref" : "#/components/schemas/ElasticPoolActivity"
            }
          }
        },
        "description" : "Represents the response to a list elastic pool activity request."
      },
      "ElasticPoolActivityProperties" : {
        "type" : "object",
        "properties" : {
          "elasticPoolName" : {
            "type" : "string",
            "description" : "The name of the elastic pool.",
            "readOnly" : true
          },
          "endTime" : {
            "type" : "string",
            "description" : "The time the operation finished (ISO8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "The error code if available.",
            "format" : "int32",
            "readOnly" : true
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "The error message if available.",
            "readOnly" : true
          },
          "errorSeverity" : {
            "type" : "integer",
            "description" : "The error severity if available.",
            "format" : "int32",
            "readOnly" : true
          },
          "operation" : {
            "type" : "string",
            "description" : "The operation name.",
            "readOnly" : true
          },
          "operationId" : {
            "type" : "string",
            "description" : "The unique operation ID.",
            "format" : "uuid",
            "nullable" : false,
            "readOnly" : true
          },
          "percentComplete" : {
            "type" : "integer",
            "description" : "The percentage complete if available.",
            "format" : "int32",
            "readOnly" : true
          },
          "requestedDatabaseDtuCap" : {
            "type" : "integer",
            "description" : "The requested per database DTU cap.",
            "format" : "int32",
            "readOnly" : true
          },
          "requestedDatabaseDtuGuarantee" : {
            "type" : "integer",
            "description" : "The requested per database DTU guarantee.",
            "format" : "int32",
            "readOnly" : true
          },
          "requestedDatabaseDtuMax" : {
            "type" : "integer",
            "description" : "The requested max DTU per database if available.",
            "format" : "int32",
            "readOnly" : true
          },
          "requestedDatabaseDtuMin" : {
            "type" : "integer",
            "description" : "The requested min DTU per database if available.",
            "format" : "int32",
            "readOnly" : true
          },
          "requestedDtu" : {
            "type" : "integer",
            "description" : "The requested DTU for the pool if available.",
            "format" : "int32",
            "readOnly" : true
          },
          "requestedDtuGuarantee" : {
            "type" : "integer",
            "description" : "The requested DTU guarantee.",
            "format" : "int32",
            "readOnly" : true
          },
          "requestedElasticPoolName" : {
            "type" : "string",
            "description" : "The requested name for the elastic pool if available.",
            "readOnly" : true
          },
          "requestedStorageLimitInGB" : {
            "type" : "integer",
            "description" : "The requested storage limit for the pool in GB if available.",
            "format" : "int64",
            "readOnly" : true
          },
          "requestedStorageLimitInMB" : {
            "type" : "integer",
            "description" : "The requested storage limit in MB.",
            "format" : "int32",
            "readOnly" : true
          },
          "serverName" : {
            "type" : "string",
            "description" : "The name of the server the elastic pool is in.",
            "readOnly" : true
          },
          "startTime" : {
            "type" : "string",
            "description" : "The time the operation started (ISO8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "state" : {
            "type" : "string",
            "description" : "The current state of the operation.",
            "readOnly" : true
          }
        },
        "description" : "Represents the properties of an elastic pool."
      },
      "ElasticPoolDatabaseActivity" : {
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The geo-location where the resource lives"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ElasticPoolDatabaseActivityProperties"
          }
        },
        "description" : "Represents the activity on an elastic pool.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "ElasticPoolDatabaseActivityListResult" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of elastic pool database activities.",
            "items" : {
              "$ref" : "#/components/schemas/ElasticPoolDatabaseActivity"
            }
          }
        },
        "description" : "Represents the response to a list elastic pool database activity request."
      },
      "ElasticPoolDatabaseActivityProperties" : {
        "type" : "object",
        "properties" : {
          "currentElasticPoolName" : {
            "type" : "string",
            "description" : "The name of the current elastic pool the database is in if available.",
            "readOnly" : true
          },
          "currentServiceObjective" : {
            "type" : "string",
            "description" : "The name of the current service objective if available.",
            "readOnly" : true
          },
          "databaseName" : {
            "type" : "string",
            "description" : "The database name.",
            "readOnly" : true
          },
          "endTime" : {
            "type" : "string",
            "description" : "The time the operation finished (ISO8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "The error code if available.",
            "format" : "int32",
            "readOnly" : true
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "The error message if available.",
            "readOnly" : true
          },
          "errorSeverity" : {
            "type" : "integer",
            "description" : "The error severity if available.",
            "format" : "int32",
            "readOnly" : true
          },
          "operation" : {
            "type" : "string",
            "description" : "The operation name.",
            "readOnly" : true
          },
          "operationId" : {
            "type" : "string",
            "description" : "The unique operation ID.",
            "format" : "uuid",
            "nullable" : false,
            "readOnly" : true
          },
          "percentComplete" : {
            "type" : "integer",
            "description" : "The percentage complete if available.",
            "format" : "int32",
            "readOnly" : true
          },
          "requestedElasticPoolName" : {
            "type" : "string",
            "description" : "The name for the elastic pool the database is moving into if available.",
            "readOnly" : true
          },
          "requestedServiceObjective" : {
            "type" : "string",
            "description" : "The name of the requested service objective if available.",
            "readOnly" : true
          },
          "serverName" : {
            "type" : "string",
            "description" : "The name of the server the elastic pool is in.",
            "readOnly" : true
          },
          "startTime" : {
            "type" : "string",
            "description" : "The time the operation started (ISO8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "state" : {
            "type" : "string",
            "description" : "The current state of the operation.",
            "readOnly" : true
          }
        },
        "description" : "Represents the properties of an elastic pool database activity."
      },
      "OperationImpact" : {
        "type" : "object",
        "properties" : {
          "changeValueAbsolute" : {
            "type" : "number",
            "description" : "The absolute impact to dimension.",
            "format" : "double",
            "readOnly" : true
          },
          "changeValueRelative" : {
            "type" : "number",
            "description" : "The relative impact to dimension (null if not applicable)",
            "format" : "double",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the impact dimension.",
            "readOnly" : true
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit in which estimated impact to dimension is measured.",
            "readOnly" : true
          }
        },
        "description" : "The impact of an operation, both in absolute and relative terms."
      },
      "RecommendedIndex" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RecommendedIndexProperties"
          }
        },
        "description" : "Represents a database recommended index.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "RecommendedIndexProperties" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "description" : "The proposed index action. You can create a missing index, drop an unused index, or rebuild an existing index to improve its performance.",
            "readOnly" : true,
            "enum" : [ "Create", "Drop", "Rebuild" ]
          },
          "columns" : {
            "type" : "array",
            "description" : "Columns over which to build index",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "created" : {
            "type" : "string",
            "description" : "The UTC datetime showing when this resource was created (ISO8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "estimatedImpact" : {
            "type" : "array",
            "description" : "The estimated impact of doing recommended index action.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/OperationImpact"
            }
          },
          "includedColumns" : {
            "type" : "array",
            "description" : "The list of column names to be included in the index",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "indexScript" : {
            "type" : "string",
            "description" : "The full build index script",
            "readOnly" : true
          },
          "indexType" : {
            "type" : "string",
            "description" : "The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE)",
            "readOnly" : true,
            "enum" : [ "CLUSTERED", "NONCLUSTERED", "COLUMNSTORE", "CLUSTERED COLUMNSTORE" ]
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The UTC datetime of when was this resource last changed (ISO8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "reportedImpact" : {
            "type" : "array",
            "description" : "The values reported after index action is complete.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/OperationImpact"
            }
          },
          "schema" : {
            "type" : "string",
            "description" : "The schema where table to build index over resides",
            "readOnly" : true
          },
          "state" : {
            "type" : "string",
            "description" : "The current recommendation state.",
            "readOnly" : true,
            "enum" : [ "Active", "Pending", "Executing", "Verifying", "Pending Revert", "Reverting", "Reverted", "Ignored", "Expired", "Blocked", "Success" ]
          },
          "table" : {
            "type" : "string",
            "description" : "The table on which to build index.",
            "readOnly" : true
          }
        },
        "description" : "Represents the properties of a database recommended index."
      },
      "ServiceTierAdvisor" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ServiceTierAdvisorProperties"
          }
        },
        "description" : "Represents a Service Tier Advisor.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "ServiceTierAdvisorListResult" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of service tier advisors for specified database.",
            "items" : {
              "$ref" : "#/components/schemas/ServiceTierAdvisor"
            }
          }
        },
        "description" : "Represents the response to a list service tier advisor request."
      },
      "ServiceTierAdvisorProperties" : {
        "type" : "object",
        "properties" : {
          "activeTimeRatio" : {
            "type" : "number",
            "description" : "The activeTimeRatio for service tier advisor.",
            "format" : "double",
            "readOnly" : true
          },
          "avgDtu" : {
            "type" : "number",
            "description" : "Gets or sets avgDtu for service tier advisor.",
            "format" : "double",
            "readOnly" : true
          },
          "confidence" : {
            "type" : "number",
            "description" : "Gets or sets confidence for service tier advisor.",
            "format" : "double",
            "nullable" : false,
            "readOnly" : true
          },
          "currentServiceLevelObjective" : {
            "type" : "string",
            "description" : "Gets or sets currentServiceLevelObjective for service tier advisor.",
            "readOnly" : true
          },
          "currentServiceLevelObjectiveId" : {
            "type" : "string",
            "description" : "Gets or sets currentServiceLevelObjectiveId for service tier advisor.",
            "format" : "uuid",
            "readOnly" : true
          },
          "databaseSizeBasedRecommendationServiceLevelObjective" : {
            "type" : "string",
            "description" : "Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor.",
            "readOnly" : true
          },
          "databaseSizeBasedRecommendationServiceLevelObjectiveId" : {
            "type" : "string",
            "description" : "Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor.",
            "format" : "uuid",
            "readOnly" : true
          },
          "disasterPlanBasedRecommendationServiceLevelObjective" : {
            "type" : "string",
            "description" : "Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor.",
            "readOnly" : true
          },
          "disasterPlanBasedRecommendationServiceLevelObjectiveId" : {
            "type" : "string",
            "description" : "Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor.",
            "format" : "uuid",
            "readOnly" : true
          },
          "maxDtu" : {
            "type" : "number",
            "description" : "Gets or sets maxDtu for service tier advisor.",
            "format" : "double",
            "readOnly" : true
          },
          "maxSizeInGB" : {
            "type" : "number",
            "description" : "Gets or sets maxSizeInGB for service tier advisor.",
            "format" : "double",
            "readOnly" : true
          },
          "minDtu" : {
            "type" : "number",
            "description" : "Gets or sets minDtu for service tier advisor.",
            "format" : "double",
            "readOnly" : true
          },
          "observationPeriodEnd" : {
            "type" : "string",
            "description" : "The observation period start (ISO8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "observationPeriodStart" : {
            "type" : "string",
            "description" : "The observation period start (ISO8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "overallRecommendationServiceLevelObjective" : {
            "type" : "string",
            "description" : "Gets or sets overallRecommendationServiceLevelObjective for service tier advisor.",
            "readOnly" : true
          },
          "overallRecommendationServiceLevelObjectiveId" : {
            "type" : "string",
            "description" : "Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor.",
            "format" : "uuid",
            "readOnly" : true
          },
          "serviceLevelObjectiveUsageMetrics" : {
            "type" : "array",
            "description" : "Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/SloUsageMetric"
            }
          },
          "usageBasedRecommendationServiceLevelObjective" : {
            "type" : "string",
            "description" : "Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor.",
            "readOnly" : true
          },
          "usageBasedRecommendationServiceLevelObjectiveId" : {
            "type" : "string",
            "description" : "Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor.",
            "format" : "uuid",
            "readOnly" : true
          }
        },
        "description" : "Represents the properties of a Service Tier Advisor."
      },
      "SloUsageMetric" : {
        "type" : "object",
        "properties" : {
          "inRangeTimeRatio" : {
            "type" : "number",
            "description" : "Gets or sets inRangeTimeRatio for SLO usage metric.",
            "format" : "double",
            "nullable" : false,
            "readOnly" : true
          },
          "serviceLevelObjective" : {
            "type" : "string",
            "description" : "The serviceLevelObjective for SLO usage metric.",
            "readOnly" : true,
            "enum" : [ "System", "System0", "System1", "System2", "System3", "System4", "System2L", "System3L", "System4L", "Free", "Basic", "S0", "S1", "S2", "S3", "S4", "S6", "S7", "S9", "S12", "P1", "P2", "P3", "P4", "P6", "P11", "P15", "PRS1", "PRS2", "PRS4", "PRS6", "DW100", "DW200", "DW300", "DW400", "DW500", "DW600", "DW1000", "DW1200", "DW1000c", "DW1500", "DW1500c", "DW2000", "DW2000c", "DW3000", "DW2500c", "DW3000c", "DW6000", "DW5000c", "DW6000c", "DW7500c", "DW10000c", "DW15000c", "DW30000c", "DS100", "DS200", "DS300", "DS400", "DS500", "DS600", "DS1000", "DS1200", "DS1500", "DS2000", "ElasticPool" ]
          },
          "serviceLevelObjectiveId" : {
            "type" : "string",
            "description" : "The serviceLevelObjectiveId for SLO usage metric.",
            "format" : "uuid",
            "nullable" : false,
            "readOnly" : true
          }
        },
        "description" : "A Slo Usage Metric."
      },
      "TransparentDataEncryption" : {
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Resource location.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/TransparentDataEncryptionProperties"
          }
        },
        "description" : "Represents a database transparent data encryption configuration.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "TransparentDataEncryptionActivity" : {
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Resource location.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/TransparentDataEncryptionActivityProperties"
          }
        },
        "description" : "Represents a database transparent data encryption Scan.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "TransparentDataEncryptionActivityListResult" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of database transparent data encryption activities.",
            "items" : {
              "$ref" : "#/components/schemas/TransparentDataEncryptionActivity"
            }
          }
        },
        "description" : "Represents the response to a list database transparent data encryption activity request."
      },
      "TransparentDataEncryptionActivityProperties" : {
        "type" : "object",
        "properties" : {
          "percentComplete" : {
            "type" : "number",
            "description" : "The percent complete of the transparent data encryption scan for a database.",
            "format" : "float",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the database.",
            "readOnly" : true,
            "enum" : [ "Encrypting", "Decrypting" ]
          }
        },
        "description" : "Represents the properties of a database transparent data encryption Scan."
      },
      "TransparentDataEncryptionProperties" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "The status of the database transparent data encryption.",
            "enum" : [ "Enabled", "Disabled" ]
          }
        },
        "description" : "Represents the properties of a database transparent data encryption."
      }
    },
    "parameters" : {
      "DatabaseExpandParameter" : {
        "name" : "$expand",
        "in" : "query",
        "description" : "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
        "schema" : {
          "type" : "string"
        }
      },
      "ServerNameParameter" : {
        "name" : "serverName",
        "in" : "path",
        "description" : "The name of the server.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "TransparentDataEncryptionNameParameter" : {
        "name" : "transparentDataEncryptionName",
        "in" : "path",
        "description" : "The name of the transparent data encryption configuration.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "current" ]
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}