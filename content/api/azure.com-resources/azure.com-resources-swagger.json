{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ResourceManagementClient",
    "description" : "Provides operations for working with resources and resource groups.",
    "version" : "2019-08-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers" : {
      "get" : {
        "tags" : [ "Providers" ],
        "description" : "Gets all resource providers for the tenant.",
        "operationId" : "Providers_ListAtTenantScope",
        "parameters" : [ {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return. If null is passed returns all providers.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of resource providers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Get all the deployments for a management group.",
        "operationId" : "Deployments_ListAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to get. If null is passed, returns all deployments.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of deployments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Gets a deployment.",
        "operationId" : "Deployments_GetAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deploys resources at management group scope.",
        "description" : "You can provide the template and parameters directly in the request or link to JSON files.",
        "operationId" : "Deployments_CreateOrUpdateAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Additional parameters supplied to the operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScopedDeployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deletes a deployment from the deployment history.",
        "description" : "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "operationId" : "Deployments_DeleteAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Deployments" ],
        "description" : "Checks whether the deployment exists.",
        "operationId" : "Deployments_CheckExistenceAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Cancels a currently running template deployment.",
        "description" : "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "operationId" : "Deployments_CancelAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Exports the template used for specified deployment.",
        "operationId" : "Deployments_ExportTemplateAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns the template.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExportResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets all deployments operations for a deployment.",
        "operationId" : "DeploymentOperations_ListAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Return an array of deployment operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets a deployments operation.",
        "operationId" : "DeploymentOperations_GetAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "The ID of the operation to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "operationId" : "Deployments_ValidateAtManagementGroupScope",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The management group ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to validate.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScopedDeployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/calculateTemplateHash" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Calculate the hash of the given template.",
        "operationId" : "Deployments_CalculateTemplateHash",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The template provided to calculate hash.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns the hash.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemplateHashResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Get all the deployments at the tenant scope.",
        "operationId" : "Deployments_ListAtTenantScope",
        "parameters" : [ {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to get. If null is passed, returns all deployments.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of deployments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Gets a deployment.",
        "operationId" : "Deployments_GetAtTenantScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deploys resources at tenant scope.",
        "description" : "You can provide the template and parameters directly in the request or link to JSON files.",
        "operationId" : "Deployments_CreateOrUpdateAtTenantScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Additional parameters supplied to the operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScopedDeployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deletes a deployment from the deployment history.",
        "description" : "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "operationId" : "Deployments_DeleteAtTenantScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Deployments" ],
        "description" : "Checks whether the deployment exists.",
        "operationId" : "Deployments_CheckExistenceAtTenantScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/cancel" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Cancels a currently running template deployment.",
        "description" : "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "operationId" : "Deployments_CancelAtTenantScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Exports the template used for specified deployment.",
        "operationId" : "Deployments_ExportTemplateAtTenantScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns the template.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExportResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/operations" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets all deployments operations for a deployment.",
        "operationId" : "DeploymentOperations_ListAtTenantScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Return an array of deployment operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets a deployments operation.",
        "operationId" : "DeploymentOperations_GetAtTenantScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "The ID of the operation to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/validate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "operationId" : "Deployments_ValidateAtTenantScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to validate.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScopedDeployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available Microsoft.Resources REST API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/providers/{resourceProviderNamespace}" : {
      "get" : {
        "tags" : [ "Providers" ],
        "description" : "Gets the specified resource provider at the tenant level.",
        "operationId" : "Providers_GetAtTenantScope",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource provider.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Provider"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers" : {
      "get" : {
        "tags" : [ "Providers" ],
        "description" : "Gets all resource providers for a subscription.",
        "operationId" : "Providers_List",
        "parameters" : [ {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return. If null is passed returns all deployments.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of resource providers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Get all the deployments for a subscription.",
        "operationId" : "Deployments_ListAtSubscriptionScope",
        "parameters" : [ {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to get. If null is passed, returns all deployments.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of deployments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Gets a deployment.",
        "operationId" : "Deployments_GetAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deploys resources at subscription scope.",
        "description" : "You can provide the template and parameters directly in the request or link to JSON files.",
        "operationId" : "Deployments_CreateOrUpdateAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Additional parameters supplied to the operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deletes a deployment from the deployment history.",
        "description" : "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "operationId" : "Deployments_DeleteAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Deployments" ],
        "description" : "Checks whether the deployment exists.",
        "operationId" : "Deployments_CheckExistenceAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Cancels a currently running template deployment.",
        "description" : "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "operationId" : "Deployments_CancelAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Exports the template used for specified deployment.",
        "operationId" : "Deployments_ExportTemplateAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns the template.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExportResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets all deployments operations for a deployment.",
        "operationId" : "DeploymentOperations_ListAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Return an array of deployment operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets a deployments operation.",
        "operationId" : "DeploymentOperations_GetAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "The ID of the operation to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "operationId" : "Deployments_ValidateAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to validate.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Returns changes that will be made by the deployment if executed at the scope of the subscription.",
        "operationId" : "Deployments_WhatIfAtSubscriptionScope",
        "parameters" : [ {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to What If.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeploymentWhatIf"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns What-If operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhatIfOperationResult"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers" : {
              "Retry-After" : {
                "description" : "Number of seconds to wait before polling for status.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL to get status of this long-running operation.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}" : {
      "get" : {
        "tags" : [ "Providers" ],
        "description" : "Gets the specified resource provider.",
        "operationId" : "Providers_Get",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource provider.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Provider"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register" : {
      "post" : {
        "tags" : [ "Providers" ],
        "description" : "Registers a subscription with a resource provider.",
        "operationId" : "Providers_Register",
        "parameters" : [ {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider to register.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource provider.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Provider"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister" : {
      "post" : {
        "tags" : [ "Providers" ],
        "description" : "Unregisters a subscription from a resource provider.",
        "operationId" : "Providers_Unregister",
        "parameters" : [ {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider to unregister.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource provider.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Provider"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources" : {
      "get" : {
        "tags" : [ "ResourceGroups" ],
        "description" : "Get all the resources for a resource group.",
        "operationId" : "Resources_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group with the resources to get.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return. If null is passed, returns all resources.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources" : {
      "post" : {
        "tags" : [ "Resources" ],
        "summary" : "Moves resources from one resource group to another resource group.",
        "description" : "The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes. ",
        "operationId" : "Resources_MoveResources",
        "parameters" : [ {
          "name" : "sourceResourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group containing the resources to move.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for moving resources.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourcesMoveInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources" : {
      "post" : {
        "tags" : [ "Resources" ],
        "summary" : "Validates whether resources can be moved from one resource group to another resource group.",
        "description" : "This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.",
        "operationId" : "Resources_ValidateMoveResources",
        "parameters" : [ {
          "name" : "sourceResourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group containing the resources to validate for move.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for moving resources.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourcesMoveInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups" : {
      "get" : {
        "tags" : [ "ResourceGroups" ],
        "description" : "Gets all the resource groups for a subscription.",
        "operationId" : "ResourceGroups_List",
        "parameters" : [ {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return. If null is passed, returns all resource groups.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of resource groups.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceGroupListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}" : {
      "get" : {
        "tags" : [ "ResourceGroups" ],
        "description" : "Gets a resource group.",
        "operationId" : "ResourceGroups_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to get. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ResourceGroups" ],
        "description" : "Creates or updates a resource group.",
        "operationId" : "ResourceGroups_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to create or update. Can include alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed characters.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the create or update a resource group.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the new resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceGroup"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the new resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ResourceGroups" ],
        "summary" : "Deletes a resource group.",
        "description" : "When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.",
        "operationId" : "ResourceGroups_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to delete. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ResourceGroups" ],
        "description" : "Checks whether a resource group exists.",
        "operationId" : "ResourceGroups_CheckExistence",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to check. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ResourceGroups" ],
        "summary" : "Updates a resource group.",
        "description" : "Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.",
        "operationId" : "ResourceGroups_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to update. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to update a resource group.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceGroupPatchable"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets all deployments operations for a deployment.",
        "operationId" : "DeploymentOperations_List",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Return an array of deployment operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets a deployments operation.",
        "operationId" : "DeploymentOperations_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "The ID of the operation to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate" : {
      "post" : {
        "tags" : [ "ResourceGroups" ],
        "description" : "Captures the specified resource group as a template.",
        "operationId" : "ResourceGroups_ExportTemplate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for exporting the template.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportTemplateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns the result of the export.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceGroupExportResult"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Get all the deployments for a resource group.",
        "operationId" : "Deployments_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group with the deployments to get. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to get. If null is passed, returns all deployments.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of deployments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Gets a deployment.",
        "operationId" : "Deployments_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deploys resources to a resource group.",
        "description" : "You can provide the template and parameters directly in the request or link to JSON files.",
        "operationId" : "Deployments_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Additional parameters supplied to the operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deletes a deployment from the deployment history.",
        "description" : "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "operationId" : "Deployments_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group with the deployment to delete. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Deployments" ],
        "description" : "Checks whether the deployment exists.",
        "operationId" : "Deployments_CheckExistence",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group with the deployment to check. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Cancels a currently running template deployment.",
        "description" : "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed.",
        "operationId" : "Deployments_Cancel",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Exports the template used for specified deployment.",
        "operationId" : "Deployments_ExportTemplate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns the template.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExportResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "operationId" : "Deployments_Validate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group the template will be deployed to. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to validate.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Returns changes that will be made by the deployment if executed at the scope of the resource group.",
        "operationId" : "Deployments_WhatIf",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group the template will be deployed to. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to validate.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeploymentWhatIf"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns What-If operation status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhatIfOperationResult"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers" : {
              "Retry-After" : {
                "description" : "Number of seconds to wait before polling for status.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL to get status of this long-running operation.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}" : {
      "get" : {
        "tags" : [ "Resources" ],
        "description" : "Gets a resource.",
        "operationId" : "Resources_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group containing the resource to get. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentResourcePath",
          "in" : "path",
          "description" : "The parent resource identity.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The resource type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the resource to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Resources" ],
        "description" : "Creates a resource.",
        "operationId" : "Resources_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group for the resource. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentResourcePath",
          "in" : "path",
          "description" : "The parent resource identity.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The resource type of the resource to create.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the resource to create.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for creating or updating the resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResource"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Resources" ],
        "description" : "Deletes a resource.",
        "operationId" : "Resources_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource to delete. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentResourcePath",
          "in" : "path",
          "description" : "The parent resource identity.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The resource type.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the resource to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Resources" ],
        "description" : "Checks whether a resource exists.",
        "operationId" : "Resources_CheckExistence",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group containing the resource to check. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The resource provider of the resource to check.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentResourcePath",
          "in" : "path",
          "description" : "The parent resource identity.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The resource type.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the resource to check whether it exists.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Resources" ],
        "description" : "Updates a resource.",
        "operationId" : "Resources_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group for the resource. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentResourcePath",
          "in" : "path",
          "description" : "The parent resource identity.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The resource type of the resource to update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the resource to update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for updating the resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resources" : {
      "get" : {
        "tags" : [ "Resources" ],
        "description" : "Get all the resources in a subscription.",
        "operationId" : "Resources_List",
        "parameters" : [ {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return. If null is passed, returns all resource groups.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of resources.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames" : {
      "get" : {
        "tags" : [ "Tags" ],
        "description" : "Gets the names and values of all resource tags that are defined in a subscription.",
        "operationId" : "Tags_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of tag names and values.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}" : {
      "put" : {
        "tags" : [ "Tags" ],
        "summary" : "Creates a tag in the subscription.",
        "description" : "The tag name can have a maximum of 512 characters and is case insensitive. Tag names created by Azure have prefixes of microsoft, azure, or windows. You cannot create tags with one of these prefixes.",
        "operationId" : "Tags_CreateOrUpdate",
        "parameters" : [ {
          "name" : "tagName",
          "in" : "path",
          "description" : "The name of the tag to create.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the tag.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagDetails"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the tag.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagDetails"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Tags" ],
        "summary" : "Deletes a tag from the subscription.",
        "description" : "You must remove all values from a resource tag before you can delete it.",
        "operationId" : "Tags_Delete",
        "parameters" : [ {
          "name" : "tagName",
          "in" : "path",
          "description" : "The name of the tag.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}" : {
      "put" : {
        "tags" : [ "Tags" ],
        "description" : "Creates a tag value. The name of the tag must already exist.",
        "operationId" : "Tags_CreateOrUpdateValue",
        "parameters" : [ {
          "name" : "tagName",
          "in" : "path",
          "description" : "The name of the tag.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tagValue",
          "in" : "path",
          "description" : "The value of the tag to create.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the tag value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagValue"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the tag value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagValue"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Tags" ],
        "description" : "Deletes a tag value.",
        "operationId" : "Tags_DeleteValue",
        "parameters" : [ {
          "name" : "tagName",
          "in" : "path",
          "description" : "The name of the tag.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tagValue",
          "in" : "path",
          "description" : "The value of the tag to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}" : {
      "get" : {
        "tags" : [ "Resources" ],
        "description" : "Gets a resource by ID.",
        "operationId" : "Resources_GetById",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Resources" ],
        "description" : "Create a resource by ID.",
        "operationId" : "Resources_CreateOrUpdateById",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create or update resource parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResource"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Resources" ],
        "description" : "Deletes a resource by ID.",
        "operationId" : "Resources_DeleteById",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Resources" ],
        "description" : "Checks by ID whether a resource exists.",
        "operationId" : "Resources_CheckExistenceById",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Resources" ],
        "description" : "Updates a resource by ID.",
        "operationId" : "Resources_UpdateById",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update resource parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Get all the deployments at the given scope.",
        "operationId" : "Deployments_ListAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to get. If null is passed, returns all deployments.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of deployments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "description" : "Gets a deployment.",
        "operationId" : "Deployments_GetAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deploys resources at a given scope.",
        "description" : "You can provide the template and parameters directly in the request or link to JSON files.",
        "operationId" : "Deployments_CreateOrUpdateAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Additional parameters supplied to the operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "201" : {
            "description" : "Created - Returns information about the deployment, including provisioning status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExtended"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Deployments" ],
        "summary" : "Deletes a deployment from the deployment history.",
        "description" : "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "operationId" : "Deployments_DeleteAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Deployments" ],
        "description" : "Checks whether the deployment exists.",
        "operationId" : "Deployments_CheckExistenceAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Cancels a currently running template deployment.",
        "description" : "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "operationId" : "Deployments_CancelAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Exports the template used for specified deployment.",
        "operationId" : "Deployments_ExportTemplateAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns the template.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentExportResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets all deployments operations for a deployment.",
        "operationId" : "DeploymentOperations_ListAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of results to return.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Return an array of deployment operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "DeploymentOperations" ],
        "description" : "Gets a deployments operation.",
        "operationId" : "DeploymentOperations_GetAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "The ID of the operation to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deployment operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentOperation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "description" : "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "operationId" : "Deployments_ValidateAtScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of a deployment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentName",
          "in" : "path",
          "description" : "The name of the deployment.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to validate.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deployment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Returns the validation result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentValidateResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AliasPathType" : {
        "type" : "object",
        "properties" : {
          "apiVersions" : {
            "type" : "array",
            "description" : "The API versions.",
            "items" : {
              "type" : "string"
            }
          },
          "path" : {
            "type" : "string",
            "description" : "The path of an alias."
          }
        },
        "description" : "The type of the paths for alias. "
      },
      "AliasType" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The alias name."
          },
          "paths" : {
            "type" : "array",
            "description" : "The paths for an alias.",
            "items" : {
              "$ref" : "#/components/schemas/AliasPathType"
            }
          }
        },
        "description" : "The alias type. "
      },
      "BasicDependency" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the dependency."
          },
          "resourceName" : {
            "type" : "string",
            "description" : "The dependency resource name."
          },
          "resourceType" : {
            "type" : "string",
            "description" : "The dependency resource type."
          }
        },
        "description" : "Deployment dependency information."
      },
      "CloudError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "additionalInfo" : {
                "type" : "array",
                "description" : "The error additional info.",
                "readOnly" : true,
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "info" : {
                      "type" : "object",
                      "description" : "The additional info.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "The additional info type.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The resource management error additional info."
                }
              },
              "code" : {
                "type" : "string",
                "description" : "The error code.",
                "readOnly" : true
              },
              "details" : {
                "type" : "array",
                "description" : "The error details.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "message" : {
                "type" : "string",
                "description" : "The error message.",
                "readOnly" : true
              },
              "target" : {
                "type" : "string",
                "description" : "The error target.",
                "readOnly" : true
              }
            },
            "description" : "The resource management error response."
          }
        },
        "description" : "An error response for a resource management request."
      },
      "DebugSetting" : {
        "type" : "object",
        "properties" : {
          "detailLevel" : {
            "type" : "string",
            "description" : "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
          }
        },
        "description" : "The debug setting."
      },
      "Dependency" : {
        "type" : "object",
        "properties" : {
          "dependsOn" : {
            "type" : "array",
            "description" : "The list of dependencies.",
            "items" : {
              "$ref" : "#/components/schemas/BasicDependency"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the dependency."
          },
          "resourceName" : {
            "type" : "string",
            "description" : "The dependency resource name."
          },
          "resourceType" : {
            "type" : "string",
            "description" : "The dependency resource type."
          }
        },
        "description" : "Deployment dependency information."
      },
      "Deployment" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location to store the deployment data."
          },
          "properties" : {
            "$ref" : "#/components/schemas/DeploymentProperties"
          }
        },
        "description" : "Deployment operation parameters."
      },
      "DeploymentExportResult" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "type" : "object",
            "description" : "The template content."
          }
        },
        "description" : "The deployment export result. "
      },
      "DeploymentExtended" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the deployment.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "the location of the deployment."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the deployment.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/DeploymentPropertiesExtended"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the deployment.",
            "readOnly" : true
          }
        },
        "description" : "Deployment information."
      },
      "DeploymentExtendedFilter" : {
        "type" : "object",
        "properties" : {
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning state."
          }
        },
        "description" : "Deployment filter."
      },
      "DeploymentListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "An array of deployments.",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentExtended"
            }
          }
        },
        "description" : "List of deployments."
      },
      "DeploymentOperation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Full deployment operation ID.",
            "readOnly" : true
          },
          "operationId" : {
            "type" : "string",
            "description" : "Deployment operation ID.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/DeploymentOperationProperties"
          }
        },
        "description" : "Deployment operation information."
      },
      "DeploymentOperationProperties" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "type" : "string",
            "description" : "The duration of the operation.",
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The state of the provisioning.",
            "readOnly" : true
          },
          "request" : {
            "$ref" : "#/components/schemas/HttpMessage"
          },
          "response" : {
            "$ref" : "#/components/schemas/HttpMessage"
          },
          "serviceRequestId" : {
            "type" : "string",
            "description" : "Deployment operation service request id.",
            "readOnly" : true
          },
          "statusCode" : {
            "type" : "string",
            "description" : "Operation status code.",
            "readOnly" : true
          },
          "statusMessage" : {
            "type" : "object",
            "description" : "Operation status message.",
            "readOnly" : true
          },
          "targetResource" : {
            "$ref" : "#/components/schemas/TargetResource"
          },
          "timestamp" : {
            "type" : "string",
            "description" : "The date and time of the operation.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Deployment operation properties."
      },
      "DeploymentOperationsListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "An array of deployment operations.",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentOperation"
            }
          }
        },
        "description" : "List of deployment operations."
      },
      "DeploymentProperties" : {
        "required" : [ "mode" ],
        "type" : "object",
        "properties" : {
          "debugSetting" : {
            "$ref" : "#/components/schemas/DebugSetting"
          },
          "mode" : {
            "type" : "string",
            "description" : "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
            "enum" : [ "Incremental", "Complete" ]
          },
          "onErrorDeployment" : {
            "$ref" : "#/components/schemas/OnErrorDeployment"
          },
          "parameters" : {
            "type" : "object",
            "description" : "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
          },
          "parametersLink" : {
            "$ref" : "#/components/schemas/ParametersLink"
          },
          "template" : {
            "type" : "object",
            "description" : "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
          },
          "templateLink" : {
            "$ref" : "#/components/schemas/TemplateLink"
          }
        },
        "description" : "Deployment properties."
      },
      "DeploymentPropertiesExtended" : {
        "type" : "object",
        "properties" : {
          "correlationId" : {
            "type" : "string",
            "description" : "The correlation ID of the deployment.",
            "readOnly" : true
          },
          "debugSetting" : {
            "$ref" : "#/components/schemas/DebugSetting"
          },
          "dependencies" : {
            "type" : "array",
            "description" : "The list of deployment dependencies.",
            "items" : {
              "$ref" : "#/components/schemas/Dependency"
            }
          },
          "duration" : {
            "type" : "string",
            "description" : "The duration of the template deployment.",
            "readOnly" : true
          },
          "mode" : {
            "type" : "string",
            "description" : "The deployment mode. Possible values are Incremental and Complete.",
            "enum" : [ "Incremental", "Complete" ]
          },
          "onErrorDeployment" : {
            "$ref" : "#/components/schemas/OnErrorDeploymentExtended"
          },
          "outputs" : {
            "type" : "object",
            "description" : "Key/value pairs that represent deployment output."
          },
          "parameters" : {
            "type" : "object",
            "description" : "Deployment parameters. Use only one of Parameters or ParametersLink."
          },
          "parametersLink" : {
            "$ref" : "#/components/schemas/ParametersLink"
          },
          "providers" : {
            "type" : "array",
            "description" : "The list of resource providers needed for the deployment.",
            "items" : {
              "$ref" : "#/components/schemas/Provider"
            }
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The state of the provisioning.",
            "readOnly" : true
          },
          "template" : {
            "type" : "object",
            "description" : "The template content. Use only one of Template or TemplateLink."
          },
          "templateLink" : {
            "$ref" : "#/components/schemas/TemplateLink"
          },
          "timestamp" : {
            "type" : "string",
            "description" : "The timestamp of the template deployment.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Deployment properties with additional details."
      },
      "DeploymentValidateResult" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "additionalInfo" : {
                "type" : "array",
                "description" : "The error additional info.",
                "readOnly" : true,
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "info" : {
                      "type" : "object",
                      "description" : "The additional info.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "The additional info type.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The resource management error additional info."
                }
              },
              "code" : {
                "type" : "string",
                "description" : "The error code.",
                "readOnly" : true
              },
              "details" : {
                "type" : "array",
                "description" : "The error details.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "message" : {
                "type" : "string",
                "description" : "The error message.",
                "readOnly" : true
              },
              "target" : {
                "type" : "string",
                "description" : "The error target.",
                "readOnly" : true
              }
            },
            "description" : "The resource management error response."
          },
          "properties" : {
            "$ref" : "#/components/schemas/DeploymentPropertiesExtended"
          }
        },
        "description" : "Information from validate template deployment response."
      },
      "DeploymentWhatIf" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location to store the deployment data."
          },
          "properties" : {
            "$ref" : "#/components/schemas/DeploymentWhatIfProperties"
          }
        },
        "description" : "Deployment What-if operation parameters."
      },
      "DeploymentWhatIfProperties" : {
        "properties" : {
          "whatIfSettings" : {
            "$ref" : "#/components/schemas/DeploymentWhatIfSettings"
          }
        },
        "description" : "Deployment What-if properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DeploymentProperties"
        } ]
      },
      "DeploymentWhatIfSettings" : {
        "type" : "object",
        "properties" : {
          "resultFormat" : {
            "type" : "string",
            "description" : "The format of the What-If results",
            "enum" : [ "ResourceIdOnly", "FullResourcePayloads" ]
          }
        },
        "description" : "Deployment What-If operation settings."
      },
      "ErrorResponse" : {
        "type" : "object"
      },
      "ExportTemplateRequest" : {
        "type" : "object",
        "properties" : {
          "options" : {
            "type" : "string",
            "description" : "The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization'"
          },
          "resources" : {
            "type" : "array",
            "description" : "The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Export resource group template request parameters."
      },
      "GenericResource" : {
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/Identity"
          },
          "kind" : {
            "pattern" : "^[-\\w\\._,\\(\\)]+$",
            "type" : "string",
            "description" : "The kind of the resource."
          },
          "managedBy" : {
            "type" : "string",
            "description" : "ID of the resource that manages this resource."
          },
          "plan" : {
            "$ref" : "#/components/schemas/Plan"
          },
          "properties" : {
            "type" : "object",
            "description" : "The resource properties."
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          }
        },
        "description" : "Resource information.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "GenericResourceFilter" : {
        "type" : "object",
        "properties" : {
          "resourceType" : {
            "type" : "string",
            "description" : "The resource type."
          },
          "tagname" : {
            "type" : "string",
            "description" : "The tag name."
          },
          "tagvalue" : {
            "type" : "string",
            "description" : "The tag value."
          }
        },
        "description" : "Resource filter."
      },
      "HttpMessage" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "object",
            "description" : "HTTP message content."
          }
        },
        "description" : "HTTP message."
      },
      "Identity" : {
        "type" : "object",
        "properties" : {
          "principalId" : {
            "type" : "string",
            "description" : "The principal ID of resource identity.",
            "readOnly" : true
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The tenant ID of resource.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The identity type.",
            "enum" : [ "SystemAssigned", "UserAssigned", "SystemAssigned, UserAssigned", "None" ]
          },
          "userAssignedIdentities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : {
                "clientId" : {
                  "type" : "string",
                  "description" : "The client id of user assigned identity.",
                  "readOnly" : true
                },
                "principalId" : {
                  "type" : "string",
                  "description" : "The principal id of user assigned identity.",
                  "readOnly" : true
                }
              }
            },
            "description" : "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
          }
        },
        "description" : "Identity for the resource."
      },
      "OnErrorDeployment" : {
        "type" : "object",
        "properties" : {
          "deploymentName" : {
            "type" : "string",
            "description" : "The deployment to be used on error case."
          },
          "type" : {
            "type" : "string",
            "description" : "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
            "enum" : [ "LastSuccessful", "SpecificDeployment" ]
          }
        },
        "description" : "Deployment on error behavior."
      },
      "OnErrorDeploymentExtended" : {
        "type" : "object",
        "properties" : {
          "deploymentName" : {
            "type" : "string",
            "description" : "The deployment to be used on error case."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The state of the provisioning for the on error deployment.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
            "enum" : [ "LastSuccessful", "SpecificDeployment" ]
          }
        },
        "description" : "Deployment on error behavior with additional details."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Description of the operation."
              },
              "operation" : {
                "type" : "string",
                "description" : "Operation type: Read, write, delete, etc."
              },
              "provider" : {
                "type" : "string",
                "description" : "Service provider: Microsoft.Resources"
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource on which the operation is performed: Profile, endpoint, etc."
              }
            },
            "description" : "The object that represents the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}"
          }
        },
        "description" : "Microsoft.Resources operation"
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Microsoft.Resources operations.",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results."
      },
      "ParametersLink" : {
        "required" : [ "uri" ],
        "type" : "object",
        "properties" : {
          "contentVersion" : {
            "type" : "string",
            "description" : "If included, must match the ContentVersion in the template."
          },
          "uri" : {
            "type" : "string",
            "description" : "The URI of the parameters file."
          }
        },
        "description" : "Entity representing the reference to the deployment parameters."
      },
      "Plan" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The plan ID."
          },
          "product" : {
            "type" : "string",
            "description" : "The offer ID."
          },
          "promotionCode" : {
            "type" : "string",
            "description" : "The promotion code."
          },
          "publisher" : {
            "type" : "string",
            "description" : "The publisher ID."
          },
          "version" : {
            "type" : "string",
            "description" : "The plan's version."
          }
        },
        "description" : "Plan for the resource."
      },
      "Provider" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The provider ID.",
            "readOnly" : true
          },
          "namespace" : {
            "type" : "string",
            "description" : "The namespace of the resource provider."
          },
          "registrationPolicy" : {
            "type" : "string",
            "description" : "The registration policy of the resource provider.",
            "readOnly" : true
          },
          "registrationState" : {
            "type" : "string",
            "description" : "The registration state of the resource provider.",
            "readOnly" : true
          },
          "resourceTypes" : {
            "type" : "array",
            "description" : "The collection of provider resource types.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProviderResourceType"
            }
          }
        },
        "description" : "Resource provider information."
      },
      "ProviderListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "An array of resource providers.",
            "items" : {
              "$ref" : "#/components/schemas/Provider"
            }
          }
        },
        "description" : "List of resource providers."
      },
      "ProviderResourceType" : {
        "type" : "object",
        "properties" : {
          "aliases" : {
            "type" : "array",
            "description" : "The aliases that are supported by this resource type.",
            "items" : {
              "$ref" : "#/components/schemas/AliasType"
            }
          },
          "apiVersions" : {
            "type" : "array",
            "description" : "The API version.",
            "items" : {
              "type" : "string"
            }
          },
          "capabilities" : {
            "type" : "string",
            "description" : "The additional capabilities offered by this resource type."
          },
          "locations" : {
            "type" : "array",
            "description" : "The collection of locations where this resource type can be created.",
            "items" : {
              "type" : "string"
            }
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The additional properties. "
            },
            "description" : "The properties."
          },
          "resourceType" : {
            "type" : "string",
            "description" : "The resource type."
          }
        },
        "description" : "Resource type managed by the resource provider."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Resource location"
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "readOnly" : true
          }
        },
        "description" : "Specified resource."
      },
      "ResourceGroup" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the resource group.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
          },
          "managedBy" : {
            "type" : "string",
            "description" : "The ID of the resource that manages this resource group."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource group.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/ResourceGroupProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The additional properties. "
            },
            "description" : "The tags attached to the resource group."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource group.",
            "readOnly" : true
          }
        },
        "description" : "Resource group information."
      },
      "ResourceGroupExportResult" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "additionalInfo" : {
                "type" : "array",
                "description" : "The error additional info.",
                "readOnly" : true,
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "info" : {
                      "type" : "object",
                      "description" : "The additional info.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "The additional info type.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The resource management error additional info."
                }
              },
              "code" : {
                "type" : "string",
                "description" : "The error code.",
                "readOnly" : true
              },
              "details" : {
                "type" : "array",
                "description" : "The error details.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "message" : {
                "type" : "string",
                "description" : "The error message.",
                "readOnly" : true
              },
              "target" : {
                "type" : "string",
                "description" : "The error target.",
                "readOnly" : true
              }
            },
            "description" : "The resource management error response."
          },
          "template" : {
            "type" : "object",
            "description" : "The template content."
          }
        },
        "description" : "Resource group export result."
      },
      "ResourceGroupFilter" : {
        "type" : "object",
        "properties" : {
          "tagName" : {
            "type" : "string",
            "description" : "The tag name."
          },
          "tagValue" : {
            "type" : "string",
            "description" : "The tag value."
          }
        },
        "description" : "Resource group filter."
      },
      "ResourceGroupListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "An array of resource groups.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceGroup"
            }
          }
        },
        "description" : "List of resource groups."
      },
      "ResourceGroupPatchable" : {
        "type" : "object",
        "properties" : {
          "managedBy" : {
            "type" : "string",
            "description" : "The ID of the resource that manages this resource group."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource group."
          },
          "properties" : {
            "$ref" : "#/components/schemas/ResourceGroupProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The additional properties. "
            },
            "description" : "The tags attached to the resource group."
          }
        },
        "description" : "Resource group information."
      },
      "ResourceGroupProperties" : {
        "type" : "object",
        "properties" : {
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning state. ",
            "readOnly" : true
          }
        },
        "description" : "The resource group properties."
      },
      "ResourceListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "An array of resources.",
            "items" : {
              "$ref" : "#/components/schemas/GenericResource"
            }
          }
        },
        "description" : "List of resource groups."
      },
      "ResourceProviderOperationDisplayProperties" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Operation description."
          },
          "operation" : {
            "type" : "string",
            "description" : "Resource provider operation."
          },
          "provider" : {
            "type" : "string",
            "description" : "Operation provider."
          },
          "publisher" : {
            "type" : "string",
            "description" : "Operation description."
          },
          "resource" : {
            "type" : "string",
            "description" : "Operation resource."
          }
        },
        "description" : "Resource provider operation's display properties."
      },
      "ResourcesMoveInfo" : {
        "type" : "object",
        "properties" : {
          "resources" : {
            "type" : "array",
            "description" : "The IDs of the resources.",
            "items" : {
              "type" : "string"
            }
          },
          "targetResourceGroup" : {
            "type" : "string",
            "description" : "The target resource group."
          }
        },
        "description" : "Parameters of move resources."
      },
      "ScopedDeployment" : {
        "required" : [ "location", "properties" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location to store the deployment data."
          },
          "properties" : {
            "$ref" : "#/components/schemas/DeploymentProperties"
          }
        },
        "description" : "Deployment operation parameters."
      },
      "Sku" : {
        "type" : "object",
        "properties" : {
          "capacity" : {
            "type" : "integer",
            "description" : "The SKU capacity.",
            "format" : "int32"
          },
          "family" : {
            "type" : "string",
            "description" : "The SKU family."
          },
          "model" : {
            "type" : "string",
            "description" : "The SKU model."
          },
          "name" : {
            "type" : "string",
            "description" : "The SKU name."
          },
          "size" : {
            "type" : "string",
            "description" : "The SKU size."
          },
          "tier" : {
            "type" : "string",
            "description" : "The SKU tier."
          }
        },
        "description" : "SKU for the resource."
      },
      "SubResource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID"
          }
        },
        "description" : "Sub-resource."
      },
      "TagCount" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of count."
          },
          "value" : {
            "type" : "integer",
            "description" : "Value of count."
          }
        },
        "description" : "Tag count."
      },
      "TagDetails" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "$ref" : "#/components/schemas/TagCount"
          },
          "id" : {
            "type" : "string",
            "description" : "The tag ID.",
            "readOnly" : true
          },
          "tagName" : {
            "type" : "string",
            "description" : "The tag name."
          },
          "values" : {
            "type" : "array",
            "description" : "The list of tag values.",
            "items" : {
              "$ref" : "#/components/schemas/TagValue"
            }
          }
        },
        "description" : "Tag details."
      },
      "TagValue" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "$ref" : "#/components/schemas/TagCount"
          },
          "id" : {
            "type" : "string",
            "description" : "The tag ID.",
            "readOnly" : true
          },
          "tagValue" : {
            "type" : "string",
            "description" : "The tag value."
          }
        },
        "description" : "Tag information."
      },
      "TagsListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "An array of tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagDetails"
            }
          }
        },
        "description" : "List of subscription tags."
      },
      "TargetResource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the resource."
          },
          "resourceName" : {
            "type" : "string",
            "description" : "The name of the resource."
          },
          "resourceType" : {
            "type" : "string",
            "description" : "The type of the resource."
          }
        },
        "description" : "Target resource."
      },
      "TemplateHashResult" : {
        "type" : "object",
        "properties" : {
          "minifiedTemplate" : {
            "type" : "string",
            "description" : "The minified template string."
          },
          "templateHash" : {
            "type" : "string",
            "description" : "The template hash."
          }
        },
        "description" : "Result of the request to calculate template hash. It contains a string of minified template and its hash."
      },
      "TemplateLink" : {
        "required" : [ "uri" ],
        "type" : "object",
        "properties" : {
          "contentVersion" : {
            "type" : "string",
            "description" : "If included, must match the ContentVersion in the template."
          },
          "uri" : {
            "type" : "string",
            "description" : "The URI of the template to deploy."
          }
        },
        "description" : "Entity representing the reference to the template."
      },
      "WhatIfChange" : {
        "required" : [ "changeType", "resourceId" ],
        "type" : "object",
        "properties" : {
          "after" : {
            "type" : "object",
            "description" : "The predicted snapshot of the resource after the deployment is executed."
          },
          "before" : {
            "type" : "object",
            "description" : "The snapshot of the resource before the deployment is executed."
          },
          "changeType" : {
            "type" : "string",
            "description" : "Type of change that will be made to the resource when the deployment is executed.",
            "enum" : [ "Create", "Delete", "Ignore", "Deploy", "NoChange", "Modify" ]
          },
          "delta" : {
            "type" : "array",
            "description" : "The predicted changes to resource properties.",
            "items" : {
              "$ref" : "#/components/schemas/WhatIfPropertyChange"
            }
          },
          "resourceId" : {
            "type" : "string",
            "description" : "Resource ID"
          }
        },
        "description" : "Information about a single resource change predicted by What-If operation."
      },
      "WhatIfOperationProperties" : {
        "type" : "object",
        "properties" : {
          "changes" : {
            "type" : "array",
            "description" : "List of resource changes predicted by What-If operation.",
            "items" : {
              "$ref" : "#/components/schemas/WhatIfChange"
            }
          }
        },
        "description" : "Deployment operation properties."
      },
      "WhatIfOperationResult" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "additionalInfo" : {
                "type" : "array",
                "description" : "The error additional info.",
                "readOnly" : true,
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "info" : {
                      "type" : "object",
                      "description" : "The additional info.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "The additional info type.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The resource management error additional info."
                }
              },
              "code" : {
                "type" : "string",
                "description" : "The error code.",
                "readOnly" : true
              },
              "details" : {
                "type" : "array",
                "description" : "The error details.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "message" : {
                "type" : "string",
                "description" : "The error message.",
                "readOnly" : true
              },
              "target" : {
                "type" : "string",
                "description" : "The error target.",
                "readOnly" : true
              }
            },
            "description" : "The resource management error response."
          },
          "properties" : {
            "$ref" : "#/components/schemas/WhatIfOperationProperties"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the What-If operation."
          }
        },
        "description" : "Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results."
      },
      "WhatIfPropertyChange" : {
        "required" : [ "path", "propertyChangeType" ],
        "type" : "object",
        "properties" : {
          "after" : {
            "type" : "object",
            "description" : "The value of the property after the deployment is executed."
          },
          "before" : {
            "type" : "object",
            "description" : "The value of the property before the deployment is executed."
          },
          "children" : {
            "type" : "array",
            "description" : "Nested property changes.",
            "items" : {
              "$ref" : "#/components/schemas/WhatIfPropertyChange"
            }
          },
          "path" : {
            "type" : "string",
            "description" : "The path of the property."
          },
          "propertyChangeType" : {
            "type" : "string",
            "description" : "The type of property change.",
            "enum" : [ "Create", "Delete", "Modify", "Array" ]
          }
        },
        "description" : "The predicted change to the resource property."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for this operation.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "DeploymentNameParameter" : {
        "name" : "deploymentName",
        "in" : "path",
        "description" : "The name of the deployment.",
        "required" : true,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 1,
          "pattern" : "^[-\\w\\._\\(\\)]+$",
          "type" : "string"
        }
      },
      "GroupIdParameter" : {
        "name" : "groupId",
        "in" : "path",
        "description" : "The management group ID.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "type" : "string"
        }
      },
      "ScopeParameter" : {
        "name" : "scope",
        "in" : "path",
        "description" : "The scope of a deployment.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The ID of the target subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}