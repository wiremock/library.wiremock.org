{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "VMwareCloudSimple",
    "description" : "Description of the new service",
    "version" : "2019-04-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "tags" : [ {
    "name" : "Subscription",
    "description" : "Subscription life cycle"
  }, {
    "name" : "VirtualMachines",
    "description" : "Virtual machine resource operations"
  }, {
    "name" : "VirtualNetwork",
    "description" : "Virtual networks functions"
  }, {
    "name" : "VirtualMachineTemplates",
    "description" : "VM templates functions"
  }, {
    "name" : "Operations",
    "description" : "available operations function"
  }, {
    "name" : "ResourcePools",
    "description" : "Resource pools operations"
  }, {
    "name" : "DedicatedCloudNodes",
    "description" : "dedicated cloud nodes operations"
  }, {
    "name" : "AzureService",
    "description" : "Azure Service object operations"
  }, {
    "name" : "AvailabilityUsages",
    "description" : "operations related to availability and usage"
  }, {
    "name" : "CustomizationPolicies",
    "description" : "Customization policies operations"
  } ],
  "paths" : {
    "/providers/Microsoft.VMwareCloudSimple/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "summary" : "Implements list of available operations",
        "description" : "Return list of operations",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableOperationsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudNodes" : {
      "get" : {
        "tags" : [ "DedicatedCloudNodes" ],
        "summary" : "Implements list of dedicated cloud nodes within subscription method",
        "description" : "Returns list of dedicate cloud nodes within subscription",
        "operationId" : "DedicatedCloudNodes_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the list operation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of record sets to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "to be used by nextLink implementation",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudNodeListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices" : {
      "get" : {
        "tags" : [ "DedicatedCloudServices" ],
        "summary" : "Implements list of dedicatedCloudService objects within subscription method",
        "description" : "Returns list of dedicated cloud services within a subscription",
        "operationId" : "DedicatedCloudServices_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the list operation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of record sets to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "to be used by nextLink implementation",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudServiceListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/availabilities" : {
      "get" : {
        "tags" : [ "AvailabilityUsages" ],
        "summary" : "Implements SkuAvailability List method",
        "description" : "Returns list of available resources in region",
        "operationId" : "SkusAvailability_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skuId",
          "in" : "query",
          "description" : "sku id, if no sku is passed availability for all skus will be returned",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SkuAvailabilityListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/operationResults/{operationId}" : {
      "get" : {
        "tags" : [ "Operations" ],
        "summary" : "Implements get of async operation",
        "description" : "Return an async operation",
        "operationId" : "Operations_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Referer",
          "in" : "header",
          "description" : "referer url",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "operation id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Operation is still running",
            "headers" : {
              "Retry-After" : {
                "schema" : {
                  "type" : "integer"
                }
              },
              "Location" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "General Error",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "default" : "application/json"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds" : {
      "get" : {
        "tags" : [ "PrivateClouds" ],
        "summary" : "Implements private cloud list GET method",
        "description" : "Returns list of private clouds in particular region",
        "operationId" : "PrivateClouds_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateCloudList"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}" : {
      "get" : {
        "tags" : [ "PrivateClouds" ],
        "summary" : "Implements private cloud GET method",
        "description" : "Returns private cloud by its name",
        "operationId" : "PrivateClouds_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pcName",
          "in" : "path",
          "description" : "The private cloud name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateCloud"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/customizationPolicies" : {
      "get" : {
        "tags" : [ "customizationPolicies" ],
        "summary" : "Implements get of customization policies list",
        "description" : "Returns list of customization policies in region for private cloud",
        "operationId" : "customizationPolicies_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pcName",
          "in" : "path",
          "description" : "The private cloud name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the list operation. only type is allowed here as a filter e.g. $filter=type eq 'xxxx'",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomizationPoliciesListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/customizationPolicies/{customizationPolicyName}" : {
      "get" : {
        "tags" : [ "customizationPolicies" ],
        "summary" : "Implements get of customization policy",
        "description" : "Returns customization policy by its name",
        "operationId" : "customizationPolicies_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pcName",
          "in" : "path",
          "description" : "The private cloud name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customizationPolicyName",
          "in" : "path",
          "description" : "customization policy name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomizationPolicy"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/resourcePools" : {
      "get" : {
        "tags" : [ "ResourcePools" ],
        "summary" : "Implements get of resource pools list",
        "description" : "Returns list of resource pools in region for private cloud",
        "operationId" : "ResourcePools_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pcName",
          "in" : "path",
          "description" : "The private cloud name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourcePoolsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/resourcePools/{resourcePoolName}" : {
      "get" : {
        "tags" : [ "ResourcePools" ],
        "summary" : "Implements get of resource pool",
        "description" : "Returns resource pool templates by its name",
        "operationId" : "ResourcePools_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pcName",
          "in" : "path",
          "description" : "The private cloud name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourcePoolName",
          "in" : "path",
          "description" : "resource pool id (vsphereId)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourcePool"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualMachineTemplates" : {
      "get" : {
        "tags" : [ "VirtualMachineTemplates" ],
        "summary" : "Implements list of available VM templates",
        "description" : "Returns list of virtual machine templates in region for private cloud",
        "operationId" : "VirtualMachineTemplates_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pcName",
          "in" : "path",
          "description" : "The private cloud name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourcePoolName",
          "in" : "query",
          "description" : "Resource pool used to derive vSphere cluster which contains VM templates",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualMachineTemplateListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualMachineTemplates/{virtualMachineTemplateName}" : {
      "get" : {
        "tags" : [ "VirtualMachineTemplates" ],
        "summary" : "Implements virtual machine template GET method",
        "description" : "Returns virtual machine templates by its name",
        "operationId" : "VirtualMachineTemplates_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pcName",
          "in" : "path",
          "description" : "The private cloud name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineTemplateName",
          "in" : "path",
          "description" : "virtual machine template id (vsphereId)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualMachineTemplate"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualNetworks" : {
      "get" : {
        "tags" : [ "VirtualNetworks" ],
        "summary" : "Implements list available virtual networks within a subscription method",
        "description" : "Return list of virtual networks in location for private cloud",
        "operationId" : "VirtualNetworks_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pcName",
          "in" : "path",
          "description" : "The private cloud name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourcePoolName",
          "in" : "query",
          "description" : "Resource pool used to derive vSphere cluster which contains virtual networks",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetworkListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualNetworks/{virtualNetworkName}" : {
      "get" : {
        "tags" : [ "VirtualNetworks" ],
        "summary" : "Implements virtual network GET method",
        "description" : "Return virtual network by its name",
        "operationId" : "VirtualNetworks_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pcName",
          "in" : "path",
          "description" : "The private cloud name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualNetworkName",
          "in" : "path",
          "description" : "virtual network id (vsphereId)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetwork"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/usages" : {
      "get" : {
        "tags" : [ "AvailabilityUsages" ],
        "summary" : "Implements Usages List method",
        "description" : "Returns list of usage in region",
        "operationId" : "Usages_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionId",
          "in" : "path",
          "description" : "The region Id (westus, eastus)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the list operation. only name.value is allowed here as a filter e.g. $filter=name.value eq 'xxxx'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsageListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/virtualMachines" : {
      "get" : {
        "tags" : [ "VirtualMachines" ],
        "summary" : "Implements list virtual machine within subscription method",
        "description" : "Returns list virtual machine within subscription",
        "operationId" : "VirtualMachines_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the list operation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of record sets to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "to be used by nextLink implementation",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualMachineListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudNodes" : {
      "get" : {
        "tags" : [ "DedicatedCloudNodes" ],
        "summary" : "Implements list of dedicated cloud nodes within RG method",
        "description" : "Returns list of dedicate cloud nodes within resource group",
        "operationId" : "DedicatedCloudNodes_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the list operation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of record sets to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "to be used by nextLink implementation",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudNodeListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudNodes/{dedicatedCloudNodeName}" : {
      "get" : {
        "tags" : [ "DedicatedCloudNodes" ],
        "summary" : "Implements dedicated cloud node GET method",
        "description" : "Returns dedicated cloud node",
        "operationId" : "DedicatedCloudNodes_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dedicatedCloudNodeName",
          "in" : "path",
          "description" : "dedicated cloud node name",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudNode"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DedicatedCloudNodes" ],
        "summary" : "Implements dedicated cloud node PUT method",
        "description" : "Returns dedicated cloud node by its name",
        "operationId" : "DedicatedCloudNodes_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Referer",
          "in" : "header",
          "description" : "referer url",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dedicatedCloudNodeName",
          "in" : "path",
          "description" : "dedicated cloud node name",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create Dedicated Cloud Node request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DedicatedCloudNode"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "If resource is created or updated successfully, 200 should be returned",
            "headers" : {
              "Retry-After" : {
                "schema" : {
                  "type" : "integer"
                }
              },
              "Azure-AsyncOperation" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudNode"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DedicatedCloudNodes" ],
        "summary" : "Implements dedicated cloud node DELETE method",
        "description" : "Delete dedicated cloud node",
        "operationId" : "DedicatedCloudNodes_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dedicatedCloudNodeName",
          "in" : "path",
          "description" : "dedicated cloud node name",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "no content. resource does not exist and the request is well formed"
          },
          "default" : {
            "description" : "General Error",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "default" : "application/json"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "DedicatedCloudNodes" ],
        "summary" : "Implements dedicated cloud node PATCH method",
        "description" : "Patches dedicated node properties",
        "operationId" : "DedicatedCloudNodes_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dedicatedCloudNodeName",
          "in" : "path",
          "description" : "dedicated cloud node name",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Patch Dedicated Cloud Node request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "If resource is created or updated successfully, 200 should be returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudNode"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices" : {
      "get" : {
        "tags" : [ "DedicatedCloudServices" ],
        "summary" : "Implements list of dedicatedCloudService objects within RG method",
        "description" : "Returns list of dedicated cloud services within a resource group",
        "operationId" : "DedicatedCloudServices_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the list operation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of record sets to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "to be used by nextLink implementation",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudServiceListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices/{dedicatedCloudServiceName}" : {
      "get" : {
        "tags" : [ "DedicatedCloudServices" ],
        "summary" : "Implements dedicatedCloudService GET method",
        "description" : "Returns Dedicate Cloud Service",
        "operationId" : "DedicatedCloudServices_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dedicatedCloudServiceName",
          "in" : "path",
          "description" : "dedicated cloud Service name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudService"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DedicatedCloudServices" ],
        "summary" : "Implements dedicated cloud service PUT method",
        "description" : "Create dedicate cloud service",
        "operationId" : "DedicatedCloudServices_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dedicatedCloudServiceName",
          "in" : "path",
          "description" : "dedicated cloud Service name",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create Dedicated Cloud Service request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DedicatedCloudService"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "If resource is created or updated successfully, 200 should be returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudService"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DedicatedCloudServices" ],
        "summary" : "Implements dedicatedCloudService DELETE method",
        "description" : "Delete dedicate cloud service",
        "operationId" : "DedicatedCloudServices_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dedicatedCloudServiceName",
          "in" : "path",
          "description" : "dedicated cloud service name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "no content. resource does not exist and the request is well formed"
          },
          "default" : {
            "description" : "General Error",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "default" : "application/json"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "DedicatedCloudServices" ],
        "summary" : "Implements dedicatedCloudService PATCH method",
        "description" : "Patch dedicated cloud service's properties",
        "operationId" : "DedicatedCloudServices_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dedicatedCloudServiceName",
          "in" : "path",
          "description" : "dedicated cloud service name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Patch Dedicated Cloud Service request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "If resource is created or updated successfully, 200 should be returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DedicatedCloudService"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/virtualMachines" : {
      "get" : {
        "tags" : [ "VirtualMachines" ],
        "summary" : "Implements list virtual machine within RG method",
        "description" : "Returns list of virtual machine within resource group",
        "operationId" : "VirtualMachines_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the list operation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of record sets to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "to be used by nextLink implementation",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualMachineListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/virtualMachines/{virtualMachineName}" : {
      "get" : {
        "tags" : [ "VirtualMachines" ],
        "summary" : "Implements virtual machine GET method",
        "description" : "Get virtual machine",
        "operationId" : "VirtualMachines_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "virtual machine name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualMachine"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VirtualMachines" ],
        "summary" : "Implements virtual machine PUT method",
        "description" : "Create Or Update Virtual Machine",
        "operationId" : "VirtualMachines_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Referer",
          "in" : "header",
          "description" : "referer url",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "virtual machine name",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create or Update Virtual Machine request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VirtualMachine"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "If resource is created or updated successfully, 200 should be returned",
            "headers" : {
              "Azure-AsyncOperation" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualMachine"
                }
              }
            }
          },
          "201" : {
            "description" : "If resource is created or updated successfully, 201 should be returned. provisionedState would of VirtualMachineProperties object would reflect the state of the resource",
            "headers" : {
              "Azure-AsyncOperation" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualMachine"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "VirtualMachines" ],
        "summary" : "Implements virtual machine DELETE method",
        "description" : "Delete virtual machine",
        "operationId" : "VirtualMachines_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Referer",
          "in" : "header",
          "description" : "referer url",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "virtual machine name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "accepted. the operation will complete asynchronously",
            "headers" : {
              "Retry-After" : {
                "schema" : {
                  "type" : "integer"
                }
              },
              "Azure-AsyncOperation" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "no content. resource does not exist and the request is well formed"
          },
          "default" : {
            "description" : "General Error",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "default" : "application/json"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "VirtualMachines" ],
        "summary" : "Implements virtual machine PATCH method",
        "description" : "Patch virtual machine properties",
        "operationId" : "VirtualMachines_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "virtual machine name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Patch virtual machine request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "If resource is created or updated successfully, 200 should be returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualMachine"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/virtualMachines/{virtualMachineName}/start" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "summary" : "Implements a start method for a virtual machine",
        "description" : "Power on virtual machine",
        "operationId" : "VirtualMachines_Start",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Referer",
          "in" : "header",
          "description" : "referer url",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "virtual machine name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted. the operation will complete asynchronously",
            "headers" : {
              "Retry-After" : {
                "schema" : {
                  "type" : "integer"
                }
              },
              "Azure-AsyncOperation" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "default" : "application/json"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/virtualMachines/{virtualMachineName}/stop" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "summary" : "Implements shutdown, poweroff, and suspend method for a virtual machine",
        "description" : "Power off virtual machine, options: shutdown, poweroff, and suspend",
        "operationId" : "VirtualMachines_Stop",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Referer",
          "in" : "header",
          "description" : "referer url",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "virtual machine name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "query stop mode parameter (reboot, shutdown, etc...)",
          "schema" : {
            "type" : "string",
            "enum" : [ "reboot", "suspend", "shutdown", "poweroff" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body stop mode parameter (reboot, shutdown, etc...)",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VirtualMachineStopMode"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted. the operation will complete asynchronously",
            "headers" : {
              "Retry-After" : {
                "schema" : {
                  "type" : "integer"
                }
              },
              "Azure-AsyncOperation" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "General Error",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "default" : "application/json"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRPError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AvailableOperation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/AvailableOperationDisplay"
          },
          "isDataAction" : {
            "type" : "boolean",
            "description" : "Indicating whether the operation is a data action or not",
            "default" : false
          },
          "name" : {
            "type" : "string",
            "description" : "{resourceProviderNamespace}/{resourceType}/{read|write|delete|action}"
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of operation",
            "enum" : [ "user", "system", "user,system" ]
          },
          "properties" : {
            "$ref" : "#/components/schemas/AvailableOperationDisplayPropertyServiceSpecification"
          }
        },
        "description" : "Resource provider available operation model"
      },
      "AvailableOperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the operation for display purposes"
          },
          "operation" : {
            "type" : "string",
            "description" : "Name of the operation for display purposes"
          },
          "provider" : {
            "type" : "string",
            "description" : "Name of the provider for display purposes"
          },
          "resource" : {
            "type" : "string",
            "description" : "Name of the resource type for display purposes"
          }
        },
        "description" : "Resource provider available operation display model"
      },
      "AvailableOperationDisplayPropertyServiceSpecification" : {
        "type" : "object",
        "properties" : {
          "serviceSpecification" : {
            "$ref" : "#/components/schemas/AvailableOperationDisplayPropertyServiceSpecificationMetricsList"
          }
        },
        "description" : "Available operation display property service specification model"
      },
      "AvailableOperationDisplayPropertyServiceSpecificationMetricsItem" : {
        "required" : [ "aggregationType", "displayDescription", "displayName", "name", "unit" ],
        "type" : "object",
        "properties" : {
          "aggregationType" : {
            "type" : "string",
            "description" : "Metric's aggregation type for e.g. (Average, Total)",
            "enum" : [ "Average", "Total" ]
          },
          "displayDescription" : {
            "type" : "string",
            "description" : "Metric's description",
            "example" : "Average disk throughput due to read operations over the sample period."
          },
          "displayName" : {
            "type" : "string",
            "description" : "Human readable metric's name",
            "example" : "Disk Read Bytes/Sec"
          },
          "name" : {
            "type" : "string",
            "description" : "Metric's name/id",
            "example" : "DiskReadBytesPerSecond"
          },
          "unit" : {
            "type" : "string",
            "description" : "Metric's unit",
            "example" : "BytePerSecond"
          }
        },
        "description" : "Available operation display property service specification metrics item"
      },
      "AvailableOperationDisplayPropertyServiceSpecificationMetricsList" : {
        "type" : "object",
        "properties" : {
          "metricSpecifications" : {
            "type" : "array",
            "description" : "Metric specifications of operation",
            "items" : {
              "$ref" : "#/components/schemas/AvailableOperationDisplayPropertyServiceSpecificationMetricsItem"
            }
          }
        },
        "description" : "List of available operation display property service specification metrics"
      },
      "AvailableOperationsListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of available operations"
          },
          "value" : {
            "type" : "array",
            "description" : "Returns a list of available operations",
            "items" : {
              "$ref" : "#/components/schemas/AvailableOperation"
            }
          }
        },
        "description" : "List of available operations"
      },
      "CSRPError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/CSRPErrorBody"
          }
        },
        "description" : "General error model"
      },
      "CSRPErrorBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error's code",
            "readOnly" : true
          },
          "details" : {
            "type" : "array",
            "description" : "Error's details",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CSRPErrorBody"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Error's message",
            "readOnly" : true
          },
          "target" : {
            "type" : "string",
            "description" : "Error's target"
          }
        },
        "description" : "Error properties"
      },
      "CustomizationHostName" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Hostname"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of host name",
            "enum" : [ "USER_DEFINED", "PREFIX_BASED", "FIXED", "VIRTUAL_MACHINE_NAME", "CUSTOM_NAME" ]
          }
        },
        "description" : "Host name model"
      },
      "CustomizationIPAddress" : {
        "type" : "object",
        "properties" : {
          "argument" : {
            "type" : "string",
            "description" : "Argument when Custom ip type is selected"
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "Defined Ip Address when Fixed ip type is selected"
          },
          "type" : {
            "type" : "string",
            "description" : "Customization Specification ip type",
            "enum" : [ "CUSTOM", "DHCP_IP", "FIXED_IP", "USER_DEFINED" ]
          }
        }
      },
      "CustomizationIPSettings" : {
        "type" : "object",
        "properties" : {
          "gateway" : {
            "type" : "array",
            "description" : "The list of gateways",
            "items" : {
              "type" : "string"
            }
          },
          "ip" : {
            "$ref" : "#/components/schemas/CustomizationIPAddress"
          },
          "subnetMask" : {
            "type" : "string",
            "description" : "Adapter subnet mask"
          }
        }
      },
      "CustomizationIdentity" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "string",
            "description" : "Windows Text Identity. Prepared data"
          },
          "hostName" : {
            "$ref" : "#/components/schemas/CustomizationHostName"
          },
          "type" : {
            "type" : "string",
            "description" : "Identity type",
            "enum" : [ "WINDOWS_TEXT", "WINDOWS", "LINUX" ]
          },
          "userData" : {
            "type" : "object",
            "properties" : {
              "isPasswordPredefined" : {
                "type" : "boolean",
                "description" : "Is password predefined in customization policy",
                "default" : false
              }
            },
            "description" : "Windows Identity. User data customization"
          }
        }
      },
      "CustomizationNicSetting" : {
        "type" : "object",
        "properties" : {
          "adapter" : {
            "$ref" : "#/components/schemas/CustomizationIPSettings"
          },
          "macAddress" : {
            "type" : "string",
            "description" : "NIC mac address"
          }
        }
      },
      "CustomizationPoliciesListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of the Customization policy"
          },
          "value" : {
            "type" : "array",
            "description" : "List of the customization policies",
            "items" : {
              "$ref" : "#/components/schemas/CustomizationPolicy"
            }
          }
        },
        "description" : "List of customization polices response model"
      },
      "CustomizationPolicy" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Customization policy azure id"
          },
          "location" : {
            "type" : "string",
            "description" : "Azure region"
          },
          "name" : {
            "type" : "string",
            "description" : "Customization policy name",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/CustomizationPolicyProperties"
          },
          "type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "The virtual machine customization policy"
      },
      "CustomizationPolicyProperties" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Policy description"
          },
          "privateCloudId" : {
            "type" : "string",
            "description" : "The Private cloud id"
          },
          "specification" : {
            "$ref" : "#/components/schemas/CustomizationSpecification"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of customization (Linux or Windows)",
            "enum" : [ "LINUX", "WINDOWS" ]
          },
          "version" : {
            "type" : "string",
            "description" : "Policy version"
          }
        },
        "description" : "The properties of Customization policy"
      },
      "CustomizationSpecification" : {
        "type" : "object",
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/CustomizationIdentity"
          },
          "nicSettings" : {
            "type" : "array",
            "description" : "Network interface settings",
            "items" : {
              "$ref" : "#/components/schemas/CustomizationNicSetting"
            }
          }
        },
        "description" : "The specification for Customization Policy"
      },
      "DedicatedCloudNode" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Azure region"
          },
          "name" : {
            "pattern" : "^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$",
            "type" : "string",
            "description" : "{dedicatedCloudNodeName}",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/DedicatedCloudNodeProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "tags" : {
            "$ref" : "#/components/schemas/Tags"
          },
          "type" : {
            "type" : "string",
            "description" : "{resourceProviderNamespace}/{resourceType}",
            "readOnly" : true
          }
        },
        "description" : "Dedicated cloud node model"
      },
      "DedicatedCloudNodeListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of DedicatedCloudNode"
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the DedicatedCloudNode list",
            "items" : {
              "$ref" : "#/components/schemas/DedicatedCloudNode"
            }
          }
        },
        "description" : "List of dedicated nodes response model"
      },
      "DedicatedCloudNodeProperties" : {
        "required" : [ "availabilityZoneId", "nodesCount", "placementGroupId", "purchaseId" ],
        "type" : "object",
        "properties" : {
          "availabilityZoneId" : {
            "type" : "string",
            "description" : "Availability Zone id, e.g. \"az1\""
          },
          "availabilityZoneName" : {
            "type" : "string",
            "description" : "Availability Zone name, e.g. \"Availability Zone 1\"",
            "readOnly" : true
          },
          "cloudRackName" : {
            "type" : "string",
            "description" : "VMWare Cloud Rack Name",
            "readOnly" : true
          },
          "created" : {
            "type" : "object",
            "description" : "date time the resource was created",
            "format" : "date-time",
            "readOnly" : true
          },
          "nodesCount" : {
            "type" : "integer",
            "description" : "count of nodes to create"
          },
          "placementGroupId" : {
            "type" : "string",
            "description" : "Placement Group id, e.g. \"n1\""
          },
          "placementGroupName" : {
            "type" : "string",
            "description" : "Placement Name, e.g. \"Placement Group 1\"",
            "readOnly" : true
          },
          "privateCloudId" : {
            "type" : "string",
            "description" : "Private Cloud Id",
            "readOnly" : true
          },
          "privateCloudName" : {
            "type" : "string",
            "description" : "Resource Pool Name",
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource",
            "readOnly" : true
          },
          "purchaseId" : {
            "type" : "string",
            "description" : "purchase id",
            "format" : "uuid"
          },
          "skuDescription" : {
            "$ref" : "#/components/schemas/SkuDescription"
          },
          "status" : {
            "type" : "string",
            "description" : "Node status, indicates is private cloud set up on this node or not",
            "readOnly" : true,
            "enum" : [ "unused", "used" ]
          },
          "vmwareClusterName" : {
            "type" : "string",
            "description" : "VMWare Cluster Name",
            "readOnly" : true
          }
        },
        "description" : "Properties of dedicated cloud node"
      },
      "DedicatedCloudService" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Azure region"
          },
          "name" : {
            "pattern" : "^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$",
            "type" : "string",
            "description" : "{dedicatedCloudServiceName}",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/DedicatedCloudServiceProperties"
          },
          "tags" : {
            "$ref" : "#/components/schemas/Tags"
          },
          "type" : {
            "type" : "string",
            "description" : "{resourceProviderNamespace}/{resourceType}",
            "readOnly" : true
          }
        },
        "description" : "Dedicated cloud service model"
      },
      "DedicatedCloudServiceListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of DedicatedCloudNode"
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the DedicatedCloudService list",
            "items" : {
              "$ref" : "#/components/schemas/DedicatedCloudService"
            }
          }
        },
        "description" : "List of dedicated cloud services"
      },
      "DedicatedCloudServiceProperties" : {
        "required" : [ "gatewaySubnet" ],
        "type" : "object",
        "properties" : {
          "gatewaySubnet" : {
            "type" : "string",
            "description" : "gateway Subnet for the account. It will collect the subnet address and always treat it as /28"
          },
          "isAccountOnboarded" : {
            "type" : "string",
            "description" : "indicates whether account onboarded or not in a given region",
            "readOnly" : true,
            "enum" : [ "notOnBoarded", "onBoarded", "onBoardingFailed", "onBoarding" ]
          },
          "nodes" : {
            "type" : "integer",
            "description" : "total nodes purchased",
            "readOnly" : true
          },
          "serviceURL" : {
            "type" : "string",
            "description" : "link to a service management web portal",
            "readOnly" : true
          }
        },
        "description" : "Properties of dedicated cloud service"
      },
      "GuestOSCustomization" : {
        "type" : "object",
        "properties" : {
          "dnsServers" : {
            "type" : "array",
            "description" : "List of dns servers to use",
            "items" : {
              "$ref" : "#/components/schemas/IPV4Address"
            }
          },
          "hostName" : {
            "type" : "string",
            "description" : "Virtual Machine hostname"
          },
          "password" : {
            "type" : "string",
            "description" : "Password for login"
          },
          "policyId" : {
            "type" : "string",
            "description" : "id of customization policy"
          },
          "username" : {
            "type" : "string",
            "description" : "Username for login"
          }
        },
        "description" : "Guest OS Customization properties"
      },
      "GuestOSNICCustomization" : {
        "type" : "object",
        "properties" : {
          "allocation" : {
            "type" : "string",
            "description" : "IP address allocation method",
            "enum" : [ "static", "dynamic" ]
          },
          "dnsServers" : {
            "type" : "array",
            "description" : "List of dns servers to use",
            "items" : {
              "$ref" : "#/components/schemas/IPV4Address"
            }
          },
          "gateway" : {
            "type" : "array",
            "description" : "Gateway addresses assigned to nic",
            "items" : {
              "$ref" : "#/components/schemas/IPV4Address"
            }
          },
          "ipAddress" : {
            "$ref" : "#/components/schemas/IPV4Address"
          },
          "mask" : {
            "$ref" : "#/components/schemas/IPV4Address"
          },
          "primaryWinsServer" : {
            "$ref" : "#/components/schemas/IPV4Address"
          },
          "secondaryWinsServer" : {
            "$ref" : "#/components/schemas/IPV4Address"
          }
        },
        "description" : "Guest OS nic customization"
      },
      "IPV4Address" : {
        "pattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])[.]){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
        "type" : "string"
      },
      "OperationError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error's code"
          },
          "message" : {
            "type" : "string",
            "description" : "Error's message"
          }
        },
        "description" : "Operation error model"
      },
      "OperationResource" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "End time of the operation",
            "format" : "date-time",
            "readOnly" : true
          },
          "error" : {
            "$ref" : "#/components/schemas/OperationError"
          },
          "id" : {
            "type" : "string",
            "description" : "Operation Id",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Operation ID",
            "readOnly" : true
          },
          "startTime" : {
            "type" : "string",
            "description" : "Start time of the operation",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Operation status",
            "readOnly" : true
          }
        },
        "description" : "Operation status response"
      },
      "PatchPayload" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "$ref" : "#/components/schemas/Tags"
          }
        },
        "description" : "General patch payload modal"
      },
      "PrivateCloud" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Azure Id, e.g. \"/subscriptions/4da99247-a172-4ed6-8ae9-ebed2d12f839/providers/Microsoft.VMwareCloudSimple/privateClouds/cloud123\""
          },
          "location" : {
            "type" : "string",
            "description" : "Location where private cloud created, e.g \"westus\""
          },
          "name" : {
            "type" : "string",
            "description" : "Private cloud name"
          },
          "properties" : {
            "$ref" : "#/components/schemas/PrivateCloudProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Azure Resource type",
            "enum" : [ "Microsoft.VMwareCloudSimple/privateClouds" ]
          }
        },
        "description" : "Private cloud model"
      },
      "PrivateCloudList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of Private Clouds"
          },
          "value" : {
            "type" : "array",
            "description" : "the list of private clouds",
            "items" : {
              "$ref" : "#/components/schemas/PrivateCloud"
            }
          }
        },
        "description" : "List of private clouds"
      },
      "PrivateCloudProperties" : {
        "type" : "object",
        "properties" : {
          "availabilityZoneId" : {
            "type" : "string",
            "description" : "Availability Zone id, e.g. \"az1\""
          },
          "availabilityZoneName" : {
            "type" : "string",
            "description" : "Availability Zone name, e.g. \"Availability Zone 1\""
          },
          "clustersNumber" : {
            "type" : "integer",
            "description" : "Number of clusters"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "User's emails who created cloud"
          },
          "createdOn" : {
            "type" : "string",
            "description" : "When private cloud was created",
            "format" : "date-time"
          },
          "dnsServers" : {
            "type" : "array",
            "description" : "Array of DNS servers",
            "items" : {
              "type" : "string"
            }
          },
          "expires" : {
            "type" : "string",
            "description" : "Expiration date of PC"
          },
          "nsxType" : {
            "type" : "string",
            "description" : "Nsx Type, e.g. \"Advanced\""
          },
          "placementGroupId" : {
            "type" : "string",
            "description" : "Placement Group id, e.g. \"n1\""
          },
          "placementGroupName" : {
            "type" : "string",
            "description" : "Placement Group name"
          },
          "privateCloudId" : {
            "type" : "string",
            "description" : "Id of a private cloud",
            "format" : "uuid"
          },
          "resourcePools" : {
            "type" : "array",
            "description" : "The list of Resource Pools",
            "items" : {
              "$ref" : "#/components/schemas/ResourcePool"
            }
          },
          "state" : {
            "type" : "string",
            "description" : "Private Cloud state, e.g. \"operational\""
          },
          "totalCpuCores" : {
            "type" : "integer",
            "description" : "Number of cores"
          },
          "totalNodes" : {
            "type" : "integer",
            "description" : "Number of nodes"
          },
          "totalRam" : {
            "type" : "integer",
            "description" : "Memory size"
          },
          "totalStorage" : {
            "type" : "number",
            "description" : "Disk space in TB"
          },
          "type" : {
            "type" : "string",
            "description" : "Virtualization type e.g. \"vSphere\""
          },
          "vSphereVersion" : {
            "type" : "string",
            "description" : "e.g. \"6.5u2\""
          },
          "vcenterFqdn" : {
            "type" : "string",
            "description" : "FQDN for vcenter access"
          },
          "vcenterRefid" : {
            "type" : "string",
            "description" : "Vcenter ip address"
          },
          "virtualMachineTemplates" : {
            "type" : "array",
            "description" : "The list of Virtual Machine Templates",
            "items" : {
              "$ref" : "#/components/schemas/VirtualMachineTemplate"
            }
          },
          "virtualNetworks" : {
            "type" : "array",
            "description" : "The list of Virtual Networks",
            "items" : {
              "$ref" : "#/components/schemas/VirtualNetwork"
            }
          },
          "vrOpsEnabled" : {
            "type" : "boolean",
            "description" : "Is Vrops enabled/disabled"
          }
        },
        "description" : "Properties of private"
      },
      "ResourcePool" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource pool id (privateCloudId:vsphereId)"
          },
          "location" : {
            "type" : "string",
            "description" : "Azure region",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "{ResourcePoolName}",
            "readOnly" : true
          },
          "privateCloudId" : {
            "type" : "string",
            "description" : "The Private Cloud Id",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/ResourcePoolProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "{resourceProviderNamespace}/{resourceType}",
            "readOnly" : true
          }
        },
        "description" : "Resource pool model"
      },
      "ResourcePoolProperties" : {
        "type" : "object",
        "properties" : {
          "fullName" : {
            "type" : "string",
            "description" : "Hierarchical resource pool name",
            "readOnly" : true
          }
        },
        "description" : "Properties of resource pool"
      },
      "ResourcePoolsListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of ResourcePoolsList"
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the Resource pools list",
            "items" : {
              "$ref" : "#/components/schemas/ResourcePool"
            }
          }
        },
        "description" : "List of resource pools response model"
      },
      "Sku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "capacity" : {
            "type" : "string",
            "description" : "The capacity of the SKU"
          },
          "description" : {
            "type" : "string",
            "description" : "dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200 2400MHz DDR4 ECC Registered DIMM, ..."
          },
          "family" : {
            "type" : "string",
            "description" : "If the service has different generations of hardware, for the same SKU, then that can be captured here"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the SKU for VMWare CloudSimple Node"
          },
          "tier" : {
            "type" : "string",
            "description" : "The tier of the SKU"
          }
        },
        "description" : "The purchase SKU for CloudSimple paid resources"
      },
      "SkuAvailability" : {
        "required" : [ "limit" ],
        "type" : "object",
        "properties" : {
          "dedicatedAvailabilityZoneId" : {
            "type" : "string",
            "description" : "CloudSimple Availability Zone id"
          },
          "dedicatedAvailabilityZoneName" : {
            "type" : "string",
            "description" : "CloudSimple Availability Zone Name"
          },
          "dedicatedPlacementGroupId" : {
            "type" : "string",
            "description" : "CloudSimple Placement Group Id"
          },
          "dedicatedPlacementGroupName" : {
            "type" : "string",
            "description" : "CloudSimple Placement Group name"
          },
          "limit" : {
            "type" : "integer",
            "description" : "indicates how many resources of a given SKU is available in a AZ->PG"
          },
          "resourceType" : {
            "type" : "string",
            "description" : "resource type e.g. DedicatedCloudNodes"
          },
          "skuId" : {
            "type" : "string",
            "description" : "sku id"
          },
          "skuName" : {
            "type" : "string",
            "description" : "sku name"
          }
        },
        "description" : "SKU availability model"
      },
      "SkuAvailabilityListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of DedicatedCloudNode"
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the DedicatedPlacementGroupSkuAvailability list",
            "items" : {
              "$ref" : "#/components/schemas/SkuAvailability"
            }
          }
        },
        "description" : "List of SKU availabilities"
      },
      "SkuDescription" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "SKU's id"
          },
          "name" : {
            "type" : "string",
            "description" : "SKU's name"
          }
        },
        "description" : "The purchase SKU for CloudSimple paid resources"
      },
      "Tags" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Tags model"
      },
      "Usage" : {
        "required" : [ "currentValue", "limit" ],
        "type" : "object",
        "properties" : {
          "currentValue" : {
            "type" : "integer",
            "description" : "The current usage value"
          },
          "limit" : {
            "type" : "integer",
            "description" : "limit of a given sku in a region for a subscription. The maximum permitted value for the usage quota. If there is no limit, this value will be -1"
          },
          "name" : {
            "$ref" : "#/components/schemas/UsageName"
          },
          "unit" : {
            "type" : "string",
            "description" : "The usages' unit",
            "enum" : [ "Count", "Bytes", "Seconds", "Percent", "CountPerSecond", "BytesPerSecond" ]
          }
        },
        "description" : "Usage model"
      },
      "UsageListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of DedicatedCloudNode"
          },
          "value" : {
            "type" : "array",
            "description" : "The list of usages",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Usage"
            }
          }
        },
        "description" : "List of usages"
      },
      "UsageName" : {
        "type" : "object",
        "properties" : {
          "localizedValue" : {
            "type" : "string",
            "description" : "e.g. \"Virtual Machines\""
          },
          "value" : {
            "type" : "string",
            "description" : "resource type or resource type sku name, e.g. virtualMachines"
          }
        },
        "description" : "User name model"
      },
      "VirtualDisk" : {
        "required" : [ "controllerId", "independenceMode", "totalSize" ],
        "type" : "object",
        "properties" : {
          "controllerId" : {
            "type" : "string",
            "description" : "Disk's Controller id"
          },
          "independenceMode" : {
            "type" : "string",
            "description" : "Disk's independence mode type",
            "enum" : [ "persistent", "independent_persistent", "independent_nonpersistent" ]
          },
          "totalSize" : {
            "type" : "integer",
            "description" : "Disk's total size"
          },
          "virtualDiskId" : {
            "type" : "string",
            "description" : "Disk's id"
          },
          "virtualDiskName" : {
            "type" : "string",
            "description" : "Disk's display name",
            "readOnly" : true
          }
        },
        "description" : "Virtual disk model"
      },
      "VirtualDiskController" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Controller's id",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The display name of Controller",
            "readOnly" : true
          },
          "subType" : {
            "type" : "string",
            "description" : "dik controller subtype (VMWARE_PARAVIRTUAL, BUS_PARALLEL, LSI_PARALLEL, LSI_SAS)",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "disk controller type (SCSI)",
            "readOnly" : true
          }
        },
        "description" : "Virtual disk controller model"
      },
      "VirtualMachine" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/virtualMachines/{virtualMachineName}",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Azure region"
          },
          "name" : {
            "pattern" : "^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$",
            "type" : "string",
            "description" : "{virtualMachineName}",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/VirtualMachineProperties"
          },
          "tags" : {
            "$ref" : "#/components/schemas/Tags"
          },
          "type" : {
            "type" : "string",
            "description" : "{resourceProviderNamespace}/{resourceType}",
            "readOnly" : true
          }
        },
        "description" : "Virtual machine model"
      },
      "VirtualMachineListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of VirtualMachines"
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the VirtualMachine list",
            "items" : {
              "$ref" : "#/components/schemas/VirtualMachine"
            }
          }
        },
        "description" : "List of virtual machines"
      },
      "VirtualMachineProperties" : {
        "required" : [ "amountOfRam", "numberOfCores", "privateCloudId" ],
        "type" : "object",
        "properties" : {
          "amountOfRam" : {
            "type" : "integer",
            "description" : "The amount of memory"
          },
          "controllers" : {
            "type" : "array",
            "description" : "The list of Virtual Disks' Controllers",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VirtualDiskController"
            }
          },
          "customization" : {
            "$ref" : "#/components/schemas/GuestOSCustomization"
          },
          "disks" : {
            "type" : "array",
            "description" : "The list of Virtual Disks",
            "items" : {
              "$ref" : "#/components/schemas/VirtualDisk"
            }
          },
          "dnsname" : {
            "type" : "string",
            "description" : "The DNS name of Virtual Machine in VCenter",
            "readOnly" : true
          },
          "exposeToGuestVM" : {
            "type" : "boolean",
            "description" : "Expose Guest OS or not"
          },
          "folder" : {
            "type" : "string",
            "description" : "The path to virtual machine folder in VCenter",
            "readOnly" : true
          },
          "guestOS" : {
            "type" : "string",
            "description" : "The name of Guest OS",
            "readOnly" : true
          },
          "guestOSType" : {
            "type" : "string",
            "description" : "The Guest OS type",
            "readOnly" : true,
            "enum" : [ "linux", "windows", "other" ]
          },
          "nics" : {
            "type" : "array",
            "description" : "The list of Virtual NICs",
            "items" : {
              "$ref" : "#/components/schemas/VirtualNic"
            }
          },
          "numberOfCores" : {
            "type" : "integer",
            "description" : "The number of CPU cores"
          },
          "password" : {
            "type" : "string",
            "description" : "Password for login. Deprecated - use customization property"
          },
          "privateCloudId" : {
            "type" : "string",
            "description" : "Private Cloud Id"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource",
            "readOnly" : true
          },
          "publicIP" : {
            "type" : "string",
            "description" : "The public ip of Virtual Machine",
            "readOnly" : true
          },
          "resourcePool" : {
            "$ref" : "#/components/schemas/ResourcePool"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of Virtual machine",
            "readOnly" : true,
            "enum" : [ "running", "suspended", "poweredoff", "updating", "deallocating", "deleting" ]
          },
          "templateId" : {
            "type" : "string",
            "description" : "Virtual Machine Template Id"
          },
          "username" : {
            "type" : "string",
            "description" : "Username for login. Deprecated - use customization property"
          },
          "vSphereNetworks" : {
            "type" : "array",
            "description" : "The list of Virtual VSphere Networks",
            "items" : {
              "type" : "string"
            }
          },
          "vmId" : {
            "type" : "string",
            "description" : "The internal id of Virtual Machine in VCenter",
            "readOnly" : true
          },
          "vmwaretools" : {
            "type" : "string",
            "description" : "VMware tools version",
            "readOnly" : true
          }
        },
        "description" : "Properties of virtual machine"
      },
      "VirtualMachineStopMode" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "string",
            "description" : "mode indicates a type of stop operation - reboot, suspend, shutdown or power-off",
            "enum" : [ "reboot", "suspend", "shutdown", "poweroff" ]
          }
        },
        "description" : "List of virtual machine stop modes"
      },
      "VirtualMachineTemplate" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "virtual machine template id (privateCloudId:vsphereId)",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Azure region"
          },
          "name" : {
            "type" : "string",
            "description" : "{virtualMachineTemplateName}",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/VirtualMachineTemplateProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "{resourceProviderNamespace}/{resourceType}",
            "readOnly" : true
          }
        },
        "description" : "Virtual machine template model"
      },
      "VirtualMachineTemplateListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of VirtualMachineTemplate"
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the VM template list",
            "items" : {
              "$ref" : "#/components/schemas/VirtualMachineTemplate"
            }
          }
        },
        "description" : "List of virtual machine templates"
      },
      "VirtualMachineTemplateProperties" : {
        "required" : [ "privateCloudId" ],
        "type" : "object",
        "properties" : {
          "amountOfRam" : {
            "type" : "integer",
            "description" : "The amount of memory"
          },
          "controllers" : {
            "type" : "array",
            "description" : "The list of Virtual Disk Controllers",
            "items" : {
              "$ref" : "#/components/schemas/VirtualDiskController"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The description of Virtual Machine Template"
          },
          "disks" : {
            "type" : "array",
            "description" : "The list of Virtual Disks",
            "items" : {
              "$ref" : "#/components/schemas/VirtualDisk"
            }
          },
          "exposeToGuestVM" : {
            "type" : "boolean",
            "description" : "Expose Guest OS or not"
          },
          "guestOS" : {
            "type" : "string",
            "description" : "The Guest OS",
            "readOnly" : true
          },
          "guestOSType" : {
            "type" : "string",
            "description" : "The Guest OS types",
            "readOnly" : true
          },
          "nics" : {
            "type" : "array",
            "description" : "The list of Virtual NICs",
            "items" : {
              "$ref" : "#/components/schemas/VirtualNic"
            }
          },
          "numberOfCores" : {
            "type" : "integer",
            "description" : "The number of CPU cores"
          },
          "path" : {
            "type" : "string",
            "description" : "path to folder",
            "example" : "Datacenter/Workload VMs"
          },
          "privateCloudId" : {
            "type" : "string",
            "description" : "The Private Cloud Id"
          },
          "vSphereNetworks" : {
            "type" : "array",
            "description" : "The list of VSphere networks",
            "items" : {
              "type" : "string"
            }
          },
          "vSphereTags" : {
            "type" : "array",
            "description" : "The tags from VSphere",
            "items" : {
              "type" : "string"
            }
          },
          "vmwaretools" : {
            "type" : "string",
            "description" : "The VMware tools version",
            "readOnly" : true
          }
        },
        "description" : "Properties of virtual machine template"
      },
      "VirtualNetwork" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "assignable" : {
            "type" : "boolean",
            "description" : "can be used in vm creation/deletion",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "virtual network id (privateCloudId:vsphereId)"
          },
          "location" : {
            "type" : "string",
            "description" : "Azure region",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "{VirtualNetworkName}",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/VirtualNetworkProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "{resourceProviderNamespace}/{resourceType}",
            "readOnly" : true
          }
        },
        "description" : "Virtual network model"
      },
      "VirtualNetworkListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next list of VirtualNetwork"
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the VirtualNetwork list",
            "items" : {
              "$ref" : "#/components/schemas/VirtualNetwork"
            }
          }
        },
        "description" : "List of virtual networks"
      },
      "VirtualNetworkProperties" : {
        "type" : "object",
        "properties" : {
          "privateCloudId" : {
            "type" : "string",
            "description" : "The Private Cloud id",
            "readOnly" : true
          }
        },
        "description" : "Properties of virtual network"
      },
      "VirtualNic" : {
        "required" : [ "network", "nicType" ],
        "type" : "object",
        "properties" : {
          "customization" : {
            "$ref" : "#/components/schemas/GuestOSNICCustomization"
          },
          "ipAddresses" : {
            "type" : "array",
            "description" : "NIC ip address",
            "items" : {
              "type" : "string"
            }
          },
          "macAddress" : {
            "type" : "string",
            "description" : "NIC MAC address"
          },
          "network" : {
            "$ref" : "#/components/schemas/VirtualNetwork"
          },
          "nicType" : {
            "type" : "string",
            "description" : "NIC type",
            "enum" : [ "E1000", "E1000E", "PCNET32", "VMXNET", "VMXNET2", "VMXNET3" ]
          },
          "powerOnBoot" : {
            "type" : "boolean",
            "description" : "Is NIC powered on/off on boot"
          },
          "virtualNicId" : {
            "type" : "string",
            "description" : "NIC id"
          },
          "virtualNicName" : {
            "type" : "string",
            "description" : "NIC name",
            "readOnly" : true
          }
        },
        "description" : "Virtual NIC model"
      }
    },
    "parameters" : {
      "api-version" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client API version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "pcName" : {
        "name" : "pcName",
        "in" : "path",
        "description" : "The private cloud name",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "referer" : {
        "name" : "Referer",
        "in" : "header",
        "description" : "referer url",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "regionId" : {
        "name" : "regionId",
        "in" : "path",
        "description" : "The region Id (westus, eastus)",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}