{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "FrontDoorManagementClient",
    "description" : "Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.",
    "version" : "2019-05-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.Network/checkFrontDoorNameAvailability" : {
      "post" : {
        "tags" : [ "CheckFrontDoorNameAvailability" ],
        "description" : "Check the availability of a Front Door resource name.",
        "operationId" : "CheckFrontDoorNameAvailability",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Input to check.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckNameAvailabilityOutput"
                }
              }
            }
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/checkFrontDoorNameAvailability" : {
      "post" : {
        "tags" : [ "CheckFrontDoorNameAvailabilityWithSubscription" ],
        "description" : "Check the availability of a Front Door subdomain.",
        "operationId" : "CheckFrontDoorNameAvailabilityWithSubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Input to check.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckNameAvailabilityOutput"
                }
              }
            }
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/frontDoors" : {
      "get" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Lists all of the Front Doors within an Azure subscription.",
        "operationId" : "FrontDoors_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrontDoorListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors" : {
      "get" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Lists all of the Front Doors within a resource group under a subscription.",
        "operationId" : "FrontDoors_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrontDoorListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}" : {
      "get" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Gets a Front Door with the specified Front Door name under the specified subscription and resource group.",
        "operationId" : "FrontDoors_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "frontDoorName",
          "in" : "path",
          "description" : "Name of the Front Door which is globally unique.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrontDoor"
                }
              }
            }
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Creates a new Front Door with a Front Door name under the specified subscription and resource group.",
        "operationId" : "FrontDoors_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "frontDoorName",
          "in" : "path",
          "description" : "Name of the Front Door which is globally unique.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Front Door properties needed to create a new Front Door.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FrontDoor"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrontDoor"
                }
              }
            }
          },
          "201" : {
            "description" : "Created. The request has been fulfilled and a new Front Door has been created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrontDoor"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrontDoor"
                }
              }
            }
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Deletes an existing Front Door with the specified parameters.",
        "operationId" : "FrontDoors_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "frontDoorName",
          "in" : "path",
          "description" : "Name of the Front Door which is globally unique.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204" : {
            "description" : "No Content. The request has been accepted but the Front Door was not found."
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints" : {
      "get" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Lists all of the frontend endpoints within a Front Door.",
        "operationId" : "FrontendEndpoints_ListByFrontDoor",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "frontDoorName",
          "in" : "path",
          "description" : "Name of the Front Door which is globally unique.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrontendEndpointsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}" : {
      "get" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Gets a Frontend endpoint with the specified name within the specified Front Door.",
        "operationId" : "FrontendEndpoints_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "frontDoorName",
          "in" : "path",
          "description" : "Name of the Front Door which is globally unique.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "frontendEndpointName",
          "in" : "path",
          "description" : "Name of the Frontend endpoint which is unique within the Front Door.",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrontendEndpoint"
                }
              }
            }
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/disableHttps" : {
      "post" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Disables a frontendEndpoint for HTTPS traffic",
        "operationId" : "FrontendEndpoints_DisableHttps",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "frontDoorName",
          "in" : "path",
          "description" : "Name of the Front Door which is globally unique.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "frontendEndpointName",
          "in" : "path",
          "description" : "Name of the Frontend endpoint which is unique within the Front Door.",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted and the operation will complete asynchronously."
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/enableHttps" : {
      "post" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Enables a frontendEndpoint for HTTPS traffic",
        "operationId" : "FrontendEndpoints_EnableHttps",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "frontDoorName",
          "in" : "path",
          "description" : "Name of the Front Door which is globally unique.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "frontendEndpointName",
          "in" : "path",
          "description" : "Name of the Frontend endpoint which is unique within the Front Door.",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The configuration specifying how to enable HTTPS",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomHttpsConfiguration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted and the operation will complete asynchronously."
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/purge" : {
      "post" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Removes a content from Front Door.",
        "operationId" : "Endpoints_PurgeContent",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "frontDoorName",
          "in" : "path",
          "description" : "Name of the Front Door which is globally unique.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PurgeParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted and the operation will complete asynchronously."
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/validateCustomDomain" : {
      "post" : {
        "tags" : [ "FrontDoors" ],
        "description" : "Validates the custom domain mapping to ensure it maps to the correct Front Door endpoint in DNS.",
        "operationId" : "FrontDoors_ValidateCustomDomain",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
            "type" : "string"
          }
        }, {
          "name" : "frontDoorName",
          "in" : "path",
          "description" : "Name of the Front Door which is globally unique.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Custom domain to be validated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ValidateCustomDomainInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidateCustomDomainOutput"
                }
              }
            }
          },
          "default" : {
            "description" : "Front Door error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Backend" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "Location of the backend (IP address or FQDN)"
          },
          "backendHostHeader" : {
            "type" : "string",
            "description" : "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host."
          },
          "enabledState" : {
            "type" : "string",
            "description" : "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "httpPort" : {
            "maximum" : 65535,
            "exclusiveMaximum" : false,
            "minimum" : 1,
            "exclusiveMinimum" : false,
            "type" : "integer",
            "description" : "The HTTP TCP port number. Must be between 1 and 65535."
          },
          "httpsPort" : {
            "maximum" : 65535,
            "exclusiveMaximum" : false,
            "minimum" : 1,
            "exclusiveMinimum" : false,
            "type" : "integer",
            "description" : "The HTTPS TCP port number. Must be between 1 and 65535."
          },
          "priority" : {
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy."
          },
          "weight" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Weight of this endpoint for load balancing purposes."
          }
        },
        "description" : "Backend address of a frontDoor load balancer."
      },
      "BackendPool" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Resource name."
          },
          "properties" : {
            "$ref" : "#/components/schemas/BackendPoolProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "A backend pool is a collection of backends that can be routed to.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID."
            }
          },
          "description" : "Reference to another subresource."
        } ]
      },
      "BackendPoolListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of BackendPool objects if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Backend Pools within a Front Door.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/BackendPool"
            }
          }
        },
        "description" : "Result of the request to list Backend Pools. It contains a list of Backend Pools objects and a URL link to get the next set of results."
      },
      "BackendPoolProperties" : {
        "properties" : {
          "resourceState" : {
            "$ref" : "#/components/schemas/ResourceState"
          }
        },
        "description" : "The JSON object that contains the properties required to create a routing rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BackendPoolUpdateParameters"
        } ]
      },
      "BackendPoolUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "backends" : {
            "type" : "array",
            "description" : "The set of backends for this pool",
            "items" : {
              "$ref" : "#/components/schemas/Backend"
            }
          },
          "healthProbeSettings" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID."
              }
            },
            "description" : "Reference to another subresource."
          },
          "loadBalancingSettings" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID."
              }
            },
            "description" : "Reference to another subresource."
          }
        },
        "description" : "A collection of backends that can be routed to."
      },
      "BackendPoolsSettings" : {
        "type" : "object",
        "properties" : {
          "enforceCertificateNameCheck" : {
            "type" : "string",
            "description" : "Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.",
            "default" : "Enabled",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "sendRecvTimeoutSeconds" : {
            "minimum" : 16,
            "exclusiveMinimum" : false,
            "type" : "integer",
            "description" : "Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns."
          }
        },
        "description" : "Settings that apply to all backend pools."
      },
      "CacheConfiguration" : {
        "type" : "object",
        "properties" : {
          "dynamicCompression" : {
            "type" : "string",
            "description" : "Whether to use dynamic compression for cached content",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "queryParameterStripDirective" : {
            "type" : "string",
            "description" : "Treatment of URL query terms when forming the cache key.",
            "enum" : [ "StripNone", "StripAll" ]
          }
        },
        "description" : "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object."
      },
      "CheckNameAvailabilityInput" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The resource name to validate."
          },
          "type" : {
            "$ref" : "#/components/schemas/ResourceType"
          }
        },
        "description" : "Input of CheckNameAvailability API."
      },
      "CheckNameAvailabilityOutput" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The detailed error message describing why the name is not available.",
            "readOnly" : true
          },
          "nameAvailability" : {
            "type" : "string",
            "description" : "Indicates whether the name is available.",
            "readOnly" : true,
            "enum" : [ "Available", "Unavailable" ]
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason why the name is not available.",
            "readOnly" : true
          }
        },
        "description" : "Output of check name availability API."
      },
      "CustomHttpsConfiguration" : {
        "required" : [ "certificateSource", "minimumTlsVersion", "protocolType" ],
        "type" : "object",
        "properties" : {
          "certificateSource" : {
            "type" : "string",
            "description" : "Defines the source of the SSL certificate",
            "enum" : [ "AzureKeyVault", "FrontDoor" ]
          },
          "frontDoorCertificateSourceParameters" : {
            "$ref" : "#/components/schemas/FrontDoorCertificateSourceParameters"
          },
          "keyVaultCertificateSourceParameters" : {
            "$ref" : "#/components/schemas/KeyVaultCertificateSourceParameters"
          },
          "minimumTlsVersion" : {
            "type" : "string",
            "description" : "The minimum TLS version required from the clients to establish an SSL handshake with Front Door.",
            "enum" : [ "1.0", "1.2" ]
          },
          "protocolType" : {
            "type" : "string",
            "description" : "Defines the TLS extension protocol that is used for secure delivery",
            "enum" : [ "ServerNameIndication" ]
          }
        },
        "description" : "Https settings for a domain"
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Error message indicating why the operation failed.",
            "readOnly" : true
          }
        },
        "description" : "Error response indicates Front Door service is not able to process the incoming request. The reason is provided in the error message."
      },
      "ForwardingConfiguration" : {
        "properties" : {
          "backendPool" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID."
              }
            },
            "description" : "Reference to another subresource."
          },
          "cacheConfiguration" : {
            "$ref" : "#/components/schemas/CacheConfiguration"
          },
          "customForwardingPath" : {
            "type" : "string",
            "description" : "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path."
          },
          "forwardingProtocol" : {
            "type" : "string",
            "description" : "Protocol this rule will use when forwarding traffic to backends.",
            "enum" : [ "HttpOnly", "HttpsOnly", "MatchRequest" ]
          }
        },
        "description" : "Describes Forwarding Route.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RouteConfiguration"
        } ]
      },
      "FrontDoor" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FrontDoorProperties"
          }
        },
        "description" : "Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic is sent there.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID.",
              "readOnly" : true
            },
            "location" : {
              "type" : "string",
              "description" : "Resource location."
            },
            "name" : {
              "type" : "string",
              "description" : "Resource name.",
              "readOnly" : true
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            },
            "type" : {
              "type" : "string",
              "description" : "Resource type.",
              "readOnly" : true
            }
          },
          "description" : "Common resource representation."
        } ]
      },
      "FrontDoorCertificateSourceParameters" : {
        "type" : "object",
        "properties" : {
          "certificateType" : {
            "type" : "string",
            "description" : "Defines the type of the certificate used for secure connections to a frontendEndpoint",
            "enum" : [ "Dedicated" ]
          }
        },
        "description" : "Parameters required for enabling SSL with Front Door-managed certificates"
      },
      "FrontDoorListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of Front Door objects if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Front Doors within a resource group.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/FrontDoor"
            }
          }
        },
        "description" : "Result of the request to list Front Doors. It contains a list of Front Door objects and a URL link to get the next set of results."
      },
      "FrontDoorProperties" : {
        "properties" : {
          "cname" : {
            "type" : "string",
            "description" : "The host that each frontendEndpoint must CNAME to.",
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Provisioning state of the Front Door.",
            "readOnly" : true
          },
          "resourceState" : {
            "$ref" : "#/components/schemas/ResourceState"
          }
        },
        "description" : "The JSON object that contains the properties required to create an endpoint.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FrontDoorUpdateParameters"
        } ]
      },
      "FrontDoorUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "backendPools" : {
            "type" : "array",
            "description" : "Backend pools available to routing rules.",
            "items" : {
              "$ref" : "#/components/schemas/BackendPool"
            }
          },
          "backendPoolsSettings" : {
            "$ref" : "#/components/schemas/BackendPoolsSettings"
          },
          "enabledState" : {
            "type" : "string",
            "description" : "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "A friendly name for the frontDoor"
          },
          "frontendEndpoints" : {
            "type" : "array",
            "description" : "Frontend endpoints available to routing rules.",
            "items" : {
              "$ref" : "#/components/schemas/FrontendEndpoint"
            }
          },
          "healthProbeSettings" : {
            "type" : "array",
            "description" : "Health probe settings associated with this Front Door instance.",
            "items" : {
              "$ref" : "#/components/schemas/HealthProbeSettingsModel"
            }
          },
          "loadBalancingSettings" : {
            "type" : "array",
            "description" : "Load balancing settings associated with this Front Door instance.",
            "items" : {
              "$ref" : "#/components/schemas/LoadBalancingSettingsModel"
            }
          },
          "routingRules" : {
            "type" : "array",
            "description" : "Routing rules associated with this Front Door.",
            "items" : {
              "$ref" : "#/components/schemas/RoutingRule"
            }
          }
        },
        "description" : "The properties needed to update a Front Door"
      },
      "FrontendEndpoint" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Resource name."
          },
          "properties" : {
            "$ref" : "#/components/schemas/FrontendEndpointProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "A frontend endpoint used for routing.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID."
            }
          },
          "description" : "Reference to another subresource."
        } ]
      },
      "FrontendEndpointProperties" : {
        "properties" : {
          "customHttpsConfiguration" : {
            "$ref" : "#/components/schemas/CustomHttpsConfiguration"
          },
          "customHttpsProvisioningState" : {
            "type" : "string",
            "description" : "Provisioning status of Custom Https of the frontendEndpoint.",
            "readOnly" : true,
            "enum" : [ "Enabling", "Enabled", "Disabling", "Disabled", "Failed" ]
          },
          "customHttpsProvisioningSubstate" : {
            "type" : "string",
            "description" : "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
            "readOnly" : true,
            "enum" : [ "SubmittingDomainControlValidationRequest", "PendingDomainControlValidationREquestApproval", "DomainControlValidationRequestApproved", "DomainControlValidationRequestRejected", "DomainControlValidationRequestTimedOut", "IssuingCertificate", "DeployingCertificate", "CertificateDeployed", "DeletingCertificate", "CertificateDeleted" ]
          },
          "resourceState" : {
            "$ref" : "#/components/schemas/ResourceState"
          }
        },
        "description" : "The JSON object that contains the properties required to create a frontend endpoint.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FrontendEndpointUpdateParameters"
        } ]
      },
      "FrontendEndpointUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "description" : "The host name of the frontendEndpoint. Must be a domain name."
          },
          "sessionAffinityEnabledState" : {
            "type" : "string",
            "description" : "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "sessionAffinityTtlSeconds" : {
            "type" : "integer",
            "description" : "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable."
          },
          "webApplicationFirewallPolicyLink" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID."
              }
            },
            "description" : "Defines the Web Application Firewall policy for each host (if applicable)"
          }
        },
        "description" : "Frontend endpoint used in routing rule"
      },
      "FrontendEndpointsListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of frontend endpoints if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Frontend endpoints within a Front Door.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/FrontendEndpoint"
            }
          }
        },
        "description" : "Result of the request to list frontend endpoints. It contains a list of Frontend endpoint objects and a URL link to get the next set of results."
      },
      "HealthProbeSettingsListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of HealthProbeSettings objects if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of HealthProbeSettings within a Front Door.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/HealthProbeSettingsModel"
            }
          }
        },
        "description" : "Result of the request to list HealthProbeSettings. It contains a list of HealthProbeSettings objects and a URL link to get the next set of results."
      },
      "HealthProbeSettingsModel" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Resource name."
          },
          "properties" : {
            "$ref" : "#/components/schemas/HealthProbeSettingsProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "Load balancing settings for a backend pool",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID."
            }
          },
          "description" : "Reference to another subresource."
        } ]
      },
      "HealthProbeSettingsProperties" : {
        "properties" : {
          "resourceState" : {
            "$ref" : "#/components/schemas/ResourceState"
          }
        },
        "description" : "The JSON object that contains the properties required to create a health probe settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HealthProbeSettingsUpdateParameters"
        } ]
      },
      "HealthProbeSettingsUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "enabledState" : {
            "type" : "string",
            "description" : "Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "healthProbeMethod" : {
            "type" : "string",
            "description" : "Configures which HTTP method to use to probe the backends defined under backendPools.",
            "default" : "HEAD",
            "enum" : [ "GET", "HEAD" ]
          },
          "intervalInSeconds" : {
            "type" : "integer",
            "description" : "The number of seconds between health probes."
          },
          "path" : {
            "type" : "string",
            "description" : "The path to use for the health probe. Default is /"
          },
          "protocol" : {
            "type" : "string",
            "description" : "Protocol scheme to use for this probe",
            "enum" : [ "Http", "Https" ]
          }
        },
        "description" : "L7 health probe settings for a backend pool"
      },
      "KeyVaultCertificateSourceParameters" : {
        "type" : "object",
        "properties" : {
          "secretName" : {
            "type" : "string",
            "description" : "The name of the Key Vault secret representing the full certificate PFX"
          },
          "secretVersion" : {
            "type" : "string",
            "description" : "The version of the Key Vault secret representing the full certificate PFX"
          },
          "vault" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID."
              }
            },
            "description" : "The Key Vault containing the SSL certificate"
          }
        },
        "description" : "Parameters required for bring-your-own-certification via Key Vault"
      },
      "LoadBalancingSettingsListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of LoadBalancingSettings objects if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Backend Pools within a Front Door.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/LoadBalancingSettingsModel"
            }
          }
        },
        "description" : "Result of the request to list load balancing settings. It contains a list of load balancing settings objects and a URL link to get the next set of results."
      },
      "LoadBalancingSettingsModel" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Resource name."
          },
          "properties" : {
            "$ref" : "#/components/schemas/LoadBalancingSettingsProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "Load balancing settings for a backend pool",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID."
            }
          },
          "description" : "Reference to another subresource."
        } ]
      },
      "LoadBalancingSettingsProperties" : {
        "properties" : {
          "resourceState" : {
            "$ref" : "#/components/schemas/ResourceState"
          }
        },
        "description" : "The JSON object that contains the properties required to create load balancing settings",
        "allOf" : [ {
          "$ref" : "#/components/schemas/LoadBalancingSettingsUpdateParameters"
        } ]
      },
      "LoadBalancingSettingsUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "additionalLatencyMilliseconds" : {
            "type" : "integer",
            "description" : "The additional latency in milliseconds for probes to fall into the lowest latency bucket"
          },
          "sampleSize" : {
            "type" : "integer",
            "description" : "The number of samples to consider for load balancing decisions"
          },
          "successfulSamplesRequired" : {
            "type" : "integer",
            "description" : "The number of samples within the sample period that must succeed"
          }
        },
        "description" : "Round-Robin load balancing settings for a backend pool"
      },
      "PurgeParameters" : {
        "required" : [ "contentPaths" ],
        "type" : "object",
        "properties" : {
          "contentPaths" : {
            "type" : "array",
            "description" : "The path to the content to be purged. Can describe a file path or a wild card directory.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Parameters required for content purge."
      },
      "RedirectConfiguration" : {
        "properties" : {
          "customFragment" : {
            "type" : "string",
            "description" : "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #."
          },
          "customHost" : {
            "type" : "string",
            "description" : "Host to redirect. Leave empty to use the incoming host as the destination host."
          },
          "customPath" : {
            "type" : "string",
            "description" : "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path."
          },
          "customQueryString" : {
            "type" : "string",
            "description" : "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &."
          },
          "redirectProtocol" : {
            "type" : "string",
            "description" : "The protocol of the destination to where the traffic is redirected",
            "enum" : [ "HttpOnly", "HttpsOnly", "MatchRequest" ]
          },
          "redirectType" : {
            "type" : "string",
            "description" : "The redirect type the rule will use when redirecting traffic.",
            "enum" : [ "Moved", "Found", "TemporaryRedirect", "PermanentRedirect" ]
          }
        },
        "description" : "Describes Redirect Route.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RouteConfiguration"
        } ]
      },
      "ResourceState" : {
        "title" : "Resource status of the Front Door or Front Door SubResource.",
        "type" : "string",
        "enum" : [ "Creating", "Enabling", "Enabled", "Disabling", "Disabled", "Deleting" ]
      },
      "ResourceType" : {
        "type" : "string",
        "description" : "Type of Front Door resource used in CheckNameAvailability.",
        "enum" : [ "Microsoft.Network/frontDoors", "Microsoft.Network/frontDoors/frontendEndpoints" ]
      },
      "RouteConfiguration" : {
        "required" : [ "@odata.type" ],
        "type" : "object",
        "properties" : {
          "@odata.type" : {
            "type" : "string"
          }
        },
        "description" : "Base class for all types of Route.",
        "discriminator" : {
          "propertyName" : "@odata.type"
        }
      },
      "RoutingRule" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Resource name."
          },
          "properties" : {
            "$ref" : "#/components/schemas/RoutingRuleProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID."
            }
          },
          "description" : "Reference to another subresource."
        } ]
      },
      "RoutingRuleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of RoutingRule objects if there are any."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Routing Rules within a Front Door.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RoutingRule"
            }
          }
        },
        "description" : "Result of the request to list Routing Rules. It contains a list of Routing Rule objects and a URL link to get the next set of results."
      },
      "RoutingRuleProperties" : {
        "properties" : {
          "resourceState" : {
            "$ref" : "#/components/schemas/ResourceState"
          }
        },
        "description" : "The JSON object that contains the properties required to create a routing rule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RoutingRuleUpdateParameters"
        } ]
      },
      "RoutingRuleUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "acceptedProtocols" : {
            "type" : "array",
            "description" : "Protocol schemes to match for this rule",
            "items" : {
              "type" : "string",
              "description" : "Accepted protocol schemes.",
              "enum" : [ "Http", "Https" ]
            }
          },
          "enabledState" : {
            "type" : "string",
            "description" : "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "frontendEndpoints" : {
            "type" : "array",
            "description" : "Frontend endpoints associated with this rule",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Resource ID."
                }
              },
              "description" : "Reference to another subresource."
            }
          },
          "patternsToMatch" : {
            "type" : "array",
            "description" : "The route patterns of the rule.",
            "items" : {
              "type" : "string",
              "description" : "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path."
            }
          },
          "routeConfiguration" : {
            "$ref" : "#/components/schemas/RouteConfiguration"
          }
        },
        "description" : "Routing rules to apply to an endpoint"
      },
      "ValidateCustomDomainInput" : {
        "required" : [ "hostName" ],
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "description" : "The host name of the custom domain. Must be a domain name."
          }
        },
        "description" : "Input of the custom domain to be validated for DNS mapping."
      },
      "ValidateCustomDomainOutput" : {
        "type" : "object",
        "properties" : {
          "customDomainValidated" : {
            "type" : "boolean",
            "description" : "Indicates whether the custom domain is valid or not.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Error message describing why the custom domain is not valid.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason why the custom domain is not valid.",
            "readOnly" : true
          }
        },
        "description" : "Output of custom domain validation."
      }
    },
    "parameters" : {
      "backendPoolNameParameter" : {
        "name" : "backendPoolName",
        "in" : "path",
        "description" : "Name of the Backend Pool which is unique within the Front Door.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
          "type" : "string"
        }
      },
      "frontDoorNameParameter" : {
        "name" : "frontDoorName",
        "in" : "path",
        "description" : "Name of the Front Door which is globally unique.",
        "required" : true,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 5,
          "pattern" : "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
          "type" : "string"
        }
      },
      "frontendEndpointNameParameter" : {
        "name" : "frontendEndpointName",
        "in" : "path",
        "description" : "Name of the Frontend endpoint which is unique within the Front Door.",
        "required" : true,
        "schema" : {
          "maxLength" : 255,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
          "type" : "string"
        }
      },
      "healthProbeSettingsNameParameter" : {
        "name" : "healthProbeSettingsName",
        "in" : "path",
        "description" : "Name of the health probe settings which is unique within the Front Door.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
          "type" : "string"
        }
      },
      "loadBalancingSettingsNameParameter" : {
        "name" : "loadBalancingSettingsName",
        "in" : "path",
        "description" : "Name of the load balancing settings which is unique within the Front Door.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
          "type" : "string"
        }
      },
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Name of the Resource group within the Azure subscription.",
        "required" : true,
        "schema" : {
          "maxLength" : 80,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
          "type" : "string"
        }
      },
      "routingRuleNameParameter" : {
        "name" : "routingRuleName",
        "in" : "path",
        "description" : "Name of the Routing Rule which is unique within the Front Door.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}